{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Utils/Animatior.js","Assets/Icons/Smile.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Assets/Icons/FullScreen.js","Components/Player/Hint.js","Components/Player/Progress.js","Components/Player/Player.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","onUpdateUserStatus","update","userId","user_id","user","UserStore","get","online","isUserOnline","getChatUserId","chatId","on","off","size","borderSize","style","width","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","fileId","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","file","store","FileStore","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","event","onSelect","stopPropagation","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","classNames","onClick","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","text","a","navigator","clipboard","writeText","console","error","copyOld","element","successful","document","createElement","contentEditable","readOnly","value","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","e","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","handleClose","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","key","aria-label","color","Close","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerHTML","innerText","handleSearchKeyDown","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","handleClick","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","onChange","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","clientUpdate","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","left","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","video","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","classes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","window","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","hidden","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","target","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","remove","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","hasObserver","onClientUpdateLanguageChange","setSelection","onClientUpdateCacheLoaded","cachedFilters","onWindowResize","transition","scroll","filtersRef","main","filterRef","scrollWidth","chat_filter_id","filterSelection","filterSelectionRef","transitionStyle","cssText","animator","scrollLeft","clamp","offsetWidth","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleFilterClick","handleWheel","deltaY","throttle","observeResize","LocalizationStore","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","max","CHAT_SLICE_LIMIT","replace","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","blur","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetLeft","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","Lottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","json","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","anim","isPaused","goToAndPlay","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","animationData","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","root","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","tabIndex","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","container","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","disabled","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","alpha","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","track","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","floor","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","paused","fadeOutVolume","pausedForRecord","fadeInVolume","onClientUpdateMediaSeek","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","play","onClientUpdateMediaBlob","streaming","video_note","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","mime_type","setFileOptions","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","currentVolume","volumeInterval","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","handleTest","chunk","filePart","getArrayBuffer","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","Hint","onClientUpdateMediaHint","animated","checkTimeout","Progress","waiting","handleWaiting","strokeDasharray","strokeDashoffset","Player","handleSeek","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","PLAYER_VOLUME_STEP","handleFullScreen","handlePictureInPicture","progress","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onClientUpdateMediaShortcut","startStopPlayer","handlePause","buffered","handleLoadedData","handleLoadedMetadata","draggingTime","handleChangeCommitted","isFinite","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","exitFullscreen","requestFullscreen","handleClickRoot","mouseDownRoot","handleMouseDownRoot","handleVolumeChange","onVolumeChange","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handleProgress","getBufferedTime","end","pictureInPictureElement","mozPictureInPictureElement","webkitPictureInPictureElement","exitPictureInPicture","requestPictureInPicture","onpause","handleLeavePictureInPicture","handleDoubleClick","handleVideoKeyDown","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","rootRef","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","mozRequestPictureInPicture","webkitRequestPictureInPicture","mozExitPictureInPicture","webkitExitPictureInPicture","poster","bufferedTime","bufferedValue","durationString","rootStyle","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","pictureInPictureEnabled","mozPictureInPictureEnabled","webkitPictureInPictureEnabled","onDoubleClick","onMouseMove","playsInline","onLoadedMetadata","onLoadedData","onProgress","onWaiting","rail","thumb","active","onChangeCommitted","FullScreen","InstantViewMediaViewerContent","getViewerFile","supportsStreaming","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","scale","handleContentClick","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","getMediaPreviewFile","loadNextBuffer","isVideo","isVideoMessage","isAnimation","isAnimationMessage","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleWrapperClick","mouseDownTarget","handleWrapperMouseDown","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.fdaf5576.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[p] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_2.json')\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: true,\n                                    loop: false,\n                                    animationData: data,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                    }\n                                }}\n                                onClick={this.handleAnimationClick}\n                            />\n                        </React.Suspense>\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.on('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.off('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        // console.log('[f] filters', filters);\n\n        const filtersMap = new Map();\n        for (let i = 0; i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        // console.log('[f] recommended', recommendedFilters);\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        // console.log('[f] filters.render');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            <React.Suspense fallback={null}>\n                                <Lottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        autoplay: true,\n                                        loop: false,\n                                        animationData: data,\n                                        renderer: 'svg',\n                                        rendererSettings: {\n                                            preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                            clearCanvas: false,\n                                            progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                            hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        }\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n\n        setTimeout(() => {\n            const { innerText } = this.newMessageRef.current;\n            console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const { streaming } = TdLibController;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        if (streaming) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    if (streaming) return;\n\n                    const { audio: file } = audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const { audio: file } = audio;\n                    if (file) {\n                        let src = getSrc(file);\n                        if (!src && TdLibController.streaming) {\n                            src = `/streaming/file_id=${file.id}`;\n                            setFileOptions(src, { fileId: file.id, size: file.size, mimeType: audio.mime_type });\n                        }\n\n                        return src;\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\nimport { getArrayBuffer } from '../../Utils/File';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    handleTest = async () => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { video } = content;\n        if (!video) return;\n\n        const { video: file } = video;\n        if (!file) return;\n\n        const { size } = file;\n\n        const chunk = 512 * 1024;\n        const count = size / chunk;\n\n        for (let i = 0; i < count; i++) {\n            console.log('[d] filePart', file.id, chunk * i);\n            await TdLibController.send({\n                '@type': 'downloadFile',\n                file_id: file.id,\n                priority: 1,\n                offset: chunk * i,\n                limit: chunk,\n                synchronous: true\n            });\n\n            const filePart = await TdLibController.send({\n                '@type': 'readFilePart',\n                file_id: file.id,\n                offset: chunk * i,\n                count: chunk\n            });\n\n            const buffer = await getArrayBuffer(filePart.data);\n        }\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleTest}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary='Test' />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\nimport { getEntities, getFormattedText, getText, getTwitterInstagramEntities } from '../../../Utils/Message';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        d='M5,14 C5.55228475,14 6,14.4477153 6,15 L6,18 L9,18 C9.55228475,18 10,18.4477153 10,19 C10,19.5522847 9.55228475,20 9,20 L5,20 C4.44771525,20 4,19.5522847 4,19 L4,15 C4,14.4477153 4.44771525,14 5,14 Z M19,14 C19.5522847,14 20,14.4477153 20,15 L20,15 L20,19 C20,19.5522847 19.5522847,20 19,20 L19,20 L15,20 C14.4477153,20 14,19.5522847 14,19 C14,18.4477153 14.4477153,18 15,18 L15,18 L18,18 L18,15 C18,14.4477153 18.4477153,14 19,14 Z M9,4 C9.55228475,4 10,4.44771525 10,5 C10,5.55228475 9.55228475,6 9,6 L9,6 L6,6 L6,9 C6,9.55228475 5.55228475,10 5,10 C4.44771525,10 4,9.55228475 4,9 L4,9 L4,5 C4,4.44771525 4.44771525,4 5,4 L5,4 Z M19,4 C19.5522847,4 20,4.44771525 20,5 L20,9 C20,9.55228475 19.5522847,10 19,10 C18.4477153,10 18,9.55228475 18,9 L18,6 L15,6 C14.4477153,6 14,5.55228475 14,5 C14,4.44771525 14.4477153,4 15,4 L19,4 Z'\n    />,\n    'FullScreen'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Hint.css';\n\nclass Hint extends React.Component {\n    state = { text: null };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaHint', this.onClientUpdateMediaHint);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaHint', this.onClientUpdateMediaHint);\n    }\n\n    onClientUpdateMediaHint = update => {\n        const { fileId, text } = update;\n        if (fileId !== this.props.fileId) return;\n\n        const { animated } = this.state;\n\n        clearTimeout(this.checkTimeout);\n        this.setState({\n            text,\n            animated: false\n        }, () => {\n            this.checkTimeout = setTimeout(() => {\n                if (this.state.text !== text) return;\n\n                this.setState({\n                    animated: true\n                })\n            }, 250);\n        });\n    };\n\n    handleAnimationEnd = event => {\n        this.setState({\n            text: null,\n            animated: false\n        })\n    }\n\n    render() {\n        const { animated, text } = this.state;\n        if (!text) return null;\n\n        return (\n            <div className={classNames('player-hint', { 'player-hint-animated': animated })} onAnimationEnd={this.handleAnimationEnd}>\n                <span>{text}</span>\n            </div>\n        );\n    }\n}\n\nHint.propTypes = {\n    fileId: PropTypes.number\n};\n\nexport default Hint;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Progress.css';\n\nclass Progress extends React.Component {\n    state = {\n        waiting: false\n    };\n\n    componentDidMount() {\n        this.handleWaiting();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.waiting !== this.props.waiting) {\n            this.handleWaiting();\n        }\n    }\n\n    handleWaiting = () => {\n        const { waiting } = this.props;\n        if (!waiting) {\n            if (this.state.waiting) {\n                this.setState({\n                    waiting: false\n                });\n            }\n            return;\n        }\n\n        setTimeout(() => {\n            if (!this.props.waiting) return;\n\n            this.setState({\n                waiting: true\n            })\n        }, 250);\n    };\n\n    render() {\n        const { waiting } = this.state;\n\n        if (!waiting) return null;\n\n        return (\n            <div className='player-progress'>\n                <svg viewBox='0 0 54 54' height='54' width='54'>\n                    <circle stroke='white' fill='transparent' strokeWidth='3' strokeDasharray='120 100' strokeDashoffset='25' strokeLinecap='round' r='21' cx='27' cy='27'/>\n                </svg>\n            </div>\n        );\n    }\n\n}\n\nProgress.propTypes = {\n    waiting: PropTypes.bool\n};\n\nexport default Progress;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport Hint from './Hint';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport {\n    PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Player.css';\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.rootRef = React.createRef();\n        this.contentRef = React.createRef();\n        this.videoRef = React.createRef();\n\n        this.state = {\n            duration: 0,\n            currentTime: 0,\n            volume: PlayerStore.volume,\n            play: true,\n            dragging: false,\n            buffered: null,\n            waiting: true,\n            hidden: false\n        };\n    }\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    handleVolume = volume => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { volume } = this.state;\n\n        video.volume = volume;\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    load() {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        video.load();\n\n        this.setState({\n            duration: 0,\n            currentTime: 0,\n            play: true,\n            dragging: false,\n            buffered: null,\n            waiting: true\n        });\n    }\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n    };\n\n    handleTimeUpdate = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        })\n    };\n\n    handleLoadedData = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime: 0,\n            volume,\n            waiting: true,\n            buffered\n        });\n\n        return;\n        const stream = video.captureStream();\n\n        const v2 = document.getElementById('v2');\n        v2.srcObject = stream;\n    };\n\n    handleChange = (event, value) => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = this.contentRef.current;\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.mouseDownRoot = false;\n        this.startStopPlayer();\n    }\n\n    handleMouseDownRoot = event => {\n        this.mouseDownRoot = true;\n        event.stopPropagation();\n    }\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleMute = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleProgress = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    getBufferedTime = (time, buffered) => {\n        if (!buffered || !buffered.length) {\n            return 0;\n        }\n\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n            if (start <= time && time < end) {\n                return end;\n            }\n        }\n\n        return 0;\n    }\n\n    handleWaiting = () => {\n        this.setState({\n            waiting: true\n        });\n    };\n\n    handleCanPlay = () => {\n        this.setState({\n            waiting: false\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePictureInPicture = async () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n        if (!video.duration) return;\n\n        const pictureInPictureElement = document.pictureInPictureElement || document.mozPictureInPictureElement || document.webkitPictureInPictureElement;\n        if (pictureInPictureElement) {\n            this.exitPictureInPicture();\n            return;\n        }\n\n        try {\n            const pipWindow = await this.requestPictureInPicture(video);\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaViewerContent',\n                content: null\n            });\n            video.onpause = event => {\n                event.target.play();\n                event.target.onpause = null;\n            };\n            video.addEventListener('leavepictureinpicture', this.handleLeavePictureInPicture);\n        } catch (error) { }\n    };\n\n    handleLeavePictureInPicture = event => {\n        const video = this.videoRef.current;\n\n        if (!video) event.target.src = null;\n        event.target.removeEventListener('leavepictureinpicture', this.handleLeavePictureInPicture);\n    };\n\n    async requestPictureInPicture(element) {\n        const method = element.requestPictureInPicture || element.mozRequestPictureInPicture || element.webkitRequestPictureInPicture;\n        if (!method) return null;\n\n        return method.call(element);\n    }\n\n    exitPictureInPicture() {\n        const method = document.exitPictureInPicture || document.mozExitPictureInPicture || document.webkitExitPictureInPicture;\n\n        method && method.call(document);\n    }\n\n    handleDoubleClick = event => {\n        this.handleFullScreen(event);\n    };\n\n    handleVideoKeyDown = event => {\n        event.preventDefault();\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    render() {\n        const { children, src, className, style, width, height, poster, fileId } = this.props;\n        const { waiting, volume, duration, currentTime, play, dragging, draggingTime, buffered, hidden } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = this.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n        const rootStyle = {\n            ...style,\n            width,\n            height\n        }\n\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n        const pictureInPictureEnabled = document.pictureInPictureEnabled || document.mozPictureInPictureEnabled || document.webkitPictureInPictureEnabled;\n\n        return (\n            <div\n                ref={this.rootRef}\n                className={classNames('player', className)}\n                onMouseDown={this.handleMouseDownRoot}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}\n                style={rootStyle}>\n                <div ref={this.contentRef} className='player-content' onMouseMove={this.handleMouseOver}>\n                    <video\n                        className='player-video'\n                        ref={this.videoRef}\n                        autoPlay={false}\n                        controls={false}\n                        playsInline={true}\n                        src={src}\n                        poster={poster}\n                        onLoadedMetadata={this.handleLoadedMetadata}\n                        onLoadedData={this.handleLoadedData}\n                        onCanPlay={this.handleCanPlay}\n                        onPlay={this.handlePlay}\n                        onPause={this.handlePause}\n                        onEnded={this.handleEnded}\n                        onTimeUpdate={this.handleTimeUpdate}\n                        onVolumeChange={this.handleVolumeChange}\n                        onProgress={this.handleProgress}\n                        onWaiting={this.handleWaiting}\n                        onKeyDown={this.handleVideoKeyDown}\n                    >\n                        {children}\n                    </video>\n                    <Hint fileId={fileId}/>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={e => e.stopPropagation()}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {this.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlayer.propTypes = {\n    fileId: PropTypes.number\n};\n\n//export default React.forwardRef((props, ref) => (<Player forwardedRef={ref} {...props}/>));\n\nexport default Player;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying, supportsStreaming } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        // setTimeout(() => KeyboardManager.add(this.keyboardHandler), 0);\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', url, url === prevProps.url);\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            if (thumbnail){\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            }\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        // console.log('[p] mainPage.render');\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}