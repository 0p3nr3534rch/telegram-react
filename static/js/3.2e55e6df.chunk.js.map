{"version":3,"sources":["Stores/StickerStore.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","StickerStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","reset","stickerSet","hint","onUpdate","update","authorization_state","sticker_set_ids","_this$stickerSet","id","is_installed","some","x","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","EventEmitter","window","sticker","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","send","@type","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","_this$props5","setProfileMediaViewerContent","handleOpenChat","_this$props6","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","_this$props7","migratedCounters","_this$props8","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","_this$props9","_counters$map","el","_counters$map2","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","Components_ColumnRight_ChatDetailsHeader","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","Photo_default","Videocam_default","InsertDriveFile_default","Headset_default","InsertLink_default","Mic_default","Group_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","_ref","left","top","stopPropagation","contextMenu","clientX","clientY","_x","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover_default","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList_default","root","menuListRoot","MenuItem_default","transitionDuration","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","label","minWidth","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","headerBackButton","Boolean","headerSearchButton","SpeedDialIcon_default","icon","Search_default","openIcon","SharedMediaBase","constructor","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","toConsumableArray","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","_this$state3","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","messages","incompleteResults","_args","undefined","query","sender_user_id","from_message_id","offset","finally","total_count","setItems","onLoadMigratedNext","_args2","_x2","handleScroll","listRef","assertThisInitialized","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","_callee3","_args3","_context3","searchItems","searchMigratedItems","_x3","_ref4","_callee4","_args4","_context4","_x4","_ref5","_callee5","_context5","handleCloseSearch","_x5","sharedMediaList","sharedMediaSearchList","default","Error","Tile_SharedMedia_SharedDocument","_this$state4","getItemTemplate","searchMessages","ColumnRight_SharedMedia_SharedMediaHeader","getHeader","hasSearch","onScroll","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","getStyles","SharedDocuments","SharedLink","webPage","description","url","href","target","rel","isValidEntityType","decodedUrl","entityText","substring","startsWith","decodeURI","error","hostname","URL","split","tileColor","Math","abs","charCodeAt","charAt","Media_Photo","showProgress","accentStyles","SharedLinks","web_page","Tile_SharedMedia_SharedLink","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","SharedPhoto","onClientUpdatePhotoBlob","thumbSize","fileId","thumbnailSize","getSize","src","getSrc","thumbSrc","isBlurredThumbnail","sharedPhotoContent","backgroundImage","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","backgroundColor","SharedPhotos","Tile_SharedMedia_SharedPhoto","flexWrap","justifyContent","alignItems","alignContent","SharedVideo","onClientUpdateVideoThumbnailBlob","video","_this$props$video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","media-blurred","getDurationString","SharedVideos","Tile_SharedMedia_SharedVideo","SharedVoiceNotes","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","ColumnRight_SharedMedia_SharedAudios","ColumnRight_SharedMedia_SharedDocuments","ColumnRight_SharedMedia_SharedLinks","ColumnRight_SharedMedia_SharedPhotos","ColumnRight_SharedMedia_SharedVideos","ColumnRight_SharedMedia_SharedVoiceNotes","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","Date","includes","splice","recentlyFound","substr","USERNAME_LENGTH_MIN","offset_date","offset_message_id","keys","topPromise","recentlyFoundPromise","category","handleRecentlyFound","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","disabled","canSendPhotos","canSendDocuments","canSendPolls","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","handleInput","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","now","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","file","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","floor","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","audio","voice_note","video_note","voice","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","WebPage","displaySmallSize","site_name","animation","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","float","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","edit_date","forward_info","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Check_default","messageSelectTick","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","scrollBehaviorNone","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","set_id","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","resolve","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.2e55e6df.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInputRef.current.innerText;\n        const innerHTML = this.searchInputRef.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInputRef.current.innerHTML = '';\n        }\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    static getStyles(theme) {\n        return {\n            sharedMediaList: {},\n            sharedMediaSearchList: {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            }\n        };\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext();\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { classes, minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        console.log('SharedMediaBase.render', items, messages);\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', classes.sharedMediaList)}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', classes.sharedMediaSearchList)}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport { accentStyles } from '../../Theme';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        console.log('SharedLink.isValidEntityType', type);\n        if (!type) return false;\n\n        return type.type['@type'] === 'textEntityTypeUrl' || type.type['@type'] === 'textEntityTypeTextUrl' || type.type['@type'] === 'textEntityTypeEmailAddress';\n    };\n\n    render() {\n        const { chatId, classes, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { title, description, photo, url } = webPage || { title: '', description: '', photo: null, url: '' };\n        if (webPage) {\n            content = (\n                <>\n                    {url && (\n                        <a\n                            className='shared-link-url'\n                            href={url}\n                            title={url}\n                            target='_blank'\n                            rel='noopener noreferrer'>\n                            {url}\n                        </a>\n                    )}\n                </>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    description = text.text;\n\n                    const urls = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(\n                            text.text,\n                            x.offset,\n                            x.offset + x.length\n                        );\n\n                        const url = entityText.startsWith('http') ? entityText : 'https://' + entityText;\n                        let decodedUrl;\n                        try {\n                            decodedUrl = decodeURI(entityText);\n                        } catch (error) {\n                            console.error('entityText: ' + entityText + '\\n' + error);\n                            decodedUrl = entityText;\n                        }\n\n                        if (!title) {\n                            try {\n                                const hostname = new URL(url).hostname.split('.');\n                                title = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(url).hostname;\n                            } catch (error) {\n                                console.error('url: ' + url + '\\n' + error);\n                            }\n                        }\n\n                        return (\n                            <a\n                                className='shared-link-url'\n                                href={url}\n                                title={url}\n                                target='_blank'\n                                rel='noopener noreferrer'>\n                                {decodedUrl}\n                            </a>\n                        );\n                    });\n\n                    content = urls;\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return (entities.find(x => x.type['@type'] === 'textEntityTypeUrl' || x.type['@type'] === 'textEntityTypeTextUrl' || x.type['@type'] === 'textEntityTypeEmailAddress'));\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize)\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div\n                    className={classNames('shared-photo-content', classes.sharedPhotoContent)}\n                    style={{ backgroundImage: `url(${thumbSrc})` }}>\n                    {src !== thumbSrc && <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedPhoto);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedPhotos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        // backgroundColor: theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-video-wrapper'>\n                    <div\n                        className={classNames('shared-video-content', { 'media-blurred': isBlurred })}\n                        style={{ backgroundImage: `url(${thumbSrc})` }}\n                    />\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVideo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedVideos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        {/*<div className='message-left-padding-wrapper'>*/}\n                        {/**/}\n                        {/*</div>*/}\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}