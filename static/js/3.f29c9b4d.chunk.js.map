{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Stores/PlayerStore.js","Utils/User.js","Actions/Client.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Components/Message/Media/Sticker.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Stores/StickerStore.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ChatInfoDialog.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","__webpack_require__","d","__webpack_exports__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorDark","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","emoji","isMediaContent","isVideoMessage","isLottieMessage","file_name","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","openChat","highlightMessage","selectMessage","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","_Constants__WEBPACK_IMPORTED_MODULE_0__","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","circleStyle","circle","FileProgress","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","tileColor","abs","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","isBlurred","fitSize","stickerStyle","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","StickerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","palette","primary","main","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","handleSend","loadPreviewContent","stickerId","find","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","previewStickerEmojis","emojis","join","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","handleMouseOver","dataset","mouseDown","mouseDownStickerId","handleMouseDown","addEventListener","handleMouseUp","removeEventListener","dict","controls","data-sticker-id","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_9__","STICKER_SMALL_DISPLAY_SIZE","stickerIndex","onMouseOver","onMouseOut","handleMouseOut","onMouseDown","STICKER_PREVIEW_DISPLAY_SIZE","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","default","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","Reply","onGetMessageResult","handleOpen","Components_Tile_ReplyTile","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","expire","timeout","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuAnchorOrigin","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","deleteChat","leaveChatTitle","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogTitleControl","DialogStatusControl","updateSubtitle","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","getContentHeight","clientHeight","offsetHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","handleSelectUser","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","listItemSelected","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","accentBackground","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","icons_Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","DialogBadgeControl","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","muteClassName","dialogBadge","is_pinned","DialogMetaControl","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","container","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","mouseOut","_this$props10","showUnreadSeparator","_this$props11","webPage","media","senderUserId","messageClassName","message-selected","messageSelected","messageHighlighted","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","chatPhotoStyle","ServiceMessage","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","Components_Message_ServiceMessage","Components_Message_Message","showTitle","messages-list-selection-active","Components_ColumnMiddle_FilesDropTarget","ChatInfoDialog","handleClientUpdateDialogChatId","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"6LAYMA,GAAc,EA43BdC,EAAQ,gBAz3BV,SAAAC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAiBJI,SAlBc,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAkBH,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GACCL,EAAO,SADRE,EAAAE,KAEE,eAFFF,EAAAG,GAAA,EAUE,6BAVFH,EAAAG,GAAA,yBAGCnB,EAAKoB,IAAIN,EAAOO,MAEhBrB,EAAKsB,aAAaR,GAElBd,EAAKuB,KAAKT,EAAO,SAAUA,GAP5BE,EAAAQ,OAAA,0BAAAR,EAAAE,KAAA,EAWOlB,EAAKyB,2BAA2BX,GAXvC,sBAAAE,EAAAQ,OAAA,qCAAAR,EAAAU,SAAAb,MAlBG,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAsCd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,iCAIL,IAAK,wBAIL,IAAK,2BACDd,EAAKuB,KAAKT,EAAO,SAAUA,KAjDzBd,EAyDd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA3DvC9B,EA8DdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAhE1C9B,EAmEdyB,2BAnEc,eAAAW,EAAAnC,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAmEe,SAAAyB,EAAMvB,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACpBJ,EADoB,CAAAwB,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAEpBV,EAAOyB,oBAFa,CAAAD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAImB,0CAAxCV,EAAOyB,oBAAoB,SAJN,CAAAD,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAKflB,EAAKwC,SALU,wBAAAF,EAAAZ,SAAAW,MAnEf,gBAAAI,GAAA,OAAAL,EAAAR,MAAAzB,KAAA0B,YAAA,GAAA7B,EA4EdsB,aAAe,SAAAR,GACX,GAAKA,EAAL,CADqB,IAGbO,EAASP,EAATO,KACHA,IAELrB,EAAK0C,gBAAgBrB,GACrBrB,EAAK2C,cAActB,MAnFTrB,EAsFd0C,gBAAkB,SAAArB,GAAQ,IACduB,EAA4BvB,EAA5BuB,IAAKC,EAAuBxB,EAAvBwB,GAAIC,EAAmBzB,EAAnByB,QAASC,EAAU1B,EAAV0B,MAG1B,UAFO1B,EAAKuB,IAEP5C,EAAKgD,UAAUC,IAAIJ,IACnBE,EAAMG,2BACNrD,GAAgBiD,GAAYF,GAAjC,CAEA,IAAMO,EAAQnD,EAAKgD,UAAUI,IAAIP,GACjC,GAAKM,EAAL,CAEAnD,EAAKgD,UAAUK,OAAOR,GAEtB,IAAM/C,EAAQE,EAAKsD,WAEnBH,EAAMI,QAAQ,SAAAC,GACV,OAAQA,EAAK,UACT,IAAK,OACDxD,EAAKyD,WAAW3D,EAAO0D,EAAMnC,EAAMuB,GACnC,MAEJ,IAAK,UACD5C,EAAK0D,cAAc5D,EAAO0D,EAAMnC,EAAMuB,GACtC,MAEJ,IAAK,UACD5C,EAAK2D,cAAc7D,EAAO0D,EAAMnC,EAAMuB,EAAK,MAC3C,MAEJ,IAAK,OACD5C,EAAK4D,WAAW9D,EAAO0D,EAAMnC,EAAMuB,GACnC,MAEJ,QACIiB,QAAQC,MAAM,wCAAyCN,SAxHzDxD,EA8Hd2C,cAAgB,SAAAtB,GAAQ,IACZwB,EAAexB,EAAfwB,GAAIkB,EAAW1C,EAAX0C,cACL1C,EAAKuB,IAEP5C,EAAKgE,QAAQf,IAAIJ,KAClBkB,EAAOE,wBAEXjE,EAAKgE,QAAQX,OAAOR,KArIV7C,EAwIdyD,WAAa,SAAC3D,EAAOoE,EAAM7C,EAAMuB,GACxBsB,GAELlE,EAAKmE,aACDrE,EACAuB,EACAuB,EACA,kBAAM5C,EAAKoE,oBAAoBF,EAAKrB,GAAIxB,EAAKwB,KAC7C,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAeJ,MAhJ3ClE,EAoJd4D,WAAa,SAAC9D,EAAOyE,EAAMlD,EAAMuB,GACxB2B,GAELvE,EAAKmE,aACDrE,EACAuB,EACAuB,EACA,kBAAM5C,EAAKwE,oBAAoBD,EAAK1B,GAAIxB,EAAKwB,KAC7C,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAeC,MA5J3CvE,EAgKd0D,cAAgB,SAAC5D,EAAO2E,EAASpD,EAAMuB,GACnC,GAAK6B,EAAL,CAD2C,IAGnCC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAER3E,EAAK4E,gBAAgB9E,EAAO6E,EAAWtD,EAAMuB,EAAK6B,GAClD,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MAER7E,EAAK8E,YAAYhF,EAAO+E,EAAOxD,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,yBAA0B,IACnBM,EAAUL,EAAVK,MAER/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERjF,EAAKkF,eAAepF,EAAOmF,EAAU5D,EAAMuB,EAAK6B,GAChD,MAEJ,IAAK,cAAe,IACRU,EAAST,EAATS,KAERnF,EAAKoF,WAAWtF,EAAOqF,EAAM9D,EAAMuB,EAAK6B,GACxC,MAEJ,IAAK,kBAAmB,IACZY,EAAaX,EAAbW,SAERrF,EAAKsF,eAAexF,EAAOuF,EAAUhE,EAAMuB,EAAK6B,GAChD,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAER/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QAERvF,EAAK2D,cAAc7D,EAAOyF,EAASlE,EAAMuB,EAAK6B,GAC9C,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,MAFC,IAIRb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEhB,GACA3E,EAAK4E,gBAAgB9E,EAAO6E,EAAWtD,EAAMuB,EAAK6B,GAGlDI,GACA7E,EAAK8E,YAAYhF,EAAO+E,EAAOxD,EAAMuB,EAAK6B,GAG1CQ,GACAjF,EAAKkF,eAAepF,EAAOmF,EAAU5D,EAAMuB,EAAK6B,GAGhDM,GACA/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAG1Cc,GACAvF,EAAK2D,cAAc7D,EAAOyF,EAASlE,EAAMuB,EAAK6B,GAG9CgB,GACAzF,EAAK4F,YAAY9F,EAAO2F,EAAOpE,EAAMuB,EAAK6B,GAG1CkB,GACA3F,EAAK6F,gBAAgB/F,EAAO6F,EAAYtE,EAAMuB,EAAK6B,GAGnDiB,GACA1F,EAAK8F,gBAAgBhG,EAAO4F,EAAYrE,EAAMuB,EAAK6B,GAGvD,MAEJ,IAAK,eAAgB,IAETY,EADUX,EAAVqB,MACAV,SAERrF,EAAKsF,eAAexF,EAAOuF,EAAUhE,EAAMuB,EAAK6B,GAChD,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAERzF,EAAK4F,YAAY9F,EAAO2F,EAAOpE,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WAER1F,EAAK8F,gBAAgBhG,EAAO4F,EAAYrE,EAAMuB,EAAK6B,GACnD,MAEJ,IAAK,mBAAoB,IACbkB,EAAejB,EAAfiB,WAER3F,EAAK6F,gBAAgB/F,EAAO6F,EAAYtE,EAAMuB,EAAK6B,MArRjDzE,EA6RdoF,WAAa,SAACtF,EAAOqF,EAAM9D,EAAMuB,EAAK6B,GAClC,GAAKU,EAAL,CAD8C,IAGtCR,EAAqBQ,EAArBR,UAAWI,EAAUI,EAAVJ,MACfA,GACA/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAG1CE,GACA3E,EAAK4E,gBAAgB9E,EAAO6E,EAAWtD,EAAMuB,EAAK6B,KAtS5CzE,EA0SdgF,YAAc,SAAClF,EAAOiF,EAAO1D,EAAMuB,EAAKoD,GACpC,GAAIjB,EACA,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAMmB,MAAMC,OAAQF,IAAK,CACzC,IAAMG,EAAYrB,EAAMmB,MAAMD,GAC9B,GAAIG,EAAW,CACX,IAAMC,EAASD,EAAUrB,MACzB,GAAIsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,GAAI,CACjC7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKsG,gBAAgBN,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,KAErD,UAxTNhG,EA+Td8E,YAAc,SAAChF,EAAO+E,EAAOxD,EAAMuB,EAAKoD,GACpC,GAAInB,EAAM2B,sBAAuB,CAC7B,IAAMH,EAASxB,EAAM2B,sBAAsBzB,MACvCsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKyG,yBAAyBT,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAC9D,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAInB,EAAMA,MAAO,CACb,IAAMwB,EAASxB,EAAMA,MACjBwB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK2G,gBAAgBX,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OArVnDhG,EA2VdkF,eAAiB,SAACpF,EAAOmF,EAAU5D,EAAMuB,EAAKoD,GAC1C,GAAIf,EAAS2B,UAAW,KACLP,EAAWpB,EAAS2B,UAA3B7B,MACJsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK6G,4BAA4Bb,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACjE,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAIf,EAASA,SAAU,KACDoB,EAAWpB,EAArBA,SACJoB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK8G,mBAAmBd,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACxD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAjXnDhG,EAuXdsF,eAAiB,SAACxF,EAAOuF,EAAUhE,EAAMuB,EAAKoD,GAC1C,IAAMe,EAAaC,YAAc3B,GACjC,GAAI0B,EAAY,CACZ,IAAMV,EAASrG,EAAKiH,gBAAgBF,GAChCV,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKkH,mBAAmBlB,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACxD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,OAjYxDhG,EAuYd2D,cAAgB,SAAC7D,EAAOyF,EAASlE,EAAMuB,EAAKoD,GACxC,GAAIT,EAAQqB,UAAW,CACnB,IAAMP,EAASd,EAAQqB,UAAU7B,MACjC,GAAIsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,GAAI,CACjC,IAAMsE,EAASnB,EAAMA,EAAIO,QAAU,EAC7Ba,EAAYpB,EAAMA,EAAInD,GAAK,EAEjC7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKqH,2BAA2BF,EAAQC,EAAW/F,EAAKwB,KAC9D,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,GAAOT,MAKzE,GAAIA,EAAQA,QAAS,CACjB,IAAMc,EAASd,EAAQA,QACvB,GAAIc,GAAUA,EAAOxD,KAAOxB,EAAKwB,GAAI,CACjC,IAAMsE,EAASnB,EAAMA,EAAIO,QAAU,EAC7Ba,EAAYpB,EAAMA,EAAInD,GAAK,EAEjC7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKsH,kBAAkBH,EAAQC,EAAW/F,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,GAAOT,QAna1DvF,EAyad6F,gBAAkB,SAAC/F,EAAOyH,EAAWlG,EAAMuB,EAAKoD,GAC5C,GAAIuB,EAAUC,MAAO,CACjB,IAAMnB,EAASkB,EAAUC,MACrBnB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKyH,oBAAoBzB,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACzD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAlbnDhG,EAwbd8F,gBAAkB,SAAChG,EAAO4H,EAAWrG,EAAMuB,EAAKoD,GAC5C,GAAI0B,EAAUd,UAAW,CACrB,IAAMP,EAASqB,EAAUd,UAAU7B,MAC/BsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK2H,6BAA6B3B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAClE,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAI0B,EAAUjC,MAAO,CACjB,IAAMY,EAASqB,EAAUjC,MACrBY,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK4H,oBAAoB5B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACzD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OA9cnDhG,EAodd4F,YAAc,SAAC9F,EAAO2F,EAAOpE,EAAMuB,EAAKoD,GACpC,GAAIP,EAAMmB,UAAW,CACjB,IAAMP,EAASZ,EAAMmB,UAAU7B,MAC3BsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK6H,yBAAyB7B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAC9D,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAIP,EAAMA,MAAO,CACb,IAAMY,EAASZ,EAAMA,MACjBY,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK8H,gBAAgB9B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OA1enDhG,EAgfd4E,gBAAkB,SAAC9E,EAAO6E,EAAWtD,EAAMuB,EAAKoD,GAC5C,GAAIrB,EAAUiC,UAAW,CACrB,IAAMP,EAAS1B,EAAUiC,UAAU7B,MAC/BsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK+H,6BAA6B/B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAClE,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAIrB,EAAUA,UAAW,CACrB,IAAM0B,EAAS1B,EAAUA,UACrB0B,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKgI,oBAAoBhC,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACzD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAtgBnDhG,EAwkBdiI,gBAAkB,SAACnI,EAAOuB,KAxkBZrB,EA0rBdoD,IAAM,SAAA8E,GACF,OAAOlI,EAAKmD,MAAMC,IAAI8E,IA3rBZlI,EA8rBdoB,IAAM,SAAAC,GACFrB,EAAKmD,MAAM/B,IAAIC,EAAKwB,GAAIxB,IA/rBdrB,EAksBdmI,QAAU,SAAAD,GACN,OAAOlI,EAAKoI,UAAUhF,IAAI8E,IAnsBhBlI,EAssBdqI,QAAU,SAACH,EAAQI,GACftI,EAAKoI,UAAUhH,IAAI8G,EAAQI,IAvsBjBtI,EA0sBduI,WAAa,SAAAL,GACTlI,EAAKoI,UAAU/E,OAAO6E,IA3sBZlI,EA8sBdiH,gBAAkB,SAAAF,GACd,IAAMmB,EAASlI,EAAKwI,cAAcpF,IAAI2D,GAEtC,OAAO/G,EAAKoD,IAAI8E,IAjtBNlI,EAotBdyI,gBAAkB,SAAC1B,EAAY1F,GAC3BrB,EAAKwI,cAAcpH,IAAI2F,EAAY1F,EAAKwB,IAExC7C,EAAKoB,IAAIC,IAvtBCrB,EA0tBd0I,WAAa,SAAAJ,GACT,IAAKA,EACD,OAAO,KAGX,GAAItI,EAAK2I,KAAK1F,IAAIqF,GACd,OAAOtI,EAAK2I,KAAKvF,IAAIkF,GAGzB,IAAMM,EAAMC,IAAIC,gBAAgBR,GAGhC,OAFAtI,EAAK2I,KAAKvH,IAAIkH,EAAMM,GAEbA,GAtuBG5I,EAyuBd+I,cAAgB,SAAAT,GACRtI,EAAK2I,KAAK1F,IAAIqF,IACdtI,EAAK2I,KAAKtF,OAAOiF,IA3uBXtI,EA+uBdsG,gBAAkB,SAACa,EAAQC,EAAWc,GAClClI,EAAKuB,KAAK,wBAAyB,CAC/B4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAnvBFlI,EAuvBdyG,yBAA2B,SAACU,EAAQC,EAAWc,GAC3ClG,IAAgBgH,aAAa,CACzBC,QAAS,iCACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA5vBFlI,EAgwBd2G,gBAAkB,SAACQ,EAAQC,EAAWc,GAClClG,IAAgBgH,aAAa,CACzBC,QAAS,wBACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KArwBFlI,EAywBdyH,oBAAsB,SAACN,EAAQC,EAAWc,GACtClI,EAAKuB,KAAK,4BAA6B,CACnC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA7wBFlI,EAixBd2H,6BAA+B,SAACR,EAAQC,EAAWc,GAC/ClI,EAAKuB,KAAK,qCAAsC,CAC5C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KArxBFlI,EAyxBd4H,oBAAsB,SAACT,EAAQC,EAAWc,GACtClI,EAAKuB,KAAK,4BAA6B,CACnC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA7xBFlI,EAiyBd+H,6BAA+B,SAACZ,EAAQC,EAAWc,GAC/ClI,EAAKuB,KAAK,qCAAsC,CAC5C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAryBFlI,EAyyBdgI,oBAAsB,SAACb,EAAQC,EAAWc,GACtClI,EAAKuB,KAAK,4BAA6B,CACnC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA7yBFlI,EAizBd8G,mBAAqB,SAACK,EAAQC,EAAWc,GACrClG,IAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAtzBFlI,EA0zBd6H,yBAA2B,SAACV,EAAQC,EAAWc,GAC3ClI,EAAKuB,KAAK,iCAAkC,CACxC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA9zBFlI,EAk0Bd8H,gBAAkB,SAACX,EAAQC,EAAWc,GAClClI,EAAKuB,KAAK,wBAAyB,CAC/B4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAt0BFlI,EA00BdqH,2BAA6B,SAACF,EAAQC,EAAWc,GAC7ClI,EAAKuB,KAAK,mCAAoC,CAC1C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA90BFlI,EAk1BdsH,kBAAoB,SAACH,EAAQC,EAAWc,GACpClI,EAAKuB,KAAK,0BAA2B,CACjC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAt1BFlI,EA01BdkH,mBAAqB,SAACC,EAAQC,EAAWc,GACrClI,EAAKuB,KAAK,2BAA4B,CAClC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA91BFlI,EAk2Bd6G,4BAA8B,SAACM,EAAQC,EAAWc,GAC9ClI,EAAKuB,KAAK,oCAAqC,CAC3C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAn2BZlI,EAAKkJ,UAAY,GAEjBlJ,EAAKmJ,GAAK,KACVnJ,EAAK2I,KAAO,IAAIS,QAChBpJ,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKoI,UAAY,IAAIiB,IACrBrJ,EAAKwI,cAAgB,IAAIa,IAEzBrJ,EAAKgD,UAAY,IAAIqG,IACrBrJ,EAAKgE,QAAU,IAAIqF,IAEnBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAfXvJ,8GA4gBDwJ,6EAWLrJ,KAAKgJ,0BACLtF,QAAQ4F,IAAI,yBACRD,GAAUA,kCAIdrJ,KAAKuJ,oCACL7F,QAAQ4F,IAAI,4BACRD,GAAUrJ,KAAK+I,UAAUS,KAAKH,oCAItC3F,QAAQ4F,IAAI,4BACRD,GAAUrJ,KAAK+I,UAAUS,KAAKH,GAElCrJ,KAAKuJ,cAAe,YACJvJ,KAAKyJ,SAASC,MAAM,SAAA/F,GAAK,OAAID,QAAQ4F,IAAI,2BAA4B3F,aAKrF,GALA3D,KAAKgJ,UACLhJ,KAAKuJ,cAAe,EAEpB7F,QAAQ4F,IAAI,2BAERtJ,KAAK+I,UAAU/C,OAAQ,CAEvB,IADAtC,QAAQ4F,IAAI,sCAAwCtJ,KAAK+I,UAAU/C,QAC1DF,EAAI,EAAGA,EAAI9F,KAAK+I,UAAU/C,OAAQF,IACvC9F,KAAK+I,UAAUjD,KAEnB9F,KAAK+I,UAAY,wIAKrB,OAAO,IAAIY,QAAQ,SAACC,EAASC,GACzB,IAAMC,EAAUC,OAAOC,UAAUC,KAAK,SACtCH,EAAQI,UAAY,kBAAMN,EAAQE,EAAQK,SAC1CL,EAAQM,QAAU,kBAAMP,EAAOC,EAAQnG,6CAK3C,OAAO3D,KAAKgJ,GAAGqB,YAAY,CAAC,iBAAkB,YAAYC,YAAY,6DAItE,IAAI5K,EAGJ,OAAOM,KAAKgJ,GAAGqB,YAAY,CAAC,iBAAkB,aAAaC,YAAY,sDAK9D3K,EAAOuB,EAAMuB,EAAK4G,EAAUkB,GAAe,IAAAC,EAAAxK,KACpD,GAAIN,GACA,eAAA+K,EAAA3K,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAAC,SAAAiK,EAAMxJ,GAAN,IAAAyJ,EAAA,OAAApK,EAAAC,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAA7J,KAAA,EAC0Bc,IAAgBgJ,KAAK,CACxC/B,QAAS,WACTgC,QAAS5J,EAAKwB,KAHrB,OACSiI,EADTC,EAAAG,KAKGrH,QAAQ4F,IAAR,oBAAA0B,OAAgC9J,EAAKwB,GAArC,WAAkDiI,GAClDH,EAAKtC,QAAQhH,EAAKwB,GAAIiI,EAASM,MANlC,wBAAAL,EAAArJ,SAAAmJ,MAAD,gBAAAQ,GAAA,OAAAT,EAAAhJ,MAAAzB,KAAA0B,aAAA,GAOGR,GAAMiK,KAAK9B,EAAUkB,OAR5B,CAYA,IAAI5H,EAAUzB,EAAKyB,QAMnB,GALKA,IAEDA,GADAzB,EAAOlB,KAAKiD,IAAI/B,EAAKwB,KAAOxB,GACbyB,SAGdA,GAAYF,EAAjB,CAKA,GAAIA,EAIA,OAHAvB,EAAKiH,KAAO,IAAIiD,KAAK,CAAC3I,IACtBzC,KAAKkI,QAAQhH,EAAKwB,GAAIxB,EAAKiH,WAC3BkB,IAIJ,IAAInI,EAAKiH,KAAT,CASA,IAAM2B,EAAUnK,EAAMsD,IAAIN,GAC1BmH,EAAQI,UAAY,SAAAmB,GAChB,IAAMlD,EAAOkD,EAAMC,OAAOnB,OAEtBhC,GACAjH,EAAKiH,KAAOA,EACZqC,EAAKtC,QAAQhH,EAAKwB,GAAIxB,EAAKiH,MAC3BkB,KAEAkB,KAGRT,EAAQM,QAAU,WACdG,WAjCAA,2CAqCMxC,EAAQwD,EAAU1F,GAC5B,IAAM7C,EAAQhD,KAAK6C,UAAUI,IAAI8E,IAAW,GACxC/E,EAAMwI,KAAK,SAAAC,GAAC,OAAIA,IAAM5F,MAE1B7C,EAAMwG,KAAK3D,GACX7F,KAAK6C,UAAU5B,IAAI8G,EAAQ/E,GAE3BnB,IAAgBgJ,KAAK,CACjB/B,QAAS,eACTgC,QAAS/C,EACTwD,SAAUA,iDAIExD,EAAQlC,GACxB,GAAK7F,KAAK6C,UAAUC,IAAIiF,GAAxB,CAEA,GAAKlC,EAEE,CACH,IAAM7C,EAAQhD,KAAK6C,UAAUI,IAAI8E,GAAQ2D,OAAO,SAAAD,GAAC,OAAIA,IAAM5F,IAC3D7F,KAAK6C,UAAU5B,IAAI8G,EAAQ/E,QAH3BhD,KAAK6C,UAAUK,OAAO6E,GAM1BlG,IAAgBgJ,KAAK,CACjB/B,QAAS,qBACTgC,QAAS/C,EACT4D,iBAAiB,wCAId5D,EAAQlC,GACX7F,KAAK6D,QAAQf,IAAIiF,GACL/H,KAAK6D,QAAQZ,IAAI8E,GACvByB,KAAK3D,GAEX7F,KAAK6D,QAAQ5C,IAAI8G,EAAQ,CAAClC,IAG9BnC,QAAQ4F,IAAI,6BAA+BvB,4CAG9BA,EAAQlC,GACjB7F,KAAK6D,QAAQf,IAAIiF,KACjB/H,KAAK6D,QAAQX,OAAO6E,GACpBrE,QAAQ4F,IAAI,4BAA8BzD,EAAInD,IAC9Cb,IAAgBgJ,KAAK,CACjB/B,QAAS,iBACT1C,QAASP,EAAIO,QACbwF,YAAa,CAAC/F,EAAInD,IAClBmJ,QAAQ,iDAqLAC,EAAQ/D,GACxB/H,KAAKoB,KAAK,uBAAwB,CAC9B0K,OAAQA,EACR/D,OAAQA,gDAIIf,EAAQe,GACxB/H,KAAKoB,KAAK,uBAAwB,CAC9B4F,OAAQA,EACRe,OAAQA,WAr3BIgE,iBA23BxBhC,OAAO7I,KAAOvB,EACCA,g5BCx2Bf,SAASqM,EAAcC,GACnB,OAAKA,EAEDA,EAAO,KACP,GAAAjB,OAAUiB,EAAV,MAGAA,EAAO,QACP,GAAAjB,QAAWiB,EAAO,MAAMC,QAAQ,GAAhC,OAGAD,EAAO,WACP,GAAAjB,QAAWiB,EAAO,KAAO,MAAMC,QAAQ,GAAvC,OAGJ,GAAAlB,QAAWiB,EAAO,KAAO,KAAO,MAAMC,QAAQ,GAA9C,OAdW,MAiBf,SAASC,EAAYjL,GACjB,IAAKA,EAAM,OAAO,KAElB,IAAI+K,EAAO/K,EAAK+K,KAChB,OAAKA,EAEED,EAAcC,GAFH,KAyCtB,SAASG,EAASjE,EAAMkE,GACpB,GAA2C,qBAAhCtC,OAAOuC,UAAUC,WAKxBxC,OAAOuC,UAAUC,WAAWpE,EAAMkE,OAC/B,CACH,IAAIG,EAAUzC,OAAOrB,IAAIC,gBAAgBR,GACrCsE,EAAW3H,SAAS4H,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpChI,SAASkI,KAAKC,YAAYR,GAC1BA,EAASS,QACTpI,SAASkI,KAAKG,YAAYV,GAC1B1C,OAAOrB,IAAI0E,gBAAgBZ,aAIpBa,mFAAf,SAAA3M,EAA2Bf,EAAOqH,EAAQsG,GAA1C,IAAAnD,EAAArE,EAAA,OAAAvF,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSiG,EADT,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAESiM,EAFT,CAAAzM,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAGSiM,EAAWtH,OAHpB,CAAAnF,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAKyBc,IAAgBgJ,KAAK,CACtC/B,QAAS,cACT1C,QAASY,EACT4E,YAAa0B,IARrB,OAwBI,KAnBMnD,EALVtJ,EAAAkK,MAWWwC,SAAWpD,EAAOoD,SAASC,IAAI,SAAClJ,EAASwB,GAC5C,OACIxB,GAAW,CACPwE,QAAS,iBACT1C,QAASY,EACTtE,GAAI4K,EAAWxH,GACfvB,QAAS,QAKrBkJ,IAAaC,SAASvD,EAAOoD,UAEpBzH,EAAIwH,EAAWtH,OAAS,EAAGF,GAAK,EAAGA,IACxC2H,IAAarM,KAAK,mBAAoBqM,IAAaxK,IAAI+D,EAAQsG,EAAWxH,KAK9E6H,EAFQ/N,IAAUuD,WAEOgH,EAAOoD,UA9BpC,yBAAA1M,EAAAU,SAAAb,6BAiCA,SAASiN,EAAkBhO,EAAO4N,GAC9B,IAAK,IAAIzH,EAAIyH,EAASvH,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMxB,EAAUiJ,EAASzH,GACzB,GAAKxB,EAAL,CAF2C,IAMnCC,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAGDqJ,EAA8BjO,EAFR4E,EAAdC,UAEwCF,GAChD,MAEJ,IAAK,eAGDuJ,EAA0BlO,EAFR4E,EAAVG,MAEgCJ,GACxC,MAEJ,IAAK,yBAGDwJ,EAAiBnO,EAFC4E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,kBAGDyJ,EAA6BpO,EAFR4E,EAAbO,SAEsCR,GAC9C,MAEJ,IAAK,cAGD0J,EAAyBrO,EAFR4E,EAATS,KAE8BV,GACtC,MAEJ,IAAK,eAGDwJ,EAAiBnO,EAFC4E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,iBAGD2J,EAA4BtO,EAFR4E,EAAZa,QAEoCd,GAC5C,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,MAFC,IAIRb,EAAkEa,EAAlEb,UAAWE,EAAuDW,EAAvDX,MAAOI,EAAgDO,EAAhDP,SAAUF,EAAsCS,EAAtCT,MAAOQ,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAE3D,GAAIX,EAAO,CACPkJ,EAAiBnO,EAAOiF,EAAON,GAC/B,MAGJ,GAAIE,EAAW,CACXoJ,EAA8BjO,EAAO6E,EAAWF,GAChD,MAGJ,GAAII,EAAO,CACPmJ,EAA0BlO,EAAO+E,EAAOJ,GACxC,MAGJ,GAAIQ,EAAU,CACViJ,EAA6BpO,EAAOmF,EAAUR,GAC9C,MAGJ,GAAIc,EAAS,CACT6I,EAA4BtO,EAAOyF,EAASd,GAC5C,MAGJ,GAAIgB,EAAO,CACP4I,EAA0BvO,EAAO2F,EAAOhB,GACxC,MAGJ,GAAIiB,EAAY,CACZ4I,EAA8BxO,EAAO4F,EAAYjB,GACjD,MAGJ,MAEJ,IAAK,eAGD4J,EAA0BvO,EAFR4E,EAAVe,MAEgChB,GACxC,MAEJ,IAAK,mBAGD6J,EAA8BxO,EAFP4E,EAAfgB,WAEyCjB,MAQrE,SAAS8J,EAAiBzO,EAAO+E,EAAOJ,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACjE,GAAKgD,GACAJ,EAAL,CAFiE,IAIpDpD,EAASwD,EAAhBA,MACN,GAAKxD,EAAL,CALiE,IAAAqN,EAOjErN,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARyD6L,EAQzD7L,GAAIuJ,EARqDsC,EAQrDtC,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU4G,gBAAgBlC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,aACS2L,GAAgBpC,GAAQA,EAAOuC,MAChC5O,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASuJ,EAA0BlO,EAAO+E,EAAOJ,GAC7C,IAAKI,EAAO,OAAO,EACnB,IAAKJ,EAAS,OAAO,EAFiC,IAIvB2B,EAAcvB,EAArC2B,sBACR,IAAKJ,EAAW,OAAO,EAL+B,IAOzC/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EARoC,IAW9CwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQ9G,EAAKwB,MAGpC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU0G,yBAAyBhC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACtE,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASmK,EAAqB9O,EAAO6E,EAAWF,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACzE,GAAK8C,GACAF,EAAL,CAFyE,IAIxDpD,EAASsD,EAApBA,UACN,GAAKtD,EAAL,CALyE,IAAAwN,EAOzExN,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARiEgM,EAQjEhM,GAAIuJ,EAR6DyC,EAQ7DzC,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUiI,oBAAoBvD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS2L,GAAgBpC,GAAQA,EAAO0C,MAChC/O,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASsJ,EAA8BjO,EAAO6E,EAAWF,GACrD,IAAKE,EAAW,OAAO,EACvB,IAAKF,EAAS,OAAO,EAFyC,IAI3C2B,EAAczB,EAAzBiC,UACR,IAAKR,EAAW,OAAO,EALuC,IAOjD/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAR4C,IAWtDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQ9G,EAAKwB,MAGpC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUgI,6BAA6BtD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC1E,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASsK,EAAmBjP,EAAOkP,EAASvK,GACxC,GAAKuK,GACAvK,EAAL,CAFiD,IAIzCwK,EAAYD,EAAZC,QACF1K,EAAO2K,IAAU9L,IAAI6L,GACtB1K,GAEL4K,GAAgBrP,EAAOyE,IAG3B,SAAS6K,EAAoBtP,EAAOmF,EAAUR,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACvE,GAAKoD,GACAR,EAAL,CAFuE,IAIvDpD,EAAS4D,EAAnBA,SACN,GAAK5D,EAAL,CALuE,IAAAgO,EAOvEhO,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EAR+DwM,EAQ/DxM,GAAIuJ,EAR2DiD,EAQ3DjD,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU+G,mBAAmBrC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAChE,aACS2L,GAAgBpC,GAAQA,EAAOkD,MAChCvP,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASyJ,EAA6BpO,EAAOmF,EAAUR,GACnD,IAAKQ,EAAU,OAAO,EACtB,IAAKR,EAAS,OAAO,EAFuC,IAIzC2B,EAAcnB,EAAzB2B,UACR,IAAKR,EAAW,OAAO,EALqC,IAO/C/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAR0C,IAWpDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQ9G,EAAKwB,MAGpC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU8G,4BAA4BpC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACzE,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAAS8K,EAAgBzP,EAAOqF,EAAMV,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GAC1DsD,IACAV,GAILmK,EAAqB9O,EAFCqF,EAAdR,UAE+BF,EAAS+J,IAGpD,SAASL,EAAyBrO,EAAOqF,EAAMV,GAC3C,IAAKU,EAAM,OAAO,EAClB,IAAKV,EAAS,OAAO,EAF+B,IAI5CM,EAAqBI,EAArBJ,MACR,QAAIgJ,EAA8BjO,EADLqF,EAAdR,UACqCF,KAIpDwJ,EAAiBnO,EAAOiF,EAAON,IACxB,YAGI+K,mFAAf,SAAAnN,EAAmCvC,EAAOuF,EAAUZ,GAApD,IAAAsC,EAAA1F,EAAAwB,EAAA,OAAAnC,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACSmE,EADT,CAAA/C,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAESiD,EAFT,CAAAnC,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAIUuF,EAAaC,YAAc3B,GAJrC,CAAA/C,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAOQH,EAAOtB,IAAUkH,gBAAgBF,GAPzC,CAAAzE,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,GASqBc,IAAgBgJ,KAAK,CAC9B/B,QAAS,sBACT5D,SAAUA,EACVoK,KAAMC,IACNC,MAAOC,IACPC,OAAQC,IACRC,MAAOC,IACPzJ,QAAS9B,EAAQ8B,UAhB7B,QASQlF,EATRiB,EAAA4I,KAkBQnL,IAAU0I,gBAAgB1B,EAAY1F,GAEtCvB,EAAQC,IAAUuD,WApB1B,WAuBIjC,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EAAOxB,EAAPwB,IAEK9C,IAAUoI,QAAQ9G,EAAKwB,IA1BxC,CAAAP,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,kBA6BIzB,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUmH,mBAAmBzC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAChE,kBAAM9C,IAAUsE,cAAcxB,EAAIyB,IAAeG,KAlCzD,yBAAAnC,EAAAZ,SAAAW,6BAsCA,SAAS4N,EAAoBnQ,EAAOiF,EAAON,GACvC,GAAKM,GACAN,EAAL,CAFgD,IAIxCyB,EAAUnB,EAAVmB,MACR,GAAKA,EAAL,CAEA,IAAME,EAAY8J,YAAQhK,EAAOiK,KACjC,GAAK/J,EAAL,CARgD,IAUnC/E,EAAS+E,EAAhBrB,MACN,GAAK1D,EAAL,CAXgD,IAcxCwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAEK9C,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM9C,IAAUsE,cAAcxB,EAAIyB,IAAeG,SAIzD,SAASwJ,EAAiBnO,EAAOiF,EAAON,GACpC,GAAKM,GACAN,EAAL,CAF6C,IAIrCyB,EAAUnB,EAAVmB,MACR,GAAKA,EAAL,CAEA,IAAME,EAAYgK,YAAalK,GAC/B,GAAKE,EAAL,CAR6C,IAUhC/E,EAAS+E,EAAhBrB,MACN,GAAK1D,EAAL,CAX6C,IAcrCwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAEK9C,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM9C,IAAUsE,cAAcxB,EAAIyB,IAAeG,SAIzD,SAAS4L,EAA0BvQ,EAAOiF,EAAON,GAC7C,IAAKM,EAAO,OAAO,EACnB,IAAKN,EAAS,OAAO,EAErB,IAAM2B,EAAYkK,YAAsBvL,EAAMmB,OAC9C,IAAKE,EAAW,OAAO,EAL+B,IAOzC/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EARoC,IAW9CwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQtF,KAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAAS8L,EAAmBzQ,EAAOyF,EAASd,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACrE,GAAK0D,EAAL,CADqE,IAGtDlE,EAASkE,EAAlBA,QACN,GAAKlE,EAAL,CAJqE,IAAAmP,EAMrEnP,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EAP6D2N,EAO7D3N,GAAIuJ,EAPyDoE,EAOzDpE,KAGZ,IADarM,IAAUoI,QAAQtF,GAC/B,CAEA,IAAMsE,EAAS1C,EAAUA,EAAQ8B,QAAU,EACrCa,EAAY3C,EAAUA,EAAQ5B,GAAK,EAEzC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuH,kBAAkBH,EAAQC,EAAWvE,IACrD,aACS2L,GAAgBpC,GAAQA,EAAOqE,MAChC1Q,IAAUsE,cAAcxB,EAAIyB,IAAeG,GAAWc,QAMtE,SAAS6I,EAA4BtO,EAAOyF,EAASd,GACjD,IAAKc,EAAS,OAAO,EADqC,IAGvCa,EAAcb,EAAzBqB,UACR,IAAKR,EAAW,OAAO,EAJmC,IAM7C/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAPwC,IAUlDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,GADa9C,IAAUoI,QAAQtF,GACrB,OAAO,EAEjB,IAAMsE,EAAS1C,EAAUA,EAAQ8B,QAAU,EACrCa,EAAY3C,EAAUA,EAAQ5B,GAAK,EAUzC,OARA9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUsH,2BAA2BF,EAAQC,EAAWvE,IAC9D,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,GAAWc,MAG9D,EAGX,SAASmL,EAAiB5Q,EAAO2F,EAAOhB,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACjE,GAAK4D,GACAhB,EAAL,CAFiE,IAIpDpD,EAASoE,EAAhBA,MACN,GAAKpE,EAAL,CALiE,IAAAsP,EAOjEtP,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARyD8N,EAQzD9N,GAAIuJ,EARqDuE,EAQrDvE,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU+H,gBAAgBrD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,aACS2L,GAAgBpC,GAAQA,EAAOwE,MAChC7Q,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS4J,EAA0BvO,EAAO2F,EAAOhB,GAC7C,IAAKgB,EAAO,OAAO,EACnB,IAAKhB,EAAS,OAAO,EAFiC,IAInC2B,EAAcX,EAAzBmB,UACR,IAAKR,EAAW,OAAO,EAL+B,IAOzC/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EARoC,IAW9CwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQtF,KAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU8H,yBAAyBpD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACtE,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASoM,EAAqB/Q,EAAO4H,EAAWjD,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACzE,GAAK6F,GACAjD,EAAL,CAFyE,IAI5DpD,EAASqG,EAAhBjC,MACN,GAAKpE,EAAL,CALyE,IAAAyP,EAOzEzP,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARiEiO,EAQjEjO,GAAIuJ,EAR6D0E,EAQ7D1E,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU6H,oBAAoBnD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS2L,GAAgBpC,GAAQA,EAAO2E,MAChChR,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS6J,EAA8BxO,EAAO4H,EAAWjD,GACrD,IAAKiD,EAAW,OAAO,EACvB,IAAKjD,EAAS,OAAO,EAFyC,IAI3C2B,EAAcsB,EAAzBd,UACR,IAAKR,EAAW,OAAO,EALuC,IAOjD/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAR4C,IAWtDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQtF,KAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU4H,6BAA6BlD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC1E,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASuM,EAAqBlR,EAAOyH,EAAW9C,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACzE,GAAK0F,GACA9C,EAAL,CAFyE,IAI5DpD,EAASkG,EAAhBC,MACN,GAAKnG,EAAL,CALyE,IAAA4P,EAOzE5P,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARiEoO,EAQjEpO,GAAIuJ,EAR6D6E,EAQ7D7E,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU0H,oBAAoBhD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS2L,GAAgBpC,GAAQA,EAAO8E,MAChCnR,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS0M,EAAoBrR,EAAO4N,GAKhC,IAJA,IAAM0D,EAAQ,IAAI/H,IACdlC,EAAS,EACPkK,EAAU,IAAIhI,IAEXpD,EAAIyH,EAASvH,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMxB,EAAUiJ,EAASzH,GACzB,GAAKxB,EAAL,CAF2C,IAMnC8B,EAA0D9B,EAA1D8B,QAAS7B,EAAiDD,EAAjDC,QAAS4M,EAAwC7M,EAAxC6M,eAAgBC,EAAwB9M,EAAxB8M,oBAW1C,GATID,GACAF,EAAMhQ,IAAIkQ,EAAgBA,GAG1BC,IACApK,EAASZ,EACT8K,EAAQjQ,IAAImQ,EAAqBA,IAGjC7M,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAERiK,EAAqB9O,EAAO6E,EAAWF,GACvCsJ,EAA8BjO,EAAO6E,EAAWF,GAChD,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MAER0J,EAAiBzO,EAAO+E,EAAOJ,GAC/BuJ,EAA0BlO,EAAO+E,EAAOJ,GACxC,MAEJ,IAAK,yBAGDwJ,EAAiBnO,EAFC4E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,iBAGDsK,EAAmBjP,EAFC4E,EAAZsK,QAE2BvK,GACnC,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERmK,EAAoBtP,EAAOmF,EAAUR,GACrCyJ,EAA6BpO,EAAOmF,EAAUR,GAC9C,MAEJ,IAAK,cAAe,IACRU,EAAST,EAATS,KAERoK,EAAgBzP,EAAOqF,EAAMV,GAC7B0J,EAAyBrO,EAAOqF,EAAMV,GACtC,MAEJ,IAAK,kBAGD+K,EAAoB1P,EAFC4E,EAAbW,SAE6BZ,GACrC,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EACD,MAHY,IAMRb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WACnE6L,GAAY,EAEZ7M,IACAiK,EAAqB9O,EAAO6E,EAAWF,GACvC+M,GAAazD,EAA8BjO,EAAO6E,EAAWF,IAG7DI,IACA0J,EAAiBzO,EAAO+E,EAAOJ,GAC/B+M,GAAaxD,EAA0BlO,EAAO+E,EAAOJ,IAGrDQ,IACAmK,EAAoBtP,EAAOmF,EAAUR,GACrC+M,GAAatD,EAA6BpO,EAAOmF,EAAUR,IAG3Dc,IACAgL,EAAmBzQ,EAAOyF,EAASd,GACnC+M,GAAapD,EAA4BtO,EAAOyF,EAASd,IAGzDgB,IAEA+L,GAAanD,EAA0BvO,EAAO2F,EAAOhB,IAGrDiB,IACAmL,EAAqB/Q,EAAO4F,EAAYjB,GACxC+M,GAAalD,EAA8BxO,EAAO4F,EAAYjB,IAG9DkB,GACAqL,EAAqBlR,EAAO6F,EAAYlB,GAGxC+M,IACAvB,EAAoBnQ,EAAOiF,EAAON,GAClCwJ,EAAiBnO,EAAOiF,EAAON,GAC/B4L,EAA0BvQ,EAAOiF,EAAON,IAE5C,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAERkL,EAAoBnQ,EAAOiF,EAAON,GAClCwJ,EAAiBnO,EAAOiF,EAAON,GAC/B4L,EAA0BvQ,EAAOiF,EAAON,GACxC,MAEJ,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QAERgL,EAAmBzQ,EAAOyF,EAASd,GACnC2J,EAA4BtO,EAAOyF,EAASd,GAC5C,MAEJ,IAAK,eAID+K,EAAoB1P,EAHF4E,EAAVqB,MACAV,SAE6BZ,GACrC,MAEJ,IAAK,eAID4J,EAA0BvO,EAHR4E,EAAVe,MAGgChB,GACxC,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WAERmL,EAAqB/Q,EAAO4F,EAAYjB,GACxC6J,EAA8BxO,EAAO4F,EAAYjB,GACjD,MAEJ,IAAK,mBAGDuM,EAAqBlR,EAFE4E,EAAfiB,WAEgClB,KAUxDgN,GAAiB3R,EAADG,OAAAyR,EAAA,EAAAzR,CAAYmR,EAAMO,SAClCnE,EAAY1N,EAAOqH,EAARlH,OAAAyR,EAAA,EAAAzR,CAAoBoR,EAAQM,SAG3C,SAASC,EAAevQ,EAAMwQ,EAAU7L,EAAKwD,GACzC,GAAKnI,GACAwQ,EAEL,GAAIxQ,EAAKuB,KAn3Bb,SAAkBwI,EAAMoB,EAAUsF,GAC9B,IAAIxJ,EAAO,IAAIiD,KAAK,CAACH,GAAO,CAAE2G,KAAMD,GAAQ,6BAC5C,GAA2C,qBAAhC5H,OAAOuC,UAAUC,WAKxBxC,OAAOuC,UAAUC,WAAWpE,EAAMkE,OAC/B,CACH,IAAIG,EAAUzC,OAAOrB,IAAIC,gBAAgBR,GACrCsE,EAAW3H,SAAS4H,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpChI,SAASkI,KAAKC,YAAYR,GAC1BA,EAASS,QACTpI,SAASkI,KAAKG,YAAYV,GAC1B1C,OAAOrB,IAAI0E,gBAAgBZ,IA01B3BqF,CAAS3Q,EAAKuB,IAAKiP,OADvB,CAKA,IAAIvJ,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAC1CA,EACAiE,EAASjE,EAAMuJ,GAInB3E,EAAS7L,EAAM2E,EAAK,WACZwD,GAAUA,KAEdlB,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,OAEtCiE,EAASjE,EAAMuJ,MAK3B,SAAS3E,EAAS7L,EAAM2E,EAAKwD,GACzB,GAAKnI,EAAL,CADmC,IAE3BwB,EAAcxB,EAAdwB,GAAIE,EAAU1B,EAAV0B,MAGZ,IADahD,IAAUoI,QAAQtF,GAK/B,GAAIE,EAAMG,yBAAV,CACI,IAAMpD,EAAQC,IAAUuD,WAExBvD,IAAUoE,aAAarE,EAAOuB,EAAM,KAAMmI,EAAU,WAC5CzG,EAAMkP,mBACNlS,IAAUsE,cAAchD,EAAKwB,GAAIyB,IAAe0B,UAMxDjD,EAAMkP,mBACNlS,IAAUsE,cAAcxB,EAAIyB,IAAe0B,IAInD,SAASkM,EAAoB/K,EAAQC,GACjC,IAAM3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,MAAO,CAAC,EAAG,EAAG,MAFgB,IAIpCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,MAE5B,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,GAAIA,GAAaA,EAAUiC,UACvB,MAAO,CAACjC,EAAUiC,UAAU+I,MAAOhL,EAAUiC,UAAUiJ,OAAQlL,EAAUiC,UAAU7B,OAEvF,MAEJ,IAAK,yBACD,OAAOoN,EAAahL,EAAQC,EAAWgL,KAE3C,IAAK,kBAAmB,IACZnN,EAAaP,EAAbO,SACR,GAAIA,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAE7B,MAEJ,IAAK,eACD,OAAOkN,EAAahL,EAAQC,EAAWgL,KAE3C,IAAK,cAAe,IACR5M,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUQ,EAAiBD,EAAjBC,MAAOV,EAAUS,EAAVT,MAEpC,GAAIJ,GAAaA,EAAUiC,UACvB,MAAO,CAACjC,EAAUiC,UAAU+I,MAAOhL,EAAUiC,UAAUiJ,OAAQlL,EAAUiC,UAAU7B,OAGvF,GAAIE,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAG7B,GAAIQ,GAASA,EAAMmB,UACf,MAAO,CAACnB,EAAMmB,UAAU+I,MAAOlK,EAAMmB,UAAUiJ,OAAQpK,EAAMmB,UAAU7B,OAG3E,GAAIA,EACA,OAAOoN,EAAahL,EAAQC,EAAWgL,KAG/C,MAEJ,IAAK,eAAgB,IACT3M,EAAUf,EAAVe,MACR,GAAIA,EAAMmB,UACN,MAAO,CAACnB,EAAMmB,UAAU+I,MAAOlK,EAAMmB,UAAUiJ,OAAQpK,EAAMmB,UAAU7B,OAE3E,MAEJ,QACI,MAAO,CAAC,EAAG,EAAG,MAItB,MAAO,CAAC,EAAG,EAAG,MAGlB,SAASoN,EAAahL,EAAQC,EAAWgF,GACrC,IAAKA,EAAM,MAAO,CAAC,EAAG,EAAG,MACzB,IAAM3H,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,MAAO,CAAC,EAAG,EAAG,MAHe,IAKnCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,MAE5B,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,GAAIA,EACA,MAAO,CAACA,EAAUgL,MAAOhL,EAAUkL,OAAQlL,EAAUA,WAEzD,MAEJ,IAAK,yBAA0B,IACnBI,EAAUL,EAAVK,MACR,GAAIA,EAAO,CACP,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EACA,MAAO,CAACA,EAAUuJ,MAAOvJ,EAAUyJ,OAAQzJ,EAAUrB,OAG7D,MAEJ,IAAK,kBAAmB,IACZE,EAAaP,EAAbO,SACR,GAAIA,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAE7B,MAEJ,IAAK,eAAgB,IACTF,EAAUL,EAAVK,MACR,GAAIA,EAAO,CACP,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EACA,MAAO,CAACA,EAAUuJ,MAAOvJ,EAAUyJ,OAAQzJ,EAAUrB,OAG7D,MAEJ,IAAK,cAAe,IACRS,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MACpC,GAAId,EACA,MAAO,CAACA,EAAUgL,MAAOhL,EAAUkL,OAAQlL,EAAUA,WAGzD,GAAIM,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAG7B,GAAIF,EAAO,CACP,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EACA,MAAO,CAACA,EAAUuJ,MAAOvJ,EAAUyJ,OAAQzJ,EAAUrB,OAEzD,MAGJ,GAAIU,EACA,MAAO,CAACA,EAAMkK,MAAOlK,EAAMoK,OAAQpK,EAAMA,OAGjD,MAEJ,IAAK,eAAgB,IACTA,EAAUf,EAAVe,MACR,GAAIA,EACA,MAAO,CAACA,EAAMkK,MAAOlK,EAAMoK,OAAQpK,EAAMA,OAQrD,MAAO,CAAC,EAAG,EAAG,MAGlB,SAAS4M,EAA6B3E,GAClC,GAAKA,GACAA,EAASvH,OAEd,IAAK,IAAIF,EAAI,EAAGA,EAAIyH,EAASvH,OAAQF,IAAK,CACtC,IAAIxB,EAAUiJ,EAASzH,GACfvB,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,eAAgB,IACTK,EAAUL,EAAVK,MACR,IAAKA,EAAO,MAgBZ,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOiK,KACvC,IAAK/J,EAAW,MAnBC,IAqBF/E,EAAS+E,EAAhBrB,MAER,GADa1D,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,OAEV9C,IAAUuS,oBAAoBjR,EAAKwB,IACnC,MAEJ,IAAK,eAAgB,IACT4C,EAAUf,EAAVe,MACR,IAAKA,EAAO,MAEZ,GAAIA,EAAMmB,UAAW,KACFvF,EAASoE,EAAMmB,UAAtB7B,MAER,GADa1D,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAUuS,oBAAoBjR,EAAKwB,IATtB,IAYFxB,EAASoE,EAAhBA,MACR,IAAKpE,EAAM,MAGX,GADaA,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAUuS,oBAAoBjR,EAAKwB,IACnC,MAEJ,IAAK,cAAe,IACR2C,EAAaf,EAAQC,QAArBc,SACR,GAAIA,EAAU,KACFC,EAAUD,EAAVC,MAER,GAAIA,EAAO,CACP,GAAIA,EAAMmB,UAAW,KACFvF,EAASoE,EAAMmB,UAAtB7B,MAER,GADa1D,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAUuS,oBAAoBjR,EAAKwB,IANhC,IASQxB,EAASoE,EAAhBA,MACR,IAAKpE,EAAM,MAGX,GADaA,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAUuS,oBAAoBjR,EAAKwB,QAW/D,SAAS0P,EAAuB7E,GAAgC,IAAtB8E,EAAsB3Q,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC5D,GAAK6L,GACAA,EAASvH,OAId,IAFA,IAAMrG,EAAQC,IAAUuD,WAEf2C,EAAI,EAAGA,EAAIyH,EAASvH,OAAQF,IAAK,CACtC,IAAIxB,EAAUiJ,EAASzH,GACfvB,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAERiK,EAAqB9O,EAAO6E,EAAWF,EAAS+N,GAChDzE,EAA8BjO,EAAO6E,EAAWF,GAChD,MAEJ,IAAK,yBAGDwL,EAAoBnQ,EAFF4E,EAAVK,MAE0BN,GAClC,MAEJ,IAAK,kBAGD2K,EAAoBtP,EAFC4E,EAAbO,SAE6BR,EAAS+N,GAC9C,MAEJ,IAAK,eAGDvC,EAAoBnQ,EAFF4E,EAAVK,MAE0BN,GAClC,MAEJ,IAAK,cAAe,IACRe,EAAaf,EAAQC,QAArBc,SACR,IAAKA,EACD,MAHY,IAMRb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MAChC+L,GAAY,EAEZ7M,IACAiK,EAAqB9O,EAAO6E,EAAWF,EAAS+N,GAChDhB,GAAazD,EAA8BjO,EAAO6E,EAAWF,IAG7DQ,IACAmK,EAAoBtP,EAAOmF,EAAUR,EAAS+N,GAC9ChB,GAAY,GAGZ/L,IACAiL,EAAiB5Q,EAAO2F,EAAOhB,EAAS+N,GACxChB,GAAanD,EAA0BvO,EAAO2F,EAAOhB,IAGrD+M,GACAvB,EAAoBnQ,EAAOiF,EAAON,GAGtC,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAER4I,EAA0BvO,EAAO2F,EAAOhB,GACxCiM,EAAiB5Q,EAAO2F,EAAOhB,EAAS+N,KAQ5D,SAASC,EAAgCC,EAAOC,GAC5C,GAAKA,EAAQxM,OAAb,CAEA,IAAMuH,EAAW,GACbgF,EAAQ,GACRhF,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAE9BA,EAAQC,EAAQxM,OAAS,GACzBuH,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAGlCL,EAA6B,CAACM,EAAQD,KACtCL,EAA6B3E,IAGjC,SAASkF,EAA0BF,EAAOC,GACtC,GAAKA,EAAQxM,OAAb,CAEA,IAAMuH,EAAW,GACbgF,EAAQ,GACRhF,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAE9BA,EAAQC,EAAQxM,OAAS,GACzBuH,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAGlCH,EAAuB,CAACI,EAAQD,KAAS,GACzCH,EAAuB7E,GAAU,IAGrC,SAASmF,EAAoB/S,EAAOuB,EAAM4K,GACtC,GAAK5K,EAAL,CAD8C,IAGtCwB,EAAOxB,EAAPwB,GACRxB,EAAOtB,IAAUqD,IAAIP,IAAOxB,EAE5B,IAAMkD,EAAO2K,IAAU9L,IAAI6I,GAC3B,GAAK1H,EAEQlD,EAAKiH,MAAQvI,IAAUoI,QAAQtF,IAG5C9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUyE,oBAAoByH,EAAQpJ,IAC5C,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBnC,MAI9D,SAASuO,GAAoBhT,EAAOuB,EAAM8F,GACtC,GAAK9F,EAAL,CAD8C,IAGtCwB,EAAOxB,EAAPwB,GACRxB,EAAOtB,IAAUqD,IAAIP,IAAOxB,EAE5B,IAAM6C,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAEQ7C,EAAKiH,MAAQvI,IAAUoI,QAAQtF,IAG5C9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUqE,oBAAoB+C,EAAQtE,IAC5C,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBxC,MAI9D,SAAS8O,GAA8B7L,EAAQ8L,GAC3C,GAAKA,EAAL,CAEA,IAAMnT,EAAQC,IAAUuD,WAExB2P,EAAO1P,QAAQ,SAAAwB,GACX,OAAQA,EAAM,UACV,IAAK,YAAa,IAAAmO,EACSnO,EAAfoO,EADMD,EACNC,MAAOC,EADDF,EACCE,IAEfN,GAAoBhT,EAAOqT,EAAOhM,GAClC2L,GAAoBhT,EAAOsT,EAAKjM,GAChC,MAEJ,IAAK,eACD,IAAM8E,EAASoH,YAAclM,GADZmM,EAGMvO,EAAfoO,EAHSG,EAGTH,MAAOC,EAHEE,EAGFF,IAEfP,EAAoB/S,EAAOqT,EAAOlH,GAClC4G,EAAoB/S,EAAOsT,EAAKnH,GAChC,MAEJ,IAAK,mBAED,KADAlH,EAAQwO,YAAgBxO,IACZ,MAEZ,IAAMkH,EAASoH,YAAclM,GAJRqM,EAMEzO,EAAfoO,EANaK,EAMbL,MAAOC,EANMI,EAMNJ,IAEfP,EAAoB/S,EAAOqT,EAAOlH,GAClC4G,EAAoB/S,EAAOsT,EAAKnH,OAOhD,SAASwH,GAAiCtM,EAAQuL,EAAOC,GACrD,GAAKA,EAAQxM,OAAb,CAEA,IAAMhD,EAAQ,GACVuP,EAAQ,GACRvP,EAAMwG,KAAKgJ,EAAQD,EAAQ,IAE3BA,EAAQC,EAAQxM,OAAS,GACzBhD,EAAMwG,KAAKgJ,EAAQD,EAAQ,IAE3BA,GAAS,GAAKA,EAAQC,EAAQxM,QAC9BhD,EAAMwG,KAAKgJ,EAAQD,IAGvBM,GAA8B7L,EAAQhE,IAG1C,SAASgM,GAAgBrP,EAAOmM,GAC5B,IAAM1H,EAAO2K,IAAU9L,IAAI6I,GAC3B,GAAK1H,EAAL,CAFoC,IAI5BmP,EAAkBnP,EAAlBmP,cACR,GAAKA,EAILb,EAAoB/S,EAFI4T,EAAhBP,MAEyBlH,IAGrC,SAASwF,GAAiB3R,EAAO6T,GACxBA,GAELA,EAAIpQ,QAAQ,SAAAV,GAAE,OAAIsM,GAAgBrP,EAAO+C,KAG7C,SAAS+Q,GAAgB9T,EAAOqH,GAC5B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAFoC,IAI5Ba,EAAUb,EAAVa,MACR,GAAKA,EAIL+N,GAAoBhT,EAFIiF,EAAhBoO,MAEyBhM,IAGrC,SAAS0M,GAAiB/T,EAAO6T,GACxBA,GAELA,EAAIpQ,QAAQ,SAAAV,GAAE,OAAI+Q,GAAgB9T,EAAO+C,KAG7C,SAASiR,GAAiBhU,EAAOqH,GAC7B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAFqC,IAI7B6P,EAAkB7P,EAAlB6P,cACR,GAAKA,EAAL,CALqC,IAO7BxC,EAAwBwC,EAAxBxC,oBACHA,GAEL/D,EAAY1N,EAAOqH,EAAQ,CAACoK,MAGhC,SAASyC,GAAsBlU,EAAOmU,GAC7BA,GAGLC,GAAoBpU,EADCmU,EAAbE,UAIZ,SAASD,GAAoBpU,EAAOqU,GAC3BA,GAELA,EAAS5Q,QAAQ,SAAAgC,GACb6I,EAA4BtO,EAAOyF,EAAS,QAIpD,SAAS6O,GAAcC,GACnB,OAAOA,GAAuC,cAA3BA,EAASC,cAGhC,SAASC,GAAOlT,GACZ,IAAMiH,EAKV,SAAiBjH,GACb,OAAOA,EAAOtB,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAAO,KAN3CH,CAAQ9G,GAErB,OAAOtB,IAAU2I,WAAWJ,IAAS,GAOzC,SAASkM,GAAkBnT,GACvB,OAAKA,GACAA,EAAK0B,OACL1B,EAAK0B,MAAM0R,sBAETtI,EAAc9K,EAAK0B,MAAM2R,iBAJd,IAOtB,SAASC,GAAgBtT,GACrB,OAAKA,GACAA,EAAK0C,QACL1C,EAAK0C,OAAO6Q,oBAEVzI,EAAc9K,EAAK0C,OAAO8Q,eAJf,IAOtB,SAASC,GAAajD,GAClB,IAAKA,EACD,MAAO,GAGX,IAAMkD,EAAQlD,EAASmD,MAAM,KAC7B,OAAqB,IAAjBD,EAAM5O,QAA8B,KAAb4O,EAAM,IAA8B,IAAjBA,EAAM5O,OACzC,GAEJ4O,EAAME,MAAMX,4KC33CvB,SAASY,EAAoB/N,GACzB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,IAAIoD,EAAgBpC,IAAUqC,iBAAiBlR,EAAKrB,IACpD,IAAKsS,EAAe,OAAO,KAE3B,OAAQjR,EAAK6N,KAAK,UACd,IAAK,kBACL,IAAK,iBACD,IAAMsD,EA9ClB,SAAoCC,GAChC,IAAKA,EAAoB,OAAO,KAEhC,GAAIA,EAAmBC,QAAQnJ,MAAQ,EAEnC,OADakJ,EAAmBC,QAAQC,SAAStU,OAAOuU,MAAMC,OAC/C,UACX,IAAK,2BACD,MAAO,oBACX,IAAK,+BACD,MAAO,4BACX,IAAK,+BACD,MAAO,4BACX,IAAK,6BACD,MAAO,iBACX,IAAK,8BACD,MAAO,iBACX,IAAK,2BACD,MAAO,kBACX,IAAK,2BACD,MAAO,kBACX,IAAK,+BACD,MAAO,0BACX,IAAK,+BACD,MAAO,0BACX,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,MAAO,SAInB,OAAO,KAcsBC,CAA2BR,GAChD,OAAOE,EAAeA,EAAe,MAAQ,KAEjD,IAAK,qBACL,IAAK,qBACD,IAAMA,EArIlB,SAAkCC,GAC9B,IAAKA,EAAoB,OAAO,KAEhC,IA4BQM,EA5BJxJ,EAAOkJ,EAAmBC,QAAQnJ,KACtC,GAAIA,EAAO,EACP,SAAAjB,OAAUiB,EAAV,sBACG,GAAIA,EAAO,EAAG,CACjB,IAAIwJ,EACAC,EAFaC,GAAA,EAAAC,GAAA,EAAAC,OAAAvH,EAAA,IAGjB,QAAAwH,EAAAC,EAAmBZ,EAAmBC,QAAQ5D,OAA9CwE,OAAAC,cAAAN,GAAAG,EAAAC,EAAAhV,QAAAmV,MAAAP,GAAA,EAAsD,KAA7C7J,EAA6CgK,EAAAR,MAClD,GAAKG,GAEE,IAAKC,EAAY,CACpBA,EAAa3G,IAAU9L,IAAI6I,GAC3B,YAHA2J,EAAY1G,IAAU9L,IAAI6I,IALjB,MAAAqK,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAYjB,OAAKJ,GAAcC,GAInBD,EAAYA,EAAUY,WAAaZ,EAAUY,WAAaZ,EAAUa,YACpEZ,EAAaA,EAAWW,WAAaX,EAAWW,WAAaX,EAAWY,YAEnEb,GAAcC,EAInB,GAAA1K,OAAUyK,EAAV,SAAAzK,OAA2B0K,EAA3B,eAHI,GAAA1K,OAAUiB,EAAV,uBAPA,GAAAjB,OAAUiB,EAAV,sBAaJ,GAAIkJ,EAAmBC,QAAQnJ,MAAQ,EAAG,KAAAsK,GAAA,EAAAC,GAAA,EAAAC,OAAAnI,EAAA,IACtC,QAAAoI,EAAAC,EAAmBxB,EAAmBC,QAAQ5D,OAA9CwE,OAAAC,cAAAM,GAAAG,EAAAC,EAAA5V,QAAAmV,MAAAK,GAAA,EAAsD,KAA7CzK,EAA6C4K,EAAApB,MAClD,IAAKG,EAAW,CACZA,EAAY1G,IAAU9L,IAAI6I,GAC1B,QAJ8B,MAAAqK,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAQtC,IAAKhB,EACD,2BAKJ,KAFAA,EAAYA,EAAUY,WAAaZ,EAAUY,WAAaZ,EAAUa,aAGhE,2BAIJ,OADanB,EAAmBC,QAAQC,SAAStU,OAAOuU,MAAMC,OAC/C,UACX,IAAK,2BACD,SAAAvK,OAAUyK,EAAV,yBACJ,IAAK,+BACD,SAAAzK,OAAUyK,EAAV,iCACJ,IAAK,+BACD,SAAAzK,OAAUyK,EAAV,iCACJ,IAAK,6BACD,SAAAzK,OAAUyK,EAAV,sBACJ,IAAK,8BACD,SAAAzK,OAAUyK,EAAV,sBACJ,IAAK,2BACD,SAAAzK,OAAUyK,EAAV,uBACJ,IAAK,2BACD,SAAAzK,OAAUyK,EAAV,uBACJ,IAAK,+BACD,SAAAzK,OAAUyK,EAAV,+BACJ,IAAK,+BACD,SAAAzK,OAAUyK,EAAV,+BACJ,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,SAAAzK,OAAUyK,EAAV,eAKhB,OAAO,KAsDsBmB,CAAyB5B,GAC9C,OAAOE,EAAeA,EAAe,MAAQ,KAIrD,OAAO,KAGX,SAAS2B,EAAyBvS,GAC9B,IAAKA,EAAS,OAAO,KACrB,GAAIwS,YAAiBxS,GAAU,OAAO,KACtC,IAAKA,EAAQ6M,eAAgB,OAAO,KAEpC,IAAM/M,EAAO2K,IAAU9L,IAAIqB,EAAQ6M,gBACnC,OAAK/M,EAEE2S,YAAgB3S,GAFL,KAKtB,SAAS4S,EAAqB1S,GAC1B,IAAKA,EAAS,OAAO,KACrB,GAAIwS,YAAiBxS,GAAU,OAAO,KAEtC,IAAMP,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SACnC,OAAIrC,GAA+B,uBAAvBA,EAAK6N,KAAK,UAA4D,uBAAvB7N,EAAK6N,KAAK,SAC1D,KAGJqF,YAAiB3S,EAAQ6M,gBAGpC,SAAS+F,EAAyBnT,GAC9B,OAAKA,EAEEiT,EAAqBjT,EAAKoT,cAFf,KAKtB,SAASC,EAAsBrT,GAAsB,IAAhBsT,EAAgB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAZ,SAAA4V,GAAG,OAAIA,GAC5C,IAAKvT,EAAM,OAAO,KAD+B,IAGzCoT,EAAiBpT,EAAjBoT,aACR,OAAKA,EAEEI,YAAWJ,EAAcE,GAFN,KAK9B,SAASG,EAAyBzT,GAC9B,QAAKA,MACAA,EAAKoT,eAEHpT,EAAKoT,aAAaM,aAAe1T,EAAKoT,aAAazU,GAAKqB,EAAK2T,8BAGxE,SAASC,EAAmB5T,GACxB,OAAKA,GACAA,EAAK6T,aAEH7T,EAAK6T,aAHM,KAMtB,SAASC,EAA0B9T,GAC/B,OAAKA,GACAA,EAAK+T,qBAEH/T,EAAK+T,qBAHM,KAMtB,SAASC,EAAYhU,GACjB,OAGJ,SAAwBA,GACpB,IAAKA,EAAM,OAAO,EAElB,IAAIA,EAAKiU,qBA0BL,OAAKjU,EAAKkU,sBAEHlU,EAAKkU,sBAAsBC,SAFM,EAzBxC,OAAQnU,EAAK6N,MACT,IAAK,kBACL,IAAK,iBACD,IAAMuG,EAAuBC,IAAiBC,wBAC1C,yCAEJ,OAAIF,EACOA,EAAqBD,SAGzB,EAEX,IAAK,qBACL,IAAK,qBACD,IAAMC,EAAuBC,IAAiBC,wBAC1C,uCAEJ,OAAIF,EACOA,EAAqBD,SAGzB,GA5BZI,CAAevU,GAAQ,EAsClC,SAASwU,EAAejU,GACpB,IAAMkU,EAAO,IAAIC,KAAoB,IAAfnU,EAAQkU,MAExBE,EAAW,IAAID,KAErB,GADAC,EAASC,SAAS,EAAG,EAAG,EAAG,GACvBH,EAAOE,EACP,OAAOE,IAAWJ,EAAM,QAG5B,IAAMK,EAAM,IAAIJ,KACVK,EAAMD,EAAIE,SACVC,EAAYH,EAAII,UAAYH,GAAe,IAARA,GAAa,EAAI,GAE1D,OAAIN,EADW,IAAIC,KAAKI,EAAIK,QAAQF,IAEzBJ,IAAWJ,EAAM,OAGrBI,IAAWJ,EAAM,aAG5B,SAASW,EAAmBpV,GACxB,OAAKA,GACAA,EAAKoT,cACLpT,EAAKoT,aAAaqB,KACnBY,GAAcrV,EAAKrB,IAAY,KAE5B6V,EAAexU,EAAKoT,cALT,KAQtB,SAASkC,EAA6BrS,GAClC,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAFwB,IAIlC6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAM0H,EAAaC,IAAgBtW,IAAI2O,EAAK4H,gBAC5C,GAAIF,EACA,OCrShB,SAA6BA,EAAYtS,GACrC,IAAKsS,EAAY,OAAO,KADqB,IAGrCG,EAAgCH,EAAhCG,OAAsBC,EAAUJ,EAAxBK,aAEhB,GAAIF,IAA+B,2BAApBA,EAAO,UAA6D,yBAApBA,EAAO,UAClE,MAAO,wBAGX,IAAKC,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAME,EAAchH,IAAUiH,qBAAqB7S,GACnD,OAAI4S,EAAc,EACd,GAAA5O,OAAU0O,EAAV,cAAA1O,OAA4B4O,EAA5B,WAGJ,GAAA5O,OAAU0O,EAAV,YDoRmBI,CAAoBR,EAAYtS,GAG3C,MAEJ,IAAK,kBACL,IAAK,iBACD,IAAM5C,EAAO2K,IAAU9L,IAAI2O,EAAK9C,SAChC,GAAI1K,EACA,OAAO2V,YAAc3V,GAGzB,MAEJ,IAAK,qBACD,IAAM4V,EAAaC,IAAgBhX,IAAI2O,EAAKsI,eAC5C,GAAIF,EACA,OErThB,SAA6BA,EAAYhT,GACrC,IAAKgT,EAAY,OAAO,KADqB,IAGvCP,EAA4CO,EAA5CP,OAAQU,EAAoCH,EAApCG,WAA0BT,EAAUM,EAAxBL,aAE1B,GAAIF,GAA8B,2BAApBA,EAAO,SACjB,OAAOU,EAAa,0BAA4B,wBAGpD,IAAKT,EAAO,CACR,IAAMU,EAAWH,IAAgBI,YAAYL,EAAWtX,IACpD0X,IACAV,EAAQU,EAAST,cAIzB,IAAKD,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAME,EAAchH,IAAUiH,qBAAqB7S,GACnD,OAAI4S,EAAc,EACd,GAAA5O,OAAU0O,EAAV,cAAA1O,OAA4B4O,EAA5B,WAGJ,GAAA5O,OAAU0O,EAAV,YF6RmBY,CAAoBN,EAAYhT,GAOnD,OAAO,KAGX,SAASuT,EAAgBvT,GAAmC,IAA3BwT,EAA2B9Y,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GACxD,GAAI+Y,EAASzT,IAAWwT,EACpB,OAAO,KAGX,IAAME,EAAmB3F,EAAoB/N,GAC7C,OAAI0T,GAIGrB,EAA6BrS,GAGxC,SAAS2T,EAAe5W,GACpB,IAAKA,EAAM,OAAO,KAElB,IAAI6W,EAAQ7W,EAAK6W,OAAS,kBAC1B,GAAqB,IAAjBA,EAAM5U,OAAc,OAAO,KAE/B,IAAI6U,EAAUC,YAAWF,GACzB,OAAIC,GAAWA,EAAQ7U,OAAS,EACrB6U,EAGJ9W,EAAK6W,MAAMG,OAAO,GAG7B,SAASC,EAAkChU,GACvC,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,IAAMxN,EAAO2K,IAAU9L,IAAIc,EAAK6N,KAAK9C,SACrC,GAAI1K,EACA,OAAO6W,YAAa7W,GAGxB,MAEJ,IAAK,qBACD,OAAO,EAIf,OAAO,EAGX,SAAS8W,EAAqBlU,GAE1B,OADqB+N,EAAoB/N,IAGlCgU,EAAkChU,GAG7C,SAASmU,EAAgBnU,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMxN,EAAO2K,IAAU9L,IAAIc,EAAK6N,KAAK9C,SACrC,GAAI1K,EACA,OAAOA,EAAKgX,SAGhB,MAEJ,IAAK,qBACD,IAAMpB,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,GAAIF,EACA,OAAOA,EAAWoB,SAM9B,OAAO,KAGX,SAASC,EAAmBrU,GACxB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMxN,EAAO2K,IAAU9L,IAAIc,EAAK6N,KAAK9C,SACrC,GAAI1K,EACA,OAAOA,EAAKkX,aAGhB,MAEJ,IAAK,qBACD,OAAO,KAIf,OAAO,KAGX,SAASC,EAAWvU,GAChB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMwI,EAAWrL,IAAUsL,YAAYtW,EAAK6N,KAAK9C,SACjD,GAAIsL,EACA,OAAOA,EAASoB,IAGpB,MAEJ,IAAK,qBACD,IAAMpB,EAAWH,IAAgBI,YAAYtW,EAAK6N,KAAKsI,eACvD,GAAIE,EACA,OAAOA,EAASqB,YAO5B,OAAO,KAGX,SAASC,EAAc1U,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS+J,EAAY3U,GACjB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASgK,EAAc5U,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eAEjD,OAAOF,GAAcA,EAAWG,WAEpC,IAAK,qBACL,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS0B,EAAa7U,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOO,EAAWP,OAAOqC,UAKzC,IAAK,qBACD,IAAMxC,EAAaC,IAAgBtW,IAAIc,EAAK6N,KAAK4H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOH,EAAWG,OAAOqC,UAIrC,MAEJ,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASC,EAAa/U,GAAmD,IAA3CwT,EAA2C9Y,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAAhB2V,EAAgB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAZ,SAAA4V,GAAG,OAAIA,GAC1DvT,EAAO6O,IAAU3P,IAAI+D,GAC3B,OAAKjD,EAED0W,EAASzT,IAAWwT,EACbnD,EAAE,iBAGNtT,EAAK6W,OAASvD,EAAE,cANL,KAStB,SAASoD,EAASzT,GACd,IAEMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAHW,EAKtB,OAAQA,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,iBACL,IAAK,kBACD,OAAO7C,IAAUiN,YAAcjY,EAAK6N,KAAK9C,QAIjD,OAhBsB,EAmB1B,SAASmN,EAAoBjV,GACzB,IAAMkV,EAAgB,GAEhBnY,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAOmY,EAElB,OAAQnY,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwI,EAAWb,IAAgBc,YAAYtW,EAAK6N,KAAK4H,gBACvD,GAAIY,EACA,OAAOA,EAAS+B,SAAWD,EAcvC,OAAOA,EAGX,SAASE,EAAgBpV,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,kBAOL,IAAK,iBACD/P,IAAgBgJ,KAAK,CACjB/B,QAAS,kBACTgG,QAAS/K,EAAK6N,KAAK9C,UAEvB,MAEJ,IAAK,qBACDjN,IAAgBgJ,KAAK,CACjB/B,QAAS,wBACT0Q,eAAgBzV,EAAK6N,KAAK4H,iBAE9B,MAEJ,IAAK,qBACD3X,IAAgBgJ,KAAK,CACjB/B,QAAS,wBACToR,cAAenW,EAAK6N,KAAKsI,iBAOzC,SAASmC,EAAgBrV,EAAQsV,GAC7B,IAAMvY,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFyB,IAInC6N,EAAS7N,EAAT6N,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAK4H,iBAAmB8C,EAGrF,SAASC,EAAavV,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFQ,IAIlB6N,EAAS7N,EAAT6N,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,SAGxB,SAAS4K,EAAgBxV,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFW,IAIrB6N,EAAS7N,EAAT6N,KAER,OAAIA,GAA0B,uBAAlBA,EAAK,SACNA,EAAKsI,cAGT,EAGX,SAASuC,EAAgBzV,EAAQ0V,GAC7B,IAAM3Y,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFyB,IAInC6N,EAAS7N,EAAT6N,KAER,OAAO2K,EAAavV,IAAW4K,EAAKsI,gBAAkBwC,EAc1D,SAASxJ,EAAclM,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFS,IAInB6N,EAAS7N,EAAT6N,KAER,OAAOA,GAA2B,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,SAAgD,EAAfA,EAAK9C,QAGtG,SAAS6N,EAAiB3V,GACtB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAElB,GAAI2X,EAAc1U,GAAS,CACvB,IAAM5C,EAAO2K,IAAU9L,IAAIiQ,EAAclM,IACzC,GAAI5C,EACA,OAAOA,EAAKmP,cAIpB,OAAOxP,EAAKa,MAGhB,SAASgY,EAAa5V,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBtW,IAAIc,EAAK6N,KAAK4H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,QAAIH,EAAWG,OAAOoD,wBASlC,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAM7C,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAIO,EAAWG,WAMnB,IAAK,6BACD,QAAIH,EAAWP,OAAOoD,yBAW1C,OAAO,EAGX,SAASC,EAAkB9V,GAAmC,IAA3BwT,EAA2B9Y,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC1D,GAAI+Y,EAASzT,IAAWwT,EACpB,MAAO,iBAGX,IAAMzW,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBAGL,IAAK,qBACD,OAAO7N,EAAK6W,MAEhB,IAAK,kBACL,IAAK,iBACD,OAAO3D,YAAiBlT,EAAK6N,KAAK9C,SAI1C,OAAO,KAGX,SAASiO,EAAyB/V,GAC9B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBtW,IAAIc,EAAK6N,KAAK4H,gBACjD,OAAIF,EACOA,EAAWK,aAGf,EAEX,IAAK,qBACD,IAAMK,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,EACOA,EAAWL,aAGf,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASqD,EAAgBhW,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,IACQiD,QAAQjD,EAAWoB,UAKnC,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS8B,EAAclW,GACnB,OAAQyT,EAASzT,GAGrB,SAASmW,EAAcnW,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFS,IAInB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBAGL,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAI2O,EAAKsI,eAC5C,GAAIF,EAAY,KACJP,EAAWO,EAAXP,OACR,GAAIA,EACA,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAQO,EAAWG,WAEvB,IAAK,6BACD,OAAOV,EAAOoD,0BAQtC,OAAO,EAGX,SAASO,GAAiBpW,GACtB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFY,IAItB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBAGL,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAI2O,EAAKsI,eAC5C,GAAIF,EAAY,KACJP,EAAWO,EAAXP,OACR,GAAIA,EACA,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAQO,EAAWG,WAEvB,IAAK,6BACD,OAAOV,EAAOoD,0BAQtC,OAAO,EAGX,SAASQ,GAAarW,GAClB,OAAO,EAGX,SAASsW,GAAgBtW,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFW,IAIrB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBtW,IAAI2O,EAAK4H,gBAC5C,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,QAAIH,EAAWG,OAAO8D,kBASlC,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMvD,EAAaC,IAAgBhX,IAAI2O,EAAKsI,eAC5C,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAIO,EAAWG,WAMnB,IAAK,6BACD,QAAIH,EAAWP,OAAO8D,mBAW1C,OAAO,EAGX,SAASnE,GAAcpS,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAG3B,OAFcwW,GAAaxW,IAEW,IAAtBjD,EAAK6T,cAAoD,IAA9B7T,EAAK+T,qBAGpD,SAAS0F,GAAaxW,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAE3B,GAAIjD,EAAM,KACE6P,EAAkB7P,EAAlB6P,cACR,GAAIA,EAAe,KACP6J,EAAuB7J,EAAvB6J,mBACR,GAAIA,EACA,OAAOA,EAAmBC,MAKtC,OAAO,KAGX,SAASC,GAA6B3W,GAClC,IAAI4W,EAAmB,EACjB7Z,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAIjD,EAAM,KACE6P,EAAkB7P,EAAlB6P,cACJA,IACAgK,EAAmBhK,EAAcxC,qBAKzC,OADA1N,QAAQ4F,IAAI,eAAgBsU,GACrBA,EAtoCXC,EAAAC,EAAAC,EAAA,sBAAA3E,KAAAyE,EAAAC,EAAAC,EAAA,sBAAAP,KAAAK,EAAAC,EAAAC,EAAA,sBAAAJ,KAAAE,EAAAC,EAAAC,EAAA,sBAAAhJ,IAAA8I,EAAAC,EAAAC,EAAA,sBAAAvG,IAAAqG,EAAAC,EAAAC,EAAA,sBAAApG,IAAAkG,EAAAC,EAAAC,EAAA,sBAAAlG,IAAAgG,EAAAC,EAAAC,EAAA,sBAAAxD,IAAAsD,EAAAC,EAAAC,EAAA,sBAAA1E,IAAAwE,EAAAC,EAAAC,EAAA,sBAAA7G,IAAA2G,EAAAC,EAAAC,EAAA,sBAAA/G,IAAA6G,EAAAC,EAAAC,EAAA,sBAAAlH,IAAAgH,EAAAC,EAAAC,EAAA,sBAAA3G,IAAAyG,EAAAC,EAAAC,EAAA,sBAAA5E,IAAA0E,EAAAC,EAAAC,EAAA,sBAAAxF,IAAAsF,EAAAC,EAAAC,EAAA,sBAAApD,IAAAkD,EAAAC,EAAAC,EAAA,sBAAA7C,IAAA2C,EAAAC,EAAAC,EAAA,sBAAA/C,IAAA6C,EAAAC,EAAAC,EAAA,sBAAAhG,IAAA8F,EAAAC,EAAAC,EAAA,sBAAA5C,IAAA0C,EAAAC,EAAAC,EAAA,sBAAA1C,IAAAwC,EAAAC,EAAAC,EAAA,sBAAAxC,IAAAsC,EAAAC,EAAAC,EAAA,sBAAArC,IAAAmC,EAAAC,EAAAC,EAAA,sBAAApC,IAAAkC,EAAAC,EAAAC,EAAA,sBAAAnC,IAAAiC,EAAAC,EAAAC,EAAA,sBAAAlC,IAAAgC,EAAAC,EAAAC,EAAA,sBAAAhC,IAAA8B,EAAAC,EAAAC,EAAA,sBAAA9B,IAAA4B,EAAAC,EAAAC,EAAA,sBAAA3B,IAAAyB,EAAAC,EAAAC,EAAA,sBAAA1B,IAAAwB,EAAAC,EAAAC,EAAA,sBAAAtB,IAAAoB,EAAAC,EAAAC,EAAA,sBAAAxB,IAAAsB,EAAAC,EAAAC,EAAA,sBAAAvB,IAAAqB,EAAAC,EAAAC,EAAA,sBAAA7K,IAAA2K,EAAAC,EAAAC,EAAA,sBAAApB,IAAAkB,EAAAC,EAAAC,EAAA,sBAAAjB,IAAAe,EAAAC,EAAAC,EAAA,sBAAAhB,IAAAc,EAAAC,EAAAC,EAAA,sBAAAtD,IAAAoD,EAAAC,EAAAC,EAAA,sBAAAf,IAAAa,EAAAC,EAAAC,EAAA,sBAAAb,IAAAW,EAAAC,EAAAC,EAAA,sBAAAnB,IAAAiB,EAAAC,EAAAC,EAAA,sBAAAT,KAAAO,EAAAC,EAAAC,EAAA,sBAAAZ,IAAAU,EAAAC,EAAAC,EAAA,sBAAAX,KAAAS,EAAAC,EAAAC,EAAA,sBAAAV,gGGgPM1d,EAAQ,gBArOV,SAAA8N,IAAc,IAAA5N,EAAA,OAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAyN,IACV5N,EAAAC,OAAAme,EAAA,EAAAne,CAAAE,KAAAF,OAAAoe,EAAA,EAAApe,CAAA2N,GAAAtN,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAO2D,SAChBzE,EAAKuB,KAAK,mBAAoBT,GAC9B,MACJ,IAAK,uBACDd,EAAKuB,KAAK,uBAAwBT,GAClC,MACJ,IAAK,sBACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAOyF,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAOwd,YAC5B7Z,IACAA,EAAQ8Z,aAAezd,EAAOyd,aAC9B9Z,EAAQ+Z,UAAY1d,EAAO0d,WAGnCxe,EAAKuB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,qBACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAOyF,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAOwd,YAC5B7Z,GAAW3D,EAAO2d,MAAQha,EAAQga,QAClCha,EAAQga,MAAQ3d,EAAO2d,OAG/Bze,EAAKuB,KAAK,qBAAsBT,GAChC,MAEJ,IAAK,uBACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAOyF,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAOwd,YAC5B7Z,IACA3D,EAAO4d,YAAcja,EAAQC,QAC7BD,EAAQC,QAAU5D,EAAO6d,aAGjC3e,EAAKuB,KAAK,uBAAwBT,GAClC,MAEJ,IAAK,6BAA8B,IACvByF,EAAwBzF,EAAxByF,QAAS+X,EAAexd,EAAfwd,WAEX7Z,EAAUzE,EAAKoD,IAAImD,EAAS+X,GAClC,GAAI7Z,EAEA,OADoBA,EAAZC,QACQ,UACZ,IAAK,mBACDD,EAAQC,QAAQka,aAAc,EAC9B,MAEJ,IAAK,mBACDna,EAAQC,QAAQma,WAAY,EAMxC7e,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,6BACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAO2D,QAAQ8B,SAC3C,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAOge,gBAC5Bra,IACAA,EAAQsa,cAAgBje,EAAO2D,QAAQsa,eAEvCje,EAAOge,iBAAmBhe,EAAO2D,QAAQ5B,IACzC7C,EAAKoB,IAAIN,EAAO2D,SAIxBzE,EAAKoB,IAAIN,EAAO2D,SAChBzE,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,0BACGA,EAAO2D,QAAQsa,gBACfje,EAAO2D,QAAQsa,cAAcC,WAAale,EAAOke,WACjDle,EAAO2D,QAAQsa,cAAcE,cAAgBne,EAAOme,eAGxD,IAAM/a,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAO2D,QAAQ8B,SAC3C,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAOge,gBAC5Bra,IACAA,EAAQsa,cAAgBje,EAAO2D,QAAQsa,cACnCta,EAAQsa,gBACRta,EAAQsa,cAAcC,WAAale,EAAOke,WAC1Cva,EAAQsa,cAAcE,cAAgBne,EAAOme,gBAGjDne,EAAOge,iBAAmBhe,EAAO2D,QAAQ5B,IACzC7C,EAAKoB,IAAIN,EAAO2D,SAGxBzE,EAAKuB,KAAK,0BAA2BT,KA/GnCd,EAuHd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,iCACDd,EAAKuB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,8BACGA,EAAOoe,SACPlf,EAAKmf,cAAc/d,IAAnB,UAAA+J,OAAiCrK,EAAOqG,OAAxC,eAAAgE,OAA4DrK,EAAOsG,WAAa,CAC5ED,OAAQrG,EAAOqG,OACfC,UAAWtG,EAAOsG,YAGtBpH,EAAKmf,cAAc9b,OAAnB,UAAA8H,OAAoCrK,EAAOqG,OAA3C,eAAAgE,OAA+DrK,EAAOsG,YAG1EpH,EAAKuB,KAAK,8BAA+BT,GACzC,MAEJ,IAAK,6BACDd,EAAKmf,cAAcC,QAEnBpf,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,qBACGd,EAAKmf,cAAc/S,KAAO,IAC1BpM,EAAKmf,cAAcC,QAEnBpf,EAAKuB,KAAK,6BAA8B,CAAE0H,QAAS,gCAGvD,MAEJ,IAAK,oBACDjJ,EAAKuB,KAAK,oBAAqBT,GAC/B,MAEJ,IAAK,6BACDd,EAAKuB,KAAK,6BAA8BT,KA9JtCd,EAoKd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAtKvC9B,EAyKdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAxKpD9B,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKmf,cAAgB,IAAI9V,IAEzBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,oEA8KTmH,EAAQC,GAAW,IAAAuD,EAAAxK,KACpB6B,IAAgBgJ,KAAK,CACjB/B,QAAS,aACT1C,QAASY,EACTmX,WAAYlX,IAEXkE,KAAK,SAAA7G,GACFkG,EAAKvJ,IAAIqD,GACTkG,EAAKpJ,KAAK,mBAAoBkD,KAEjCoF,MAAM,SAAA/F,GACH,IAAMub,EAAiB,CACnBpW,QAAS,iBACT1C,QAASY,EACTtE,GAAIuE,EACJ1C,QAAS,MAEbiG,EAAKvJ,IAAIie,GACT1U,EAAKpJ,KAAK,mBAAoB8d,iCAItClY,EAAQC,GACR,IAAIlD,EAAO/D,KAAKgD,MAAMC,IAAI+D,GAC1B,IAAKjD,EAED,OAAO,KAGX,IAAIO,EAAUP,EAAKd,IAAIgE,GACvB,OAAK3C,GAEM,iCAMXA,GACA,IAAIP,EAAO/D,KAAKgD,MAAMC,IAAIqB,EAAQ8B,SAC7BrC,IACDA,EAAO,IAAImF,IACXlJ,KAAKgD,MAAM/B,IAAIqD,EAAQ8B,QAASrC,IAGpCA,EAAK9C,IAAIqD,EAAQ5B,GAAI4B,oCAGhBiJ,GACL,IAAK,IAAIzH,EAAI,EAAGA,EAAIyH,EAASvH,OAAQF,IACjC9F,KAAKiB,IAAIsM,EAASzH,WAjOHiG,iBAuO3BhC,OAAOzF,QAAU3E,EACFA,iMC1LAwf,2LAxCF,IAAAC,EAC0Bpf,KAAKqf,MAA5BxQ,EADHuQ,EACGvQ,QAASyQ,EADZF,EACYE,UACjB,IAAKzQ,EAAS,OAAO,KAFhB,IAIGC,EAAiDD,EAAjDC,QAASuH,EAAwCxH,EAAxCwH,WAAYkJ,EAA4B1Q,EAA5B0Q,UAAWjE,EAAiBzM,EAAjByM,aAElClX,EAAO2K,IAAU9L,IAAI6L,IAAY,CACnChG,QAAS,OACT8I,KAAM,CAAE9I,QAAS,mBACjBpG,GAAIoM,EACJuH,WAAYA,EACZkJ,UAAWA,GAGTC,EAAWzI,YAAgB3S,GAC3Bqb,EAASC,YAAkBpE,GAEjC,OACIqE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,WACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBACXD,EAAAnf,EAAAkM,cAACmT,EAAA,EAAD,CAAiB/T,OAAQgD,EAAS1K,KAAMA,KAE5Cub,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBACV9Q,EAAU,EAAI6Q,EAAAnf,EAAAkM,cAAA,KAAGoT,QAASR,GAAYE,GAAgBG,EAAAnf,EAAAkM,cAAA,YAAO8S,IAElEG,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBAAiBH,YA3B9BM,IAAMC,0GCUtBC,qNACF1I,WAAa,WAAM,IAAA6H,EACmDvf,EAAKwf,MAA/DrY,EADOoY,EACPpY,OAAQC,EADDmY,EACCnY,UAAWjC,EADZoa,EACYpa,KAAMiH,EADlBmT,EACkBnT,KAAMiU,EADxBd,EACwBc,YAAaZ,EADrCF,EACqCE,UACpD,IAAKta,EAAM,OAAO,KAFH,IAIPJ,EAAqBI,EAArBJ,MAAOJ,EAAcQ,EAAdR,UAEf,GAAIA,IACqB4P,YAAO5P,EAAUA,YAClBA,EAAUiC,WAC1B,OAAOkZ,EAAAnf,EAAAkM,cAACyT,EAAA,EAAD,CAAWnZ,OAAQA,EAAQC,UAAWA,EAAWzC,UAAWA,EAAW8a,UAAWA,IAIjG,GAAI1a,EAAO,CACP,IAAI+H,EAAQ,CACR6C,MAAO,EACPE,OAAQ,GAENzJ,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EAAW,CACX,IAAMma,EAAeC,YAAWpa,EAAWia,GACvCE,IACAzT,EAAM6C,MAAQ4Q,EAAa5Q,MAC3B7C,EAAM+C,OAAS0Q,EAAa1Q,QAIpC,OAAOiQ,EAAAnf,EAAAkM,cAAC4T,EAAA,EAAD,CAAOtZ,OAAQA,EAAQC,UAAWA,EAAWrC,MAAOA,EAAO+H,MAAOA,EAAO2S,UAAWA,IAG/F,OAAO,8EAGF,IAAAiB,EACqBvgB,KAAKqf,MAAvBmB,EADHD,EACGC,QAASxb,EADZub,EACYvb,KACjB,IAAKA,EAAM,OAAO,KAFb,IAIG4V,EAA6B5V,EAA7B4V,MAAO8C,EAAsB1Y,EAAtB0Y,KAAMjC,EAAgBzW,EAAhByW,YACfgF,EAAgBC,GAAiBhD,GAEvC,OACIiC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,QACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,cAAeH,EAAQI,yBAClDjB,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBACVhF,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,aAAcH,EAAQK,kBAAmBjG,GAC7E6F,GAAiBd,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,aAAaa,GAC7ChF,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBAAoBnE,GAClDzb,KAAKuX,sBAhDPwI,IAAMC,YAiEzBC,EAAKa,aAAe,CAChB7U,KAAMgG,IACNiO,YAAaa,KAGFC,UA1EA,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,GACbqhB,YAAaF,KAyELD,CAAmBf,qBC3BnBmB,qNA5CXC,2BAA6B,SAAA1gB,GAAU,IAC3BoH,EAAWpH,EAAXoH,OAGFnB,EAAaC,GAFEhH,EAAKwf,MAAlBna,UAGFhE,EAAOtB,IAAUkH,gBAAgBF,GAClC1F,GAEDA,EAAKwB,KAAOqF,GACZlI,EAAKyhB,kGAhBT1hB,IAAU2hB,GAAG,2BAA4BvhB,KAAKqhB,2EAI9CzhB,IAAUoC,eAAe,2BAA4BhC,KAAKqhB,6DAgBrD,IACGnc,EAAalF,KAAKqf,MAAlBna,SACR,IAAKA,EAAU,OAAO,KAEtB,IAAM0B,EAAaC,GAAc3B,GAC3BhE,EAAOtB,IAAUkH,gBAAgBF,GACjC4a,EAAMpN,YAAOlT,GAEXugB,EAAwBvc,EAAxBuc,UAAWC,EAAaxc,EAAbwc,SACbxb,EAAM,8BAAA8E,OAAiC0W,EAAjC,KAAA1W,OAA6CyW,GAEzD,OACI9B,EAAAnf,EAAAkM,cAAA,KAAGG,KAAM3G,EAAQoF,OAAO,SAASqW,IAAI,uBACjChC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBAAiBgC,WAAW,EAAOC,IAAK3b,EAAQsb,IAAKA,IACpE7B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBACXD,EAAAnf,EAAAkM,cAACoV,EAAAthB,EAAD,CAAUuhB,SAAS,QAAQC,MAAM,sBAtClCjC,IAAMC,sSCgBvBiC,4LACO,IAAA7C,EACsDpf,KAAKqf,MAAxDmB,EADHpB,EACGoB,QAAS0B,EADZ9C,EACY8C,OAAQC,EADpB/C,EACoB+C,YAAaC,EADjChD,EACiCgD,OAAQC,EADzCjD,EACyCiD,SAE9C,OACI1C,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,aAAc,CAAE2B,oBAAqBF,KAC5DzC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CACIggB,QAAS,CAAEgC,KAAMhC,EAAQiC,WACzBT,MAAM,UACNU,QAASR,GAAUC,EACnBE,SAAUA,EACVM,YAAahD,EAAAnf,EAAAkM,cAACkW,GAAApiB,EAAD,CAAwBggB,QAAS,CAAEgC,KAAML,EAAc3B,EAAQqC,KAAO,UAEtFV,GAAexC,EAAAnf,EAAAkM,cAACoW,GAAAtiB,EAAD,CAAkByL,KAAM,GAAI8W,UAAW,IAAKvC,QAAS,CAAEgC,KAAMhC,EAAQwC,wBAb7EjD,IAAMC,YAyBfgB,OAxCA,CACXgC,aAAc,CACVC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,cAAe,QAEnBX,UAAW,CACPY,QAAS,GAEbR,KAAM,CACFb,MAAO,gBA6BAhB,CAAmBiB,ICsEnBqB,uBAhHX,SAAAA,EAAYjE,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAsjB,IACfzjB,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAwjB,GAAAnjB,KAAAH,KAAMqf,KA0DVqE,gBAAkB,WACd7jB,EAAK8jB,gBAEL9jB,EAAK+jB,OAASC,sBAAsBhkB,EAAKikB,mBA9D1BjkB,EAiEnB8jB,cAAgB,WACP9jB,EAAK+jB,SAEVG,qBAAqBlkB,EAAK+jB,QAC1B/jB,EAAK+jB,OAAS,OArEC/jB,EAwEnBikB,iBAAmB,WAAM,IAAAE,EACWnkB,EAAKokB,MAA7BC,EADaF,EACbE,UAAWC,EADEH,EACFG,KAAMC,EADJJ,EACII,GAEnBC,EAAa5L,KAAKI,MAAQqL,EAEhC,GAAIG,GAAcC,IACdzkB,EAAK0kB,SAAS,CAAEC,SAAUJ,IAC1BvkB,EAAK8jB,oBACF,CACH,IAAMa,EAAWL,EAAOM,KAAKC,OAAQN,EAAKD,GAAQE,EAAcC,KAChEzkB,EAAK0kB,SAAS,CAAEC,aAChB3kB,EAAK+jB,OAASC,sBAAsBhkB,EAAKikB,oBAhF7CjkB,EAAK+jB,OAAS,KAHC,IAKPtO,EAAU+J,EAAV/J,MALO,OAOfzV,EAAKokB,MAAQ,CACTE,KAAM7O,EACN8O,GAAI9O,EACJkP,SAAUlP,EAEVqP,eAAgBrP,GAZLzV,qFAgBG+kB,EAAWC,EAAWC,GAAa,IAAA1F,EAC3Bpf,KAAKqf,MAAvB0F,EAD6C3F,EAC7C2F,OAAQzP,EADqC8J,EACrC9J,MACRkP,EAAaxkB,KAAKikB,MAAlBO,SAER,OAAIO,IAAWH,EAAUG,SAIrBzP,IAAUsP,EAAUtP,OAIpBkP,IAAaK,EAAUL,qDAqBZQ,EAAWC,EAAWC,GACjCF,EAAU1P,QAAUtV,KAAKqf,MAAM/J,OAC/BtV,KAAK0jB,iEAKT1jB,KAAK2jB,iDA+BA,IAAApD,EAC+BvgB,KAAKqf,MAAjC6C,EADH3B,EACG2B,OAAQ6C,EADXxE,EACWwE,OAAQjF,EADnBS,EACmBT,QAChB0E,EAAaxkB,KAAKikB,MAAlBO,SAER,OACI7E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,kBAAmB,CAAEwE,4BAA6BjD,MACvE6C,GAAU7C,EACRvC,EAAAnf,EAAAkM,cAAA,KAAGkT,UAAU,yBAAyBE,QAASA,GAC1C0E,EAAW,KAGhB7E,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KAAGZ,EAAW,yDA/DEnF,EAAO4E,GACnC,OAAI5E,EAAM/J,QAAU2O,EAAMU,eACf,CACHT,UAAWzL,KAAKI,MAChBsL,KAAMF,EAAMO,SACZJ,GAAI/E,EAAM/J,MAEVqP,eAAgBtF,EAAM/J,OAIvB,YA/CcyK,IAAMC,YCqB7BqF,sNACFC,eAAiB,SAAC5L,GAA0B,IAAnBrC,EAAmB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAf,SAAA4V,GAAG,OAAIA,GAEhC,OAD0BzX,EAAKwf,MAAvBkG,cACkB,KAErB7L,EACS,IAAVA,EAAoB,SAEjBA,EAAQ,SAHIrC,EAAE,WAAWlD,iBAMpCqR,YAAc,SAAAna,GAAS,IAAA+T,EACevf,EAAKwf,MAA/BkG,EADWnG,EACXmG,cAAeE,EADJrG,EACIqG,OAClBF,IAELla,EAAMqa,kBAEND,QAGJE,aAAe,SAAAta,GAAS,IACZua,EAAa/lB,EAAKwf,MAAlBuG,SAERva,EAAMqa,kBAENE,6EAGK,IAAArF,EAC0EvgB,KAAKqf,MAA5EmB,EADHD,EACGC,QAASqF,EADZtF,EACYsF,OAAQxD,EADpB9B,EACoB8B,SAAUkD,EAD9BhF,EAC8BgF,cAAeR,EAD7CxE,EAC6CwE,OAAQe,EADrDvF,EACqDuF,cAAezO,EADpEkJ,EACoElJ,EACzE,IAAKwO,EAAQ,OAAO,KAFf,IAIGnI,EAAmEmI,EAAnEnI,KAAMqI,EAA6DF,EAA7DE,YAAaC,EAAgDH,EAAhDG,gBAAiBC,EAA+BJ,EAA/BI,UAAWC,EAAoBL,EAApBK,gBAEnD5Q,EAAQ,IAKZ,OAJIyQ,IACAzQ,EAASyQ,EAAcD,EAAiB,KAIxCnG,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,cAAcE,QAAS9f,KAAKwlB,aACvC7F,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IACP,sBACA4E,EAAgB,yBAA2B,yBAE/C5F,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,2BAA2BhF,MAAO5a,KAAKslB,eAAeS,EAAa1O,IAC9EsI,EAAAnf,EAAAkM,cAACyZ,GAAD,CACI7Q,MAAO0Q,EACP9D,OAAQ+D,EACRlB,OAAQA,EACRjF,QAAS9f,KAAK2lB,eAElBhG,EAAAnf,EAAAkM,cAAC0Z,GAAD,CACIhE,QAASmD,EACTrD,OAAQ+D,EACR9D,YAAa+D,EACb7D,SAAUA,IAEd1C,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBAAoBlC,KAG3CiC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,4BAAD7gB,OAAAumB,GAAA,EAAAvmB,CAAA,GAAiC0gB,EAAQ8F,YAAcf,MACjF5F,EAAAnf,EAAAkM,cAAC6Z,GAAA/lB,EAAD,CACIggB,QAAS,CAAEgC,KAAMhC,EAAQwC,aAAcwD,IAAKhG,EAAQiG,aACpDzE,MAAM,UACN0E,QAAQ,cACRpR,MAAOiQ,EAAgB,EAAId,KAAKkC,IAAI,IAAKrR,aAnEpCyK,IAAMC,YAwFhB4G,GALCC,aACZ7F,IAnGW,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChBkjB,aAAc,CACV8D,gBAAiB,cACjBC,OAAQ,eACR9D,SAAU,WACVE,KAAM,EACN6D,MAAO,EACPC,OAAQ,GAEZR,YAAa,CACTS,WAAY,yBAEbC,YAAYlG,KAuFI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQvB,0BClGjBiC,sNACFrD,MAAQ,CACJsD,QAAQ,EACRC,aAAa,EACbrE,KAAM,EACND,IAAK,KAGTuE,yBAA2B,SAAC/N,GAA0B,IAAnBrC,EAAmB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAf,SAAA4V,GAAG,OAAIA,GAC1C,OAAKoC,EACS,IAAVA,EAAoB,SAEjBA,EAAQ,SAHIrC,EAAE,cAMzBqQ,WAAa,SAAAnV,GAAS,IAAA6M,EACYvf,EAAKwf,OC/BpC,SAAuBrY,EAAQC,EAAW0gB,GAC7C9lB,KAAgBgJ,KAAK,CACjB/B,QAAS,gBACT1C,QAASY,EACTmX,WAAYlX,EACZ2gB,WAAYD,ID4BZE,CAHkBzI,EACVpY,OADUoY,EACFnY,UAEiB,CAACsL,OAGtCuV,aAAe,SAAAzc,GACPA,GACAA,EAAMqa,kBAFU,IAAAnF,EAKgB1gB,EAAKwf,MAAjCrY,EALYuZ,EAKZvZ,OAAQC,EALIsZ,EAKJtZ,UAAW8gB,EALPxH,EAKOwH,KACHloB,EAAKokB,MAArBuD,aAGJ3nB,EAAKmoB,yBAGaD,EAAdE,WCvCT,SAA0BjhB,EAAQC,GACrCpF,KAAgBgJ,KAAK,CACjB/B,QAAS,gBACT1C,QAASY,EACTmX,WAAYlX,EACZ2gB,WAAY,KDqCZM,CAAiBlhB,EAAQC,MAG7BkhB,eAAiB,SAAA9c,GACbA,EAAMqa,kBADgB,IAAA0C,EAGQvoB,EAAKwf,MAA3BrY,EAHcohB,EAGdphB,OAAQC,EAHMmhB,EAGNnhB,UACGpH,EAAKokB,MAAhBsD,QAGJ1nB,EAAK0kB,SAAS,CAAEgD,QAAQ,IC3C7B,SAAkBvgB,EAAQC,GAC7BpF,KAAgBgJ,KAAK,CACjB/B,QAAS,WACT1C,QAASY,EACTmX,WAAYlX,EACZmX,aAAc,ODyCdiK,CAASrhB,EAAQC,MAGrBqhB,aAAe,SAAAjd,GACQxL,EAAKokB,MAAhBsD,QAGR1nB,EAAK0kB,SAAS,CACVgD,QAAQ,EACRC,aAAa,OAIrBe,kBAAoB,SAAAld,GACZA,GACAA,EAAMqa,kBAGV7lB,EAAK0kB,SAAS,CAAEgD,QAAQ,OAG5BiB,kBAAoB,SAAAnd,GACCxL,EAAKwf,MAAd0I,KACAE,YAGJ5c,IACAA,EAAMod,iBACNpd,EAAMqa,mBAGc7lB,EAAKokB,MAArBuD,YAGJ3nB,EAAK0kB,SAAS,CAAEiD,aAAa,IAE7B3nB,EAAK0kB,SAAS,CACViD,aAAa,EACbrE,KAAM9X,EAAMqd,QACZxF,IAAK7X,EAAMsd,cAKvBX,uBAAyB,SAAA3c,GACjBA,GACAA,EAAMqa,kBAGV7lB,EAAK0kB,SAAS,CAAEiD,aAAa,6EAGxB,IAAAhd,EAAAxK,KAAA4oB,EACkC5oB,KAAKqf,MAApCrY,EADH4hB,EACG5hB,OAAQC,EADX2hB,EACW3hB,UAAW8gB,EADtBa,EACsBb,KAAM1Q,EAD5BuR,EAC4BvR,EAD5B2M,EAEsChkB,KAAKikB,MAAxCd,EAFHa,EAEGb,KAAMD,EAFTc,EAESd,IAAKsE,EAFdxD,EAEcwD,YAAaD,EAF3BvD,EAE2BuD,OACxBsB,EAAoDd,EAApDc,SAAUC,EAA0Cf,EAA1Ce,QAASC,EAAiChB,EAAjCgB,kBAAmBd,EAAcF,EAAdE,UAExC3jB,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAErB,IAAM0kB,GAAaf,GAAaa,EAAQtd,KAAK,SAAAC,GAAC,OAAIA,EAAEwa,WAAaxa,EAAEya,kBAC7D+C,EAAc3kB,GAAWA,EAAQ4kB,cACjC3D,GAAiB0C,GAAaa,EAAQK,MAAM,SAAA1d,GAAC,OAAKA,EAAEwa,YACpDH,EAAgBrB,KAAKkC,IAALllB,MAAAgjB,KAAI3kB,OAAAspB,EAAA,EAAAtpB,CAAQgpB,EAAQtb,IAAI,SAAA/B,GAAC,OAAIA,EAAEsa,gBAErD,OACIpG,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,OAAOyJ,cAAerpB,KAAKwoB,mBACtC7I,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBACXD,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,uBAAuBiJ,GACvClJ,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,YAAwBvI,EAAZ4Q,EAAc,eAAoB,mBAElEtI,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBACVkJ,EAAQtb,IAAI,SAAC/B,EAAG8G,GAAJ,OACToN,EAAAnf,EAAAkM,cAAC4c,GAAD,CACIhS,IAAK/E,EACLsT,OAAQpa,EACR8Z,cAAeA,EACfR,OAAQkD,EACRnC,cAAeA,EACfL,OAAQ,kBAAMjb,EAAKkd,WAAWnV,IAC9BqT,SAAUpb,EAAKsd,kBAI3BnI,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,6BAA6B5f,KAAKynB,yBAAyBsB,EAAmB1R,IAC7FsI,EAAAnf,EAAAkM,cAAC6c,EAAA/oB,EAAD,CACIyJ,KAAMud,IAAgBwB,GAAaC,GACnCO,QAASxpB,KAAKgoB,uBACdyB,gBAAgB,iBAChBC,eAAgB,CAAExG,MAAKC,QACvBwG,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBlK,EAAAnf,EAAAkM,cAACqd,EAAAvpB,EAAD,CAAUsf,QAAS,SAAAkK,GAAC,OAAIA,EAAEtE,oBACrBsD,GAAarJ,EAAAnf,EAAAkM,cAACud,EAAAzpB,EAAD,CAAUsf,QAAS9f,KAAK8nB,cAAezQ,EAAE,WACtD4R,GAAetJ,EAAAnf,EAAAkM,cAACud,EAAAzpB,EAAD,CAAUsf,QAAS9f,KAAKsoB,cAAejR,EAAE,eAGjEsI,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACI2pB,mBAAoB,EACpBlgB,KAAMsd,EACNiC,QAASxpB,KAAKuoB,kBACd6B,kBAAgB,qBAChBzK,EAAAnf,EAAAkM,cAAC2d,GAAA7pB,EAAD,CAAakC,GAAG,qBAAqB2U,EAAE,uBACvCsI,EAAAnf,EAAAkM,cAAC4d,EAAA9pB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC6d,GAAA/pB,EAAD,KAAoB6W,EAAE,uBAE1BsI,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAKuoB,kBAAmBvG,MAAM,WAC1C3K,EAAE,WAEPsI,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAKmoB,eAAgBnG,MAAM,WACvC3K,EAAE,mBAtKZ0I,IAAMC,YAsLVqH,iBAAkBC,cElKlBoD,4LA/BF,IAAAtL,EAC2Cpf,KAAKqf,MAA7CrY,EADHoY,EACGpY,OAAQC,EADXmY,EACWnY,UAAWrB,EADtBwZ,EACsBxZ,MAAO0Z,EAD7BF,EAC6BE,UAClC,IAAK1Z,EAAO,OAAO,KAFd,IAIGgV,EAA6BhV,EAA7BgV,MAAO+P,EAAsB/kB,EAAtB+kB,QAASzlB,EAAaU,EAAbV,SACxB,IAAKA,EAAU,OAAO,KALjB,IAOGuc,EAAwBvc,EAAxBuc,UAAWC,EAAaxc,EAAbwc,SACbxb,EAAM,8BAAA8E,OAAiC0W,EAAjC,KAAA1W,OAA6CyW,GAEzD,OACI9B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,SACXD,EAAAnf,EAAAkM,cAACke,EAAD,CAAU5jB,OAAQA,EAAQC,UAAWA,EAAW/B,SAAUA,EAAUoa,UAAWA,IAC/EK,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBACXD,EAAAnf,EAAAkM,cAAA,KAAGG,KAAM3G,EAAQoF,OAAO,SAASqW,IAAI,uBACjChC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,eAAehF,IAElC+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkB+K,YAlBjC5K,IAAMC,qGCsD1B,SAAS6K,GAASvmB,GACd,IAAKA,EAAS,OAAO,KADE,IAGf6M,EAA4B7M,EAA5B6M,eAAgB/K,EAAY9B,EAAZ8B,QAExB,GAAI+K,EAAgB,CAChB,IAAM/M,EAAO2K,IAAU9L,IAAIkO,GAC3B,GAAI/M,EACA,OAAO2S,YAAgB3S,GAI/B,GAAIgC,EAAS,CACT,IAAMrC,EAAO6O,KAAU3P,IAAImD,GAC3B,GAAIrC,EACA,OAAOA,EAAK6W,MAIpB,OAAO,KAGX,SAASkQ,GAAUpN,EAAMqN,EAAOC,GAM5B,OALID,EAAQ,IAAGA,EAAQ,GACnBA,EAAQrN,EAAK1X,OAAS,IAAG+kB,EAAQrN,EAAK1X,OAAS,GAC/CglB,EAAMD,IAAOC,EAAMD,GACnBC,EAAMtN,EAAK1X,SAAQglB,EAAMtN,EAAK1X,QAE3B0X,EAAKoN,UAAUC,EAAOC,GAGjC,SAAStF,GAAgBra,GACrBA,EAAMqa,kBAGV,SAAShF,GAAiBhD,GACtB,GAAsB,kBAAlBA,EAAK,SAA8B,OAAO,KAC9C,IAAKA,EAAKA,KAAM,OAAO,KACvB,IAAKA,EAAKuN,SAAU,OAAOvN,EAAKA,KAIhC,IAFA,IAAIvT,EAAS,GACToI,EAAQ,EACHzM,EAAI,EAAGA,EAAI4X,EAAKuN,SAASjlB,OAAQF,IAAK,CAC3C,IAAIolB,EAAmBJ,GAAUpN,EAAKA,KAAMnL,EAAOmL,EAAKuN,SAASnlB,GAAGqlB,QAChED,GACA/gB,EAAOX,KAAK0hB,GAGhB,IAAIE,EAAaN,GACbpN,EAAKA,KACLA,EAAKuN,SAASnlB,GAAGqlB,OACjBzN,EAAKuN,SAASnlB,GAAGqlB,OAASzN,EAAKuN,SAASnlB,GAAGE,QAE/C,OAAQ0X,EAAKuN,SAASnlB,GAAG8L,KAAK,UAC1B,IAAK,oBACD,IAAInJ,EAAM2iB,EAAWC,WAAW,QAAUD,EAAa,UAAYA,EAC/DE,OAAU,EACd,IACIA,EAAaC,UAAUH,GACzB,MAAOznB,GACLD,QAAQC,MAAM,QAAUynB,EAAa,KAAOznB,GAC5C2nB,EAAaF,EAGjBjhB,EAAOX,KACHmW,EAAAnf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,OACtBrL,QAAS4F,GACT7Y,KAAMpE,EACNmS,MAAOnS,EACP6C,OAAO,SACPqW,IAAI,uBACH2J,IAGT,MAEJ,IAAK,wBACD,IAAI7iB,EAAMiV,EAAKuN,SAASnlB,GAAG8L,KAAKnJ,IAAI4iB,WAAW,QACzC3N,EAAKuN,SAASnlB,GAAG8L,KAAKnJ,IACtB,UAAYiV,EAAKuN,SAASnlB,GAAG8L,KAAKnJ,IACxC0B,EAAOX,KACHmW,EAAAnf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,OACtBrL,QAAS4F,GACT7Y,KAAMpE,EACNmS,MAAOnS,EACP6C,OAAO,SACPqW,IAAI,uBACHyJ,IAGT,MAEJ,IAAK,qBACDjhB,EAAOX,KAAKmW,EAAAnf,EAAAkM,cAAA,UAAQ4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,QAASC,IACnD,MACJ,IAAK,uBACDjhB,EAAOX,KAAKmW,EAAAnf,EAAAkM,cAAA,MAAI4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,QAASC,IAC/C,MACJ,IAAK,qBACDjhB,EAAOX,KAAKmW,EAAAnf,EAAAkM,cAAA,QAAM4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,QAASC,IACjD,MACJ,IAAK,oBACDjhB,EAAOX,KACHmW,EAAAnf,EAAAkM,cAAA,OAAK4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,QACvBxL,EAAAnf,EAAAkM,cAAA,YAAO0e,KAGf,MACJ,IAAK,wBACDjhB,EAAOX,KACHmW,EAAAnf,EAAAkM,cAAA,KAAG4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,OAAQrL,QAAS4F,GAAiB7Y,KAAI,UAAA7B,OAAYogB,IACtEA,IAGT,MACJ,IAAK,4BACDjhB,EAAOX,KACHmW,EAAAnf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,OACtBrL,QAAS4F,GACT7Y,KAAI,WAAA7B,OAAa0S,EAAKuN,SAASnlB,GAAG8L,KAAK9C,UACtCsc,IAGT,MACJ,IAAK,wBACD,IAAII,EAAUJ,EAAWplB,OAAS,GAAuB,MAAlBolB,EAAW,GAAaN,GAAUM,EAAY,GAAKA,EAC1FjhB,EAAOX,KACHmW,EAAAnf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,OACtBrL,QAAS4F,GACT7Y,KAAI,+BAAA7B,OAAiCwgB,IACpCJ,IAGT,MACJ,IAAK,6BACDjhB,EAAOX,KACHmW,EAAAnf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,OACtBrL,QAAS4F,GACT7Y,KAAI,UAAA7B,OAAYogB,GAChB9f,OAAO,SACPqW,IAAI,uBACHyJ,IAGT,MACJ,IAAK,2BACD,IAAIK,EAAUL,EAAWplB,OAAS,GAAuB,MAAlBolB,EAAW,GAAaN,GAAUM,EAAY,GAAKA,EAC1FjhB,EAAOX,KACHmW,EAAAnf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKuN,SAASnlB,GAAGqlB,OACtBrL,QAAS4F,GACT7Y,KAAI,4BAAA7B,OAA8BygB,EAA9B,UACHL,IAGT,MACJ,QACIjhB,EAAOX,KAAK4hB,GAIpB7Y,GAAS2Y,EAAiBllB,OAASolB,EAAWplB,OAGlD,GAAIuM,EAAQmL,EAAKA,KAAK1X,OAAQ,CAC1B,IAAI0lB,EAAkBhO,EAAKA,KAAKoN,UAAUvY,GACtCmZ,GACAvhB,EAAOX,KAAKkiB,GAIpB,OAAOvhB,EAGX,SAASwhB,GAAQrnB,GACb,IAAKA,EAAS,OAAO,KAErB,IAAIoZ,EAAO,GAEHnZ,EAAYD,EAAZC,QAER,GACIA,GACqB,gBAArBA,EAAQ,UACRA,EAAQmZ,MACkB,kBAA1BnZ,EAAQmZ,KAAK,UACbnZ,EAAQmZ,KAAKA,KAEbA,EAAOgD,GAAiBnc,EAAQmZ,WAGhC,GAAInZ,GAAWA,EAAQqnB,SAAwC,kBAA7BrnB,EAAQqnB,QAAQ,UAAgCrnB,EAAQqnB,QAAQlO,KAAM,CACpGA,EAAKlU,KAAK,MACV,IAAIiX,EAAgBC,GAAiBnc,EAAQqnB,SACzCnL,IACA/C,EAAOA,EAAK1S,OAAOyV,IAK/B,OAAO/C,EAGX,SAASmO,GAAWvnB,GAChB,OAAKA,GACAA,EAAQC,QAEND,EAAQC,QAAQc,SAHF,KAMzB,SAAS4T,GAAQ3U,GACb,IAAKA,EAAS,OAAO,KACrB,IAAKA,EAAQkU,KAAM,OAAO,KAE1B,IAAIA,EAAO,IAAIC,KAAoB,IAAfnU,EAAQkU,MAE5B,OAAOI,IAAWJ,EAAM,QAG5B,SAASsT,GAAYxnB,GACjB,IAAKA,EAAS,OAAO,KACrB,IAAKA,EAAQkU,KAAM,OAAO,KAE1B,IAAMA,EAAO,IAAIC,KAAoB,IAAfnU,EAAQkU,MAC9B,OAAOI,IAAWJ,EAAM,qBAG5B,SAASuT,GAASznB,EAASgb,GACvB,IAAKhb,EAAS,OAAO,KADa,IAG1B8B,EAAyB9B,EAAzB8B,QAAS1D,EAAgB4B,EAAhB5B,GAAI6B,EAAYD,EAAZC,QACrB,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAOob,EAAAnf,EAAAkM,cAACyT,EAAA,EAAD,CAAWnZ,OAAQZ,EAASa,UAAWvE,EAAI8B,UAAWD,EAAQC,UAAW8a,UAAWA,IAC/F,IAAK,eACD,OAAOK,EAAAnf,EAAAkM,cAACsf,EAAA,EAAD,CAAOhlB,OAAQZ,EAASa,UAAWvE,EAAIgC,MAAOH,EAAQG,MAAO4a,UAAWA,IACnF,IAAK,iBACD,OAAOK,EAAAnf,EAAAkM,cAACuf,EAAD,CAASjlB,OAAQZ,EAASa,UAAWvE,EAAImM,QAAStK,EAAQsK,QAASyQ,UAAWA,IACzF,IAAK,kBACD,OAAOK,EAAAnf,EAAAkM,cAACwf,EAAA,EAAD,CAAUllB,OAAQZ,EAASa,UAAWvE,EAAIoC,SAAUP,EAAQO,SAAUwa,UAAWA,IAC5F,IAAK,cACD,OAAOK,EAAAnf,EAAAkM,cAACyf,EAAD,CAAMnlB,OAAQZ,EAASa,UAAWvE,EAAIsC,KAAMT,EAAQS,KAAMsa,UAAWA,IAChF,IAAK,kBACD,OAAOK,EAAAnf,EAAAkM,cAACke,EAAD,CAAU5jB,OAAQZ,EAASa,UAAWvE,EAAIwC,SAAUX,EAAQW,SAAUoa,UAAWA,IAC5F,IAAK,eACD,OAAOK,EAAAnf,EAAAkM,cAAC4T,EAAA,EAAD,CAAOtZ,OAAQZ,EAASa,UAAWvE,EAAIkC,MAAOL,EAAQK,MAAO0a,UAAWA,IACnF,IAAK,cACD,OAAOK,EAAAnf,EAAAkM,cAAC0f,GAAD,CAAMplB,OAAQZ,EAASa,UAAWvE,EAAIqlB,KAAMxjB,EAAQwjB,KAAMzI,UAAWA,IAChF,IAAK,iBACD,OAAOK,EAAAnf,EAAAkM,cAAC2f,GAAA,EAAD,CAASrlB,OAAQZ,EAASa,UAAWvE,EAAI0C,QAASb,EAAQa,QAASka,UAAWA,IACzF,IAAK,cACD,OAAO,KACX,IAAK,eACD,OAAOK,EAAAnf,EAAAkM,cAAC4f,GAAD,CAAOtlB,OAAQZ,EAASa,UAAWvE,EAAIkD,MAAOrB,EAAQqB,MAAO0Z,UAAWA,IACnF,IAAK,eACD,OAAOK,EAAAnf,EAAAkM,cAAC6f,GAAA,EAAD,CAAOvlB,OAAQZ,EAASa,UAAWvE,EAAI4C,MAAOf,EAAQe,MAAOga,UAAWA,IACnF,IAAK,mBACD,OAAOK,EAAAnf,EAAAkM,cAAC8f,GAAA,EAAD,CAAWxlB,OAAQZ,EAASa,UAAWvE,EAAI6E,UAAWhD,EAAQgB,WAAY+Z,UAAWA,IAChG,IAAK,mBACD,OAAOK,EAAAnf,EAAAkM,cAAC+f,GAAA,EAAD,CAAWzlB,OAAQZ,EAASa,UAAWvE,EAAI0E,UAAW7C,EAAQiB,WAAY8Z,UAAWA,IAChG,QACI,MAAO,IAAM/a,EAAQ,SAAW,KAI5C,SAASmoB,GAAsBC,GAC3B,IAAKA,EAAa,OAAO,EADe,IAGhCC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,OAAO,EAEpB,OAAQA,EAAO,UACX,IAAK,2BACD,OAAO,EAEX,IAAK,iCACD,OAAO,EAEX,IAAK,8BACD,OAAO,EAIf,OAAO,EAGX,SAASC,GAAgBF,GAA6B,IAAhBtV,EAAgB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAZ,SAAA4V,GAAG,OAAIA,GAC7C,IAAKqV,EAAa,MAAO,GADyB,IAG1CC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,MAAO,GAEpB,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBzb,EAAmByb,EAAnBzb,eAEF/M,EAAO2K,IAAU9L,IAAIkO,GAC3B,OAAO4F,YAAgB3S,GAE3B,IAAK,iCAGD,OAFwBwoB,EAAhBE,YAIZ,IAAK,8BAA+B,IACxB1mB,EAA8BwmB,EAA9BxmB,QAAS2mB,EAAqBH,EAArBG,iBAEjB,OAAOhR,aAAa3V,GAAS,EAAOiR,IAAM0V,EAAgB,KAAA/hB,OAAQ+hB,EAAR,KAA8B,IAIhG,MAAO,GAGX,SAASC,GAAU1oB,GACf,IAAKA,EAAS,OAAO,EACrB,IAAKA,EAAQ8B,QAAS,OAAO,EAC7B,IAAK9B,EAAQmT,YAAa,OAAO,EAEjC,IAAI1T,EAAO6O,KAAU3P,IAAIqB,EAAQ8B,SACjC,QAAKrC,GAEEA,EAAK2T,4BAA8BpT,EAAQ5B,GAGtD,SAASuqB,GAAgB3oB,GACrB,OAAKA,EAEEA,EAAQ6M,eAFM,KAKzB,SAAS+b,GAAe/iB,EAAQqI,GAC5B,GAA+B,IAA3BrI,EAAOoD,SAASvH,QACG,IAAnBwM,EAAQxM,OAAZ,CAEA,IAAMwH,EAAMgF,EAAQ2a,OAAO,SAASC,EAAaC,GAE7C,OADAD,EAAYnsB,IAAIosB,EAAQ3qB,GAAI2qB,EAAQ3qB,IAC7B0qB,GACR,IAAIlkB,KAEPiB,EAAOoD,SAAWpD,EAAOoD,SAAS7B,OAAO,SAAAD,GAAC,OAAK+B,EAAI1K,IAAI2I,EAAE/I,OAG7D,SAAS6U,GAAWjT,GAAyB,IAAhB+S,EAAgB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAZ,SAAA4V,GAAG,OAAIA,GACpC,IAAKhT,EAAS,OAAO,KADoB,IAGjCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,IAAIqnB,EAAU,GAKd,GAJIrnB,EAAQqnB,SAAWrnB,EAAQqnB,QAAQlO,OACnCkO,EAAO,KAAA5gB,OAAQzG,EAAQqnB,QAAQlO,OAG/BpZ,EAAQgpB,IAAM,EACd,OAAOC,aAAyBjpB,GAGpC,OAAQC,EAAQ,UACZ,IAAK,mBACD,OAAO8S,EAAE,aAAeuU,EAE5B,IAAK,eACD,OAAOvU,EAAE,eAAiBuU,EAE9B,IAAK,8BACD,OAAO2B,aAAyBjpB,GAEpC,IAAK,cACD,OAAO+S,EAAE,QAAUuU,EAEvB,IAAK,wBAGL,IAAK,yBAGL,IAAK,yBAGL,IAAK,0BAGL,IAAK,yBAGL,IAAK,wBAGL,IAAK,oBAGL,IAAK,yBAGL,IAAK,uBACD,OAAO2B,aAAyBjpB,GAEpC,IAAK,iBACD,OAAO+S,EAAE,iBAAmBuU,EAEhC,IAAK,2BAGL,IAAK,6BACD,OAAO2B,aAAyBjpB,GAEpC,IAAK,kBACD,OAAO+S,EAAE,kBAAoBuU,EAEjC,IAAK,sBACD,OAAOvU,EAAE,eAAiBuU,EAE9B,IAAK,sBACD,OAAOvU,EAAE,eAAiBuU,EAE9B,IAAK,cACD,OAAOvU,EAAE,cAAgBuU,EAE7B,IAAK,mBAGL,IAAK,iBACD,OAAO2B,aAAyBjpB,GAEpC,IAAK,kBACD,OAAO+S,EAAE,kBAAoBuU,EAEjC,IAAK,8BAGL,IAAK,0BAGL,IAAK,2BAGL,IAAK,8BACD,OAAO2B,aAAyBjpB,GAEpC,IAAK,eACD,OAAO+S,EAAE,eAAiBuU,EAE9B,IAAK,cAGD,MAAO,iBAFUrnB,EAATwjB,KAEac,UAAYxR,EAAE,SAAWuU,EAElD,IAAK,oBAGL,IAAK,yBACD,OAAO2B,aAAyBjpB,GAEpC,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QACJooB,EAAQ,GAKZ,OAJIpoB,GAAWA,EAAQooB,QACnBA,EAAQpoB,EAAQooB,OAGbnW,EAAE,kBAAoBmW,EAAK,IAAAxiB,OAAOwiB,GAAU,IAAM5B,EAE7D,IAAK,8BACD,OAAO2B,aAAyBjpB,GAEpC,IAAK,cACD,OAAOC,EAAQmZ,KAAKA,KAAOkO,EAE/B,IAAK,qBACD,OAAO2B,aAAyBjpB,GAEpC,IAAK,eACD,OAAO+S,EAAE,kBAAoBuU,EAEjC,IAAK,eACD,OAAOvU,EAAE,eAAiBuU,EAE9B,IAAK,mBACD,OAAOvU,EAAE,eAAiBuU,EAE9B,IAAK,mBACD,OAAOvU,EAAE,eAAiBuU,EAE9B,IAAK,0BACD,OAAO2B,aAAyBjpB,GAEpC,QACI,OAAO+S,EAAE,0BAKrB,SAASoW,GAAelpB,GACpB,QAAKA,GAEuB,iBAArBA,EAAQ,SAGnB,SAASsC,GAAc3B,GACnB,IAAKA,EAAU,OAAO,KADO,IAGrBuc,EAAwBvc,EAAxBuc,UAAWC,EAAaxc,EAAbwc,SACnB,aAAA1W,OAAc0W,EAAd,KAAA1W,OAA0ByW,EAA1B,UAAAzW,OAA4CyE,IAA5C,KAAAzE,OAA8D2E,IAA9D,WAAA3E,OAAuF6E,IAAvF,UAAA7E,OAA8GuE,KAGlH,SAASme,GAAe1mB,EAAQC,GAC5B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFkB,IAI/BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eACD,OAAO,EAEX,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,OAAO4X,QAAQ5X,EAASC,OAE5B,QACI,OAAO,GAKnB,SAASqoB,GAAgB3mB,EAAQC,GAC7B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,kBAAmB,IACZO,EAAaP,EAAbO,SACR,IAAKA,EAAU,OAAO,EAFF,IAIZ8oB,EAAc9oB,EAAd8oB,UAER,OAAOA,GAAaA,EAAUzZ,cAAc0Z,SAAS,SAEzD,IAAK,cAAe,IACRxoB,EAAad,EAAbc,SACR,IAAKA,EAAU,OAAO,EAFN,IAIRP,EAAaO,EAAbP,SACR,IAAKA,EAAU,OAAO,EALN,IAOR8oB,EAAc9oB,EAAd8oB,UAER,OAAOA,GAAaA,EAAUzZ,cAAc0Z,SAAS,SAEzD,QACI,OAAO,GAKnB,SAASC,GAAmB9mB,EAAQC,GAChC,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFsB,IAInCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAO,EAEX,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,OAAO4X,QAAQ5X,EAASb,WAE5B,QACI,OAAO,GAKnB,SAASupB,GAAgB/mB,EAAQC,GAC7B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAOA,EAAQka,YAEnB,IAAK,mBACD,OAAOla,EAAQma,UAEnB,QACI,OAAO,GAKnB,SAASsP,GAAc1pB,GACnB,IAAKA,EAAS,OAAO,KADO,IAGpBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAAgB,IACTG,EAAUH,EAAVG,MACR,GAAIA,EACA,OAAOupB,aAAcvpB,GAEzB,MAEJ,IAAK,cAAe,IACRW,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAUW,EAAVX,MACR,GAAIA,EACA,OAAOupB,aAAcvpB,GAEzB,OAKZ,OAvpBJ,SAAmBJ,GACf,IAAKA,EAAS,OAAO,KADG,IAGhB4pB,EAAiB5pB,EAAjB4pB,aAER,GAAIA,EACA,OAAQA,EAAa,UACjB,IAAK,2BACD,GAAIA,EAAa/c,eAAiB,EAAG,CACjC,IAAM/M,EAAO2K,IAAU9L,IAAIirB,EAAa/c,gBACxC,GAAI/M,EACA,OAAO2S,YAAgB3S,GAG/B,MAEJ,IAAK,uBACD,IAAML,EAAO6O,KAAU3P,IAAIirB,EAAa9nB,SACxC,GAAIrC,EACA,OAAOA,EAAK6W,MAO5B,OAAOiQ,GAASvmB,GA6nBT6pB,CAAU7pB,GAGrB,SAAS8pB,GAASpnB,EAAQC,GACtB,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFY,IAIzBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVG,MAEJ,OAAO,EAGX,MAEJ,IAAK,cAAe,IACRW,EAAad,EAAbc,SACR,GAAIA,EAEA,GADkBA,EAAVX,MAEJ,OAAO,EAQvB,OAAO,EAGX,SAAS2pB,GAAarnB,EAAQC,GAC1B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFgB,IAI7BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBAED,GADuBA,EAAfgB,WAEJ,OAAO,EAGX,MAEJ,IAAK,cAAe,IACRF,EAAad,EAAbc,SACR,GAAIA,EAEA,GADuBA,EAAfE,WAEJ,OAAO,EAQvB,OAAO,EAGX,SAAS+oB,GAAwBtnB,EAAQC,GACrC,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAF2B,IAIxCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVG,MAEJ,MAAO,CACHoE,QAAS,6BAGjB,MAEJ,IAAK,mBAED,GADuBvE,EAAfiB,WAEJ,MAAO,CACHsD,QAAS,iCAGjB,MAEJ,IAAK,mBAED,GADuBvE,EAAfgB,WAEJ,OAAO,KAMX,MAEJ,IAAK,cAAe,IACRF,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAkCW,EAAlCX,MAAOc,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAC3B,GAAIb,EACA,OAAO,KAOX,GAAIc,EACA,OAAO,KAOX,GAAID,EACA,OAAO,KAMX,OAKZ,OAAO,KAGX,SAASgpB,GAAc/pB,EAAWF,EAASkqB,GACvC,GAAKhqB,GACAF,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEAxB,EAASsD,EAApBA,UACDtD,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BstB,GAActtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCkqB,GAActtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU6uB,iBAAiBvtB,EAAKwB,GAAI4B,IAOxCzC,KAAgBgH,aAAa,CACzBC,QAAS,8BACT9B,OAAQZ,EACRa,UAAWvE,IAGfb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhB0V,KAAiBsW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,OAInB,SAASisB,GAAUjqB,EAAOJ,EAASkqB,GAC/B,GAAK9pB,GACAJ,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASwD,EAAhBA,MACDxD,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BstB,GAActtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCkqB,GAActtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU6uB,iBAAiBvtB,EAAKwB,GAAI4B,IAGpCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAU4G,gBAAgBJ,EAAS1D,EAAIxB,EAAKwB,MAG9Eb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAsDnB,SAASksB,GAAa9pB,EAAUR,EAASkqB,GACrC,GAAK1pB,GACAR,EAAL,CAFiD,IAIzC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEDxB,EAAS4D,EAAnBA,SACD5D,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BstB,GAActtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCkqB,GAActtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU6uB,iBAAiBvtB,EAAKwB,GAAI4B,IAIxCzC,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGZirB,GAAgBvnB,EAAS1D,IACzBb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhB0V,KAAiBsW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,KAGf+O,YAAevQ,EAAM4D,EAAS8oB,UAAWtpB,MAwCjD,SAASuqB,GAAUjqB,EAAON,EAASkqB,GAC/B,GAAK5pB,GACAN,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXuD,EAAYgK,YAAarL,EAAMmB,OACrC,GAAKE,EAAL,CAP2C,IAS9B/E,EAAS+E,EAAhBrB,MACD1D,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BstB,GAActtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCkqB,GAActtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU6uB,iBAAiBvtB,EAAKwB,GAAI4B,IAIxCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAUuG,gBAAgBC,EAAS1D,EAAIxB,EAAKwB,MAE1Eb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhB0V,KAAiBsW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,iBAIJosB,uFAAf,SAAApuB,EAA2B0E,EAASd,EAASkqB,GAA7C,IAAApoB,EAAA1D,EAAAqsB,EAAAjb,EAAA,OAAAkb,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSqE,EADT,CAAAvE,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAESiD,EAFT,CAAAzD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIY+E,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjBb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGRqsB,EAAW3pB,EAAX2pB,OAZZ,CAAAluB,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,GAe6Bc,KAAgBgJ,KAAK,CAC1C/B,QAAS,gBACTimB,WAjBR,WAeUjb,EAfVjT,EAAAkK,KAAA,CAAAlK,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBAsBIQ,KAAgBgH,aAAa,CACzBC,QAAS,yBACTgL,eAxBR,yBAAAjT,EAAAU,SAAAb,6BA4BA,SAASuuB,GAAU3pB,EAAOhB,EAASkqB,GAC/B,GAAKlpB,GACAhB,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASoE,EAAhBA,MACDpE,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BstB,GAActtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCkqB,GAActtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU6uB,iBAAiBvtB,EAAKwB,GAAI4B,IAIxCzC,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhB0V,KAAiBsW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,OAInB,SAASwsB,GAAc3nB,EAAWjD,EAASkqB,GACvC,GAAKjnB,GACAjD,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASqG,EAAhBjC,MACDpE,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BstB,GAActtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCkqB,GAActtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU6uB,iBAAiBvtB,EAAKwB,GAAI4B,IAIxCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAU6H,oBAAoBrB,EAAS1D,EAAIxB,EAAKwB,MAE9Eb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAInB,SAASysB,GAAc/nB,EAAW9C,EAASkqB,GACvC,GAAKpnB,GACA9C,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASkG,EAAhBC,MACDnG,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BstB,GAActtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCkqB,GAActtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU6uB,iBAAiBvtB,EAAKwB,GAAI4B,IAGpCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAU0H,oBAAoBlB,EAAS1D,EAAIxB,EAAKwB,MAGlFb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAInB,SAAS4c,GAAUtY,EAAQC,GAA8B,IAAnBunB,IAAmB9sB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GAC/C4C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAFqD,IAI7CC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACJA,GACA+pB,GAAc/pB,EAAWF,EAASkqB,GAGtC,MAEJ,IAAK,eAAgB,IACT9pB,EAAUH,EAAVG,MACJA,GACAiqB,GAAUjqB,EAAOJ,EAASkqB,GAG9B,MAEJ,IAAK,yBAA0B,IACnB5pB,EAAUL,EAAVK,MACJA,GAvThB,SAAuBA,EAAON,EAASkqB,GACnC,GAAK5pB,GACAN,EAAL,CAF+C,IAIvC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXuD,EAAYgK,YAAarL,EAAMmB,OACrC,GAAKE,EAAL,CAP+C,IASlC/E,EAAS+E,EAAhBrB,MACD1D,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BstB,GAActtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCkqB,GAActtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU6uB,iBAAiBvtB,EAAKwB,GAAI4B,IAIxCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAUuG,gBAAgBC,EAAS1D,EAAIxB,EAAKwB,MAE1Eb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhB0V,KAAiBsW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,QAyRH0sB,CAAcxqB,EAAON,EAASkqB,GAGlC,MAEJ,IAAK,iBAAkB,IACX3f,EAAYtK,EAAZsK,QACJA,GA5RhB,SAAqBA,EAASvK,EAASkqB,GACnC,GAAK3f,GACAvK,EAAL,CAF+C,IAIvC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjBb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhB2sB,aAASxgB,EAAQ/C,SAiRLwjB,CAAYzgB,EAASvK,GAGzB,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SACJA,GACA8pB,GAAa9pB,EAAUR,EAASkqB,GAGpC,MAEJ,IAAK,cAAe,IACRxpB,EAAST,EAATS,KACJA,GArPhB,SAAkBA,EAAMV,EAASkqB,GAC7B,GAAKxpB,GACAV,EAAL,CAFyC,IAIjC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAET8B,EAAcQ,EAAdR,UACR,GAAIA,EAAW,KACMtD,EAASsD,EAApBA,UACN,IAAKtD,EAAM,OAGX,GADAA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BstB,GAActtB,EAAK0B,MAAM0R,sBAEzB,YADA1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEpC,GAAIkqB,GAActtB,EAAK0C,OAAO6Q,oBAEjC,YADA7U,IAAU6uB,iBAAiBvtB,EAAKwB,GAAI4B,GAIxCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAUiI,oBAAoBzB,EAAS1D,EAAIxB,EAAKwB,MAGlFb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT+X,WAAYzb,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,8BACT9B,OAAQZ,EACRa,UAAWvE,KAsNH6sB,CAASvqB,EAAMV,EAASkqB,GAG5B,MAEJ,IAAK,eAAgB,IACT5pB,EAAUL,EAAVK,MACJA,GACAiqB,GAAUjqB,EAAON,EAASkqB,GAG9B,MAEJ,IAAK,iBAAkB,IACXppB,EAAYb,EAAZa,QACJA,GACA0pB,GAAY1pB,EAASd,EAASkqB,GAGlC,MAEJ,IAAK,cAAe,IACRnpB,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEhB,GACA+pB,GAAc/pB,EAAWF,EAASkqB,GAGlC9pB,GACAiqB,GAAUjqB,EAAOJ,EAASkqB,GAG1B1pB,GACA8pB,GAAa9pB,EAAUR,EAASkqB,GAGhCppB,GACA0pB,GAAY1pB,EAASd,EAASkqB,GAG9BlpB,GACA2pB,GAAU3pB,EAAOhB,EAASkqB,GAG1BjpB,GACA2pB,GAAc3pB,EAAYjB,EAASkqB,GAGnChpB,GACA2pB,GAAc3pB,EAAYlB,EAASkqB,GAGnC5pB,GACAiqB,GAAUjqB,EAAON,EAASkqB,GAIlC,MAEJ,IAAK,eAAgB,IACTlpB,EAAUf,EAAVe,MACJA,GACA2pB,GAAU3pB,EAAOhB,EAASkqB,GAG9B,MAEJ,IAAK,mBAAoB,IACbjpB,EAAehB,EAAfgB,WACJA,GACA2pB,GAAc3pB,EAAYjB,EAASkqB,GAGvC,MAEJ,IAAK,mBAAoB,IACbhpB,EAAejB,EAAfiB,WACJA,GACA2pB,GAAc3pB,EAAYlB,EAASkqB,KAQnD,SAASgB,GAAiBlrB,GACtB,OAAOA,GAAgC,mBAArBA,EAAQ,SAG9B,SAASmrB,GAAkBzoB,EAAQC,GAC/B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAF0C,IAIlCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,OAAKA,GAEiBA,EAAdiC,WAFe,KAK3B,IAAK,eAAgB,IACT/B,EAAUH,EAAVG,MACR,OAAKA,GAE6BA,EAA1B2B,uBAFW,KAKvB,IAAK,yBAA0B,IACnBzB,EAAUL,EAAVK,MACR,OAAKA,EAEEqL,YAAarL,EAAMmB,OAFP,KAIvB,IAAK,kBAAmB,IACZjB,EAAaP,EAAbO,SACR,OAAKA,GAEiBA,EAAd2B,WAFc,KAK1B,IAAK,cAAe,IACRzB,EAAST,EAATS,KACR,IAAKA,EAAM,OAAO,KAFF,IAIRR,EAAqBQ,EAArBR,UAAWI,EAAUI,EAAVJ,MACnB,GAAIJ,EAAW,KACHiC,EAAcjC,EAAdiC,UACR,GAAIA,EACA,OAAOA,EAIf,OAAI7B,EACOqL,YAAarL,EAAMmB,OAGvB,KAEX,IAAK,eAAgB,IACTnB,EAAUL,EAAVK,MACR,OAAKA,EAEEqL,YAAarL,EAAMmB,OAFP,KAIvB,IAAK,iBAAkB,IACXX,EAAYb,EAAZa,QACR,OAAKA,GAEiBA,EAAdqB,WAFa,KAKzB,IAAK,cAAe,IACRpB,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAkEa,EAAlEb,UAAWE,EAAuDW,EAAvDX,MAAOI,EAAgDO,EAAhDP,SAAUF,EAAsCS,EAAtCT,MAAOQ,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAC3D,GAAIX,EACA,OAAOqL,YAAarL,EAAMmB,OAE9B,GAAIvB,EAEA,OADsBA,EAAdiC,WACY,KAExB,GAAI/B,EAEA,OADkCA,EAA1B2B,uBACwB,KAEpC,GAAIvB,EAEA,OADsBA,EAAd2B,WACY,KAExB,GAAIrB,EAEA,OADsBA,EAAdqB,WACY,KAExB,GAAInB,EAEA,OADsBA,EAAdmB,WACY,KAExB,GAAIlB,EAEA,OADsBA,EAAdkB,WACY,KAI5B,MAEJ,IAAK,eAAgB,IACTnB,EAAUf,EAAVe,MACR,OAAKA,GAEiBA,EAAdmB,WAFW,KAKvB,IAAK,mBAAoB,IACblB,EAAehB,EAAfgB,WACR,OAAKA,GAEiBA,EAAdkB,WAFgB,KAOhC,OAAO,+hCCj6CLipB,EAAa5vB,OAAO6vB,OAAO,CAC7BC,KAAM,OACNC,OAAQ,SACRC,WAAY,eA0VVnwB,EAAQ,gBApVV,SAAAowB,IAAc,IAAAlwB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+vB,IACVlwB,EAAAC,OAAAkwB,EAAA,EAAAlwB,CAAAE,KAAAF,OAAAmwB,EAAA,EAAAnwB,CAAAiwB,GAAA5vB,KAAAH,QAyBJ4B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA5BvC9B,EA+BdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjC1C9B,EAoCdO,SApCc,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAoCH,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GACCL,EAAO,SADRE,EAAAE,KAAA,sBAAAF,EAAAQ,OAAA,mCAAAR,EAAAU,SAAAb,MApCG,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EA2CdqwB,MAAQ,WACJruB,IAAgBgH,aAAa,CACzBC,QAAS,4BA7CHjJ,EAiDd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,yBACDd,EAAKswB,SAAW,KAChBtwB,EAAKyE,QAAU,KACfzE,EAAKuwB,KAAO,KACZvwB,EAAKwwB,YAAc,KAEnBxwB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA2B,IACpBqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UAEV3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAEdzE,EAAKyE,QAAUA,EAEfzE,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAKywB,YAAYtpB,EAAQC,GACzB,MAEJ,IAAK,0BAA2B,IACpBspB,EAAW5vB,EAAX4vB,OAER1wB,EAAK0wB,OAASA,GAEE,IAAIC,KACZvvB,IAAI,SAAUsvB,GAEtB1wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA2B,IACpB8vB,EAAW9vB,EAAX8vB,OAER5wB,EAAK4wB,OAASA,EAEd5wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BAA4B,IACrB+vB,EAAY/vB,EAAZ+vB,QAER7wB,EAAK6wB,QAAUA,EAEf7wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,gCAAiC,IAC1BgwB,EAAiBhwB,EAAjBgwB,aAER9wB,EAAK8wB,aAAeA,GAEJ,IAAIH,KACZvvB,IAAI,eAAgB0vB,GAE5B9wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAK+wB,SAAU,EAEf/wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,kCACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,yBACDd,EAAK+wB,SAAU,EAEf/wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAKgxB,iBAAgB,GACrB,MAEJ,IAAK,wBACDhxB,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAKixB,kBACL,MAEJ,IAAK,0BACDjxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,uBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAEvBA,EAAOowB,UACHlxB,EAAKgxB,iBAAgB,IAKzBhxB,EAAKqwB,QAET,MAEJ,IAAK,wBAAyB,IAClBc,EAAqCrwB,EAArCqwB,SAAUC,EAA2BtwB,EAA3BswB,YAAaC,EAAcvwB,EAAduwB,UAE/BrxB,EAAKuwB,KAAO,CACRa,YAAaA,EACbD,SAAUA,EACVE,UAAWA,GAGfrxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,iCACDd,EAAKwwB,YAAc1vB,EAAOwwB,OAE1BtxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,8BAIL,IAAK,+BAIL,IAAK,+BAIL,IAAK,mCAIL,IAAK,gCAIL,IAAK,4BAIL,IAAK,gCACDd,EAAKuB,KAAKT,EAAO,SAAUA,KA3MzBd,EAmNdixB,gBAAkB,WACd,GAAKjxB,EAAKswB,UACLtwB,EAAKyE,QAAV,CAFoB,IAAA8sB,EAIIvxB,EAAKyE,QAArB8B,EAJYgrB,EAIZhrB,QAAS1D,EAJG0uB,EAIH1uB,GACT6K,EAAa1N,EAAKswB,SAAlB5iB,SACR,GAAKA,EAAL,CAEA,IAAMgF,EAAQhF,EAAS8jB,UAAU,SAAA5lB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACxE,IAAe,IAAX6P,GAEAA,EAAQ,EAAIhF,EAASvH,OAAQ,CAC7B,IAAM1B,EAAUiJ,EAASgF,EAAQ,GAEjC+M,YAAUhb,EAAQ8B,QAAS9B,EAAQ5B,IAAI,OAjOjC7C,EAqOdgxB,gBAAkB,SAAAS,GACd,IAAKzxB,EAAKswB,SAAU,OAAO,EAC3B,IAAKtwB,EAAKyE,QAAS,OAAO,EAFQ,IAAAitB,EAIV1xB,EAAKyE,QAArB8B,EAJ0BmrB,EAI1BnrB,QAAS1D,EAJiB6uB,EAIjB7uB,GACT6K,EAAa1N,EAAKswB,SAAlB5iB,SACR,IAAKA,EAAU,OAAO,EAEtB,IAAMgF,EAAQhF,EAAS8jB,UAAU,SAAA5lB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACxE,IAAe,IAAX6P,EAAc,OAAO,EAEzB,IAAIif,GAAa,EACjB,GAAKF,EAGD,OAAQzxB,EAAK4wB,QACT,KAAKf,EAAWE,KAER4B,EADA3xB,EAAK6wB,QACOe,YAAa,EAAGlkB,EAASvH,QAEzBuM,EAAQ,EAExB,MAEJ,KAAKmd,EAAWI,WACZ0B,EAAYjf,EACZ,MAEJ,KAAKmd,EAAWG,OAER2B,EADA3xB,EAAK6wB,QACOe,YAAa,EAAGlkB,EAASvH,QAEzBuM,EAAQ,GAAK,EAAIA,EAAQ,EAAIhF,EAASvH,OAAS,OAnBvEwrB,EAAYjf,EAAQ,EA0BxB,GAAIif,GAAa,EAAG,CAChB,IAAMltB,EAAUiJ,EAASikB,GAGzB,OADAlS,YAAUhb,EAAQ8B,QAAS9B,EAAQ5B,IAAI,IAChC,EAGX,OAAO,GAnRG7C,EAsRdywB,YAtRc,eAAAruB,EAAAnC,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAsRA,SAAAyB,EAAO8E,EAAQC,GAAf,IAAAyqB,EAAAC,EAAAC,EAAAlmB,EAAAvB,EAAA0nB,EAAAtkB,EAAA,OAAAhN,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAA2wB,EAAA5xB,OAAAgyB,EAAA,EAAAhyB,QAAAgyB,EAAA,EAAAhyB,CAAAD,MACQ8xB,EADRD,EACFvB,UADE,CAAAhuB,EAAApB,KAAA,aAIEwM,EAAaokB,EAAbpkB,YACiF,IAAzEA,EAAS8jB,UAAU,SAAA5lB,GAAC,OAAIA,EAAErF,UAAYY,GAAUyE,EAAE/I,KAAOuE,IALnE,CAAA9E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAUVQ,IAAgBgH,aAAa,CACzBC,QAAS,mCACT9B,OAAQA,EACRC,UAAWA,IAGTyE,EAAS4iB,YAAwBtnB,EAAQC,GAhBrC,CAAA9E,EAAApB,KAAA,gBAkBNlB,EAAKswB,SAAW,CACZnpB,OAAQA,EACRC,UAAWA,EACX8qB,WAAY,EACZxkB,SAAU,CAACE,IAAaxK,IAAI+D,EAAQC,KAGxCpF,IAAgBgH,aAAa,CACzBC,QAAS,4BACTqnB,SAAUtwB,EAAKswB,WA3BbhuB,EAAAd,OAAA,yBAAAc,EAAApB,KAAA,GAiCWc,IAAgBgJ,KAAK,CACtC/B,QAAS,qBACT1C,QAASY,EACTgrB,MAAO,GACP7gB,eAAgB,EAChB8gB,gBAAiBhrB,EACjBkkB,QAAS,GACT+G,MAAO,IACPxmB,OAAQA,IAzCF,QAiCJvB,EAjCIhI,EAAA4I,KA4CV0C,IAAaC,SAASvD,EAAOoD,UAErBskB,EAA0B1nB,EAA1B0nB,YAAatkB,EAAapD,EAAboD,SAErB1N,EAAKswB,SAAW,CACZnpB,OAAQA,EACRC,UAAWA,EACX8qB,WAAYF,EACZtkB,SAAUA,GAGd1L,IAAgBgH,aAAa,CACzBC,QAAS,4BACTqnB,SAAUtwB,EAAKswB,WAzDT,yBAAAhuB,EAAAZ,SAAAW,MAtRA,gBAAAI,EAAA6vB,GAAA,OAAAlwB,EAAAR,MAAAzB,KAAA0B,YAAA,GAGV,IAAM0wB,EAAU,IAAI5B,IAChBG,EAAeyB,EAAQnvB,IAAI,gBAC3BstB,EAAS6B,EAAQnvB,IAAI,UALf,OAMV0tB,EACIA,GAAgB0B,OAAO1B,IAAiB,GAAK0B,OAAO1B,IAAiB,EAC/D0B,OAAO1B,GACP2B,IACV/B,EAASA,GAAU8B,OAAO9B,IAAW,GAAK8B,OAAO9B,IAAW,EAAI8B,OAAO9B,GAAUgC,IAEjF1yB,EAAK8wB,aAAeA,EACpB9wB,EAAK0wB,OAASA,EACd1wB,EAAK4wB,OAASf,EAAWE,KACzB/vB,EAAK6wB,SAAU,EAEf7wB,EAAKswB,SAAW,KAChBtwB,EAAKyE,QAAU,KACfzE,EAAKuwB,KAAO,KACZvwB,EAAKwwB,YAAc,KAEnBxwB,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAvBXvJ,6BADQkM,iBAsV1BhC,OAAOyoB,OAAS7yB,EACDA,wCC9Wfke,EAAAC,EAAAC,EAAA,sBAAAhE,IAAA8D,EAAAC,EAAAC,EAAA,sBAAA9C,IAAA4C,EAAAC,EAAAC,EAAA,sBAAAhH,IAAA8G,EAAAC,EAAAC,EAAA,sBAAA0U,IAAA5U,EAAAC,EAAAC,EAAA,sBAAA2U,IAAA7U,EAAAC,EAAAC,EAAA,sBAAA4U,IAAA9U,EAAAC,EAAAC,EAAA,sBAAA3K,IAAAyK,EAAAC,EAAAC,EAAA,sBAAA6U,IAAA/U,EAAAC,EAAAC,EAAA,sBAAA9G,IAAA,IAAA4b,EAAAhV,EAAA,KAAAiV,EAAAjV,EAAAkV,EAAAF,GAAAG,EAAAnV,EAAA,IAAAoV,EAAApV,EAAA,IAAAqV,EAAArV,EAAA,IAYA,SAAS9D,EAAc3V,GACnB,IAAKA,EAAM,OAAO,KAClB,IAAKA,EAAKqV,OAAQ,OAAO,KAEzB,GAAIrV,EAAK1B,KAAOywB,IACZ,MAAO,wBAGX,GAAI/uB,EAAKwN,MAA+B,gBAAvBxN,EAAKwN,KAAK,SACvB,MAAO,MAGX,OAAQxN,EAAKqV,OAAO,UAChB,IAAK,kBACD,MAAO,4BAEX,IAAK,sBACD,MAAO,2BAEX,IAAK,qBACD,MAAO,0BAEX,IAAK,oBAAqB,IAChB2Z,EAAehvB,EAAKqV,OAApB2Z,WACN,IAAKA,EAAY,MAAO,UAExB,IAAMva,EAAM,IAAIJ,KACV4a,EAAY,IAAI5a,KAAkB,IAAb2a,GAC3B,GAAIC,EAAYxa,EACZ,MAAO,qBAGX,IAAIya,EAAO,IAAI7a,KAAKI,EAAMwa,GAG1B,GAAIC,EAAKC,UAAY,IAAO,GACxB,MAAO,qBAIX,GAAID,EAAKC,UAAY,IAAO,KAAS,CACjC,IAAMC,EAAU/O,KAAKC,MAAM4O,EAAKC,UAAY,IAAO,IACnD,mBAAAvoB,OAAgC,IAAZwoB,EAAgB,WAAaA,EAAU,WAA3D,QAIJ,IAAMC,EAAQ,IAAIhb,KAElB,GADAgb,EAAM9a,SAAS,EAAG,EAAG,EAAG,GACpB0a,EAAYI,EAAO,CAEnB,GAAIH,EAAKC,UAAY,IAAO,MAAa,CACrC,IAAMG,EAAQjP,KAAKC,MAAM4O,EAAKC,UAAY,IAAO,GAAK,IACtD,mBAAAvoB,OAA8B,IAAV0oB,EAAc,SAAWA,EAAQ,SAArD,QAIJ,4BAAA1oB,OAA6B4N,IAAWya,EAAW,SAIvD,IAAIM,EAAY,IAAIlb,KAGpB,OAFAkb,EAAUza,QAAQL,EAAII,UAAY,GAClCwa,EAAM9a,SAAS,EAAG,EAAG,EAAG,GACpB0a,EAAYM,EACZ,0BAAA3oB,OAAiC4N,IAAWya,EAAW,SAG3D,aAAAroB,OAAoB4N,IAAWya,EAAW,eAE9C,IAAK,mBACD,MAAO,SAEX,IAAK,qBACD,MAAO,qBAIf,OAAO,KAGX,SAASpY,EAAa7W,GAClB,IAAKA,EAAM,OAAO,EADM,IAGhB1B,EAAqB0B,EAArB1B,GAAI+W,EAAiBrV,EAAjBqV,OAAQ7H,EAASxN,EAATwN,KACpB,QAAK6H,MACA7H,IACDlP,IAAOywB,MAEgB,qBAApB1Z,EAAO,UAAqD,gBAAlB7H,EAAK,YAG1D,SAASmF,EAAgB3S,GACrB,IAAKA,EAAM,OAAO,KAClB,IAAKA,EAAKwN,KAAM,OAAO,KAEvB,OAAQxN,EAAKwN,KAAK,UACd,IAAK,cACL,IAAK,kBACD,GAAIxN,EAAKiS,YAAcjS,EAAKmb,UAAW,SAAAvU,OAAU5G,EAAKiS,WAAf,KAAArL,OAA6B5G,EAAKmb,WACzE,GAAInb,EAAKiS,WAAY,OAAOjS,EAAKiS,WACjC,GAAIjS,EAAKmb,UAAW,OAAOnb,EAAKmb,UAEpC,IAAK,kBACL,IAAK,kBACD,MAAO,kBAIf,OAAO,KAGX,SAAStI,EAAiBnL,GACtB,IAAM1H,EAAO2K,IAAU9L,IAAI6I,GAC3B,IAAK1H,EAAM,OAAO,KAClB,IAAKA,EAAKwN,KAAM,OAAO,KAEvB,OAAQxN,EAAKwN,KAAK,UACd,IAAK,cACL,IAAK,kBACD,GAAIxN,EAAKiS,WAAY,OAAOjS,EAAKiS,WACjC,GAAIjS,EAAKmb,UAAW,OAAOnb,EAAKmb,UAEpC,IAAK,kBACL,IAAK,kBACD,MAAO,kBAIf,OAAO,KAGX,SAASkT,EAAc3mB,GACnB,IAAMsO,EAAWrL,IAAUsL,YAAYvO,GACvC,QAAIsO,GACOA,EAASwZ,WAMxB,SAASlB,EAAetuB,GACpB,IAAKA,EAAM,OAAO,KAElB,IAAIwW,EAAQ7D,EAAgB3S,GACxByW,EAAUC,YAAWF,GACzB,OAAIC,GAAWA,EAAQ7U,OAAS,EACrB6U,EAGJzW,EAAKiS,WAAajS,EAAKiS,WAAW0E,OAAO,GAAK3W,EAAKmb,UAAYnb,EAAKmb,UAAUxE,OAAO,GAAK,GAGrG,SAAS4X,EAAmBvuB,GACxB,IAAKA,EAAM,OAAO,EAClB,IAAKA,EAAKqV,OAAQ,OAAO,EACzB,GAA2B,gBAAvBrV,EAAKwN,KAAK,SAA4B,OAAO,EAEjD,OAAQxN,EAAKqV,OAAO,UAChB,IAAK,kBACD,OAAO,EAEX,IAAK,sBACD,OAAO,GAEX,IAAK,qBACD,OAAO,IAEX,IAAK,oBACD,OAAOrV,EAAKqV,OAAO2Z,WAEvB,IAAK,mBACD,OAAOhvB,EAAKqV,OAAOoa,QAEvB,IAAK,qBACD,OAAO,KAKnB,SAASzgB,EAAgB0gB,GACrB,IAAKA,EAAkB,OAAO,KADS,IAG/BpxB,EAAcoxB,EAAdpxB,GAAIqD,EAAU+tB,EAAV/tB,MACZ,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAM+tB,EAAiBhkB,YAAQhK,EAAOiuB,KAChCC,EAAelkB,YAAQhK,EAAOmuB,KAEpC,MAAO,CACHprB,QAAS,eACTpG,GAAIA,EACJsQ,MAAO+gB,EAAenvB,MACtBqO,IAAKghB,EAAarvB,OAI1B,SAASguB,EAAwBkB,GAC7B,IAAKA,EAAkB,OAAO,KADiB,IAGvCK,EAAeL,EAAfK,WACR,IAAKA,EAAY,OAAO,KAExB,IAAM3b,EAAO,IAAIC,KAAkB,IAAb0b,GACtB,OAAOvb,IAAWJ,EAAM,wDCxN5BqF,EAAAC,EAAAC,EAAA,sBAAAsR,IAAAxR,EAAAC,EAAAC,EAAA,sBAAAqW,IAAAvW,EAAAC,EAAAC,EAAA,sBAAAsW,IAAAxW,EAAAC,EAAAC,EAAA,sBAAAuW,IAAA,IAAAC,EAAA1W,EAAA,GASO,SAASwR,EAASvjB,GAAuB,IAAf0oB,EAAe9yB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC5CG,IAAgBgH,aAAa,CACzBC,QAAS,uBACTgD,SACA0oB,UAID,SAASJ,EAASptB,GAAyC,IAAjCC,EAAiCvF,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAArB,KAAM8yB,EAAe9yB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC9DG,IAAgBgH,aAAa,CACzBC,QAAS,uBACT9B,SACAC,YACAutB,UAID,SAASH,EAAiBrtB,EAAQC,GACrCpF,IAAgBgH,aAAa,CACzBC,QAAS,iCACT9B,SACAC,cAID,SAASqtB,EAActtB,EAAQC,EAAW8X,GAC7Cld,IAAgBgH,aAAa,CACzBC,QAAS,8BACT9B,SACAC,YACA8X,yGC4BFpf,EAAQ,gBAxDV,SAAAsa,IAAc,IAAApa,EAAA,OAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAia,IACVpa,EAAAC,OAAAme,EAAA,EAAAne,CAAAE,KAAAF,OAAAoe,EAAA,EAAApe,CAAAma,GAAA9Z,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAOqZ,YAEhBna,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MACJ,IAAK,2BACDd,EAAK40B,YAAY9zB,EAAOuZ,cAAevZ,EAAO+zB,sBAE9C70B,EAAKuB,KAAKT,EAAO,SAAUA,KApBzBd,EA2Bd8B,eAAiB,SAAAhB,KA3BHd,EA6Bd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA/BvC9B,EAkCdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjCpD9B,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAK80B,cAAgB,IAAIzrB,IAEzBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,mEAuCV6C,GACA,OAAO1C,KAAKgD,MAAMC,IAAIP,+BAGtBsX,GACAha,KAAKgD,MAAM/B,IAAI+Y,EAAWtX,GAAIsX,uCAGtBtX,GACR,OAAO1C,KAAK20B,cAAc1xB,IAAIP,uCAGtBA,EAAI0X,GACZpa,KAAK20B,cAAc1zB,IAAIyB,EAAI0X,UArDLrO,iBA0D9BhC,OAAOiQ,WAAara,EACLA,wCCrEfke,EAAAC,EAAAC,EAAA,sBAAA6W,IAAA/W,EAAAC,EAAAC,EAAA,sBAAAkQ,IAAA,IAAA4G,EAAAhX,EAAA,IASA,SAAS+W,EAAmBnuB,GACxB,QAAKA,GAEEge,KAAKkC,IAAIlgB,EAAU+I,MAAO/I,EAAUiJ,QAAUolB,IAGzD,SAAS7G,EAAcvpB,GACnB,IAAKA,EAAO,OAAO,KADO,IAGlBkpB,EAAgClpB,EAAhCkpB,UAAWhT,EAAqBlW,EAArBkW,MAAOma,EAAcrwB,EAAdqwB,UACpBC,EAAepa,EAAQA,EAAMqa,OAAS,GACtCC,EAAmBH,EAAYA,EAAUE,OAAS,GAExD,OAAOD,GAAgBE,EAAhB,GAAAlqB,OACEkqB,GAAoB,iBADtB,YAAAlqB,OAC4CgqB,GAAgB,iBAC7DpH,4JCTJuH,UAAc,CAAEC,OAAQ,yBAExBC,cACF,SAAAA,EAAYhW,GAAO,IAAAxf,EAAAC,OAAAw1B,EAAA,EAAAx1B,CAAAE,KAAAq1B,IACfx1B,EAAAC,OAAAkwB,EAAA,EAAAlwB,CAAAE,KAAAF,OAAAmwB,EAAA,EAAAnwB,CAAAu1B,GAAAl1B,KAAAH,KAAMqf,KA8EVle,aAAe,SAAAR,GACX,IAAM40B,EAAc11B,EAAKokB,MAAM/iB,KACzBs0B,EAAW70B,EAAOO,KAEpBq0B,GAAeA,EAAY7yB,KAAO8yB,EAAS9yB,IAC3C7C,EAAK0kB,SAAS,CAAErjB,KAAMs0B,EAAUC,SAAUF,KApF/B11B,EAwFnB61B,cAAgB,SAACx0B,EAAMu0B,GACnB,IAAK51B,EAAKwf,MAAMtS,SAAU,OAAO,EAEjC,IAAM4oB,EAAYF,GAAYA,EAAS7yB,OAAS6yB,EAAS7yB,MAAM0R,sBACzDshB,EAAW10B,GAAQA,EAAK0B,OAAS1B,EAAK0B,MAAM0R,sBAElD,OAAOqhB,GAAaC,GA9FL/1B,EAiGnBg2B,YAAc,SAAC30B,EAAMu0B,GACjB,IAAK51B,EAAKwf,MAAMyW,OAAQ,OAAO,EAE/B,IAAMH,EAAYF,GAAYA,EAAS7xB,QAAU6xB,EAAS7xB,OAAO6Q,oBAC3DmhB,EAAW10B,GAAQA,EAAK0C,QAAU1C,EAAK0C,OAAO6Q,oBAEpD,OAAOkhB,GAAaC,GAvGL/1B,EA0GnBk2B,kBAAoB,SAAC70B,EAAMu0B,GAAa,IAC5B7yB,EAAkB1B,EAAlB0B,MAAOgB,EAAW1C,EAAX0C,OAEX+xB,GAAY,EACZC,GAAW,EACXI,GAAc,EACdC,EAAe,EACfhqB,EAAO,EAqCX,OApCIpM,EAAK61B,cAAcx0B,EAAMu0B,IACzBE,EAAYF,GAAYA,EAAS7yB,OAAS6yB,EAAS7yB,MAAM0R,sBACzDshB,EAAWhzB,EAAM0R,sBACjB0hB,EAAcpzB,EAAMG,yBACpBkzB,EAAerzB,EAAM2R,gBACrBtI,EAAO/K,EAAK+K,MAQLpM,EAAKg2B,YAAY30B,EAAMu0B,KAC9BE,EAAYF,GAAYA,EAAS7xB,QAAU6xB,EAAS7xB,OAAO6Q,oBAC3DmhB,EAAWhyB,EAAO6Q,oBAClBuhB,EAAcpyB,EAAOE,uBACrBmyB,EAAeryB,EAAO8Q,cACtBzI,EAAO/K,EAAK+K,MAkBT,CAAC0pB,EAAWC,EAAUI,EAAaC,EAAchqB,IAnJxDpM,EAAKq2B,mBAAoB,EAHV,IAIPh1B,EAASrB,EAAKwf,MAAdne,KAJO,OAKfrB,EAAKokB,MAAQ,CACTkS,cAAej1B,EACfu0B,SAAU,KACVv0B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GARrBrB,qFA2BG+kB,EAAWC,GAAW,IAAAzF,EACSpf,KAAKqf,MAA9CtS,EADgCqS,EAChCrS,SAAU+oB,EADsB1W,EACtB0W,OAAQjT,EADczD,EACdyD,KAAMuT,EADQhX,EACRgX,aAEhC,GAAIxR,EAAUwR,eAAiBA,EAC3B,OAAO,EAGX,GAAIxR,EAAU/B,OAASA,EACnB,OAAO,EAGX,GAAI7iB,KAAK01B,cAAc7Q,EAAU3jB,KAAM2jB,EAAU4Q,YAAc1oB,EAC3D,OAAO,EAGX,GAAI/M,KAAK61B,YAAYhR,EAAU3jB,KAAM2jB,EAAU4Q,YAAcK,EACzD,OAAO,EAGX,IAAMO,EAAYxR,EAAU3jB,KAAO2jB,EAAU3jB,KAAK0B,MAAQ,KACpD0zB,EAAazR,EAAU3jB,KAAO2jB,EAAU3jB,KAAKyB,QAAU,KACvD4zB,EAAYv2B,KAAKikB,MAAMwR,SAAWz1B,KAAKikB,MAAMwR,SAAS7yB,MAAQ,KAC9D4zB,EAAax2B,KAAKikB,MAAMwR,SAAWz1B,KAAKikB,MAAMwR,SAAS9yB,QAAU,KACjE8zB,EACFF,GAAaF,IAAcE,EAAUxzB,0BAA4BszB,EAAUtzB,yBACzE2zB,EAAgBJ,IAAeE,EAErC,OAAI3R,EAAU3jB,KAAKwB,KAAO1C,KAAKikB,MAAM/iB,KAAKwB,KAAM+zB,IAA0BC,KAItE7R,EAAU3jB,OAASlB,KAAKikB,MAAM/iB,MAI9B2jB,EAAU4Q,WAAaz1B,KAAKikB,MAAMwR,sDAQtCz1B,KAAK22B,OAAQ,EACb/2B,IAAU2hB,GAAG,aAAcvhB,KAAKmB,6DAIhCnB,KAAK22B,OAAQ,EACb/2B,IAAUoC,eAAe,aAAchC,KAAKmB,+CA6EvC,IAAAqJ,EAAAxK,KAAAugB,EAC4DvgB,KAAKqf,MAAhE+W,EADD7V,EACC6V,aAAcQ,EADfrW,EACeqW,aAAcC,EAD7BtW,EAC6BsW,OAAQhU,EADrCtC,EACqCsC,KAAMiU,EAD3CvW,EAC2CuW,aAD3C9S,EAEsBhkB,KAAKikB,MAAxB/iB,EAFH8iB,EAEG9iB,KAAMu0B,EAFTzR,EAESyR,SACd,IAAKv0B,EAAM,OAAO,KAHb,IAAA61B,EAK0D/2B,KAAK+1B,kBAAkB70B,EAAMu0B,GALvFuB,EAAAl3B,OAAAm3B,EAAA,EAAAn3B,CAAAi3B,EAAA,GAKEpB,EALFqB,EAAA,GAKapB,EALboB,EAAA,GAKuBhB,EALvBgB,EAAA,GAKoCf,EALpCe,EAAA,GAKkD/qB,EALlD+qB,EAAA,GAODE,EAAatB,EACbuB,EAAW,EACXvB,IACAuB,EAAWlB,GAAgBhqB,EAAO,KAAQA,EAAOgqB,GAAgBhqB,EAAQ,IAAM,GAGpD0pB,IAAcC,IAEzC51B,KAAKk2B,mBAAoB,EAEzBiB,EAAWnB,EAAc,IAAM,EAC/BkB,GAAa,EACbE,WAAW,WACP5sB,EAAK0rB,mBAAoB,EACpB1rB,EAAKmsB,OAGVnsB,EAAK+Z,SAAS,CAAEkR,SAAU,QAC3B4B,MAGP,IAAM1qB,EAAQ,CACVkqB,OAAQA,EACRS,WAAalB,GAAwC,qBAAjBA,EAAsC,sBAAP,MAuBvE,OAnBIl1B,GACAA,EAAK0B,QACJ1B,EAAK0B,MAAMG,0BAA4B7B,EAAKyB,SAAWzB,EAAK0B,MAAMkB,0BAClE9D,KAAKk2B,oBACLN,EAiBGkB,EAEIS,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBjT,MAAOA,GAClC4qB,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,sBAAsBkX,IAK1C,KAGPI,GAAcl3B,KAAKk2B,kBAGfqB,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBjT,MAAOA,GAClC4qB,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,2BACX2X,EAAA/2B,EAAAkM,cAAC8qB,EAAAh3B,EAAD,CACIggB,QAAS2U,EACTzO,QAAQ,SACRpR,MAAO6hB,EACPlrB,KAAM,GACN8W,UAAW,KAGlB6T,GACGW,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,sBACX2X,EAAA/2B,EAAAkM,cAAC+qB,EAAAj3B,EAAD,QAOhBqiB,EAGI0U,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBjT,MAAOA,GAClC4qB,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,sBAAsBiD,IAK1C,wDA9OqBxD,EAAO4E,GAAO,IAClC/iB,EAASme,EAATne,KACAi1B,EAAkBlS,EAAlBkS,cAER,OAAIj1B,GAAQi1B,GAAiBj1B,EAAKwB,KAAOyzB,EAAczzB,GAC5C,CACHyzB,cAAej1B,EACfu0B,SAAU,KACVv0B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GAIjC,YAzBY6e,IAAMC,WA2QjCqV,EAAavU,aAAe,CACxB8V,cAAc,EACd7pB,UAAU,EACV+oB,QAAQ,GAGGT,iGC9NT11B,EAAQ,gBAzDV,SAAA4Z,IAAc,IAAA1Z,EAAA,OAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAuZ,IACV1Z,EAAAC,OAAAme,EAAA,EAAAne,CAAAE,KAAAF,OAAAoe,EAAA,EAAApe,CAAAyZ,GAAApZ,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAO+2B,aAEhB73B,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BACDd,EAAK40B,YAAY9zB,EAAO6Y,eAAgB7Y,EAAOg3B,uBAE/C93B,EAAKuB,KAAKT,EAAO,SAAUA,KArBzBd,EA4Bd8B,eAAiB,SAAAhB,KA5BHd,EA8Bd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAhCvC9B,EAmCdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAlCpD9B,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAK80B,cAAgB,IAAIzrB,IAEzBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,mEAwCV+3B,GACA,OAAO53B,KAAKgD,MAAMC,IAAI20B,+BAGtBC,GACA73B,KAAKgD,MAAM/B,IAAI42B,EAAMn1B,GAAIm1B,uCAGjBn1B,GACR,OAAO1C,KAAK20B,cAAc1xB,IAAIP,uCAGtBA,EAAI0X,GACZpa,KAAK20B,cAAc1zB,IAAIyB,EAAI0X,UAtDLrO,iBA2D9BhC,OAAO+tB,WAAan4B,EACLA,uKCrDTkgB,qNAuBFkY,uBAAyB,SAAAp3B,GACFd,EAAKwf,MAAhBvT,SAEOnL,EAAOmL,QAClBjM,EAAKyhB,iBAIb0W,uBAAyB,SAAAr3B,GAAU,IACvBmL,EAAWjM,EAAKwf,MAAhBvT,OAEF/H,EAAO6O,IAAU3P,IAAItC,EAAOqG,QAClC,GAAKjD,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACG7N,EAAK6N,KAAK9C,UAAYhD,GAEtBjM,EAAKyhB,kBAMrB2W,kBAAoB,SAAAt3B,GAAU,IAClBmL,EAAWjM,EAAKwf,MAAhBvT,OAEF/H,EAAO6O,IAAU3P,IAAItC,EAAOyF,SAClC,GAAKrC,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACD,GAAI7N,EAAK6N,KAAK9C,UAAYhD,EACtB,GAAKnL,EAAOiE,MAGL,CACH,IAAMjF,EAAQC,IAAUuD,WACxBsQ,YAAgB9T,EAAOoE,QAHvBlE,EAAKyhB,kBAUzB4W,kBAAoB,SAAAv3B,GAAU,IAClBmL,EAAWjM,EAAKwf,MAAhBvT,OAEF/H,EAAO6O,IAAU3P,IAAItC,EAAOyF,SAClC,GAAKrC,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACG7N,EAAK6N,KAAK9C,UAAYhD,GAAW/H,EAAKa,OAEtC/E,EAAKyhB,kBAMrB6W,aAAe,SAAA9sB,GAAS,IAAA+T,EACSvf,EAAKwf,MAA1BvT,EADYsT,EACZtT,OAAQssB,EADIhZ,EACJgZ,SACXA,IAEL/sB,EAAMqa,kBACN0S,EAAStsB,0FA1GS8Y,EAAWC,GAC7B,OAAID,EAAU9Y,SAAW9L,KAAKqf,MAAMvT,mDAQpClM,IAAU2hB,GAAG,uBAAwBvhB,KAAK+3B,wBAC1Cn4B,IAAU2hB,GAAG,uBAAwBvhB,KAAKg4B,wBAC1CplB,IAAU2O,GAAG,kBAAmBvhB,KAAKi4B,mBACrCrlB,IAAU2O,GAAG,kBAAmBvhB,KAAKk4B,kEAIrCt4B,IAAUoC,eAAe,uBAAwBhC,KAAK+3B,wBACtDn4B,IAAUoC,eAAe,uBAAwBhC,KAAKg4B,wBACtDplB,IAAU5Q,eAAe,kBAAmBhC,KAAKi4B,mBACjDrlB,IAAU5Q,eAAe,kBAAmBhC,KAAKk4B,oDA0F5C,IAAA3X,EACwBvgB,KAAKqf,MAA1BvT,EADHyU,EACGzU,OAAQssB,EADX7X,EACW6X,SACVh0B,EAASpE,KAAKqf,MAAdjb,KACN,IAAK0H,IAAW1H,EAAM,OAAO,KAG7B,KADAA,EAAO2K,IAAU9L,IAAI6I,IAAW1H,GACrB,OAAO,KANb,IAQGmP,EAAkBnP,EAAlBmP,cAEFsH,EAAU6X,YAAetuB,GACzB+D,EAAOoL,GAAiBA,EAAcP,MAAQpT,IAAUoI,QAAQuL,EAAcP,MAAMtQ,IAAM,KAC1F8e,EAAM5hB,IAAU2I,WAAWJ,GAC3BkwB,EAAS,cAAArtB,OAAkByZ,KAAK6T,IAAIxsB,GAAU,EAAK,GACnD8T,EAAYe,IAAW,aAAD7gB,OAAAy4B,EAAA,EAAAz4B,CAAA,GAAkBu4B,GAAalwB,GAAQ,CAAEqwB,QAASJ,IAE9E,OAAO5W,EACH+V,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAWA,EAAW4B,IAAKA,EAAKI,WAAW,EAAOC,IAAI,GAAG/B,QAAS9f,KAAKm4B,eAE5EZ,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAWA,EAAWE,QAAS9f,KAAKm4B,cACrCZ,EAAA/2B,EAAAkM,cAAA,QAAMkT,UAAU,aAAa/E,WAlIfmF,cA8IfH,sKC9ITwM,qNAWFoM,0BAA4B,SAAA93B,GAAU,IAC1ByE,EAAYvF,EAAKwf,MAAMja,QAAvBA,QACA2C,EAAWpH,EAAXoH,OAEH3C,GAEDA,EAAQ1C,KAAOqF,GACflI,EAAKyhB,iBAIboX,mCAAqC,SAAA/3B,GAAU,IACnC8F,EAAc5G,EAAKwf,MAAMja,QAAzBqB,UACR,GAAKA,EAAL,CAF2C,IAInCsB,EAAWpH,EAAXoH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAKyhB,mGA3BT1hB,IAAU2hB,GAAG,mCAAoCvhB,KAAK04B,oCACtD94B,IAAU2hB,GAAG,0BAA2BvhB,KAAKy4B,0EAI7C74B,IAAUoC,eAAe,mCAAoChC,KAAK04B,oCAClE94B,IAAUoC,eAAe,0BAA2BhC,KAAKy4B,4DAyBpD,IAAArZ,EACuEpf,KAAKqf,MAAzEO,EADHR,EACGQ,UAAWM,EADdd,EACcc,YAAayY,EAD3BvZ,EAC2BuZ,KAAezyB,EAD1CkZ,EACiCha,QAAiBuH,EADlDyS,EACkDzS,MAAO2S,EADzDF,EACyDE,UACtD7Y,EAAsCP,EAAtCO,UAAWrB,EAA2Bc,EAA3Bd,QAASoK,EAAkBtJ,EAAlBsJ,MAAOE,EAAWxJ,EAAXwJ,OAE7B0mB,EAAehiB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpD4c,EAAMpN,YAAOhP,GACbwzB,EAAYhE,YAAmBnuB,GAE/BoyB,EAAUxY,YAAW,CAAE7Q,MAAOA,EAAOE,OAAQA,GAAUwQ,GAC7D,IAAK2Y,EAAS,OAAO,KAErB,IAAMC,EAAYh5B,OAAAi5B,EAAA,EAAAj5B,CAAA,CACd0P,MAAOqpB,EAAQrpB,MACfE,OAAQmpB,EAAQnpB,QACb/C,GAGP,OACI4qB,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,UAAWf,GAAYjT,MAAOmsB,EAAchZ,QAASR,GAC3EkC,EACG+V,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBgC,WAAW,EAAOJ,IAAKA,EAAKK,IAAI,KAE/D0V,EAAA/2B,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,gBAAiB,CAAEqY,gBAAiBJ,GAAaD,IACvE/W,WAAW,EACXJ,IAAK4U,EACLvU,IAAI,aA3DN9B,IAAMC,YA4E5BqM,EAAQvL,aAAe,CACnB9Z,OAAQ,EACRC,UAAW,EACXqY,UAAW,aACXqZ,MAAM,EACNzY,YAAa+Y,KAGF5M,+KCnFT/L,sBACF,SAAAA,EAAYjB,GAAO,IAAAxf,EAAAC,OAAAw1B,EAAA,EAAAx1B,CAAAE,KAAAsgB,IACfzgB,EAAAC,OAAAkwB,EAAA,EAAAlwB,CAAAE,KAAAF,OAAAmwB,EAAA,EAAAnwB,CAAAwgB,GAAAngB,KAAAH,KAAMqf,KAoBV6Z,wBAA0B,SAAAv4B,GAAU,IACxBsF,EAAcpG,EAAKokB,MAAnBhe,UACA8B,EAAWpH,EAAXoH,OAEH9B,GAEDA,EAAUrB,MAAMlC,KAAOqF,GACvBlI,EAAKyhB,eA5BM,IAGP1c,EAA+Bya,EAA/Bza,MAAOqH,EAAwBoT,EAAxBpT,KAAMktB,EAAkB9Z,EAAlB8Z,cACflzB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACjCxF,EAAYsJ,YAAQnL,EAAMmB,MAAOozB,GALxB,OAOft5B,EAAKokB,MAAQ,CACThe,UAAWA,EACXQ,UAAWA,GATA5G,mFAcfD,IAAU2hB,GAAG,wBAAyBvhB,KAAKk5B,wEAI3Ct5B,IAAUoC,eAAe,wBAAyBhC,KAAKk5B,0DAclD,IAAA9Z,EACmDpf,KAAKqf,MAArDa,EADHd,EACGc,YAAaZ,EADhBF,EACgBE,UAAW8Z,EAD3Bha,EAC2Bga,aAAczsB,EADzCyS,EACyCzS,MADzCqX,EAE4BhkB,KAAKikB,MAA9Bxd,EAFHud,EAEGvd,UAAWR,EAFd+d,EAEc/d,UAEnB,IAAKA,EAAW,OAAO,KAEvB,IAAMub,EAAMpN,YAAOnO,EAAUrB,OACvBwxB,EAAehiB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpDg0B,EAAYhE,YAAmBnuB,GAE/B2Z,EAAeC,YAAWpa,EAAWia,GAC3C,IAAKE,EAAc,OAAO,KAE1B,IAAMiZ,EAAUv5B,OAAAi5B,EAAA,EAAAj5B,CAAA,CACZ0P,MAAO4Q,EAAa5Q,MACpBE,OAAQ0Q,EAAa1Q,QAClB/C,GAGP,OACI4qB,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,QAAQjT,MAAO0sB,EAAYvZ,QAASR,GAC9CkC,EACG+V,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,cAAcgC,WAAW,EAAOJ,IAAKA,EAAKK,IAAI,KAE7D0V,EAAA/2B,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,cAAe,CAAEqY,gBAAiBJ,IACxDhX,WAAW,EACXJ,IAAK4U,EACLvU,IAAI,KAGXuX,GAAgB7B,EAAA/2B,EAAAkM,cAAC4sB,EAAA,EAAD,CAAcp4B,KAAM+E,EAAUrB,MAAOmI,UAAQ,EAAC+oB,QAAM,EAACc,cAAY,YAhE9E7W,IAAMC,YAmF1BM,EAAMQ,aAAe,CACjB7U,KAAMgG,IACNknB,cAAeI,IACfrZ,YAAaa,IACbqY,cAAc,GAGH9Y,sKC1FTkZ,qNACFrB,aAAe,SAAA9sB,GAAS,IAAA+T,EAC2Bvf,EAAKwf,MAA5CrY,EADYoY,EACZpY,OAAQ8E,EADIsT,EACJtT,OAAQujB,EADJjQ,EACIiQ,SAAU+E,EADdhV,EACcgV,SAElC,OAAI/E,GAAYvjB,GACZT,EAAMqa,uBAEN+T,YAAgB3tB,GAAQ,IAIxBsoB,GAAYptB,GACZqE,EAAMqa,uBAENgU,YAAgB1yB,EAAQ,MAAM,SAHlC,2EAQK,IAAAuZ,EAC6CvgB,KAAKqf,MAA/ChI,EADHkJ,EACGlJ,EAAGrQ,EADNuZ,EACMvZ,OAAQ8E,EADdyU,EACczU,OAAQujB,EADtB9O,EACsB8O,SAAU+E,EADhC7T,EACgC6T,SAE/BhwB,EAAO2K,IAAU9L,IAAI6I,GAC3B,GAAI1H,EAAM,CACN,IAAMi0B,EAAY3c,YAAc1U,GAC1B,uBADY,cAAAgE,OAEGyZ,KAAK6T,IAAIxsB,GAAU,EAAK,GACvC8T,EAAYe,IAAW,CAAC0X,GAAY,kBAEpC7Y,EAAWzI,YAAgB3S,GAEjC,OAAOirB,EACHsK,EAAAn5B,EAAAkM,cAAA,KAAGkT,UAAWA,EAAWE,QAAS9f,KAAKm4B,cAClC3Y,GAGLma,EAAAn5B,EAAAkM,cAAAitB,EAAAn5B,EAAA4kB,SAAA,KAAG5F,GAKX,GADa5M,IAAU3P,IAAI+D,GACjB,CACN,IAAM4Y,EAAYe,IAAW,uBAAwB,kBAE/CnB,EAAWzD,YAAa/U,GAAQ,EAAOqQ,GAE7C,OAAO+c,EACHuF,EAAAn5B,EAAAkM,cAAA,KAAGkT,UAAWA,EAAWE,QAAS9f,KAAKm4B,cAClC3Y,GAGLma,EAAAn5B,EAAAkM,cAAAitB,EAAAn5B,EAAA4kB,SAAA,KAAG5F,GAIX,OAAO,YAvDaO,IAAMC,YAkElCwZ,EAAc1Y,aAAe,CACzBuO,UAAU,EACV+E,UAAU,GAGC/M,kBAAkBmS,uFCF3B75B,EAAQ,gBA7EV,SAAAi6B,IAAc,IAAA/5B,EAAA,OAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAA45B,IACV/5B,EAAAC,OAAA+5B,EAAA,EAAA/5B,CAAAE,KAAAF,OAAAg6B,EAAA,EAAAh6B,CAAA85B,GAAAz5B,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,6BAA8B,IACvBo5B,EAAoBp5B,EAApBo5B,gBACR,GAAIl6B,EAAKiU,WAAY,KAAAkmB,EACYn6B,EAAKiU,WAA1BpR,EADSs3B,EACTt3B,GAAIu3B,EADKD,EACLC,aACRA,IAAiBF,EAAgBvuB,KAAK,SAAAC,GAAC,OAAIA,IAAM/I,MACjD7C,EAAKiU,WAAahU,OAAOo6B,OAAO,GAAIr6B,EAAKiU,WAAY,CAAEmmB,cAAeA,KAI9Ep6B,EAAKuB,KAAK,6BAA8BT,KArBtCd,EA6Bd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,0BACDd,EAAKuB,KAAK,0BAA2BT,GACrC,MAEJ,IAAK,gCAAiC,IAC1Bw5B,EAASx5B,EAATw5B,KAERt6B,EAAKs6B,KAAOA,EAEZt6B,EAAKuB,KAAK,gCAAiCT,GAC3C,MAEJ,IAAK,iCAAkC,IAC3Bw5B,EAASx5B,EAATw5B,KAEJt6B,EAAKs6B,MAAQt6B,EAAKs6B,KAAKjJ,YAAciJ,EAAKjJ,YAC1CrxB,EAAKs6B,KAAOr6B,OAAOo6B,OAAO,GAAIr6B,EAAKs6B,KAAM,CAAEC,cAAeD,EAAKnmB,YAGnEnU,EAAKuB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,yBAA0B,IACnBmT,EAAenT,EAAfmT,WAERjU,EAAKiU,WAAaA,EAElBjU,EAAKuB,KAAK,yBAA0BT,KA1DlCd,EAkEd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBApEvC9B,EAuEdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAtEpD9B,EAAKiU,WAAa,KAClBjU,EAAKs6B,KAAO,KAEZt6B,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,6BADSkM,iBA+E3BhC,OAAO3E,QAAUzF,EACFA,mFCGA06B,EADA,eAlFX,SAAAC,IAAcx6B,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAs6B,GACVt6B,KAAKu6B,KAAO,IAAIrxB,IAAI,CAChB,CAAC,MAAO,iiBACR,CAAC,MAAO,2DAIZmxB,GACA,OAAOr6B,KAAKu6B,KAAKt3B,IAAIo3B,+BAGrBA,EAAUG,GACVx6B,KAAKu6B,KAAKt5B,IAAIo5B,EAAUG,kCAGrBH,GACH,MAAiB,QAAbA,EACO,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOI,SAASJ,GACpD,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOI,SAASJ,GAC/I,EAEM,QAAbA,EACO,EAGJ,oCAGDK,EAAaL,GACnB,IAAMM,GAAUD,EAAYjW,KAAKmW,IAAI,GAAM56B,KAAK66B,OAAOR,KAAYnuB,QAAQ,GAC3E,SAAAlB,OAAU2vB,EAAV,KAAA3vB,OAAoBhL,KAAKiD,IAAIo3B,0HCxErC,IAAIS,EAAa,IAAI5xB,IAwBrB,SAAS4N,EAAiBxS,GACtB,QAAKA,MACAA,EAAQC,UAENu2B,EAAWh4B,IAAIwB,EAAQC,QAAQ,WAAaD,EAAQgpB,IAAM,IAwFrE,SAASC,EAAyBjpB,GAA2B,IAAlB+qB,EAAkB3tB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GACzD,IAAK4C,EAAS,OAAO,KACrB,IAAKA,EAAQC,QAAS,OAAO,KAE7B,IAAMw2B,EAAaz2B,EAAQ6M,iBAAmBpC,IAAUiN,UAClDjY,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SAC7B40B,EAAmC,uBAAvBj3B,EAAK6N,KAAK,UAAqC7N,EAAK6N,KAAKuI,WAEnEmT,EAAiChpB,EAAjCgpB,IAAKnc,EAA4B7M,EAA5B6M,eAAgB5M,EAAYD,EAAZC,QAC7B,GAAI+oB,EAAM,EACN,OAAQ/oB,EAAQ,UACZ,IAAK,eACD,OAAIw2B,EACO,mEAIPpb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,iEAIb,IAAK,eACD,OAAI0L,EACO,mEAIPpb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,iEAIb,QACI,OAAI0L,EACO,qEAIPpb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,mEAOrB,OAAQ9qB,EAAQ,UACZ,IAAK,8BAA+B,IACxBqW,EAAUhI,IAAU3P,IAAIqB,EAAQ8B,SAAhCwU,MAER,OAAImgB,EACA,yBAAA/vB,OAA6B4P,EAA7B,QAIA+E,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IADrD,sBAAArkB,OAEwB4P,EAFxB,SAMR,IAAK,wBACD,IAAMuB,EAAU5X,EAAQ02B,gBACnBztB,IAAI,SAAA/B,GAAC,OAAIkU,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAeliB,IAAK7L,EAAGK,OAAQL,EAAG4jB,SAAUA,MACrDlC,OAAO,SAACC,EAAaC,EAAS9a,EAAO2oB,GAClC,IAAMC,EAAY5oB,IAAU2oB,EAAMl1B,OAAS,EAAI,QAAU,KACzD,OAAuB,OAAhBonB,EAAuB,CAACC,GAAxB,GAAAriB,OAAAlL,OAAAspB,EAAA,EAAAtpB,CAAuCstB,GAAvC,CAAoD+N,EAAW9N,KACvE,MAEP,OAAI0N,EAC0C,IAAnCx2B,EAAQ02B,gBAAgBj1B,QAAgBzB,EAAQ02B,gBAAgB,KAAOlsB,IAAUiN,UACpF,uBAEA2D,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK,aACAjJ,GAK6B,IAAnC5X,EAAQ02B,gBAAgBj1B,QAAgBzB,EAAQ02B,gBAAgB,KAAO32B,EAAQ6M,eAClFwO,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,qBAGL1P,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,UACAlT,GAIb,IAAK,yBACD,OAAI6e,EACO,wBAGPD,EACO,0BAIPpb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IADrD,wBAMR,IAAK,yBAA0B,IACnBzU,EAAUrW,EAAVqW,MAER,OAAIogB,EACA,mCAAAhwB,OAAuC4P,EAAvC,QAGAmgB,EACA,iCAAA/vB,OAAqC4P,EAArC,QAIA+E,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IADrD,8BAAArkB,OAEgC4P,EAFhC,SAMR,IAAK,0BACD,OAAImgB,EACOx2B,EAAQuK,UAAYC,IAAUiN,UACjC,qBAEA2D,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK,eACDzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQvH,EAAQuK,QAASugB,SAAUA,KAKvD9qB,EAAQuK,UAAYqC,EACvBwO,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,mBAGL1P,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,YACD1P,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQvH,EAAQuK,QAASugB,SAAUA,KAI9D,IAAK,yBACD,OAAI2L,EACO,wBAGPD,EACO,0BAIPpb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,wBAIb,IAAK,wBACD,OAAI0L,EACO,uCAIPpb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,qCAIb,IAAK,oBAAqB,IACd/B,EAAQ/oB,EAAR+oB,IACF8N,EA/QlB,SAAsB9N,GAClB,GAAIA,EAAM,GAAI,CACV,IAAM+N,EAAkB,IAAR/N,EAAY,SAAW,UACvC,SAAAtiB,OAAUsiB,EAAV,KAAAtiB,OAAiBqwB,GAErB,GAAI/N,EAAM,KAAS,CACf,IAAMkG,EAAmC,IAAzB/O,KAAKC,MAAM4I,EAAM,IAAY,SAAW,UACxD,SAAAtiB,OAAUsiB,EAAV,KAAAtiB,OAAiBwoB,GAErB,GAAIlG,EAAM,MAAc,CACpB,IAAMoG,EAAsC,IAA9BjP,KAAKC,MAAM4I,EAAM,GAAK,IAAY,OAAS,QACzD,SAAAtiB,OAAUsiB,EAAV,KAAAtiB,OAAiB0oB,GAErB,GAAIpG,EAAM,OAAkB,CACxB,IAAMgO,EAA0C,IAAnC7W,KAAKC,MAAM4I,EAAM,GAAK,GAAK,IAAY,MAAQ,OAC5D,SAAAtiB,OAAUsiB,EAAV,KAAAtiB,OAAiBswB,GAErB,OAAY,SAARhO,EACO,SAGX,GAAAtiB,OAAUsiB,EAAV,YA0P0BiO,CAAajO,GAE/B,OAAIA,GAAO,EACHyN,EACO,uCAIPpb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,qCAKT0L,EACA,sCAAA/vB,OAA6CowB,GAI7Czb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IADrD,mCAAArkB,OAEwCowB,IAIhD,IAAK,yBACD,MAAO,yCAEX,IAAK,uBACD,MAAO,iCAEX,IAAK,2BACD,OACIzb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,yBAIb,IAAK,6BACD,OAAO9qB,EAAQmZ,KAEnB,IAAK,mBACD,IAAM8d,EAAc/tB,IAAaxK,IAAIqB,EAAQ8B,QAAS7B,EAAQk3B,iBAC9D,GACID,GACAA,EAAYj3B,SACqB,gBAAjCi3B,EAAYj3B,QAAQ,UACpBi3B,EAAYj3B,QAAQS,KACtB,KACUA,EAASw2B,EAAYj3B,QAArBS,KAER,OAAI+1B,EACA,cAAA/vB,OAAqBzG,EAAQm3B,MAA7B,YAAA1wB,OAA0ChG,EAAK4V,MAA/C,QAIA+E,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQ0vB,EAAYrqB,eAAgBke,SAAUA,IADjE,WAAArkB,OAEgBzG,EAAQm3B,MAFxB,YAAA1wB,OAEqChG,EAAK4V,MAF1C,SAOR,OAAImgB,EACA,cAAA/vB,OAAqBzG,EAAQm3B,OAI7B/b,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IADrD,WAAArkB,OAEgBzG,EAAQm3B,QAIhC,IAAK,8BACD,MAAO,kCAEX,IAAK,0BACD,IAAM33B,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SAE7Bu1B,EAAuBp3B,EAAQq3B,MAChCpuB,IAAI,SAAA/B,GAAC,OA1UtB,SAAsCmG,GAClC,OAAQA,EAAK,UACT,IAAK,6BACD,MAAO,UAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,kCACD,MAAO,QAEX,IAAK,kCACD,MAAO,gBAEX,IAAK,sCACD,MAAO,oBAEX,IAAK,8BACD,MAAO,WAEX,IAAK,0CACD,MAAO,wBAEX,IAAK,qCACD,MAAO,mBAEX,IAAK,iCACD,MAAO,eAEX,IAAK,qCACD,MAAO,oBAEX,IAAK,2CACD,MAAO,yBAEX,IAAK,iCACD,MAAO,eAIf,MAAO,GA+ReiqB,CAA6BpwB,KACtC0hB,OAAO,SAACC,EAAaC,GAClB,OAAuB,OAAhBD,EAAuB,CAACC,GAAxB,GAAAriB,OAAAlL,OAAAspB,EAAA,EAAAtpB,CAAuCstB,GAAvC,CAAoD,KAAMC,KAClE,MAEP,OACI1N,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQ/H,EAAK6N,KAAK9C,QAASugB,SAAUA,IACnD,sCACAsM,GAIb,IAAK,2BACD,IAAM53B,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SAE7B01B,EAAiBruB,IAAaxK,IAAIqB,EAAQ8B,QAAS7B,EAAQw3B,oBACjE,GACID,GACAA,EAAev3B,SACqB,mBAApCu3B,EAAev3B,QAAQ,UACvBu3B,EAAev3B,QAAQy3B,QACzB,KACUA,EAAYF,EAAev3B,QAA3By3B,QAER,OACIrc,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,+CAAApa,OAC+CsvB,EAAS2B,UAChD13B,EAAQ23B,aACR33B,EAAQ81B,UAHhB,QAKI1a,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQ/H,EAAK6N,KAAK9C,QAASugB,SAAUA,IALxD,QAAArkB,OAMagxB,EAAQphB,QAK7B,OACI+E,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,+CAAApa,OAC+CsvB,EAAS2B,UAChD13B,EAAQ23B,aACR33B,EAAQ81B,UAHhB,QAKI1a,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQ/H,EAAK6N,KAAK9C,QAASugB,SAAUA,KAIhE,IAAK,8BACD,MAAO,qBAEX,IAAK,oBACD,IAAM8M,EA/UlB,SAA0B73B,EAAS+qB,GAC/B,IAAK/qB,EAAS,OAAO,KADoB,IAGjC8B,EAA4B9B,EAA5B8B,QAAS+K,EAAmB7M,EAAnB6M,eAEjB,GAAuB,IAAnBA,EACA,OAAOwO,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAG5D,IAAMtrB,EAAO6O,IAAU3P,IAAImD,GAC3B,OAAKrC,EAEEA,EAAK6W,MAFM,KAqUKwhB,CAAiB93B,EAAS+qB,GACnCgN,EAAgB5uB,IAAaxK,IAAIqB,EAAQ8B,QAAS7B,EAAQ4Z,YAChE,IAAKke,IAAkBA,EAAc93B,QACjC,OACIob,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK+W,EACA,qBAKb,IAAIG,EAAgB,oBACpB,GAAIxlB,EAAiBulB,GACjBC,EAAgB,iCAEhB,OAAQD,EAAc93B,QAAQ,UAC1B,IAAK,mBACD+3B,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,kBACDA,EAAgB,iBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,qBAChB,MAEJ,IAAK,kBACDA,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,cACD,IACM5e,EAAO2e,EAAc93B,QAAQmZ,KAAKA,KAEpC4e,EADA5e,EAAK1X,QAFS,GAGD,eAAAgF,OAAe0S,EAAf,QAEA,eAAA1S,OAAe0S,EAAKoN,UAAU,EAL7B,IAKD,WAGjB,MAEJ,IAAK,qBACDwR,EAAgB,8BAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAM5B,OACI3c,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK+W,EACAG,GAIb,IAAK,yBACD,OAAIvB,EACO,yBAIPpb,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IAChD,uBAIb,IAAK,8BAA+B,IACxBzU,EAAUrW,EAAVqW,MAER,OAAIogB,EACO,kBAGPD,EACA,yBAAA/vB,OAA6B4P,EAA7B,QAIA+E,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC8sB,EAAA,EAAD,CAAe1tB,OAAQqF,EAAgBke,SAAUA,IADrD,sBAAArkB,OAEwB4P,EAFxB,SAMR,IAAK,qBACD,MAAO,sBAEX,IAAK,0BACD,mEAAA5P,OAAoEzG,EAAQg4B,YAA5E,KAIR,UAAAvxB,OAAW1G,EAAQC,QAAQ,SAA3B,KAtkBJu2B,EAAW75B,IAAI,8BAA+B,+BAC9C65B,EAAW75B,IAAI,wBAAyB,yBACxC65B,EAAW75B,IAAI,yBAA0B,0BACzC65B,EAAW75B,IAAI,yBAA0B,0BACzC65B,EAAW75B,IAAI,0BAA2B,2BAC1C65B,EAAW75B,IAAI,yBAA0B,0BACzC65B,EAAW75B,IAAI,wBAAyB,yBACxC65B,EAAW75B,IAAI,oBAAqB,qBACpC65B,EAAW75B,IAAI,yBAA0B,0BACzC65B,EAAW75B,IAAI,uBAAwB,wBACvC65B,EAAW75B,IAAI,2BAA4B,4BAC3C65B,EAAW75B,IAAI,6BAA8B,8BAC7C65B,EAAW75B,IAAI,mBAAoB,oBACnC65B,EAAW75B,IAAI,8BAA+B,+BAC9C65B,EAAW75B,IAAI,0BAA2B,2BAC1C65B,EAAW75B,IAAI,2BAA4B,4BAC3C65B,EAAW75B,IAAI,8BAA+B,+BAC9C65B,EAAW75B,IAAI,oBAAqB,qBACpC65B,EAAW75B,IAAI,yBAA0B,0BACzC65B,EAAW75B,IAAI,8BAA+B,+BAC9C65B,EAAW75B,IAAI,qBAAsB,sBACrC65B,EAAW75B,IAAI,0BAA2B,kLCZpCu7B,qNAWFC,oCAAsC,SAAA97B,GAAU,IACpC8F,EAAc5G,EAAKwf,MAAnB5Y,UACR,GAAKA,EAAL,CAEA,IAAMvF,EAAOuF,EAAU7B,MACvB,GAAK1D,EAAL,CAL4C,IAOpC6G,EAAWpH,EAAXoH,OAEJ7G,EAAKwB,KAAOqF,GACZlI,EAAKyhB,oGAnBT1hB,IAAU2hB,GAAG,oCAAqCvhB,KAAKy8B,qCACvD78B,IAAU2hB,GAAG,iCAAkCvhB,KAAKy8B,oFAIpD78B,IAAUoC,eAAe,oCAAqChC,KAAKy8B,qCACnE78B,IAAUoC,eAAe,iCAAkChC,KAAKy8B,sEAiB3D,IAAArd,EAC+Dpf,KAAKqf,MAAjEmB,EADHpB,EACGoB,QAAS/Z,EADZ2Y,EACY3Y,UAAWvF,EADvBke,EACuBle,KAAM2hB,EAD7BzD,EAC6ByD,KAAMiU,EADnC1X,EACmC0X,aAAcxX,EADjDF,EACiDE,UAEhD8W,EAAehiB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpDgb,EAAYe,IAAW,aAAc,CAAE+b,4BAA6BtG,IAE1E,OACIuD,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBE,QAASR,GACnC8W,EACGuD,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAWA,EAAW4B,IAAK4U,EAAcxU,WAAW,EAAOC,IAAI,KAEpE8X,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAWY,EAAQ8W,aAE3Bp2B,GACGy4B,EAAAn5B,EAAAkM,cAACiwB,EAAA,EAAD,CACIz7B,KAAMA,EACNk1B,aAAcA,EACdrpB,UAAQ,EACR+oB,QAAM,EACNc,cAAY,EACZC,OAAQ,EACRhU,KAAMA,EACNiU,aAAcA,YA/CX/W,IAAMC,YA+DlBgB,QAxEA,SAAAC,GAAK,MAAK,CACrBqW,WAAY,CACRA,WAAYrW,EAAM2b,QAAQC,QAAQC,KAClCC,aAAc,MACdvtB,MAAO,GACPE,OAAQ,MAmEkB,CAAE0X,WAAW,GAAhCpG,CAAwCwb,4LCnEjDrc,sBACF,SAAAA,EAAYd,GAAO,IAAAxf,EAAA,OAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAmgB,IACftgB,EAAAC,OAAAme,EAAA,EAAAne,CAAAE,KAAAF,OAAAoe,EAAA,EAAApe,CAAAqgB,GAAAhgB,KAAAH,KAAMqf,KA+BV2d,gBAAkB,WACd,IAAMxK,EAAS3yB,EAAKo9B,SAAS5P,QACzBmF,IACI3yB,EAAKq9B,QAAUr9B,EAAKs9B,UAAYt9B,EAAKu9B,kBAAoBv9B,EAAKw9B,uBAE9D7K,EAAO8K,OAGP9K,EAAO+K,UAxCA19B,EA6CnB29B,wCAA0C,SAAA78B,GACtCd,EAAKw9B,uBAAyBpgB,QAAQ7E,IAAiBqlB,2BAEvD59B,EAAKm9B,mBAhDUn9B,EAmDnB69B,iCAAmC,SAAA/8B,GAC/Bd,EAAKu9B,gBAAkBngB,QAAQ7E,IAAiBulB,oBAEhD99B,EAAKm9B,mBAtDUn9B,EAyDnB+9B,0BAA4B,SAAAj9B,GACxBd,EAAKs9B,QAAUx8B,EAAOw8B,QAEtBt9B,EAAKm9B,mBA5DUn9B,EA+DnBg+B,6BAA+B,SAAAl9B,GAAU,IAAAye,EACPvf,EAAKwf,MAA3BrY,EAD6BoY,EAC7BpY,OAAQC,EADqBmY,EACrBnY,UACVqQ,EAAG,GAAAtM,OAAMhE,EAAN,KAAAgE,OAAgB/D,GAEzBpH,EAAKq9B,OAASv8B,EAAO4M,SAASzK,IAAIwU,GAElCzX,EAAKm9B,mBArEUn9B,EAwEnBi+B,4BAA8B,SAAAn9B,GAAU,IAC5B6D,EAAc3E,EAAKwf,MAAM7a,UAAzBA,UACAuD,EAAWpH,EAAXoH,OAEHvD,GAEDA,EAAU9B,KAAOqF,GACjBlI,EAAKyhB,eA/EMzhB,EAmFnBk+B,qCAAuC,SAAAp9B,GAAU,IACrC8F,EAAc5G,EAAKwf,MAAM7a,UAAzBiC,UACR,GAAKA,EAAL,CAF6C,IAIrCsB,EAAWpH,EAAXoH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAKyhB,gBAvFTzhB,EAAKo9B,SAAWld,IAAMie,YAEtBn+B,EAAKs9B,QAAUpzB,OAAOk0B,SACtBp+B,EAAKq9B,QAAS,EACdr9B,EAAKu9B,gBAAkBngB,QAAQ7E,IAAiBulB,oBAChD99B,EAAKw9B,uBAAyBpgB,QAAQ7E,IAAiBqlB,2BARxC59B,mFAYfD,IAAU2hB,GAAG,qCAAsCvhB,KAAK+9B,sCACxDn+B,IAAU2hB,GAAG,4BAA6BvhB,KAAK89B,6BAC/C1lB,IAAiBmJ,GAAG,0BAA2BvhB,KAAK49B,2BACpDxlB,IAAiBmJ,GAAG,iCAAkCvhB,KAAK09B,kCAC3DtlB,IAAiBmJ,GAAG,wCAAyCvhB,KAAKw9B,yCAClE/vB,IAAa8T,GAAG,6BAA8BvhB,KAAK69B,6EAInDj+B,IAAUoC,eAAe,qCAAsChC,KAAK+9B,sCACpEn+B,IAAUoC,eAAe,4BAA6BhC,KAAK89B,6BAC3D1lB,IAAiBpW,eAAe,0BAA2BhC,KAAK49B,2BAChExlB,IAAiBpW,eAAe,iCAAkChC,KAAK09B,kCACvEtlB,IAAiBpW,eACb,wCACAhC,KAAKw9B,yCAET/vB,IAAazL,eAAe,6BAA8BhC,KAAK69B,+DAiE1D,IAAAtd,EACiCvgB,KAAKqf,MAAnCa,EADHK,EACGL,YAAaZ,EADhBiB,EACgBjB,UAAWjI,EAD3BkJ,EAC2BlJ,EAD3B6mB,EAEsDl+B,KAAKqf,MAAM7a,UAA9DiC,EAFHy3B,EAEGz3B,UAAWjC,EAFd05B,EAEc15B,UAAW25B,EAFzBD,EAEyBC,UAAW3uB,EAFpC0uB,EAEoC1uB,MAAOE,EAF3CwuB,EAE2CxuB,OAE1C0Q,EAAeC,YAAW5Z,GAAa,CAAE+I,MAAOA,EAAOE,OAAQA,GAAUwQ,GAC/E,IAAKE,EAAc,OAAO,KAE1B,IAAMzT,EAAQ,CACV6C,MAAO4Q,EAAa5Q,MACpBE,OAAQ0Q,EAAa1Q,QAGnB0mB,EAAehiB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpD4c,EAAMpN,YAAO5P,GAEbo0B,EAAYhE,YAAmBnuB,GAC/B23B,EAAQnqB,YAAckqB,GAE5B,OACIxE,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,YAAYjT,MAAOA,EAAOmT,QAASR,GAC7CkC,EACG4c,EACIzE,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,6BAA6BjT,MAAOA,EAAO6U,IAAKA,EAAKK,IAAI,KAExE8X,EAAAn5B,EAAAkM,cAAA,SACI2xB,IAAKr+B,KAAKi9B,SACVrd,UAAU,6BACV4B,IAAKA,EACL8c,OAAQlI,EACRmI,OAAK,EACLC,UAAQ,EACRC,MAAI,EACJC,aAAW,EACXlvB,MAAO7C,EAAM6C,MACbE,OAAQ/C,EAAM+C,SAItBiqB,EAAAn5B,EAAAkM,cAAAitB,EAAAn5B,EAAA4kB,SAAA,KACIuU,EAAAn5B,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,oBAAqB,CAAEqY,gBAAiBJ,IAC9DjsB,MAAOA,EACP6U,IAAK4U,EACLvU,IAAI,KAER8X,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBzT,YAAY3H,KAGrDm1B,EAAAn5B,EAAAkM,cAAC4sB,EAAA,EAAD,CACIp4B,KAAMsD,EACNuI,UAAQ,EACR+oB,QAAM,EACNc,cAAY,EACZ/T,KAAM8W,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBvI,EAAE,wBApJrC0I,IAAMC,YAoK9BG,EAAUW,aAAe,CACrB7U,KAAMgG,IACNiO,YAAaa,KAGFsG,kBAAkBlH,8JC1FlBwe,sBAtFX,SAAAA,EAAYtf,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA2+B,IACf9+B,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA6+B,GAAAx+B,KAAAH,KAAMqf,KAkBVle,aAAe,SAAAR,GACX,IAAM40B,EAAc11B,EAAKokB,MAAM/iB,KACzBs0B,EAAW70B,EAAOO,KAEpBq0B,GAAeA,EAAY7yB,KAAO8yB,EAAS9yB,IAC3C7C,EAAK0kB,SAAS,CAAErjB,KAAMs0B,EAAUC,SAAUF,KAxB/B,IAGPr0B,EAASrB,EAAKwf,MAAdne,KAHO,OAIfrB,EAAKokB,MAAQ,CACTkS,cAAej1B,EACfu0B,SAAU,KACVv0B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GAPrBrB,mFAYfD,IAAU2hB,GAAG,aAAcvhB,KAAKmB,6DAIhCvB,IAAUoC,eAAe,aAAchC,KAAKmB,4DA2B1ByjB,EAAWC,GAAW,IAAAb,EACbhkB,KAAKikB,MAAxB/iB,EADgC8iB,EAChC9iB,KAAMu0B,EAD0BzR,EAC1ByR,SAEd,OAAI5Q,EAAU3jB,OAASA,GAInB2jB,EAAU4Q,WAAaA,mCAOtB,IACGv0B,EAASlB,KAAKikB,MAAd/iB,KACR,IAAKA,EAAM,OAAO,KAElB,IAAM09B,EAAsB19B,EAAK0B,OAAS1B,EAAK0B,MAAM0R,sBAC/CuqB,EAAoB39B,EAAK0C,QAAU1C,EAAK0C,OAAO6Q,oBAE/CxI,EAAOE,YAAYjL,GACrB+0B,EAAe,KACf2I,EACA3I,EAAe5hB,YAAkBnT,GAC1B29B,IACP5I,EAAezhB,YAAgBtT,IAGnC,IAAM49B,EAAa7I,EAAY,GAAAjrB,OAAMirB,EAAN,KAAAjrB,OAAsBiB,GAAtB,GAAAjB,OAAkCiB,GAEjE,OACI0T,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAAA,YAAOoyB,uDAhDazf,EAAO4E,GAAO,IAClC/iB,EAASme,EAATne,KACAi1B,EAAkBlS,EAAlBkS,cAER,OAAIj1B,GAAQi1B,GAAiBj1B,EAAKwB,KAAOyzB,EAAczzB,GAC5C,CACHyzB,cAAej1B,EACfu0B,SAAU,KACVv0B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GAIjC,YAzCc6e,IAAMC,YCG7BkM,2LACO,IAAA9M,EAC2Bpf,KAAKqf,MAA7Bva,EADHsa,EACGta,SAAUwa,EADbF,EACaE,UAClB,IAAKxa,EAAU,OAAO,KAFjB,IAIG2B,EAAyB3B,EAAzB2B,UAAWmnB,EAAc9oB,EAAd8oB,UACb1sB,EAAO4D,EAASA,SAEtB,OACI6a,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,YACXD,EAAAnf,EAAAkM,cAAC8vB,EAAA,EAAD,CACI/1B,UAAWA,EACXvF,KAAMA,EACNoe,UAAWA,EACXuD,KAAMlD,EAAAnf,EAAAkM,cAACqyB,EAAAv+B,EAAD,MACNs2B,aAAcnX,EAAAnf,EAAAkM,cAACsyB,EAAAx+B,EAAD,QAElBmf,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBACXD,EAAAnf,EAAAkM,cAAA,KACIkT,UAAU,gBACVE,QAASR,EACT1E,MAAOgT,EACPqR,YAAWrR,EACXsR,WAAU,IAAMvqB,YAAaiZ,IAC5BA,IAGTjO,EAAAnf,EAAAkM,cAACyyB,EAAD,CAAgBj+B,KAAMA,aA5BnB6e,IAAMC,YA0CdkM,qMCtCTF,6BACF,SAAAA,EAAY3M,GAAO,IAAAxf,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAgsB,IACfnsB,EAAAC,OAAAme,EAAA,EAAAne,CAAAE,KAAAF,OAAAoe,EAAA,EAAApe,CAAAksB,GAAA7rB,KAAAH,KAAMqf,KAmDV+f,uBAAyB,SAAAz+B,GAAU,IAAAye,EACDvf,EAAKwf,MAA3BrY,EADuBoY,EACvBpY,OAAQC,EADemY,EACfnY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK0kB,SAAS,CACV8a,QAAQ,EACRzO,SAAS,EACTK,YAAa,KA3DNpxB,EAgEnBy/B,wBAA0B,SAAA3+B,GAAU,IAAA4f,EACO1gB,EAAKwf,MAApCrY,EADwBuZ,EACxBvZ,OAAQC,EADgBsZ,EAChBtZ,UADgBsZ,EACLqQ,QAEvB5pB,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK0kB,SAAS,CAAEqM,SAAS,IAEzB/wB,EAAK0kB,SAAS,CAAEqM,SAAS,KAtEd/wB,EA0EnB0/B,yBAA2B,SAAA5+B,GAAU,IAAAynB,EACHvoB,EAAKwf,MAA3BrY,EADyBohB,EACzBphB,OAAQC,EADiBmhB,EACjBnhB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK0kB,SAAS,CAAEqM,SAAS,KA9Ed/wB,EAkFnB2/B,0BAA4B,SAAA7+B,GAAU,IAAAioB,EACJ/oB,EAAKwf,MAA3BrY,EAD0B4hB,EAC1B5hB,OAAQC,EADkB2hB,EAClB3hB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC5CpH,EAAKokB,MAAMob,QACZx/B,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAa,EACbL,SAAS,IAGV/wB,EAAKokB,MAAMob,QAClBx/B,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAa,EACbL,SAAS,KAjGF,IAGP5pB,EAAsBqY,EAAtBrY,OAAQC,EAAcoY,EAAdpY,UAERmpB,EAA2BL,IAA3BK,KAAM9rB,EAAqByrB,IAArBzrB,QAASssB,EAAYb,IAAZa,QACjByO,EAAS/6B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EANxD,OAQfpH,EAAKokB,MAAQ,CACTob,OAAQA,EACRzO,UAASyO,GAASzO,EAClBK,YAAaoO,GAAUjP,EAAOA,EAAKa,YAAc,EACjDD,SAAUqO,GAAUjP,EAAOA,EAAKY,SAAW,GAZhCnxB,qFAgBG+kB,EAAWC,EAAWC,GAAa,IAAAd,EACFhkB,KAAKikB,MAAhDob,EAD6Crb,EAC7Cqb,OAAQzO,EADqC5M,EACrC4M,QAASK,EAD4BjN,EAC5BiN,YAAaD,EADehN,EACfgN,SAEtC,OAAInM,EAAUwa,SAAWA,IAIrBxa,EAAU+L,UAAYA,IAItB/L,EAAUoM,cAAgBA,GAI1BpM,EAAUmM,WAAaA,gDAQ3BjB,IAAYxO,GAAG,0BAA2BvhB,KAAKw/B,2BAC/CzP,IAAYxO,GAAG,wBAAyBvhB,KAAKs/B,yBAC7CvP,IAAYxO,GAAG,yBAA0BvhB,KAAKu/B,0BAC9CxP,IAAYxO,GAAG,uBAAwBvhB,KAAKo/B,uEAI5CrP,IAAY/tB,eAAe,0BAA2BhC,KAAKw/B,2BAC3DzP,IAAY/tB,eAAe,wBAAyBhC,KAAKs/B,yBACzDvP,IAAY/tB,eAAe,yBAA0BhC,KAAKu/B,0BAC1DxP,IAAY/tB,eAAe,uBAAwBhC,KAAKo/B,yDAqDnD,IAAAK,EAC2Cz/B,KAAKqf,MAA7CrY,EADHy4B,EACGz4B,OAAQC,EADXw4B,EACWx4B,UAAWvC,EADtB+6B,EACsB/6B,MAAO4a,EAD7BmgB,EAC6BngB,UAC1BsR,EAAY5wB,KAAKikB,MAAjB2M,QACR,IAAKlsB,EAAO,OAAO,KAHd,IAKG2B,EAAiD3B,EAAjD2B,sBAAuB2qB,EAA0BtsB,EAA1BssB,SAAiB9vB,EAASwD,EAAhBA,MAEnCkW,EAAQqT,YAAcvpB,GAE5B,OACIi1B,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,YACX+Z,EAAAn5B,EAAAkM,cAACgzB,EAAA,EAAD,CACIj5B,UAAWJ,EACXnF,KAAMA,EACNoe,UAAWA,EACXuD,KAAM8W,EAAAn5B,EAAAkM,cAACizB,EAAAn/B,EAAD,MACNs2B,aAAclG,EAAU+I,EAAAn5B,EAAAkM,cAACkzB,EAAAp/B,EAAD,MAAgBm5B,EAAAn5B,EAAAkM,cAACmzB,EAAAr/B,EAAD,QAE5Cm5B,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,oBACX+Z,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,kBACX+Z,EAAAn5B,EAAAkM,cAAA,KAAGkT,UAAU,gBAAgBE,QAASR,EAAW1E,MAAOA,GACnDA,IAGT+e,EAAAn5B,EAAAkM,cAACozB,EAAA,EAAD,CAAa94B,OAAQA,EAAQC,UAAWA,EAAW+pB,SAAUA,EAAU9vB,KAAMA,aA/H7E6e,IAAMC,YA6IXgM,qIClJT+T,sBACF,SAAAA,EAAY1gB,GAAO,IAAAxf,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAA+/B,IACflgC,EAAAC,OAAAme,EAAA,EAAAne,CAAAE,KAAAF,OAAAoe,EAAA,EAAApe,CAAAigC,GAAA5/B,KAAAH,KAAMqf,KA2DV+f,uBAAyB,SAAAz+B,GAAU,IAAAye,EACSvf,EAAKwf,MAArCrY,EADuBoY,EACvBpY,OAAQC,EADemY,EACfnY,UAAW+pB,EADI5R,EACJ4R,SADIhN,EAENnkB,EAAKokB,MAAd/iB,GAFe8iB,EAEvBqb,OAFuBrb,EAEf9iB,MAEZ8F,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAa,EACb+O,WAAYngC,EAAKogC,cAAc,EAAGjP,GAAU,EAAO9vB,MApE5CrB,EAyEnBqgC,wBAA0B,SAAAv/B,GAAU,IAAA4f,EACQ1gB,EAAKwf,MAArCrY,EADwBuZ,EACxBvZ,OAAQC,EADgBsZ,EAChBtZ,UAAW+pB,EADKzQ,EACLyQ,SADKmP,EAEPtgC,EAAKokB,MAAtBob,EAFwBc,EAExBd,OAAQn+B,EAFgBi/B,EAEhBj/B,KAEZ8F,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK0kB,SAAS,CACV0M,YAAatwB,EAAOswB,YACpBD,SAAUrwB,EAAOqwB,UAAYA,EAC7BgP,WAAYngC,EAAKogC,cAAct/B,EAAOswB,YAAatwB,EAAOqwB,UAAYA,EAAUqO,EAAQn+B,MAjFjFrB,EAsFnB2/B,0BAA4B,SAAA7+B,GAAU,IAAAynB,EACMvoB,EAAKwf,MAArCrY,EAD0BohB,EAC1BphB,OAAQC,EADkBmhB,EAClBnhB,UAAW+pB,EADO5I,EACP4I,SADOoP,EAEIvgC,EAAKokB,MAAnCob,EAF0Be,EAE1Bf,OAAQpO,EAFkBmP,EAElBnP,YAAa/vB,EAFKk/B,EAELl/B,KAEzB8F,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAaoO,EAASpO,EAAc,EACpC+O,WAAYngC,EAAKogC,cAAcZ,EAASpO,EAAc,EAAGD,GAAU,EAAM9vB,KAEtEm+B,GACPx/B,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAa,EACb+O,WAAYngC,EAAKogC,cAAc,EAAGjP,GAAU,EAAO9vB,MApG5CrB,EAyGnBsB,aAAe,SAAAR,GACX,IAAM40B,EAAc11B,EAAKokB,MAAM/iB,KACzBs0B,EAAW70B,EAAOO,KAEpBq0B,GAAeA,EAAY7yB,KAAO8yB,EAAS9yB,IAC3C7C,EAAK0kB,SAAS,CAAErjB,KAAMs0B,EAAUC,SAAUF,KA9G/B11B,EAkHnBogC,cAAgB,SAAChP,EAAaD,EAAUqO,EAAQn+B,GAC5C,IAAMu1B,EAAyBv1B,EAAK0B,OAAS1B,EAAK0B,MAAMG,yBAGlDs9B,GAFuBn/B,EAAK0C,QAAU1C,EAAK0C,OAAOE,uBAEjCw8B,YAAkB7b,KAAKC,MAAMsM,GAAY,KAC1DuP,EAAoBD,YAAkB7b,KAAKC,MAAMuM,GAAe,IAEtE,OAAOoO,GAAU5I,EAAV,GAAAzrB,OAAsCu1B,EAAtC,KAAAv1B,OAA2Dq1B,GAA3D,GAAAr1B,OAAiFq1B,IAzHzE,IAGP/7B,EAAkByrB,IAAlBzrB,QAAS8rB,EAASL,IAATK,KAHFxH,EAI+B/oB,EAAKwf,MAA3CrY,EAJO4hB,EAIP5hB,OAAQC,EAJD2hB,EAIC3hB,UAAW+pB,EAJZpI,EAIYoI,SAAU9vB,EAJtB0nB,EAIsB1nB,KAE/Bm+B,EAAS/6B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EACjEgqB,EAAcoO,GAAUjP,EAAOA,EAAKa,YAAc,EAClDuP,EAAgBnB,GAAUjP,GAAQA,EAAKY,SAAWZ,EAAKY,SAAWA,EAClEuE,EAAc31B,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAT/B,OAWfrB,EAAKokB,MAAQ,CACTob,OAAQA,EACRpO,YAAaA,EACbD,SAAUwP,EACVR,WAAYngC,EAAKogC,cAAchP,EAAaD,EAAUqO,EAAQ9J,GAE9DE,SAAU,KACVv0B,KAAMq0B,GAlBK11B,qFAsBG+kB,EAAWC,GAAW,IAAA4b,EACOzgC,KAAKikB,MAA5Cob,EADgCoB,EAChCpB,OAAQW,EADwBS,EACxBT,WAAY9+B,EADYu/B,EACZv/B,KAAMu0B,EADMgL,EACNhL,SAElC,OAAI5Q,EAAUmb,aAAeA,IAIzBnb,EAAUwa,SAAWA,IAIrBxa,EAAU3jB,OAASA,GAInB2jB,EAAU4Q,WAAaA,gDAQ3B71B,IAAU2hB,GAAG,aAAcvhB,KAAKmB,cAEhC4uB,IAAYxO,GAAG,0BAA2BvhB,KAAKw/B,2BAC/CzP,IAAYxO,GAAG,wBAAyBvhB,KAAKkgC,yBAC7CnQ,IAAYxO,GAAG,uBAAwBvhB,KAAKo/B,uEAI5Cx/B,IAAUoC,eAAe,aAAchC,KAAKmB,cAE5C4uB,IAAY/tB,eAAe,0BAA2BhC,KAAKw/B,2BAC3DzP,IAAY/tB,eAAe,wBAAyBhC,KAAKkgC,yBACzDnQ,IAAY/tB,eAAe,uBAAwBhC,KAAKo/B,yDAmEnD,IAAAsB,EACwB1gC,KAAKikB,MAA1B/iB,EADHw/B,EACGx/B,KAAM8+B,EADTU,EACSV,WACd,IAAK9+B,EAAM,OAAO,KAElB,IAAM09B,EAAsB19B,EAAK0B,OAAS1B,EAAK0B,MAAM0R,sBAC/CuqB,EAAoB39B,EAAK0C,QAAU1C,EAAK0C,OAAO6Q,oBAC/CgiB,EAAyBv1B,EAAK0B,OAAS1B,EAAK0B,MAAMG,yBAGlDkJ,GAFuB/K,EAAK0C,QAAU1C,EAAK0C,OAAOE,uBAE3CqI,YAAYjL,IACrB+0B,EAAe,KACf2I,EACA3I,EAAe5hB,YAAkBnT,GAC1B29B,IACP5I,EAAezhB,YAAgBtT,IAEnC,IAAM49B,EAAa7I,EAAY,GAAAjrB,OAAMirB,EAAN,KAAAjrB,OAAsBiB,GAAtB,GAAAjB,OAAkCiB,GAEjE,OACI0tB,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,iBACT6W,GAA0BkD,EAAAn5B,EAAAkM,cAAA,eAAA1B,OAAU8zB,EAAV,OAC5BnF,EAAAn5B,EAAAkM,cAAA,YAAOszB,WAlJGjgB,IAAMC,YA+JjB+f,+KC5JTxT,qNASFoU,iCAAmC,SAAAhgC,GAAU,IACjC8F,EAAc5G,EAAKwf,MAAM/Z,MAAzBmB,UACAsB,EAAWpH,EAAXoH,OAEHtB,GAEDA,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAKyhB,kGAdT1hB,IAAU2hB,GAAG,iCAAkCvhB,KAAK2gC,iFAIpD/gC,IAAUoC,eAAe,iCAAkChC,KAAK2gC,mEAc3D,IAAAvhB,EAC8Bpf,KAAKqf,MAAhCa,EADHd,EACGc,YAAaZ,EADhBF,EACgBE,UADhBshB,EAEiD5gC,KAAKqf,MAAM/Z,MAAzDmB,EAFHm6B,EAEGn6B,UAAWnB,EAFds7B,EAEct7B,MAAOkK,EAFrBoxB,EAEqBpxB,MAAOE,EAF5BkxB,EAE4BlxB,OAAQshB,EAFpC4P,EAEoC5P,SAEnC5Q,EAAeC,YAAW5Z,GAAa,CAAE+I,MAAOA,EAAOE,OAAQA,GAAUwQ,GAC/E,IAAKE,EAAc,OAAO,KAE1B,IAAMzT,EAAQ,CACV6C,MAAO4Q,EAAa5Q,MACpBE,OAAQ0Q,EAAa1Q,QAGnBxO,EAAOuF,EAAYA,EAAU7B,MAAQ,KACrCuD,EAAOjH,EAAOtB,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAAO,KACxDqZ,EAAM5hB,IAAU2I,WAAWJ,GAC3BywB,EAAYhE,YAAmBnuB,GAErC,OACIkzB,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,QAAQjT,MAAOA,EAAOmT,QAASR,GAC1Cqa,EAAAn5B,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,gBAAiB,CAAEqY,gBAAiBJ,IAC1DjsB,MAAOA,EACP6U,IAAKA,EACLK,IAAI,KAER8X,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,cACX+Z,EAAAn5B,EAAAkM,cAACmzB,EAAAr/B,EAAD,OAEJm5B,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,cAAc0gB,YAAkBtP,GAAY,IAAM7kB,YAAY7G,YAhDzEya,IAAMC,YA+D1BuM,EAAMzL,aAAe,CACjB7U,KAAMgG,IACNiO,YAAaa,KAGFwL,+PC7DT4I,UAAc,CAChBC,OAAQ,+BAGN5I,cACF,SAAAA,EAAYnN,GAAO,IAAAxf,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAwsB,IACf3sB,EAAAC,OAAAme,EAAA,EAAAne,CAAAE,KAAAF,OAAAoe,EAAA,EAAApe,CAAA0sB,GAAArsB,KAAAH,KAAMqf,KA6FV2d,gBAAkB,WACd,IAAMxK,EAAS3yB,EAAKo9B,SAAS5P,QAC7B,GAAImF,EACA,GAAI3yB,EAAKq9B,QAAUr9B,EAAKs9B,UAAYt9B,EAAKu9B,kBAAoBv9B,EAAKw9B,uBAE9D7K,EAAO8K,WACJ,CACH,GAAIz9B,EAAKokB,MAAMob,OACX,OAIJ7M,EAAO+K,UA1GA19B,EA+GnB29B,wCAA0C,SAAA78B,GACtCd,EAAKw9B,uBAAyBpgB,QAAQ7E,IAAiBqlB,2BAEvD59B,EAAKm9B,mBAlHUn9B,EAqHnB69B,iCAAmC,SAAA/8B,GAC/Bd,EAAKu9B,gBAAkBngB,QAAQ7E,IAAiBulB,oBAEhD99B,EAAKm9B,mBAxHUn9B,EA2HnB+9B,0BAA4B,SAAAj9B,GACxBd,EAAKs9B,QAAUx8B,EAAOw8B,QAEtBt9B,EAAKm9B,mBA9HUn9B,EAiInBg+B,6BAA+B,SAAAl9B,GAAU,IAAAye,EACPvf,EAAKwf,MAA3BrY,EAD6BoY,EAC7BpY,OAAQC,EADqBmY,EACrBnY,UACVqQ,EAAG,GAAAtM,OAAMhE,EAAN,KAAAgE,OAAgB/D,GAEzBpH,EAAKq9B,OAASv8B,EAAO4M,SAASzK,IAAIwU,GAElCzX,EAAKm9B,mBAvIUn9B,EA0InBghC,iCAAmC,SAAAlgC,GAAU,IAAA4f,EACX1gB,EAAKwf,MAA3BrY,EADiCuZ,EACjCvZ,OAAQC,EADyBsZ,EACzBtZ,UACZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,YAClCpH,EAAKo9B,SAAS5P,SAEzBxtB,EAAK0kB,SAAS,CAAEuc,UAAWngC,EAAOwwB,QAAU,WACxCtxB,EAAKkhC,qBAhJFlhC,EAsJnBqgC,wBAA0B,SAAAv/B,GAAU,IAAAynB,EACFvoB,EAAKwf,MAA3BrY,EADwBohB,EACxBphB,OAAQC,EADgBmhB,EAChBnhB,UACZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,YAClCpH,EAAKo9B,SAAS5P,SAEzBxtB,EAAK0kB,SAAS,CACV0M,YAAatwB,EAAOswB,YACpB+P,cAAergC,EAAOqwB,aA7JnBnxB,EAmKnBu/B,uBAAyB,SAAAz+B,GAAU,IAAAioB,EACD/oB,EAAKwf,MAA3BrY,EADuB4hB,EACvB5hB,OAAQC,EADe2hB,EACf3hB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK0kB,SACD,CACI8a,QAAQ,EACRyB,UAAW,KACX7P,YAAa,GAEjB,WACI,IAAMuB,EAAS3yB,EAAKo9B,SAAS5P,QACxBmF,IAEL3yB,EAAKkhC,iBAEAh3B,OAAOk0B,UACRzL,EAAO+K,YApLR19B,EA2LnB2/B,0BAA4B,SAAA7+B,GAAU,IAAA8+B,EACJ5/B,EAAKwf,MAA3BrY,EAD0By4B,EAC1Bz4B,OAAQC,EADkBw4B,EAClBx4B,UACEpH,EAAKwf,MAAM9X,UAArBjC,MAEJ0B,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC7CpH,EAAKokB,MAAMob,QAEXx/B,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAa,OAGdpxB,EAAKokB,MAAMob,QAClBx/B,EAAK0kB,SACD,CACI8a,QAAQ,EACRyB,UAAW,KACX7P,YAAa,GAEjB,WACI,IAAMuB,EAAS3yB,EAAKo9B,SAAS5P,QACxBmF,IAEL3yB,EAAKkhC,iBAEAh3B,OAAOk0B,UACRzL,EAAO+K,YArNR19B,EA4NnBohC,4BAA8B,SAAAtgC,GAAU,IAC5B2E,EAAUzF,EAAKwf,MAAM9X,UAArBjC,MACAyC,EAAWpH,EAAXoH,OAEHzC,GAEDA,EAAM5C,KAAOqF,GACblI,EAAK0kB,SACD,CACI/C,IAAKpN,YAAO9O,IAEhB,WACIzF,EAAKkhC,oBAxOFlhC,EA8OnBqhC,qCAAuC,SAAAvgC,GAAU,IACrC8F,EAAc5G,EAAKwf,MAAM9X,UAAzBd,UACR,GAAKA,EAAL,CAF6C,IAIrCsB,EAAWpH,EAAXoH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAKyhB,gBArPMzhB,EAyPnBshC,cAAgB,aAtPZthC,EAAKo9B,SAAWld,IAAMie,YAHP,IAKPh3B,EAAsBqY,EAAtBrY,OAAQC,EAAcoY,EAAdpY,UACR3B,EAAU+Z,EAAM9X,UAAhBjC,MAEA8qB,EAA+BL,IAA/BK,KAAM9rB,EAAyByrB,IAAzBzrB,QAAS+rB,EAAgBN,IAAhBM,YACjBgP,EAAS/6B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EATxD,OAWfpH,EAAKokB,MAAQ,CACTob,OAAQA,EACRyB,UAAWzB,EAAShP,EAAc,KAClC7O,IAAKpN,YAAO9O,GACZ2rB,YAAaoO,GAAUjP,EAAOA,EAAKa,YAAc,EACjD+P,cAAe3B,GAAUjP,EAAOA,EAAKY,SAAW,GAGpDnxB,EAAKs9B,QAAUpzB,OAAOk0B,SACtBp+B,EAAKq9B,QAAS,EACdr9B,EAAKu9B,gBAAkBngB,QAAQ7E,IAAiBulB,oBAChD99B,EAAKw9B,uBAAyBpgB,QAAQ7E,IAAiBqlB,2BAtBxC59B,gFAyBF,IAAAmkB,EACchkB,KAAKikB,MAAxB6c,EADK9c,EACL8c,UAAWtf,EADNwC,EACMxC,IAEbgR,EAASxyB,KAAKi9B,SAAS5P,QAC7B,GAAKmF,EAEL,GAAIsO,EAEAtO,EAAOsO,UAAYA,MAFvB,CAMA,IAAM3P,EAASqB,EAAOsO,UACtB,GAAI3P,EAEeA,EAAOiQ,YAEfh+B,QAAQ,SAAAi+B,GAEXA,EAAM9/B,SAIVixB,EAAOsO,YAEPtO,EAAOsO,UAAY,MAEnBtO,EAAOhR,MAAQA,IACfgR,EAAOhR,IAAMA,gDAKjBxhB,KAAK+gC,iBAELnhC,IAAU2hB,GAAG,qCAAsCvhB,KAAKkhC,sCACxDthC,IAAU2hB,GAAG,4BAA6BvhB,KAAKihC,6BAE/CxzB,IAAa8T,GAAG,6BAA8BvhB,KAAK69B,8BAEnDzlB,IAAiBmJ,GAAG,0BAA2BvhB,KAAK49B,2BACpDxlB,IAAiBmJ,GAAG,iCAAkCvhB,KAAK09B,kCAC3DtlB,IAAiBmJ,GAAG,wCAAyCvhB,KAAKw9B,yCAElEzN,IAAYxO,GAAG,0BAA2BvhB,KAAKw/B,2BAC/CzP,IAAYxO,GAAG,iCAAkCvhB,KAAK6gC,kCACtD9Q,IAAYxO,GAAG,wBAAyBvhB,KAAKkgC,yBAC7CnQ,IAAYxO,GAAG,uBAAwBvhB,KAAKo/B,uEAI5Cx/B,IAAUoC,eAAe,qCAAsChC,KAAKkhC,sCACpEthC,IAAUoC,eAAe,4BAA6BhC,KAAKihC,6BAE3DxzB,IAAazL,eAAe,6BAA8BhC,KAAK69B,8BAE/DzlB,IAAiBpW,eAAe,0BAA2BhC,KAAK49B,2BAChExlB,IAAiBpW,eAAe,iCAAkChC,KAAK09B,kCACvEtlB,IAAiBpW,eACb,wCACAhC,KAAKw9B,yCAGTzN,IAAY/tB,eAAe,0BAA2BhC,KAAKw/B,2BAC3DzP,IAAY/tB,eAAe,iCAAkChC,KAAK6gC,kCAClE9Q,IAAY/tB,eAAe,wBAAyBhC,KAAKkgC,yBACzDnQ,IAAY/tB,eAAe,uBAAwBhC,KAAKo/B,yDA0KnD,IAAAkC,EACiDthC,KAAKqf,MAAtCrY,GADhBs6B,EACGphB,YADHohB,EACgBt6B,QAAQC,EADxBq6B,EACwBr6B,UAAWqY,EADnCgiB,EACmChiB,UADnC6gB,EAE0CngC,KAAKikB,MAA5Cob,EAFHc,EAEGd,OAAQpO,EAFXkP,EAEWlP,YAAa+P,EAFxBb,EAEwBa,cAFxBO,EAGkCvhC,KAAKqf,MAAM9X,UAA1Cd,EAHH86B,EAGG96B,UAAWnB,EAHdi8B,EAGcj8B,MAAO0rB,EAHrBuQ,EAGqBvQ,SAG1B,IADgBvjB,IAAaxK,IAAI+D,EAAQC,GAC3B,OAAO,KAErB,IAAM0F,EAAQ,CAAE6C,MAAO,IAAKE,OAAQ,KACpC,IAAK/C,EAAO,OAAO,KAEnB,IAAMypB,EAAehiB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpD4c,EAAMpN,YAAO9O,GACbszB,EAAYhE,YAAmBnuB,GAEjC0wB,EAAW,EACX6J,GAAiB/P,IAEjBkG,GADqBlG,EAAc,KACR+P,EAAiB,KAGhD,OACIrH,EAAAn5B,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,aAAc,CAAE6gB,qBAAsBnC,IAC5D1yB,MAAOA,EACPmT,QAASR,GACRkC,EACGmY,EAAAn5B,EAAAkM,cAAAitB,EAAAn5B,EAAA4kB,SAAA,KACIuU,EAAAn5B,EAAAkM,cAAA,SACI2xB,IAAKr+B,KAAKi9B,SACVrd,UAAWe,IAAW,6BAA8B,oBACpD2d,OAAQlI,EACRmI,OAAK,EACLC,UAAQ,EACRC,MAAI,EACJC,aAAW,EACXlvB,MAAO7C,EAAM6C,MACbE,OAAQ/C,EAAM+C,OACd+xB,UAAWzhC,KAAKmhC,gBAEpBxH,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,qBACX+Z,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,uBACX+Z,EAAAn5B,EAAAkM,cAACg1B,EAAAlhC,EAAD,CACIggB,QAAS2U,EACTzO,QAAQ,SACRpR,MAAO6hB,EACPlrB,KAAM,IACN8W,UAAW,KAGnB4W,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,kBACV0gB,YAAkBjB,EAAS5a,KAAKC,MAAMuM,GAAeD,GACtD2I,EAAAn5B,EAAAkM,cAACi1B,EAAA,EAAD,CAAa36B,OAAQA,EAAQC,UAAWA,EAAW4b,KAAM,gBAE7D8W,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,oBACX+Z,EAAAn5B,EAAAkM,cAACk1B,EAAAphC,EAAD,SAKZm5B,EAAAn5B,EAAAkM,cAAAitB,EAAAn5B,EAAA4kB,SAAA,KACIuU,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,oBACX+Z,EAAAn5B,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,oBAAqB,CAAEqY,gBAAiBJ,IAC9DjsB,MAAOA,EACP6U,IAAK4U,EACLvU,IAAI,MAGZ8X,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,kBACV0gB,YAAkBtP,GAAY,IAAM7kB,YAAY7G,GACjDq0B,EAAAn5B,EAAAkM,cAACi1B,EAAA,EAAD,CAAa36B,OAAQA,EAAQC,UAAWA,EAAW4b,KAAM,gBAE7D8W,EAAAn5B,EAAAkM,cAAA,OAAKkT,UAAU,oBACX+Z,EAAAn5B,EAAAkM,cAACk1B,EAAAphC,EAAD,QAIZm5B,EAAAn5B,EAAAkM,cAACm1B,EAAA,EAAD,CAAc3gC,KAAMoE,EAAOyH,UAAQ,EAAC+oB,QAAM,EAACc,cAAY,EAAC/T,KAAM8W,EAAAn5B,EAAAkM,cAACo1B,EAAAthC,EAAD,gBApVtDuf,IAAMC,WAmW9BwM,EAAU1L,aAAe,CACrB7U,KAAMgG,IACNiO,YAAaa,KAGFyL,oHCzXTuV,cACF,SAAAA,EAAY1iB,GAAO,IAAAxf,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAA+hC,IACfliC,EAAAC,OAAAme,EAAA,EAAAne,CAAAE,KAAAF,OAAAoe,EAAA,EAAApe,CAAAiiC,GAAA5hC,KAAAH,KAAMqf,KAiBV2iB,6BAA+B,SAAArhC,GAAU,IAAAye,EACPvf,EAAKwf,MAA3BrY,EAD6BoY,EAC7BpY,OAAQC,EADqBmY,EACrBnY,UAEZD,IAAWrG,EAAOyF,SAAWa,IAActG,EAAOwd,YAClDte,EAAK0kB,SAAS,CAAE0d,SAAUlU,YAAgB/mB,EAAQC,MAtBvC,IAAAsZ,EAGe1gB,EAAKwf,MAA3BrY,EAHOuZ,EAGPvZ,OAAQC,EAHDsZ,EAGCtZ,UAHD,OAKfpH,EAAKokB,MAAQ,CACTge,SAAUlU,YAAgB/mB,EAAQC,IANvBpH,mFAWf4N,IAAa8T,GAAG,6BAA8BvhB,KAAKgiC,6EAInDv0B,IAAazL,eAAe,6BAA8BhC,KAAKgiC,+DAW1D,IAAA5Z,EACwBpoB,KAAKqf,MAA1BwD,EADHuF,EACGvF,KAAMqf,EADT9Z,EACS8Z,WAGd,OAFqBliC,KAAKikB,MAAlBge,SAEUC,EAAarf,SA/Bb9C,IAAMC,WA0ChC+hB,EAAYjhB,aAAe,CACvB+B,KAAM,KACNqf,WAAY,MAGDH,4JCxCTI,cACF,SAAAA,EAAY9iB,GAAO,IAAAxf,EAAAC,OAAAw1B,EAAA,EAAAx1B,CAAAE,KAAAmiC,IACftiC,EAAAC,OAAAkwB,EAAA,EAAAlwB,CAAAE,KAAAF,OAAAmwB,EAAA,EAAAnwB,CAAAqiC,GAAAhiC,KAAAH,KAAMqf,KAsCV+iB,iCAAmC,SAACzhC,GAAW,IACnCqG,EAAWnH,EAAKwf,MAAhBrY,OACR,GAAKrG,EAAOyF,SACRzF,EAAOyF,UAAYY,EAAvB,CAEA,IAAMjD,EAAO6O,IAAU3P,IAAItC,EAAOyF,SAC7BrC,GAELlE,EAAK0kB,SAAS,CAAE8d,QAAStqB,YAAYhU,OA/CtBlE,EAkDnByiC,kCAAoC,SAAC3hC,GAAW,IACpCqG,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAEL,OAAQpD,EAAO4hC,MAAM,UACjB,IAAK,sCAE0B,uBAAvBx+B,EAAK6N,KAAK,UACa,uBAAvB7N,EAAK6N,KAAK,UAEV/R,EAAK0kB,SAAS,CAAE8d,QAAStqB,YAAYhU,KAEzC,MAEJ,IAAK,wCAE0B,oBAAvBA,EAAK6N,KAAK,UACa,mBAAvB7N,EAAK6N,KAAK,UAEV/R,EAAK0kB,SAAS,CAAE8d,QAAStqB,YAAYhU,OAtElClE,EA6EnB2iC,2BAA6B,WACzB3iC,EAAK0kB,SAAS,CAAE8d,SAAUxiC,EAAKokB,MAAMoe,UACrCxiC,EAAK4iC,wCA/EU5iC,EAkFnB6iC,4BAA8B,WAAM,IACxB17B,EAAWnH,EAAKwf,MAAhBrY,OACAq7B,EAAYxiC,EAAKokB,MAAjBoe,QACFt+B,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,IACAA,EAAKkU,uBAEUF,YAAYhU,KACZs+B,GAApB,CAIA,IAAMM,EAAUN,EAAUO,IAAkBC,IACtCC,EAAuBhjC,OAAAi5B,EAAA,EAAAj5B,CAAA,GACtBiE,EAAKkU,sBADiB,CAEzBD,sBAAsB,EACtBE,SAAUyqB,IAGd9gC,IAAgBgJ,KAAK,CACjB/B,QAAS,8BACT1C,QAASY,EACTiR,sBAAuB6qB,MAxGZ,IAGP97B,EAAWqY,EAAXrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACrBq7B,EAAUtqB,YAAYhU,GALb,OAOflE,EAAKokB,MAAQ,CACT8e,WAAY/7B,EACZq7B,QAASA,GAGbxiC,EAAK4iC,qCAAuCO,YAASnjC,EAAK6iC,4BAA6BO,KAZxEpjC,mFA8Bf+S,IAAU2O,GAAG,iCAAkCvhB,KAAKoiC,kCACpDhqB,IAAiBmJ,GAAG,kCAAmCvhB,KAAKsiC,kFAI5D1vB,IAAU5Q,eAAe,iCAAkChC,KAAKoiC,kCAChEhqB,IAAiBpW,eAAe,kCAAmChC,KAAKsiC,sFArB5CjjB,EAAO4E,GACnC,GAAI5E,EAAMrY,SAAWid,EAAM8e,WAAY,KAC3B/7B,EAAWqY,EAAXrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACrBq7B,EAAUtqB,YAAYhU,GAE5B,MAAO,CACHg/B,WAAY1jB,EAAMrY,OAClBq7B,QAASA,GAGjB,OAAO,YA3BoBtiB,IAAMC,WA8G1BmiB,uMCtGTe,sBACF,SAAAA,EAAY7jB,GAAO,IAAAxf,EAAA,OAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAkjC,IACfrjC,EAAAC,OAAAme,EAAA,EAAAne,CAAAE,KAAAF,OAAAoe,EAAA,EAAApe,CAAAojC,GAAA/iC,KAAAH,KAAMqf,KAuBV8jB,iCAAmC,SAAAxiC,GAAU,IACjCw5B,EAASx5B,EAATw5B,KACMiJ,EAAgBvjC,EAAKokB,MAA3BkW,KAER,IAAIiJ,GAAejJ,EAAKjJ,YAAckS,EAAYlS,UAAlD,CAEArxB,EAAK0kB,SAAS,CACV4V,KAAMP,IAAaO,KACnBn3B,MAAOnD,EAAKwjC,SAASzJ,IAAaO,QAGtC,IAAMx6B,EAAQC,IAAUuD,WAChB6Q,EAAammB,EAAbnmB,SACRD,YAAoBpU,EAAOqU,EAASA,YArCrBnU,EAwCnByjC,gCAAkC,SAAA3iC,GAAU,IAChCw5B,EAASx5B,EAATw5B,KAUR,GARAt6B,EAAK0kB,SAAS,CACV4V,OACAn3B,MAAOnD,EAAKwjC,SAASlJ,GACrBoJ,iBAAkB,EAClBC,aAAa,EACbC,YAAY,IAGXtJ,EAAL,CAEA,IAAMx6B,EAAQC,IAAUuD,WAChB6Q,EAAammB,EAAbnmB,SACRD,YAAoBpU,EAAOqU,EAASA,YAvDrBnU,EA0DnB6jC,WAAa,SAAAt+B,GACcvF,EAAKokB,MAApBwf,YAEHr+B,GAELvD,IAAgBgH,aAAa,CACzBC,QAAS,0BACT1D,aAjEWvF,EAqEnB8jC,mBAAqB,SAAAC,GAAa,IACtB5gC,EAAUnD,EAAKokB,MAAfjhB,MAEFoC,EAAUpC,EAAM6gC,KAAK,SAAAp4B,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOkhC,IACjD,GAAKx+B,EAAL,CAEA,IAAMzF,EAAQC,IAAUuD,WACxBiN,YAAmBzQ,EAAOyF,EAAS,MAEnC,IAAI0+B,EAAiB,EACjBjkC,EAAKkkC,UAAYlkC,EAAKkkC,SAAS1W,UAC/ByW,EAAiBrf,KAAKC,MAAM7kB,EAAKkkC,SAAS1W,QAAQ2W,YAAcC,MAGpEpiC,IAAgBgJ,KAAK,CACjB/B,QAAS,mBACT1D,QAAS,CACL0D,QAAS,cACTpG,GAAIkhC,KAETz4B,KAAK,SAAAhB,GACyBtK,EAAKokB,MAA1Bsf,mBACiBK,GACrB/jC,EAAK0kB,SAAS,CACV2f,qBAAsB/5B,EAAOg6B,OAAOC,KAAK,SAK7BvkC,EAAKwkC,oBAAoBT,EAAW5gC,EAAO8gC,GACnD1gC,QAAQ,SAAAqI,GACpB2E,YAAmBzQ,EAAO8L,EAAG,UApGlB5L,EAwGnBwkC,oBAAsB,SAACT,EAAW5vB,EAAU8vB,GACxC,IAAK9vB,EAAU,MAAO,GAEtB,IAAMswB,EAAU,GACV/xB,EAAQyB,EAASqd,UAAU,SAAA5lB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOkhC,IACvD,IAAe,IAAXrxB,EAAc,MAAO,GAEzB,IAAMgyB,EAAM9f,KAAKC,MAAMnS,EAAQuxB,GACzBU,EAASjyB,EAAQuxB,EAEjBW,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ96B,KAAKs6B,EAAiBW,EAAUE,GAE5CL,EAAQ96B,KAAKs6B,EAAiBW,EAAUD,GACpCI,EAAad,GACbQ,EAAQ96B,KAAKs6B,EAAiBW,EAAUG,IAI5CD,GAAc,GACdL,EAAQ96B,KAAKs6B,EAAiBS,EAAMI,GAEpCC,EAAad,GACbQ,EAAQ96B,KAAKs6B,EAAiBS,EAAMK,GAGpCF,EAAUjgB,KAAKogB,KAAK7wB,EAAShO,OAAS89B,KAClCa,GAAc,GACdL,EAAQ96B,KAAKs6B,EAAiBY,EAAUC,GAE5CL,EAAQ96B,KAAKs6B,EAAiBY,EAAUF,GACpCI,EAAad,GACbQ,EAAQ96B,KAAKs6B,EAAiBY,EAAUE,IAIzCN,EAAQ92B,IAAI,SAAA1H,GAAC,OAAIkO,EAASlO,MAlJlBjG,EAqJnBilC,gBAAkB,SAAAz5B,GACd,IAAMu4B,EAAYvR,OAAOhnB,EAAMC,OAAOy5B,QAAQnB,WACzCA,GAEA/jC,EAAKmlC,YAENnlC,EAAKolC,qBAAuBrB,IAC5B/jC,EAAKolC,mBAAqB,MAE9BplC,EAAK0kB,SAAS,CAAEgf,iBAAkBK,IAClC/jC,EAAK8jC,mBAAmBC,KA/JT/jC,EAkKnBqlC,gBAAkB,SAAA75B,GACd,IAAMu4B,EAAYvR,OAAOhnB,EAAMC,OAAOy5B,QAAQnB,WAC9C,GAAKA,EAAL,CAEA/jC,EAAKolC,mBAAqBrB,EAC1B,IAAM/qB,EAAMJ,KAAKI,MAiBjB,OAfAhZ,EAAK0kB,SAAS,CAAEgf,iBAAkBK,EAAW1S,UAAWrY,EAAK2qB,aAAa,EAAOC,YAAY,IAC7FrM,WAAW,WACev3B,EAAKokB,MAAnBiN,YACUrY,GACdhZ,EAAK0kB,SAAS,CAAEif,aAAa,EAAMC,YAAY,KAEpD,KAEH5jC,EAAK8jC,mBAAmBC,GAExB/jC,EAAKmlC,WAAY,EACjBlgC,SAASqgC,iBAAiB,UAAWtlC,EAAKulC,eAE1C/5B,EAAMod,iBACNpd,EAAMqa,mBACC,IAxLQ7lB,EA2LnBulC,cAAgB,WACZvlC,EAAK0kB,SAAS,CAAEgf,iBAAkB,EAAGrS,UAAW,EAAGsS,aAAa,IAChE3jC,EAAKmlC,WAAY,EACjBlgC,SAASugC,oBAAoB,UAAWxlC,EAAKulC,gBA9L9BvlC,EAiMnBwjC,SAAW,SAAAlJ,GACP,IAAMn3B,EAAQ,GACd,IAAKm3B,EAAM,OAAOn3B,EAElB,IAAMsiC,EAAO,IAAIp8B,IACT8K,EAA4BmmB,EAA5BnmB,SAAUomB,EAAkBD,EAAlBC,cAgBlB,OAfIpmB,GACAA,EAASA,SAAS5Q,QAAQ,SAAAqI,GACtBzI,EAAMwG,KAAKiC,GACX65B,EAAKrkC,IAAIwK,EAAErG,QAAQ1C,GAAI+I,EAAErG,QAAQ1C,MAGrC03B,GACAA,EAAcpmB,SAAS5Q,QAAQ,SAAAqI,GACtB65B,EAAKxiC,IAAI2I,EAAErG,QAAQ1C,MACpBM,EAAMwG,KAAKiC,GACX65B,EAAKrkC,IAAIwK,EAAErG,QAAQ1C,GAAI+I,EAAErG,QAAQ1C,OAKtCM,GAnNPnD,EAAKkkC,SAAWhkB,IAAMie,YAEtBn+B,EAAKokB,MAAQ,CACTkW,KAAM,KACNn3B,MAAO,GACPugC,iBAAkB,EAClBC,aAAa,EACbC,YAAY,GAVD5jC,mFAef+5B,IAAarY,GAAG,gCAAiCvhB,KAAKsjC,iCACtD1J,IAAarY,GAAG,iCAAkCvhB,KAAKmjC,iFAIvDvJ,IAAa53B,eAAe,gCAAiChC,KAAKsjC,iCAClE1J,IAAa53B,eAAe,iCAAkChC,KAAKmjC,mEAoM9D,IAAA34B,EAAAxK,KACGwgB,EAAYxgB,KAAKqf,MAAjBmB,QADHwD,EAEwEhkB,KAAKikB,MAA1EkW,EAFHnW,EAEGmW,KAAMn3B,EAFTghB,EAEShhB,MAAOugC,EAFhBvf,EAEgBuf,iBAAkBW,EAFlClgB,EAEkCkgB,qBAAsBV,EAFxDxf,EAEwDwf,YAC7D,IAAKrJ,EAAM,OAAO,KAClB,IAAKn3B,EAAO,OAAO,KACnB,IAAKA,EAAMgD,OAAQ,OAAO,KAE1B,IAAMu/B,EAAWviC,EAAMwK,IAAI,SAAA/B,GAAC,OACxB8rB,EAAA/2B,EAAAkM,cAAA,OACIkT,UAAU,0BACVtI,IAAK7L,EAAErG,QAAQ1C,GACf8iC,kBAAiB/5B,EAAErG,QAAQ1C,GAC3BiK,MAAO,CAAE6C,MAAOy0B,IAA2Bv0B,OAAQu0B,KACnDnkB,QAAS,kBAAMtV,EAAKk5B,WAAWj4B,KAC/B8rB,EAAA/2B,EAAAkM,cAAC+4B,EAAA,EAAD,CACInuB,IAAK7L,EAAErG,QAAQ1C,GACfkd,UAAU,kCACVxa,QAASqG,EACTyU,YAAawlB,IACb/M,MAAM,OAKZgN,EAAe3iC,EAAMquB,UAAU,SAAA5lB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAO6gC,IACrDn+B,GAA4B,IAAlBugC,EAAsB3iC,EAAM2iC,GAAgB,KAE5D,OACIpO,EAAA/2B,EAAAkM,cAAA,OACI2xB,IAAKr+B,KAAK+jC,SACVnkB,UAAWe,IAAW,gBAAiBH,EAAQ8F,YAAa9F,EAAQgC,MACpEojB,YAAa5lC,KAAK8kC,gBAClBe,WAAY7lC,KAAK8lC,eACjBC,YAAa/lC,KAAKklC,iBACjBK,EACAtoB,QAAQ7X,IAAYo+B,GACjBjM,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,8BACX2X,EAAA/2B,EAAAkM,cAAA,OAAKkT,UAAU,oCAAoCskB,GACnD3M,EAAA/2B,EAAAkM,cAAC+4B,EAAA,EAAD,CAASrgC,QAASA,EAAS8a,YAAa8lB,eAhQrCjmB,IAAMC,YAwQlBgB,QA/QA,SAAAC,GAAK,OAAAnhB,OAAAmmC,EAAA,EAAAnmC,CAAA,CAChB0iB,KAAM,CACF8U,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQtF,WAAW4O,QAAU,YAEhF/e,YAAYlG,KA2QJD,CAAmBkiB,skBCrQ5BiD,8MACFliB,MAAQ,CACJmiB,SAAU,QAGdC,gBAAkB,SAAAh7B,GACdxL,EAAK0kB,SAAS,CAAE6hB,SAAU/6B,EAAMi7B,mBAGpCC,gBAAkB,WACd1mC,EAAK0kB,SAAS,CAAE6hB,SAAU,UAG9BI,kBAAoB,WAChB3mC,EAAK0mC,kBADiB,IAGdE,EAAkB5mC,EAAKwf,MAAvBonB,cACHA,GAELrP,WAAW,kBAAMqP,KAAiBpP,SAGtCqP,qBAAuB,WACnB7mC,EAAK0mC,kBADoB,IAGjBI,EAAqB9mC,EAAKwf,MAA1BsnB,iBACHA,GAELvP,WAAW,kBAAMuP,KAAoBtP,SAGzCuP,iBAAmB,WACf/mC,EAAK0mC,kBADgB,IAGbM,EAAiBhnC,EAAKwf,MAAtBwnB,aACHA,GAELA,6EAGK,IAAAznB,EAC0Bpf,KAAKqf,MAA5BmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EAAGrQ,EADfoY,EACepY,OACZo/B,EAAapmC,KAAKikB,MAAlBmiB,SAER,OACIzmB,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIof,UAAWY,EAAQumB,WACnBC,aAAW,SACX/8B,KAAMgT,QAAQmpB,GACdtmB,QAAS9f,KAAKqmC,iBACd1mB,EAAAnf,EAAAkM,cAACu6B,EAAAzmC,EAAD,CAAgBof,UAAU,0BAE9BD,EAAAnf,EAAAkM,cAACw6B,EAAA1mC,EAAD,CACIkC,GAAG,cACH0jC,SAAUA,EACVn8B,KAAMgT,QAAQmpB,GACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB1d,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhBL,QAASxpB,KAAKumC,iBACd5mB,EAAAnf,EAAAkM,cAACud,EAAAzpB,EAAD,CAAUsf,QAAS9f,KAAKwmC,kBAAmBc,UAAWnqB,aAAcnW,IAChE2Y,EAAAnf,EAAAkM,cAAC66B,EAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAAC86B,EAAAhnC,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC+6B,EAAAjnC,EAAD,CAAcq8B,QAASxlB,EAAE,kBAE7BsI,EAAAnf,EAAAkM,cAACud,EAAAzpB,EAAD,CAAUsf,QAAS9f,KAAK0mC,qBAAsBY,UAAWlqB,aAAiBpW,IACtE2Y,EAAAnf,EAAAkM,cAAC66B,EAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAACsyB,EAAAx+B,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC+6B,EAAAjnC,EAAD,CAAcq8B,QAASxlB,EAAE,sBAE3BqE,aAAc1U,IACZ2Y,EAAAnf,EAAAkM,cAACud,EAAAzpB,EAAD,CAAUsf,QAAS9f,KAAK4mC,iBAAkBU,UAAWjqB,aAAarW,IAC9D2Y,EAAAnf,EAAAkM,cAAC66B,EAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAACg7B,GAAAlnC,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC+6B,EAAAjnC,EAAD,CAAcq8B,QAASxlB,EAAE,oBAtF1B0I,IAAMC,WA2GlB4G,GALCC,YACZ7F,IA7GW,CACX+lB,WAAY,CACRhgB,OAAQ,UA2GO,CAAEK,WAAW,IAChCC,cAGWT,CAAQuf,gICnIhB,SAASwB,GAAUC,GAAqB,IAAfC,EAAenmC,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC3C,GAAKkmC,EAAL,CAEA,GAAIC,GAASD,EAAKE,YAAcF,EAAKE,WAAW9hC,OAAS,EAAG,CACxD,IAAM+hC,EAAWH,EAAKE,WAAWF,EAAKE,WAAW9hC,OAAS,GACpDgiC,EAAQljC,SAASmjC,cACvBD,EAAME,SAASH,EAAUA,EAAS/hC,QAClCgiC,EAAMG,UAAS,GAEf,IAAMC,EAAYr+B,OAAOs+B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBJ,EAAKY,UAAYZ,EAAKa,aAG1Bb,EAAKc,sBCfHl3B,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGFm3B,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGP9e,GACN,MAA0C,qBAA5BhqB,KAAK4oC,QAAQ5e,EAAE+e,UAEjCC,eANiB,SAMFhf,GACX,MAA+C,qBAAjChqB,KAAK6oC,aAAa7e,EAAE+e,WAI1CJ,GAAMC,QAAQp3B,KAAqB,EACnCm3B,GAAMC,QAAQp3B,KAAiB,EAC/Bm3B,GAAMC,QAAQp3B,KAAgB,EAC9Bm3B,GAAMC,QAAQp3B,KAAe,EAC7Bm3B,GAAMC,QAAQp3B,KAAkB,EAEhCm3B,GAAME,aAAar3B,KAAmB,EACtCm3B,GAAME,aAAar3B,KAAqB,EACxCm3B,GAAME,aAAar3B,KAAqB,EACxCm3B,GAAME,aAAar3B,KAAsB,wBCFnCy3B,uBACF,SAAAA,EAAY5pB,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAipC,IACfppC,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAmpC,GAAA9oC,KAAAH,KAAMqf,KASVsM,QAAU,WACN,OAAO9rB,EAAKqpC,cAAc7b,QAAQ8b,WAXnBtpC,EAcnB6oC,MAAQ,WAAmB,IAAlBb,EAAkBnmC,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAGvBimC,GAFa9nC,EAAKqpC,cAAc7b,QAEhBwa,IAjBDhoC,EAoBnBupC,aAAe,WAAM,IAAAhqB,EACYvf,EAAKwf,MAA1BwG,EADSzG,EACTyG,OAAQwjB,EADCjqB,EACDiqB,SACXxjB,GACAwjB,GAELA,EAASxjB,EAAOnjB,KAzBD7C,EA4BnBypC,YAAc,SAAAj+B,GAAS,IACXwa,EAAWhmB,EAAKwf,MAAhBwG,OAERxa,EAAMod,iBAEN,IAAMmf,EAAO/nC,EAAKqpC,cAAc7b,QAC1BrnB,EAAS4hC,EAAK7C,QAAQ/+B,OAEtB0X,GADYkqB,EAAK7C,QAAQwE,UAClB1pC,EAAK8rB,WAElB9rB,EAAK0kB,SAAS,CACVilB,aAAcxjC,EAAS0X,EAAK1X,SAGhCnE,KAAgBgH,aAAa,CACzBC,QAAS,yBACTpG,GAAImjB,EAAOnjB,GACXgb,UA7CW7d,EAiDnB4pC,cAAgB,SAAAp+B,GACZ,IAAMu8B,EAAO/nC,EAAKqpC,cAAc7b,QAC1Bkc,EAAY3B,EAAK7C,QAAQwE,UAEzBvjC,EADYnG,EAAK8rB,UACE3lB,OAErB0jC,GAAe,EACbtB,EAAYr+B,OAAOs+B,eACnBS,EAAYH,GAAMG,UAAUz9B,GAC5B29B,EAAiBL,GAAMK,eAAe39B,GAM5C,OAJI+8B,IACAsB,IAAiBtB,EAAUuB,YAGvBt+B,EAAMiM,KACV,IAAK,YAED,IADazX,EAAK8rB,UACP,KAAApL,EACsB1gB,EAAKwf,MAA1BwG,EADDtF,EACCsF,OAAQwjB,EADT9oB,EACS8oB,SAMhB,OALIA,GACAA,EAASxjB,EAAOnjB,IAAI,GAGxB2I,EAAMod,kBACC,EAGX,MAEJ,IAAK,QAAS,IAAAL,EACsBvoB,EAAKwf,MAA7BwG,EADEuC,EACFvC,OAAQ+jB,EADNxhB,EACMwhB,YAMhB,OALI/jB,GAAU+jB,GACVA,EAAY/jB,EAAOnjB,IAGvB2I,EAAMod,kBACC,EAEX,IAAK,UACD,IAAM2f,EAAYr+B,OAAOs+B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUyB,YAAa,MAE5B,IAAMC,EAAalC,EAAKE,YAAcF,EAAKE,WAAW9hC,OAAS,EAAI4hC,EAAKE,WAAW,GAAK,KAExF,IAAKgC,GAAe1B,EAAU2B,aAAeD,IAAe1B,EAAU4B,aAAe,KAAAphB,EACjD/oB,EAAKwf,MAA7BwG,EADyE+C,EACzE/C,OAAQokB,EADiErhB,EACjEqhB,YAMhB,OALIA,GACAA,EAAYpkB,EAAOnjB,IAGvB2I,EAAMod,kBACC,EAGX,MAEJ,IAAK,YACD,IAAM2f,EAAYr+B,OAAOs+B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUyB,YAAa,MAE5B,IAAMK,EACFtC,EAAKE,YAAcF,EAAKE,WAAW9hC,OAAS,EAAI4hC,EAAKE,WAAWF,EAAKE,WAAW9hC,OAAS,GAAK,KAElG,IAAKkkC,GAAc9B,EAAU2B,aAAeG,GAAa9B,EAAU4B,eAAiBE,EAAUlkC,OAAS,KAAAy5B,EACnE5/B,EAAKwf,MAA7BwG,EAD2F4Z,EAC3F5Z,OAAQ+jB,EADmFnK,EACnFmK,YAMhB,OALIA,GACAA,EAAY/jB,EAAOnjB,IAGvB2I,EAAMod,kBACC,GAOnB,SAAIqgB,IAAaE,OAIbhjC,GAAUujC,IAAcG,KACxBr+B,EAAMod,kBACC,KAvII5oB,EA6InBsqC,YAAc,SAAA9+B,GACVA,EAAMod,iBAEN,IACM8gB,EADO1pC,EAAKqpC,cAAc7b,QACT0X,QAAQwE,UAEzBnB,EAAYr+B,OAAOs+B,eACnB+B,EAAkBhC,EAAYA,EAAUuB,WAAa,GAErDR,EAAYtpC,EAAK8rB,UACvB,KAAIwd,EAAUnjC,OAASoiC,EAAUpiC,QAAUujC,GAA3C,CAEA,IAAIc,EAAYh/B,EAAMi/B,cAAcC,QAAQ,cACvCF,IAELA,EAAYA,EAAUG,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtDrB,EAAUnjC,OAASokC,EAAgBpkC,OAASqkC,EAAUrkC,OAASujC,IAC/Dc,EAAYA,EAAUI,OAAO,EAAGlB,EAAYJ,EAAUnjC,OAASokC,EAAgBpkC,SAEnFlB,SAAS4lC,YAAY,cAAc,EAAOL,MA9J1CxqC,EAAKqpC,cAAgBnpB,IAAMie,YAE3Bn+B,EAAKokB,MAAQ,CACTulB,aAAcmB,MANH9qC,wEAoKV,IAAAyhC,EACkBthC,KAAKqf,MAApBmB,EADH8gB,EACG9gB,QAASnJ,EADZiqB,EACYjqB,EACTmyB,EAAiBxpC,KAAKikB,MAAtBulB,aAER,OACI7pB,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,sBACXD,EAAAnf,EAAAkM,cAAA,OACI2xB,IAAKr+B,KAAKkpC,cACVxmC,GAAG,0BACHkoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAazzB,EAAE,UACf0zB,cAAaC,KACbC,kBAAiBN,KACjBO,QAASlrC,KAAKspC,YACd6B,UAAWnrC,KAAKypC,cAChB2B,QAASprC,KAAKmqC,cAElBxqB,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oCACXD,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQumB,WAAYjnB,QAAS9f,KAAKopC,cACrDzpB,EAAAnf,EAAAkM,cAAC2+B,GAAA7qC,EAAD,CAAWuhB,SAAS,YAG5BpC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,mCAAD7gB,OAAAumB,GAAA,EAAAvmB,CAAA,GAAwC0gB,EAAQ8F,aAAc,MACvFkjB,GAAgBwB,KAAqBM,MAClC3rB,EAAAnf,EAAAkM,cAAC6+B,GAAA,EAAD,CACIC,MAAM,SACN5rB,UAAWY,EAAQirB,YACnBzpB,MAAOwnB,GAAgB,EAAI,gBAAkB,QAC7C9iB,QAAQ,aACP8iB,WAnMMzpB,IAAMC,YAyNtB4G,GAPCC,YACZ6kB,eACA1qB,IAlOW,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChBinC,WAAY,CACR1jB,QAAS,GAEbooB,YAAa,CACTxoB,SAAU,WACV+D,MAAO,GACPC,OAAQ,EACR0kB,SAAU,GACVC,WAAY,SAEbzkB,aAAYlG,MAwNfoG,cACAwkB,eAGWjlB,CAAQqiB,ICtPhB,SAAS6C,GAAY/jB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBc,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,QAClB,IAQJ,SAAyBD,GACrB,QAAKA,GAEEA,EAAS7iB,QAAU+lC,KAXrBC,CAAgBnjB,GAAW,OAAO,EAEvC,IAAMojB,EAAmBnjB,EAAQpd,OAAO,SAAAD,GAAC,OAAIwR,QAAQxR,EAAEiS,QACvD,QAAIuuB,EAAiBjmC,QAAU,IAExBimC,EAAiB9iB,MAAM+iB,IASlC,SAASA,GAAcrmB,GACnB,QAAKA,MACAA,EAAOnI,MAELmI,EAAOnI,KAAK1X,QAAUglC,oBC8E3BrrC,GAAQ,gBAlGV,SAAAwsC,IAAc,IAAAtsC,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAmsC,IACVtsC,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAqsC,GAAAhsC,KAAAH,QAQJI,SAAW,SAAAO,KATGd,EAWd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,sBACDd,EAAKoB,IAAI,CACLyB,GAAI+V,KAAKI,MACTgQ,SAAU,GACVC,QAAS,KAGbjpB,EAAKuB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,2BAA4B,IACrBkoB,EAAaloB,EAAbkoB,SAERhpB,EAAKq6B,OAAOr6B,EAAKkoB,KAAM,CAAEc,aAEzBhpB,EAAKuB,KAAK,2BAA4BT,GACtC,MAEJ,IAAK,yBAA0B,IACnB+B,EAAa/B,EAAb+B,GAAIgb,EAAS/c,EAAT+c,KACJoL,EAAYjpB,EAAKkoB,KAAjBe,QAERjpB,EAAKq6B,OAAOr6B,EAAKkoB,KAAM,CAAEe,QAASA,EAAQtb,IAAI,SAAA/B,GAAC,OAAKA,EAAE/I,KAAOA,EAAT5C,OAAAohB,EAAA,EAAAphB,CAAA,GAAmB2L,EAAnB,CAAsBiS,SAAtB5d,OAAAohB,EAAA,EAAAphB,CAAA,GAAoC2L,OAExF5L,EAAKuB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,4BAA6B,IACtBklB,EAAWllB,EAAXklB,OACAiD,EAAYjpB,EAAKkoB,KAAjBe,QAERjpB,EAAKq6B,OAAOr6B,EAAKkoB,KAAM,CAAEe,QAAO,GAAA9d,OAAAlL,OAAAspB,GAAA,EAAAtpB,CAAMgpB,GAAN,CAAejD,MAC/ChmB,EAAKuB,KAAK,4BAA6BT,GACvC,MAEJ,IAAK,+BAAgC,IACzB+B,EAAO/B,EAAP+B,GACAomB,EAAYjpB,EAAKkoB,KAAjBe,QAERjpB,EAAKq6B,OAAOr6B,EAAKkoB,KAAM,CAAEe,QAASA,EAAQpd,OAAO,SAAAD,GAAC,OAAIA,EAAE/I,KAAOA,MAC/D7C,EAAKuB,KAAK,+BAAgCT,GAC1C,MAEJ,IAAK,yBACDd,EAAKoB,IAAI,MAETpB,EAAKuB,KAAK,yBAA0BT,KA3DlCd,EAmEd+B,iBAAmB,WACfC,KAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,KAAgBC,YAAY,eAAgBjC,EAAK8B,iBArEvC9B,EAwEdkC,oBAAsB,WAClBF,KAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,KAAgBG,eAAe,eAAgBnC,EAAK8B,iBAvEpD9B,EAAKkoB,KAAO,KAEZloB,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KANXvJ,sEA6EPusC,EAASC,GACZrsC,KAAKiB,IAAInB,OAAOo6B,OAAO,GAAIkS,EAASC,gCAGpCtkB,GACA/nB,KAAK+nB,KAAOA,gDAIZ,IAAK/nB,KAAK+nB,KAAM,OAAO,KACvB,IAAK+jB,GAAY9rC,KAAK+nB,MAAO,OAAO,KAFlB,IAAAukB,EAGYtsC,KAAK+nB,KAEnC,MAAO,CACHjf,QAAS,mBACT+f,SAPcyjB,EAGVzjB,SAKJC,QARcwjB,EAGAxjB,QAKGpd,OAAO,SAAAD,GAAC,OAAIwR,QAAQxR,EAAEiS,QAAOlQ,IAAI,SAAA/B,GAAC,OAAIA,EAAEiS,qBA9F7C3R,eAoGxBhC,OAAOge,KAAOpoB,GACCA,UCrDT4sC,uBACF,SAAAA,EAAYltB,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAusC,IACf1sC,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAysC,GAAApsC,KAAAH,KAAMqf,KA8BVmtB,0BAA4B,SAAA7rC,GAAU,IAC1BonB,EAASokB,GAATpkB,KAERloB,EAAK0kB,SAAS,CACVkoB,SAAS,EACTjD,aAAckD,KACd3kB,UArCWloB,EAyCnB8sC,+BAAiC,SAAAhsC,GAAU,IAC/BonB,EAASokB,GAATpkB,KAEF6f,EAAO/nC,EAAK+sC,YAAYvf,QACxBrnB,EAAS4hC,EAAK7C,QAAQ/+B,OACtBmjC,EAAYvB,EAAKuB,UAEvBtpC,EAAK0kB,SAAS,CACVilB,aAAcxjC,EAASmjC,EAAUnjC,OACjC+hB,UAlDWloB,EAsDnBgtC,uBAAyB,SAAAlsC,GAAU,IACvBonB,EAASokB,GAATpkB,KAERloB,EAAK0kB,SAAS,CAAEwD,UAzDDloB,EA4DnBitC,gCAAkC,SAAAnsC,GAAU,IAChConB,EAASokB,GAATpkB,KAERloB,EAAK0kB,SAAS,CAAEwD,QAAQ,WACpBqP,WAAW,WACMv3B,EAAKktC,cAAc9pC,IAAI8kB,EAAKe,QAAQ9iB,OAAS,GAErD0iC,OAAM,QAnEJ7oC,EAkFnB4pC,cAAgB,SAAAp+B,GACZ,IAAMu8B,EAAO/nC,EAAK+sC,YAAYvf,QACxBkc,EAAY3B,EAAK7C,QAAQwE,UAEzBvjC,EADY4hC,EAAKuB,UACEnjC,OAErB0jC,GAAe,EACbtB,EAAYr+B,OAAOs+B,eACnBS,EAAYH,GAAMG,UAAUz9B,GAC5B29B,EAAiBL,GAAMK,eAAe39B,GAM5C,OAJI+8B,IACAsB,IAAiBtB,EAAUuB,YAGvBt+B,EAAMiM,KACV,IAAK,QACD,IAAKjM,EAAM2hC,SAIP,OAHAntC,EAAKotC,sBAAsB,GAE3B5hC,EAAMod,kBACC,EAGX,MAEJ,IAAK,YACD,IAAM2f,EAAYr+B,OAAOs+B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUyB,YAAa,MAE5B,IAAMK,EACFtC,EAAKE,YAAcF,EAAKE,WAAW9hC,OAAS,EAAI4hC,EAAKE,WAAWF,EAAKE,WAAW9hC,OAAS,GAAK,KAElG,IAAKkkC,GAAc9B,EAAU2B,aAAeG,GAAa9B,EAAU4B,eAAiBE,EAAUlkC,OAI1F,OAHAnG,EAAKotC,sBAAsB,GAE3B5hC,EAAMod,kBACC,EAOnB,SAAIqgB,IAAaE,OAIbhjC,GAAUujC,IAAcG,KACxBr+B,EAAMod,kBACC,KArII5oB,EA2InBsqC,YAAc,SAAA9+B,GACVA,EAAMod,iBAEN,IAAMmf,EAAO/nC,EAAK+sC,YAAYvf,QACxBkc,EAAY3B,EAAK7C,QAAQwE,UAEzBnB,EAAYr+B,OAAOs+B,eACnB+B,EAAkBhC,EAAYA,EAAUuB,WAAa,GAErDR,EAAYvB,EAAKuB,UACvB,KAAIA,EAAUnjC,OAASoiC,EAAUpiC,QAAUujC,GAA3C,CAEA,IAAIc,EAAYh/B,EAAMi/B,cAAcC,QAAQ,cACvCF,IAEDlB,EAAUnjC,OAASokC,EAAgBpkC,OAASqkC,EAAUrkC,OAASujC,IAC/Dc,EAAYA,EAAUI,OAAO,EAAGlB,EAAYJ,EAAUnjC,OAASokC,EAAgBpkC,SAEnFlB,SAAS4lC,YAAY,cAAc,EAAOL,MA7J3BxqC,EAgKnBypC,YAAc,SAAAj+B,GACVA,EAAMod,iBAEN,IAAMmf,EAAO/nC,EAAK+sC,YAAYvf,QAGxB8b,EAAYvB,EAAKuB,UAGL,SAFAvB,EAAKsF,YAGnBtF,EAAKuB,UAAY,IAOrBtnC,KAAgBgH,aAAa,CACzBC,QAAS,2BACT+f,SAAUsgB,KAnLCtpC,EAuLnBstC,gBAAkB,WAAM,IACZplB,EAASloB,EAAKokB,MAAd8D,KACR,GAAKA,KAEeA,EAAZe,QACI9iB,QAAUonC,MAAtB,CAEA,IAAMvnB,EAAS,CACXnjB,GAAI+V,KAAKI,MACT6E,KAAM,IAGV7b,KAAgBgH,aAAa,CACzBC,QAAS,4BACT+c,aArMWhmB,EAyMnBwtC,mBAAqB,SAAC3qC,GAA0BhB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAExC7B,EAAKytC,wBAAwB5qC,GAE7B7C,EAAKupC,aAAa1mC,IA7MP7C,EAiNnBupC,aAAe,SAAA1mC,GACXb,KAAgBgH,aAAa,CACzBC,QAAS,+BACTpG,QApNW7C,EAwNnBytC,wBAA0B,SAAA5qC,GAAM,IACpBqlB,EAASloB,EAAKokB,MAAd8D,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBe,EAAYf,EAAZe,QAEFvW,EAAQuW,EAAQuI,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOA,IACxC6qC,EAAYh7B,EAAQ,EACtBi7B,GAAe,EACV1nC,EAAIyM,EAAOzM,EAAIgjB,EAAQ9iB,OAAQF,IAAK,CAEzC,GADiBgjB,EAAQhjB,GAAjB4X,KACE,CACN8vB,GAAe,EACf,OAIJA,GACA3tC,EAAKwtC,mBAAmB3qC,GAG5B,IAAM+qC,EAAW5tC,EAAKktC,cAAc9pC,IAAIsqC,GACxC,GAAKE,EAOLA,EAAS/E,OAAM,QAJXf,GAFgB9nC,EAAK+sC,YAAYvf,SAEd,KAjPRxtB,EAwPnB6tC,sBAAwB,SAAAhrC,GAAM,IAClBqlB,EAASloB,EAAKokB,MAAd8D,KACR,GAAKA,EAAL,CAF0B,IAOpBwlB,EAHcxlB,EAAZe,QAEcuI,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOA,IACpB,EAEpB+qC,EAAW5tC,EAAKktC,cAAc9pC,IAAIsqC,GACxC,GAAKE,EAOLA,EAAS/E,OAAM,QAJXf,GAFgB9nC,EAAK+sC,YAAYvf,SAEd,KArQRxtB,EA4QnBotC,sBAAwB,SAAAvqC,GAAM,IAClBqlB,EAASloB,EAAKokB,MAAd8D,KACR,GAAKA,EAAL,CAF0B,IAIlBe,EAAYf,EAAZe,QAEFvW,EAAQuW,EAAQuI,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOA,IACxC8uB,EAAYjf,EAAQ,EAEpBo7B,EAAW9tC,EAAKktC,cAAc9pC,IAAIuuB,GACxC,GAAKmc,EAULA,EAASjF,MAAMiF,GAAU,OAVzB,CACI,IAAMjwB,EAAOnL,GAAS,GAAKA,EAAQuW,EAAQ9iB,OAAS8iB,EAAQvW,GAAOmL,KAAO,GAC1E,GAAIoL,EAAQ9iB,SAAW0X,EACnB,OAGJ7d,EAAKstC,qBA5RMttC,EAmSnB+tC,QAAU,WAAM,IACJ7lB,EAASloB,EAAKokB,MAAd8D,KACR,GAAKA,EAAL,CAFY,IAIJe,EAAYf,EAAZe,QAEF+kB,EAAWT,KAAyBtkB,EAAQ9iB,OAElD,OAAI6nC,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGX,eAAA7iC,OAAsBoiC,KAAyBtkB,EAAQ9iB,OAAvD,oBAlTenG,EAqTnBiuC,YAAc,YF9UX,SAAqB/lB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBc,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,QAClB,QAAID,GAEGC,EAAQtd,KAAK,SAAAC,GAAC,OAAIwR,QAAQxR,EAAEiS,QE2U3BqwB,CAFaluC,EAAKokB,MAAd8D,MAKJloB,EAAKmuC,yBAFLnuC,EAAK0kB,SAAS,CAAEkoB,SAAS,KAzTd5sC,EA+TnB6jC,WAAa,WAAM,IACPuK,EAAWpuC,EAAKwf,MAAhB4uB,OAEFC,EAAmB/B,GAAUgC,sBAC9BD,IAELD,EAAOC,GAEPruC,EAAKmuC,2BAvUUnuC,EA0UnBuuC,wBAA0B,WACtBvuC,EAAK0kB,SAAS,CAAEkoB,SAAS,KA3UV5sC,EA8UnBmuC,uBAAyB,WACrBnuC,EAAKuuC,0BAELvsC,KAAgBgH,aAAa,CACzBC,QAAS,4BA/UbjJ,EAAK+sC,YAAc7sB,IAAMie,YACzBn+B,EAAKktC,cAAgB,IAAI7jC,IAEzBrJ,EAAKokB,MAAQ,CACT8D,KAAM,KACN0kB,SAAS,EACTjD,aAAckD,MATH7sC,mFAcfssC,GAAU5qB,GAAG,yBAA0BvhB,KAAK6sC,wBAC5CV,GAAU5qB,GAAG,+BAAgCvhB,KAAK6sC,wBAClDV,GAAU5qB,GAAG,sBAAuBvhB,KAAKwsC,2BACzCL,GAAU5qB,GAAG,4BAA6BvhB,KAAK8sC,iCAC/CX,GAAU5qB,GAAG,yBAA0BvhB,KAAK6sC,wBAC5CV,GAAU5qB,GAAG,2BAA4BvhB,KAAK2sC,+EAI9CR,GAAUnqC,eAAe,yBAA0BhC,KAAK6sC,wBACxDV,GAAUnqC,eAAe,+BAAgChC,KAAK6sC,wBAC9DV,GAAUnqC,eAAe,sBAAuBhC,KAAKwsC,2BACrDL,GAAUnqC,eAAe,4BAA6BhC,KAAK8sC,iCAC3DX,GAAUnqC,eAAe,yBAA0BhC,KAAK6sC,wBACxDV,GAAUnqC,eAAe,2BAA4BhC,KAAK2sC,2EA4C3C3nB,EAAWC,EAAWC,GAAU,IAAA1a,EAAAxK,KAC9BA,KAAKikB,MAAd8D,OAEK9C,EAAU8C,MACnBqP,WAAW,WACPuQ,GAAUn9B,EAAKoiC,YAAYvf,SAAS,IACrC,oCAwQF,IAAAghB,EAAAruC,KAAAof,EACkBpf,KAAKqf,MAApBmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EADZ2M,EAEmChkB,KAAKikB,MAArCulB,EAFHxlB,EAEGwlB,aAAciD,EAFjBzoB,EAEiByoB,QAAS1kB,EAF1B/D,EAE0B+D,KAC/B,IAAKA,EAAM,OAAO,KAElB,IAAMe,EAAUf,EAAOA,EAAKe,QAAU,GAEtC9oB,KAAK+sC,cAAc9tB,QACnB,IAAMjc,EAAQ8lB,EAAQtb,IAAI,SAAC/B,EAAG3F,GAAJ,OACtB6Z,EAAAnf,EAAAkM,cAAC4hC,GAAD,CACIjQ,IAAK,SAAAkQ,GAAE,OAAIF,EAAKtB,cAAc9rC,IAAI6E,EAAGyoC,IACrCj3B,IAAK7L,EAAE/I,GACPmjB,OAAQpa,EACR49B,SAAUgF,EAAKhB,mBACfpD,YAAaoE,EAAKX,sBAClB9D,YAAayE,EAAKpB,0BAIpBuB,EAAepB,KAAyBtkB,EAAQ9iB,OAAS,EACzDm0B,EAAOn6B,KAAK4tC,UAElB,OACIjuB,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACIof,UAAWY,EAAQiuB,WACnBxkC,MAAI,EACJkgB,mBAAoB,EACpBX,QAASxpB,KAAK8tC,YACd1jB,kBAAgB,gBAChBzK,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,gBAAgB2U,EAAE,YAClCsI,EAAAnf,EAAAkM,cAAC4d,EAAA9pB,EAAD,CAAeggB,QAAS,CAAEgC,KAAMhC,EAAQkuB,cACpC/uB,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,qCACXD,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYwhB,MAAM,UAAU0E,QAAQ,YAAY/Z,MAAO,CAAEiiC,SAAU,IAC9Dv3B,EAAE,aAENmyB,GAAgBuC,KAAuB8C,MACpClvB,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYwhB,MAAOwnB,GAAgB,EAAI,gBAAkB,QAAS9iB,QAAQ,aACrE8iB,IAIb7pB,EAAAnf,EAAAkM,cAAA,OACI2xB,IAAKr+B,KAAK4sC,YACVlqC,GAAG,8BACHkoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAazzB,EAAE,gBACf0zB,cAAagB,KACbd,kBAAiByB,KACjBtB,QAASprC,KAAKmqC,YACdgB,UAAWnrC,KAAKypC,cAChByB,QAASlrC,KAAKspC,cAElB3pB,EAAAnf,EAAAkM,cAACoiC,GAAAtuC,EAAD,CAASof,UAAWY,EAAQuuB,cAC5BpvB,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYwhB,MAAM,UAAU0E,QAAQ,aAC/BrP,EAAE,gBAEPsI,EAAAnf,EAAAkM,cAACsiC,GAAAxuC,EAAD,CAAMggB,QAAS,CAAEgC,KAAMhC,EAAQyuB,WAC1BjsC,EACAwrC,GACG7uB,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CACIue,UAAU,EACVa,UAAWY,EAAQ2uB,SACnBC,QAAM,EACNtvB,QAAS9f,KAAKmtC,iBACdxtB,EAAAnf,EAAAkM,cAAC+6B,EAAAjnC,EAAD,CAAc6uC,mBAAiB,EAACxS,QAASxlB,EAAE,mBAIvDsI,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,KAAa25B,IAEjBxa,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUlC,QAAS9f,KAAK8tC,aACjCz2B,EAAE,WAENy0B,GAAY/jB,IACTpI,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUlC,QAAS9f,KAAK0jC,YACjCrsB,EAAE,WAKnBsI,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACIof,UAAWY,EAAQiuB,WACnBxkC,KAAMwiC,EACNtiB,mBAAoB,EACpBX,QAASxpB,KAAKouC,wBACdhkB,kBAAgB,gBAChBzK,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,gBAAgB2U,EAAE,yBAClCsI,EAAAnf,EAAAkM,cAAC4d,EAAA9pB,EAAD,CAAeggB,QAAS,CAAEgC,KAAMhC,EAAQkuB,cAAgBr3B,EAAE,wBAC1DsI,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUlC,QAAS9f,KAAKouC,yBACjC/2B,EAAE,WAEPsI,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUlC,QAAS9f,KAAKguC,wBACjC32B,EAAE,iBAvbA0I,IAAMC,YA2ctB4G,GAPCC,YACZ6kB,eACA1qB,IA3dW,SAAAC,GAAK,MAAK,CACrBwtB,WAAY,CACRzsB,MAAOf,EAAM2b,QAAQlf,KAAKmf,SAE9B6R,YAAa,CACTl/B,MAAO,KAEXu/B,YAAa,CACThoB,OAAQ,aAEZkoB,SAAU,CACNloB,OAAQ,WAEZooB,SAAU,CACN9rB,QAAS,YACTrB,MAAO,UACPtS,OAAQ,IAEZ4/B,eAAgB,MA0chBjoB,cACAwkB,eAGWjlB,CAAQ2lB,mCC1ejBgD,sNACFzB,YAAc,WACVjsC,KAAgBgH,aAAa,CACzBC,QAAS,oBACT9B,OAAQnH,EAAKwf,MAAMrY,OACnBC,UAAW,6EAIV,IAAAmY,EACkCpf,KAAKqf,MAApCmB,EADHpB,EACGoB,QAASxZ,EADZoY,EACYpY,OAAQC,EADpBmY,EACoBnY,UACzB,OAAKD,GACAC,EAGD0Y,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,+BACXD,EAAAnf,EAAAkM,cAAC8iC,GAAAhvC,EAAD,CAAWof,UAAWY,EAAQivB,aAElC9vB,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iCACXD,EAAAnf,EAAAkM,cAACgjC,GAAA,EAAD,CAAO1oC,OAAQA,EAAQC,UAAWA,KAEtC0Y,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gCACXD,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQmvB,gBAAiB3I,aAAW,QAAQlnB,QAAS9f,KAAK8tC,aAC7EnuB,EAAAnf,EAAAkM,cAAC2+B,GAAA7qC,EAAD,SAbI,YAXCuf,IAAMC,YAqCpBgB,OA/CA,SAAAC,GAAK,MAAK,CACrBwuB,UAAW,CACPpsB,QAAS,GACTrB,MAAOf,EAAM2b,QAAQrnB,OAAO8pB,QAEhCsQ,gBAAiB,CACb5oB,OAAQ,KAyCD/F,CAAmBuuB,IC1BnBK,cA3BX,SAAAA,EAAY5oC,GAASlH,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA4vC,GACjB5vC,KAAKgH,OAASA,EACdhH,KAAK6vC,WAAa,2DAGZt6B,GACN,GAAKvV,KAAKgH,OAAV,CAEA,GAAIhH,KAAK6vC,YAAc7vC,KAAK6vC,WAAW,WAAat6B,EAAO,SAAU,CACjE,IAAIsD,EAAM,IAAIJ,KAEd,GADAI,EAAIi3B,WAAWj3B,EAAIk3B,aAAeC,MAC9BhwC,KAAKiwC,gBAAkBjwC,KAAKiwC,eAAiBp3B,EAC7C,OAIR7Y,KAAK6vC,WAAat6B,EAClBvV,KAAKiwC,eAAiB,IAAIx3B,KAE1B5W,KAAgBgJ,KAAK,CACjB/B,QAAS,iBACT1C,QAASpG,KAAKgH,OACduO,OAAQA,wECKd26B,WAAoBnwB,IAAMowB,KAAK,kBAAMxmC,QAAAymC,IAAA,CAAAvyB,EAAAmM,EAAA,GAAAnM,EAAAmM,EAAA,KAAA7e,KAAA0S,EAAAwyB,KAAA,cAYrCC,eACF,SAAAA,EAAYjxB,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAswC,IACfzwC,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAwwC,GAAAnwC,KAAAH,KAAMqf,KAgEVkxB,0BAA4B,SAAA5vC,GAAU,IACjB0C,EAAS1C,EAAlByE,QACR,GAAK/B,EAAL,CAFkC,IAI1B+B,EAAsC/B,EAAtC+B,QAASqB,EAA6BpD,EAA7BoD,UAAW+I,EAAkBnM,EAAlBmM,MAAOE,EAAWrM,EAAXqM,OACnC,GAAKtK,EAAL,CAEAvF,EAAK2wC,cAAcnjB,QAAQ8b,UAAY,KACvCtpC,EAAK2wC,cAAcnjB,QAAQojB,YAAc,KACzC5wC,EAAKqtC,UAAY,KAEjB,IAAM3oC,EAAU,CACZuE,QAAS,sBACT1D,QAAS,CACL0D,QAAS,cACTpG,GAAI0C,EAAQ1C,IAEhB8M,QACAE,UAGJ,GAAIjJ,EAAW,KACIiqC,EAAmDjqC,EAA1D+I,MAA+BmhC,EAA2BlqC,EAAnCiJ,OAAyB9K,EAAU6B,EAAV7B,MAExDL,EAAQkC,UAAY,CAChBA,UAAW,CACPqC,QAAS,cACTpG,GAAIkC,EAAMlC,IAEd8M,MAAOkhC,EACPhhC,OAAQihC,GAIhB9wC,EAAK+wC,eAAersC,GAAS,EAAM,SAAA4F,MAEnCtI,KAAgBgH,aAAa,CACzBC,QAAS,gCACTqxB,KAAM,UAvGKt6B,EA2GnBgxC,oBAAsB,SAAAlwC,GAAU,IACZmwC,EAAkBjxC,EAAKokB,MAA/Bjd,OACAA,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UAEZ6pC,IAAkB9pC,IAItBnH,EAAK0kB,SAAS,CAAE3G,iBAAkB3W,IAE9BA,GACApH,EAAKkxC,kBAtHMlxC,EA0HnBmxC,qBAAuB,SAAArwC,GACAd,EAAKokB,MAAhBjd,SACOrG,EAAOswC,aAEtBpxC,EAAKqtC,UAAY,KACjBrtC,EAAK0kB,SAAS,CACVvd,OAAQrG,EAAOswC,WACfrzB,iBAAkBD,aAA6Bhd,EAAOswC,YACtDC,iBAAiB,MAlINrxC,EAsInBsxC,SAAW,WAAM,IACLnqC,EAAWnH,EAAKokB,MAAhBjd,OAEFoqC,EAAUvxC,EAAK2wC,cAAcnjB,QAE7BgkB,EAAQ7zB,aAAaxW,GACvBqqC,GACAD,EAAQjI,UAAYkI,EAAM3zB,KAC1B7d,EAAKqtC,UAAYmE,EAAM3zB,OAEvB0zB,EAAQjI,UAAY,KACpBtpC,EAAKqtC,UAAY,OAjJNrtC,EAsKnBkxC,cAAgB,WACZ3Z,WAAW,WACP,GAAIv3B,EAAK2wC,cAAcnjB,QAAS,CAC5B,IAAM+jB,EAAUvxC,EAAK2wC,cAAcnjB,QAEnC,GAAI+jB,EAAQtJ,WAAW9hC,OAAS,EAAG,CAC/B,IAAMgiC,EAAQljC,SAASmjC,cACvBD,EAAME,SAASkJ,EAAQtJ,WAAW,GAAIsJ,EAAQtJ,WAAW,GAAG9hC,QAC5DgiC,EAAMG,UAAS,GAEf,IAAMC,EAAYr+B,OAAOs+B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvBoJ,EAAQ1I,UAEb,MAtLY7oC,EAyLnByxC,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9BvqC,EAAyBuqC,EAAzBvqC,OAAQwqC,EAAiBD,EAAjBC,aACXxqC,GAELnF,KAAgBgJ,KAAK,CACjB/B,QAAS,sBACT1C,QAASY,EACT4M,cAAe49B,MAlMJ3xC,EAsMnB4xC,uBAAyB,SAACzqC,EAAQ4W,GAC9B,IAAI7Z,EAAO6O,KAAU3P,IAAI+D,GACzB,GAAKjD,EAAL,CACA,IAAM2tC,EAAW7xC,EAAK8xC,eAElBC,EAAgB,GAChBC,EAA2B,EACvBj+B,EAAkB7P,EAAlB6P,cACR,GAAIA,GAAiBA,EAAc6J,oBAAsB7J,EAAc6J,mBAAmBC,KAAM,KACpFtM,EAA4CwC,EAA5CxC,oBAAqBqM,EAAuB7J,EAAvB6J,mBAE7Bo0B,EAA2BzgC,EACvBqM,GAAsBA,EAAmBC,OACzCk0B,EAAgBn0B,EAAmBC,KAAKA,MAIhD,OAAIg0B,IAAaE,GAAiBh0B,IAAqBi0B,EAgB5C,CAAE7qC,OAAQA,EAAQwqC,aAfJ,CACjB1oC,QAAS,eACTsI,oBAAqBwM,EACrBH,mBAAoB,CAChB3U,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMg0B,EACNzmB,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,KAOlB,OA1OQlyC,EA6OnBmyC,aAAe,WACX,IAAIt0B,EAAO7d,EAAK8xC,eAMhB,GAJA9xC,EAAK2wC,cAAcnjB,QAAQ8b,UAAY,KACvCtpC,EAAK2wC,cAAcnjB,QAAQojB,YAAc,KACzC5wC,EAAKqtC,UAAY,KAEZxvB,EAAL,CAEA,IAAMnZ,EAAU,CACZuE,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMA,EACNuN,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,GAGjBlyC,EAAK+wC,eAAersC,GAAS,EAAO,SAAA4F,QAjQrBtK,EAoQnB+mC,iBAAmB,WACf/kC,KAAgBgH,aAAa,CACzBC,QAAS,yBAtQEjJ,EA0QnB2mC,kBAAoB,WACX3mC,EAAKoyC,gBAEVpyC,EAAKoyC,eAAe5kB,QAAQngB,SA7QbrN,EAgRnBqyC,0BAA4B,WACxB,IAAIC,EAAQtyC,EAAKoyC,eAAe5kB,QAAQ8kB,MACnB,IAAjBA,EAAMnsC,SAEVosC,MAAMjuB,KAAKguB,GAAO/uC,QAAQ,SAAAlC,GACtBmxC,aAAcnxC,EAAM,SAAAiJ,GAChBtK,EAAKyyC,gBAAgBnoC,OAI7BtK,EAAKoyC,eAAe5kB,QAAQ/X,MAAQ,KA1RrBzV,EA6RnB6mC,qBAAuB,WACd7mC,EAAK0yC,mBAEV1yC,EAAK0yC,kBAAkBllB,QAAQngB,SAhShBrN,EAmSnB2yC,6BAA+B,WAC3B,IAAIL,EAAQtyC,EAAK0yC,kBAAkBllB,QAAQ8kB,MACtB,IAAjBA,EAAMnsC,SAEVosC,MAAMjuB,KAAKguB,GAAO/uC,QAAQ,SAAAlC,GACtBrB,EAAK4yC,mBAAmBvxC,KAG5BrB,EAAK0yC,kBAAkBllB,QAAQ/X,MAAQ,KA3SxBzV,EAyTnB6yC,YAAc,WAAM,IACR1rC,EAAWnH,EAAKokB,MAAhBjd,OAER,IAAIyT,aAASzT,GAAb,CAEA,IAAMjD,EAAO6O,KAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAEA,IAAMolC,EAAYtpC,EAAK2wC,cAAcnjB,QAAQ8b,UACvC+D,EAAYrtC,EAAK2wC,cAAcnjB,QAAQ6f,UAM7C,GAJI/D,GAA2B,OAAdA,GAAsB+D,IAA4B,SAAdA,GAAsC,oBAAdA,KACzErtC,EAAK2wC,cAAcnjB,QAAQ6f,UAAY,IAGtC/D,GAEiBplC,EAAK6rC,sBAAwB7rC,EAAK6rC,oBAAsB,IAAIA,GAAoB7rC,EAAKrB,MAE7FiwC,UAAU,CAAE7pC,QAAS,wBA5UpBjJ,EA+UnB4pC,cAAgB,SAAAzf,GACMnqB,EAAK2wC,cAAcnjB,QAAQ8b,UAA7C,IACM+D,EAAYrtC,EAAK2wC,cAAcnjB,QAAQ6f,UAC7CrtC,EAAKqtC,UAAYA,EAEH,UAAVljB,EAAE1S,KAAoB0S,EAAEgjB,WACxBhjB,EAAEvB,iBACF5oB,EAAKmyC,iBAtVMnyC,EA0VnByyC,gBAAkB,SAAApxC,GACd,GAAKA,EAAL,CAEA,IAAMqD,EAAU,CACZuE,QAAS,oBACTlE,MAAO,CAAEkE,QAAS,gBAAiB8pC,KAAM1xC,EAAK0xC,KAAM3nC,KAAM/J,GAC1DsO,MAAOtO,EAAK2xC,WACZnjC,OAAQxO,EAAK4xC,aAGjBjzC,EAAK+wC,eAAersC,GAAS,EAAM,SAAA4F,GAC/B,IAAM4oC,EAAgBtlC,KAAaxK,IAAIkH,EAAO/D,QAAS+D,EAAOzH,IACzC,MAAjBqwC,GACAlzC,EAAKmzC,qBAAqBD,EAAe7xC,GAG7CtB,KAAUqzC,WAAW9oC,EAAO5F,QAAQK,MAAMmB,MAAM,GAAGnB,MAAMlC,GAAIyH,OA1WlDtK,EA8WnBqzC,eAAiB,SAAAnrB,GACbloB,EAAK+wC,eAAe7oB,GAAM,EAAM,eA/WjBloB,EAkXnB4yC,mBAAqB,SAAAvxC,GACjB,GAAKA,EAAL,CAEA,IAAMqD,EAAU,CACZuE,QAAS,uBACThE,SAAU,CAAEgE,QAAS,gBAAiB8pC,KAAM1xC,EAAK0xC,KAAM3nC,KAAM/J,IAGjErB,EAAK+wC,eAAersC,GAAS,EAAM,SAAA4F,GAAM,OAAIvK,KAAUqzC,WAAW9oC,EAAO5F,QAAQO,SAASA,SAASpC,GAAIyH,OA1XxFtK,EA6XnBsqC,YAAc,SAAA9+B,GAIV,IAHA,IAAMrI,GAASqI,EAAMi/B,eAAiBj/B,EAAM8nC,cAAc7I,eAAetnC,MAEnEmvC,EAAQ,GACLrsC,EAAI,EAAGA,EAAI9C,EAAMgD,OAAQF,IACQ,IAAlC9C,EAAM8C,GAAGstC,KAAKC,QAAQ,SACtBlB,EAAM3oC,KAAKxG,EAAM8C,GAAGwtC,aAI5B,GAAInB,EAAMnsC,OAAS,EAKf,OAJAqF,EAAMod,iBAEN5oB,EAAKsyC,MAAQA,OACbtyC,EAAK0kB,SAAS,CAAE2sB,iBAAiB,IAIrC,IAAMqC,EAAYloC,EAAMi/B,cAAcC,QAAQ,cAC9C,OAAIgJ,GACAloC,EAAMod,iBACN3jB,SAAS4lC,YAAY,cAAc,EAAO6I,QAC1C1zC,EAAKqtC,UAAYqG,SAHrB,GAhZe1zC,EAwZnB2zC,oBAAsB,WAClB3zC,EAAK4zC,mBAEL,IAAMtB,EAAQtyC,EAAKsyC,MACdA,GACAA,EAAMnsC,SAEXmsC,EAAM/uC,QAAQ,SAAAlC,GACVrB,EAAK4yC,mBAAmBvxC,KAG5BrB,EAAKsyC,MAAQ,OAnaEtyC,EAsanB4zC,iBAAmB,WACf5zC,EAAK0kB,SAAS,CAAE2sB,iBAAiB,KAvalBrxC,EA0anBmzC,qBAAuB,SAAC1uC,EAAS6D,GAC7B,GAAI7D,GAAWA,EAAQsa,eAAoD,+BAAnCta,EAAQsa,cAAc,UACtDta,EAAQC,SAAwC,iBAA7BD,EAAQC,QAAQ,UAA+BD,EAAQC,QAAQK,MAAO,CACzF,IAAIqH,EAAO8D,aAAQzL,EAAQC,QAAQK,MAAMmB,MAAOkM,MAChD,IAAKhG,EAAM,OAEX,IAAI/K,EAAO+K,EAAKrH,MACZ1D,GAAQA,EAAK0B,OAAS1B,EAAK0B,MAAMG,2BAA6B7B,EAAKiH,OACnEjH,EAAKiH,KAAOA,EACZvI,KAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIxB,EAAKwB,OAnbzD7C,EAybnB+wC,eAzbmB,eAAAvwC,EAAAP,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAybF,SAAAC,EAAO6D,EAASovC,EAAYtqC,GAA5B,IAAA2a,EAAAhd,EAAA4W,EAAAzT,EAAA,OAAA6kB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAijB,EACwBnkB,EAAKokB,MAAlCjd,EADKgd,EACLhd,OAAQ4W,EADHoG,EACGpG,iBAEX5W,EAHQ,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIRkD,EAJQ,CAAA1D,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOHqX,KAAiBw7B,sBAAjB,mCAAA5oC,OAA0EhE,IAPvE,cAAAnG,EAAAE,KAAA,GASUc,KAAgBgJ,KAAK,CACpC/B,QAAS,cACT1C,QAASY,EACToK,oBAAqBwM,EACrBi2B,sBAAuBtvC,IAblB,QASL4F,EATKtJ,EAAAkK,KAgBTlL,EAAK0kB,SAAS,CAAE3G,iBAAkB,GAAK,WACnC,GAAI+1B,EAAY,CACZ,IAAMG,EAAsBj0C,EAAK4xC,uBAC7B5xC,EAAKokB,MAAMjd,OACXnH,EAAKokB,MAAMrG,kBAEf/d,EAAKyxC,oBAAoBwC,MAKjCjyC,KAAgBgJ,KAAK,CACjB/B,QAAS,eACT1C,QAASY,EACT4E,YAAa,CAACzB,EAAOzH,MAGzB2G,EAASc,GAjCAtJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAG,GAAAH,EAAA,SAmCTkzC,MAAM,qBAAuBC,KAAKC,UAALpzC,EAAAG,KAnCpB,yBAAAH,EAAAU,SAAAb,EAAA,kBAzbE,gBAAAc,EAAAc,EAAA6vB,GAAA,OAAA9xB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAgenBq0C,kBAAoB,SAAA1mB,GACXA,IAEL3tB,EAAK2wC,cAAcnjB,QAAQ8b,WAAa3b,EAAM2mB,OAC9Ct0C,EAAKypC,gBApeUzpC,EAuenBypC,YAvemB,eAAArnC,EAAAnC,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAueL,SAAAyB,EAAMmJ,GAAN,IAAA89B,EAAAnoC,EAAAozC,EAAAC,EAAAC,EAAApjB,EAAA,OAAAlC,EAAAxuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,WACJooC,EAAYtpC,EAAK2wC,cAAcnjB,QAAQ8b,cAC3BA,EAAUnjC,OAAS,IAF3B,CAAA7D,EAAApB,KAAA,eAGW64B,KAATO,MAEJt4B,KAAgBgH,aAAa,CACzBC,QAAS,gCACTqxB,KAAM,OAPRh4B,EAAAd,OAAA,oBAcJL,EAAKuzC,YAAY17B,MACjBu7B,EAAQI,MACVH,EAAQD,EAAMK,KAAKtL,GACjBmL,EAAKC,YAAY17B,MACvBnV,QAAQ4F,IAAI,YAAcgrC,EAAKtzC,GAAM,KAAMqzC,GACtCA,GAASlL,IAAckL,EAAM,GAnBxB,CAAAlyC,EAAApB,KAAA,gBAoBW64B,KAATO,MAEJt4B,KAAgBgH,aAAa,CACzBC,QAAS,gCACTqxB,KAAM,OAxBRh4B,EAAAd,OAAA,kBA+BJ6vB,EAAYzY,KAAKI,MACvBhX,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT0kB,MAAO6mB,EAAM,GACbniB,MAAO,MACR/mB,KAAK,SAAA6I,GACJnS,KAAgBgH,aAAa,CACzBC,QAAS,gCACTqxB,KAAM,CACFjJ,YACA1D,MAAO6mB,EAAM,GACbrgC,gBAKZnS,KAAgBgJ,KAAK,CACjB/B,QAAS,iBACT0kB,MAAO6mB,EAAM,GACbniB,MAAO,MACR/mB,KAAK,SAAA6I,GACJnS,KAAgBgH,aAAa,CACzBC,QAAS,iCACTqxB,KAAM,CACFjJ,YACA1D,MAAO6mB,EAAM,GACbrgC,gBAzDF,yBAAA7R,EAAAZ,SAAAW,MAveK,gBAAAgJ,GAAA,OAAAjJ,EAAAR,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAK0yC,kBAAoBxyB,IAAMie,YAC/Bn+B,EAAKoyC,eAAiBlyB,IAAMie,YAC5Bn+B,EAAK2wC,cAAgBzwB,IAAMie,YAE3B,IAAMh3B,EAASoR,KAAiBs8B,YAPjB,OASf70C,EAAKqtC,UAAY,KACjBrtC,EAAKokB,MAAQ,CACTjd,OAAQA,EACR4W,iBAAkBD,aAA6B3W,GAC/CkqC,iBAAiB,GAbNrxC,qFAiBG+kB,EAAWC,GAAW,IAAAzF,EACnBpf,KAAKqf,MAAlB4B,EADgC7B,EAChC6B,MAAO5J,EADyB+H,EACzB/H,EADyB8oB,EAEcngC,KAAKikB,MAAnDjd,EAFgCm5B,EAEhCn5B,OAAQ4W,EAFwBuiB,EAExBviB,iBAAkBszB,EAFM/Q,EAEN+Q,gBAElC,OAAItsB,EAAU3D,QAAUA,IAIpB2D,EAAUvN,IAAMA,IAIhBwN,EAAU7d,SAAWA,IAIrB6d,EAAUjH,mBAAqBA,GAI/BiH,EAAUqsB,kBAAoBA,iDAUlC94B,KAAiBmJ,GAAG,qBAAsBvhB,KAAKgxC,sBAC/CvjC,KAAa8T,GAAG,oBAAqBvhB,KAAK6wC,qBAC1CjX,KAAarY,GAAG,0BAA2BvhB,KAAKuwC,2BAEhDvwC,KAAK+wC,gBACL/wC,KAAKmxC,WACLnxC,KAAKspC,6DAIL,IAAMwK,EAAsB9zC,KAAKyxC,uBAAuBzxC,KAAKikB,MAAMjd,OAAQhH,KAAKikB,MAAMrG,kBACtF5d,KAAKsxC,oBAAoBwC,GAEzB17B,KAAiBpW,eAAe,qBAAsBhC,KAAKgxC,sBAC3DvjC,KAAazL,eAAe,oBAAqBhC,KAAK6wC,qBACtDjX,KAAa53B,eAAe,0BAA2BhC,KAAKuwC,sEAuF7CvrB,EAAWC,EAAWC,GAErCllB,KAAKsxC,oBAAoBpsB,GAErBD,EAAUje,SAAWhH,KAAKikB,MAAMjd,SAChChH,KAAK+wC,gBACL/wC,KAAKmxC,WACLnxC,KAAKspC,+DAIWtkB,EAAWC,GAC/B,OAAIA,EAAUje,SAAWhH,KAAKikB,MAAMjd,OAAe,KAE5ChH,KAAKyxC,uBAAuBxsB,EAAUje,OAAQie,EAAUrH,yDA4I/D,IAAIurB,EAAYnpC,KAAKwwC,cAAcnjB,QAAQ8b,UACvC+D,EAAYltC,KAAKwwC,cAAcnjB,QAAQ6f,UAM3C,OAJI/D,GAA2B,OAAdA,GAAsB+D,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEltC,KAAKwwC,cAAcnjB,QAAQ6f,UAAY,IAGpC/D,mCAgPF,IAAA5oB,EACkBvgB,KAAKqf,MAApBmB,EADHD,EACGC,QAASnJ,EADZkJ,EACYlJ,EADZ+oB,EAEiDpgC,KAAKikB,MAAnDjd,EAFHo5B,EAEGp5B,OAAQ4W,EAFXwiB,EAEWxiB,iBAAkBszB,EAF7B9Q,EAE6B8Q,gBAE5B3sC,EAA6B,OAAnBvE,KAAKktC,UAAqBltC,KAAKktC,UAAY,KAE3D,OACIvtB,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,aAC5C3G,EAAAnf,EAAAkM,cAACioC,GAAD,CAAgB3tC,OAAQA,EAAQC,UAAW2W,IAC3C+B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAACiT,EAAAnf,EAAMo0C,SAAP,CACIC,SACIl1B,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQumB,WAAYC,aAAW,YAClDrnB,EAAAnf,EAAAkM,cAACooC,EAAAt0C,EAAD,QAGRmf,EAAAnf,EAAAkM,cAACwjC,GAAD,CAAmB9X,SAAUp4B,KAAKk0C,sBAG1Cv0B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,0BACXD,EAAAnf,EAAAkM,cAAA,OACIhK,GAAG,mBACH27B,IAAKr+B,KAAKwwC,cACVl5B,IAAK,IAAImB,KACTqyB,YAAazzB,EAAE,WACfuzB,iBAAe,EACfC,gCAA8B,EAC9BM,UAAWnrC,KAAKypC,cAChBsL,QAAS/0C,KAAK0yC,YACdtH,QAASprC,KAAKmqC,YACde,QAASlrC,KAAKspC,aACb/kC,IAGTob,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,yBACXD,EAAAnf,EAAAkM,cAAA,SACI2xB,IAAKr+B,KAAKuyC,kBACV3yB,UAAU,yBACVhO,KAAK,OACLojC,SAAS,WACT3yB,SAAUriB,KAAKwyC,+BAEnB7yB,EAAAnf,EAAAkM,cAAA,SACI2xB,IAAKr+B,KAAKiyC,eACVryB,UAAU,yBACVhO,KAAK,OACLojC,SAAS,WACTC,OAAO,UACP5yB,SAAUriB,KAAKkyC,4BAEnBvyB,EAAAnf,EAAAkM,cAACwoC,GAAD,CACIluC,OAAQA,EACRy/B,cAAezmC,KAAKwmC,kBACpBG,iBAAkB3mC,KAAK0mC,qBACvBG,aAAc7mC,KAAK4mC,mBAMvBjnB,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQumB,WAAYC,aAAW,OAAOlnB,QAAS9f,KAAKgyC,cACvEryB,EAAAnf,EAAAkM,cAACyoC,EAAA30C,EAAD,WAKdkb,aAAc1U,IAAW2Y,EAAAnf,EAAAkM,cAAC0oC,GAAD,CAAkBnH,OAAQjuC,KAAKkzC,iBAC1DvzB,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACI2pB,mBAAoB,EACpBlgB,KAAMinC,EACN1nB,QAASxpB,KAAKyzC,iBACdrpB,kBAAgB,uBAChBzK,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,uBAAuB2U,EAAE,YACzCsI,EAAAnf,EAAAkM,cAAC4d,EAAA9pB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC6d,EAAA/pB,EAAD,KACKR,KAAKmyC,OAASnyC,KAAKmyC,MAAMnsC,OAAS,EAC7B,uCACA,wCAGd2Z,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAKyzC,iBAAkBzxB,MAAM,WACzC3K,EAAE,WAEPsI,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAKwzC,oBAAqBxxB,MAAM,WAC5C3K,EAAE,iBA9nBD2I,aA4oBf4G,GALCC,YACZ7F,IAlpBW,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChBinC,WAAY,CACRhgB,OAAQ,SAEZ4oB,gBAAiB,CACb5oB,OAAQ,IAETI,aAAYlG,KA2oBI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQ0pB,yBCxqBjB+E,4LACO,IAAAj2B,EACmCpf,KAAKqf,MAArCmB,EADHpB,EACGoB,QAASiL,EADZrM,EACYqM,QAAS6pB,EADrBl2B,EACqBk2B,UAE1B,OACI31B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,2BAC5C3G,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,0BACXD,EAAAnf,EAAAkM,cAAC6oC,GAAA/0C,EAAD,CAAQwhB,MAAM,UAAUpC,UAAWY,EAAQ4uB,OAAQtvB,QAASw1B,GACvD7pB,YARG1L,IAAMC,YAgBnBgB,OAxBA,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChBsvC,OAAQ,CACJroB,OAAQ,OACR4kB,SAAU,UAEXxkB,aAAYlG,KAmBJD,CAAmBq0B,ICTnBG,eAjBX,SAAAA,EAAYn2B,GAAO,OAAAvf,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAw1C,GAAA11C,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA01C,GAAAr1C,KAAAH,KACTqf,0EAGD,IAECoM,EADczrB,KAAKikB,MAAjBoe,QACkB,SAAW,OAErC,OACI1iB,EAAAnf,EAAAkM,cAAC+oC,GAAD,CACIhqB,QAASA,EACT6pB,UAAWt1C,KAAKwiC,2CAZUL,uBCOpCuT,uBACF,SAAAA,EAAYr2B,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA01C,IACf71C,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA41C,GAAAv1C,KAAAH,KAAMqf,KAqBVs2B,mBAAqB,SAAAh1C,GAAU,IACnBqG,EAAWnH,EAAKwf,MAAhBrY,OAEJqV,aAAgBrV,EAAQrG,EAAO+2B,YAAYh1B,KAC3C7C,EAAKyhB,eA1BMzhB,EA8BnB+1C,mBAAqB,SAAAj1C,GAAU,IACnBqG,EAAWnH,EAAKwf,MAAhBrY,OAEJyV,aAAgBzV,EAAQrG,EAAOqZ,WAAWtX,KAC1C7C,EAAKyhB,eAlCMzhB,EAsCnBg2C,WAAa,WAAM,IACP7uC,EAAWnH,EAAKwf,MAAhBrY,OACHA,GAELnF,KAAgBgJ,KAAK,CACjB/B,QAAS,WACT1C,QAASY,KA5CEnH,EAgDnBi2C,oBAAsB,WAAM,IAChB9uC,EAAWnH,EAAKwf,MAAhBrY,OACHA,GAELnF,KAAgBgJ,KAAK,CACjB/B,QAAS,oBACT1C,QAASY,EACT+uC,uBAAuB,KAvDZl2C,qFAIG+kB,EAAWC,GAC7B,OAAID,EAAU5d,SAAWhH,KAAKqf,MAAMrY,mDAQpCuS,KAAgBgI,GAAG,mBAAoBvhB,KAAK21C,oBAC5C17B,KAAgBsH,GAAG,mBAAoBvhB,KAAK41C,mEAI5Cr8B,KAAgBvX,eAAe,mBAAoBhC,KAAK21C,oBACxD17B,KAAgBjY,eAAe,mBAAoBhC,KAAK41C,qDA8CnD,IACG5uC,EAAWhH,KAAKqf,MAAhBrY,OACFjD,EAAO6O,KAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,KAAgBtW,IAAIc,EAAK6N,KAAK4H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAOkG,EAAAnf,EAAAkM,cAACspC,GAAD,MAEX,IAAK,yBACD,OAAOr2B,EAAAnf,EAAAkM,cAAC+oC,GAAD,CAAehqB,QAAQ,kBAAkB6pB,UAAWt1C,KAAK81C,sBAEpE,IAAK,0BACD,OAAOn2B,EAAAnf,EAAAkM,cAACspC,GAAD,MAEX,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAOr2B,EAAAnf,EAAAkM,cAACspC,GAAD,MAEX,IAAK,6BACD,OAAI18B,EAAWG,OAAOqC,UACbxC,EAAWG,OAAO8D,kBAIhBoC,EAAAnf,EAAAkM,cAACspC,GAAD,MAHI,KAKJr2B,EAAAnf,EAAAkM,cAAC+oC,GAAD,CAAehqB,QAAQ,OAAO6pB,UAAWt1C,KAAK61C,aAMrE,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAOl2B,EAAAnf,EAAAkM,cAACspC,GAAD,MAEX,IAAK,qBACD,IAAMh8B,EAAaC,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAOkG,EAAAnf,EAAAkM,cAACspC,GAAD,MAEX,IAAK,yBACD,OAAOr2B,EAAAnf,EAAAkM,cAAC+oC,GAAD,CAAehqB,QAAQ,kBAAkB6pB,UAAWt1C,KAAK81C,sBAEpE,IAAK,0BACD,OAAOn2B,EAAAnf,EAAAkM,cAACspC,GAAD,MAEX,IAAK,uBACD,OAAOr2B,EAAAnf,EAAAkM,cAAC+oC,GAAD,CAAehqB,QAAQ,OAAO6pB,UAAWt1C,KAAK61C,aAEzD,IAAK,yBACD,OAAI77B,EAAWG,WACJwF,EAAAnf,EAAAkM,cAACupC,GAAD,CAA6BjvC,OAAQA,IAErC2Y,EAAAnf,EAAAkM,cAACspC,GAAD,MAGf,IAAK,6BACD,OAAIh8B,EAAWP,OAAOqC,UACb9B,EAAWP,OAAO8D,kBAIhBoC,EAAAnf,EAAAkM,cAACspC,GAAD,MAHI,KAKJr2B,EAAAnf,EAAAkM,cAAC+oC,GAAD,CAAehqB,QAAQ,OAAO6pB,UAAWt1C,KAAK61C,cAQ7E,OAAO,YAzJM91B,IAAMC,YA6JZ01B,uOCjJTQ,sBACF,SAAAA,EAAY72B,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAk2C,IACfr2C,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAo2C,GAAA/1C,KAAAH,KAAMqf,KA2CV82B,MAAQ,WAAM,IACFnlB,EAAanxB,EAAKwf,MAAlB2R,SAGM,IAFInxB,EAAKokB,MAAf3O,OAGJzV,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAa,IAGjBmG,WAAW,WACiBv3B,EAAKokB,MAArBgN,aAEJpxB,EAAK0kB,SAAS,CACVjP,MAAOzV,EAAKu2C,SAAS,EAAGplB,GAAU,MAG3CqlB,MAEHx2C,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAa,EACb3b,MAAOzV,EAAKu2C,SAAS,EAAGplB,GAAU,MAlE3BnxB,EAuEnBu/B,uBAAyB,SAAAz+B,GAAU,IAAAye,EACDvf,EAAKwf,MAA3BrY,EADuBoY,EACvBpY,OAAQC,EADemY,EACfnY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAKs2C,SA3EMt2C,EA+EnBqgC,wBAA0B,SAAAv/B,GAAU,IAAA4f,EACQ1gB,EAAKwf,MAArCrY,EADwBuZ,EACxBvZ,OAAQC,EADgBsZ,EAChBtZ,UAAW+pB,EADKzQ,EACLyQ,SACnBqO,EAAWx/B,EAAKokB,MAAhBob,OAEJr4B,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK0kB,SAAS,CACV0M,YAAatwB,EAAOswB,YACpBD,SAAUrwB,EAAOqwB,UAAYA,EAC7B1b,MAAOzV,EAAKu2C,SAASz1C,EAAOswB,YAAatwB,EAAOqwB,UAAYA,EAAUqO,MAvF/Dx/B,EA4FnB2/B,0BAA4B,SAAA7+B,GAAU,IAAAynB,EACMvoB,EAAKwf,MAArCrY,EAD0BohB,EAC1BphB,OAAQC,EADkBmhB,EAClBnhB,UAAW+pB,EADO5I,EACP4I,SADOhN,EAEFnkB,EAAKokB,MAA7Bob,EAF0Brb,EAE1Bqb,OAAQpO,EAFkBjN,EAElBiN,YAEZjqB,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAaoO,EAASpO,EAAc,EACpC3b,MAAOzV,EAAKu2C,SAAS/W,EAASpO,EAAc,EAAGD,GAAU,KAEtDqO,GACPx/B,EAAKs2C,SAvGMt2C,EA2GnBu2C,SAAW,SAACnlB,EAAaD,EAAUqO,GAC/B,OAAOA,EAASpO,EAAcD,EAAW,GA5G1B,IAGP1sB,EAAkByrB,IAAlBzrB,QAAS8rB,EAASL,IAATK,KAHFxH,EAIyB/oB,EAAKwf,MAArCrY,EAJO4hB,EAIP5hB,OAAQC,EAJD2hB,EAIC3hB,UAAW+pB,EAJZpI,EAIYoI,SAErBqO,EAAS/6B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EACjEgqB,EAAcoO,GAAUjP,EAAOA,EAAKa,YAAc,EAClDuP,EAAgBnB,GAAUjP,GAAQA,EAAKY,SAAWZ,EAAKY,SAAWA,EARzD,OAUfnxB,EAAKokB,MAAQ,CACTob,OAAQA,EACRpO,YAAaA,EACbD,SAAUwP,EACVlrB,MAAOzV,EAAKu2C,SAASnlB,EAAauP,EAAenB,IAdtCx/B,qFAkBG+kB,EAAWC,GAAW,IAAAsb,EACdngC,KAAKikB,MAAvBob,EADgCc,EAChCd,OAAQ/pB,EADwB6qB,EACxB7qB,MAEhB,OAAIuP,EAAUvP,QAAUA,GAIpBuP,EAAUwa,SAAWA,8CAQzBtP,IAAYxO,GAAG,0BAA2BvhB,KAAKw/B,2BAC/CzP,IAAYxO,GAAG,wBAAyBvhB,KAAKkgC,yBAC7CnQ,IAAYxO,GAAG,uBAAwBvhB,KAAKo/B,uEAI5CrP,IAAY/tB,eAAe,0BAA2BhC,KAAKw/B,2BAC3DzP,IAAY/tB,eAAe,wBAAyBhC,KAAKkgC,yBACzDnQ,IAAY/tB,eAAe,uBAAwBhC,KAAKo/B,yDAsEnD,IACG5e,EAAYxgB,KAAKqf,MAAjBmB,QACAlL,EAAUtV,KAAKikB,MAAf3O,MAER,OACIqK,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,qBACXD,EAAAnf,EAAAkM,cAAC4pC,EAAA91C,EAAD,CACIof,UAAWY,EAAQ+1B,OACnB/1B,QAAS,CACL6gB,MAAO7gB,EAAQ6gB,MACfmV,aAAch2B,EAAQg2B,aACtBC,MAAOj2B,EAAQi2B,OAEnBC,IAAK,EACL/vB,IAAK,EACLrR,MAAOA,YA/HGyK,IAAMC,YA4IrBgB,MA3JA,CACXu1B,OAAQ,CACJI,SAAU,KAEdtV,MAAO,CACHna,WAAY,yEAEhBsvB,aAAc,CACVtvB,WAAY,4BAEhBuvB,MAAO,CACHvvB,WAAY,wDAgJLlG,CAAmBk1B,GCtJ5BzpB,6BACF,SAAAA,EAAYpN,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAysB,IACf5sB,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA2sB,GAAAtsB,KAAAH,KAAMqf,KAmDV+f,uBAAyB,SAAAz+B,GAAU,IAAAye,EACDvf,EAAKwf,MAA3BrY,EADuBoY,EACvBpY,OAAQC,EADemY,EACfnY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK0kB,SAAS,CACV8a,QAAQ,EACRzO,SAAS,EACTK,YAAa,KA3DNpxB,EAgEnBy/B,wBAA0B,SAAA3+B,GAAU,IAAA4f,EACO1gB,EAAKwf,MAApCrY,EADwBuZ,EACxBvZ,OAAQC,EADgBsZ,EAChBtZ,UADgBsZ,EACLqQ,QAEvB5pB,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK0kB,SAAS,CAAEqM,SAAS,IAEzB/wB,EAAK0kB,SAAS,CAAEqM,SAAS,KAtEd/wB,EA0EnB0/B,yBAA2B,SAAA5+B,GAAU,IAAAynB,EACHvoB,EAAKwf,MAA3BrY,EADyBohB,EACzBphB,OAAQC,EADiBmhB,EACjBnhB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK0kB,SAAS,CAAEqM,SAAS,KA9Ed/wB,EAkFnB2/B,0BAA4B,SAAA7+B,GAAU,IAAAioB,EACJ/oB,EAAKwf,MAA3BrY,EAD0B4hB,EAC1B5hB,OAAQC,EADkB2hB,EAClB3hB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC5CpH,EAAKokB,MAAMob,QACZx/B,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAa,EACbL,SAAS,IAGV/wB,EAAKokB,MAAMob,QAClBx/B,EAAK0kB,SAAS,CACV8a,QAAQ,EACRpO,YAAa,EACbL,SAAS,KAjGF,IAGP5pB,EAAsBqY,EAAtBrY,OAAQC,EAAcoY,EAAdpY,UAERmpB,EAA2BL,IAA3BK,KAAM9rB,EAAqByrB,IAArBzrB,QAASssB,EAAYb,IAAZa,QACjByO,EAAS/6B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EANxD,OAQfpH,EAAKokB,MAAQ,CACTob,OAAQA,EACRzO,UAASyO,GAASzO,EAClBK,YAAaoO,GAAUjP,EAAOA,EAAKa,YAAc,EACjDD,SAAUqO,GAAUjP,EAAOA,EAAKY,SAAW,GAZhCnxB,qFAgBG+kB,EAAWC,EAAWC,GAAa,IAAAd,EACFhkB,KAAKikB,MAAhDob,EAD6Crb,EAC7Cqb,OAAQzO,EADqC5M,EACrC4M,QAASK,EAD4BjN,EAC5BiN,YAAaD,EADehN,EACfgN,SAEtC,OAAInM,EAAUwa,SAAWA,IAIrBxa,EAAU+L,UAAYA,IAItB/L,EAAUoM,cAAgBA,GAI1BpM,EAAUmM,WAAaA,gDAQ3BjB,IAAYxO,GAAG,0BAA2BvhB,KAAKw/B,2BAC/CzP,IAAYxO,GAAG,wBAAyBvhB,KAAKs/B,yBAC7CvP,IAAYxO,GAAG,yBAA0BvhB,KAAKu/B,0BAC9CxP,IAAYxO,GAAG,uBAAwBvhB,KAAKo/B,uEAI5CrP,IAAY/tB,eAAe,0BAA2BhC,KAAKw/B,2BAC3DzP,IAAY/tB,eAAe,wBAAyBhC,KAAKs/B,yBACzDvP,IAAY/tB,eAAe,yBAA0BhC,KAAKu/B,0BAC1DxP,IAAY/tB,eAAe,uBAAwBhC,KAAKo/B,yDAqDnD,IAAAK,EACwDz/B,KAAKqf,MAA1DrY,EADHy4B,EACGz4B,OAAQC,EADXw4B,EACWx4B,UAAWG,EADtBq4B,EACsBr4B,UAAWkY,EADjCmgB,EACiCngB,UAC9BsR,GAFH6O,EAC4Cjf,QAC7BxgB,KAAKikB,MAAjB2M,SACR,IAAKxpB,EAAW,OAAO,KAHlB,IAKG4pB,EAA0B5pB,EAA1B4pB,SAAiB9vB,EAASkG,EAAhBC,MAIlB,OACIsY,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,YACXD,EAAAnf,EAAAkM,cAAC8vB,EAAA,EAAD,CACI/1B,UAAW,KACXvF,KAAMA,EACNoe,UAAWA,EACXuD,KAAMlD,EAAAnf,EAAAkM,cAACqyB,EAAAv+B,EAAD,MACNs2B,aAAclG,EAAUjR,EAAAnf,EAAAkM,cAACkqC,EAAAp2C,EAAD,MAAgBmf,EAAAnf,EAAAkM,cAACmqC,EAAAr2C,EAAD,QAE5Cmf,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,sBACXD,EAAAnf,EAAAkM,cAACoqC,EAAD,CAAiB9vC,OAAQA,EAAQC,UAAWA,EAAW+pB,SAAUA,EAAU9vB,KAAMA,IACjFye,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAACqzB,EAAA,EAAD,CAAa/4B,OAAQA,EAAQC,UAAWA,EAAW+pB,SAAUA,EAAU9vB,KAAMA,IAC7Eye,EAAAnf,EAAAkM,cAACq1B,EAAA,EAAD,CAAa/6B,OAAQA,EAAQC,UAAWA,EAAW4b,KAAM,yBA7HzD9C,IAAMC,YA4IfyM,+LC5EAsqB,qNA/CX7d,wBAA0B,SAAAv4B,GAAU,IAAAye,EACSvf,EAAKwf,MAAtCrY,EADwBoY,EACxBpY,OAAQC,EADgBmY,EAChBnY,UAAWhB,EADKmZ,EACLnZ,UAC3B,GAAKA,EAAL,CAFgC,IAIxBrB,EAAUqB,EAAVrB,MACHA,GAEDjE,EAAOqG,SAAWA,GAAUrG,EAAOsG,YAAcA,GAAatG,EAAOoH,SAAWnD,EAAMlC,IACtF7C,EAAKyhB,mGA3BT1hB,IAAU2hB,GAAG,qCAAsCvhB,KAAKk5B,yBACxDt5B,IAAU2hB,GAAG,iCAAkCvhB,KAAKk5B,yBACpDt5B,IAAU2hB,GAAG,oCAAqCvhB,KAAKk5B,yBACvDt5B,IAAU2hB,GAAG,wBAAyBvhB,KAAKk5B,yBAC3Ct5B,IAAU2hB,GAAG,mCAAoCvhB,KAAKk5B,yBACtDt5B,IAAU2hB,GAAG,iCAAkCvhB,KAAKk5B,yBACpDt5B,IAAU2hB,GAAG,qCAAsCvhB,KAAKk5B,wEAIxDt5B,IAAUoC,eAAe,qCAAsChC,KAAKk5B,yBACpEt5B,IAAUoC,eAAe,iCAAkChC,KAAKk5B,yBAChEt5B,IAAUoC,eAAe,oCAAqChC,KAAKk5B,yBACnEt5B,IAAUoC,eAAe,wBAAyBhC,KAAKk5B,yBACvDt5B,IAAUoC,eAAe,mCAAoChC,KAAKk5B,yBAClEt5B,IAAUoC,eAAe,iCAAkChC,KAAKk5B,yBAChEt5B,IAAUoC,eAAe,qCAAsChC,KAAKk5B,0DAe/D,IAAA3Y,EACoCvgB,KAAKqf,MAAtCrY,EADHuZ,EACGvZ,OAAQC,EADXsZ,EACWtZ,UAAWhB,EADtBsa,EACsBta,UAC3B,IAAKA,EAAW,OAAO,KAFlB,IAIGrB,EAAUqB,EAAVrB,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAM4c,EAAMpN,YAAOxP,GACbg0B,EAAYhE,YAAmBhwB,GAC/BoyC,EAAc3oB,YAAarnB,EAAQC,GAEzC,OACI0Y,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,cACXD,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IACP,mBACA,CAAEs2B,yBAA0BD,GAC5B,CAAEE,4BAA6B11B,GAC/B,CAAEwX,gBAAiBJ,IAEvBhX,WAAW,EACXJ,IAAKA,EACLK,IAAI,aAvDA9B,IAAMC,uCCQxBm3B,qNASFC,mBAAqB,SAAAjtC,GAAU,IAAAiV,EACGvf,EAAKwf,MAA3BrY,EADmBoY,EACnBpY,OAAQC,EADWmY,EACXnY,UAEZD,IAAWmD,EAAO/D,SAAWa,IAAckD,EAAOzH,IAClD7C,EAAKyhB,iBAIbkE,YAAc,SAAAna,GACVA,EAAMqa,qBAGV2xB,WAAa,SAAAhsC,GACTA,EAAMqa,kBADY,IAAAnF,EAGY1gB,EAAKwf,MAA3BrY,EAHUuZ,EAGVvZ,OAAQC,EAHEsZ,EAGFtZ,UAEV3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,OAAK3C,EACDkrB,YAAiBlrB,GAAiB,UAEtC8vB,YAASptB,EAAQC,GAHI,yFAzBrBwG,IAAa8T,GAAG,mBAAoBvhB,KAAKo3C,mEAIzC3pC,IAAazL,eAAe,mBAAoBhC,KAAKo3C,qDA2BhD,IAAAhvB,EACqCpoB,KAAKqf,MAAvCmB,EADH4H,EACG5H,QAASnJ,EADZ+Q,EACY/Q,EAAGrQ,EADfohB,EACephB,OAAQC,EADvBmhB,EACuBnhB,UAEtB3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GAErC2T,EAAStW,EAAiBumB,YAASvmB,GAAhB,KACnBC,EAAWD,EAAyBiT,YAAWjT,EAAS+S,GAAnCA,EAAE,WACrBpR,EAAYwpB,YAAkBzoB,EAAQC,GAO5C,OALIuoB,YAAiBlrB,KACjBsW,EAAQ,KACRrW,EAAU8S,EAAE,mBAIZsI,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,QAAQmmB,YAAa/lC,KAAKq3C,WAAYv3B,QAAS9f,KAAKwlB,aAC/D7F,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,eAAgBH,EAAQI,yBAClD3a,GAAa0Z,EAAAnf,EAAAkM,cAAC4qC,EAAD,CAAWtwC,OAAQA,EAAQC,UAAWA,EAAWhB,UAAWA,IAC1E0Z,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBACVhF,GACG+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,sBAAuBH,EAAQK,kBAAmBjG,GAEjF+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,0BAA0Brb,aAxD7Cwb,IAAMC,YAqEpB4G,EAAUC,YACZ7F,IA1EW,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,GACbqhB,YAAaF,KAyEG,CAAEmG,WAAW,IAChCC,eAGWT,MAAQuwB,k7DCvERI,MAff,SAAmCC,GAAkB,IAC3CC,EAD2C,SAAAC,GAAA,SAAAD,IAAA,OAAA33C,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAy3C,GAAA33C,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA23C,GAAAh2C,MAAAzB,KAAA0B,YAAA,OAAA5B,OAAA63C,EAAA,EAAA73C,CAAA23C,EAAAC,GAAA53C,OAAA83C,EAAA,EAAA93C,CAAA23C,EAAA,EAAAngC,IAAA,SAAAhC,MAAA,WAGzC,OACIqK,EAAAnf,EAAAkM,cAACmrC,EAAA,iBAAD,CAAkBC,SAAUC,KACxBp4B,EAAAnf,EAAAkM,cAAC8qC,EAAqBx3C,KAAKqf,YALMo4B,EAAA,CACd13B,IAAMC,WAWzC,OAFAy3B,EAAqBO,YAArB,6BAAAhtC,OAAgEitC,YAAeT,GAA/E,KAEOC,0MCYLS,sBACF,SAAAA,EAAY74B,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAk4C,IACfr4C,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAo4C,GAAA/3C,KAAAH,KAAMqf,KAmBV84B,mBAAqB,SAAAx3C,GAAU,IACnBmL,EAAWjM,EAAKokB,MAAhBnY,OAER,GADoBnL,EAAZmO,UACQhD,EAAhB,CAEA,IAAM1H,EAAO2K,IAAU9L,IAAI6I,GACtB1H,GAELvE,EAAK0kB,SAAS,CACV6zB,OAAQn9B,YAAa7W,OA1BzB,IAAM0H,EAASoH,YAAcmM,EAAMrY,QAC7B5C,EAAO2K,IAAU9L,IAAI6I,GAJZ,OAMfjM,EAAKokB,MAAQ,CACTnY,OAAQA,EACRssC,OAAQn9B,YAAa7W,IARVvE,mFAafkP,IAAUwS,GAAG,mBAAoBvhB,KAAKm4C,mEAItCppC,IAAU/M,eAAe,mBAAoBhC,KAAKm4C,qDAgB7C,IAAA/4B,EAC4Cpf,KAAKqf,MAA9CmB,EADHpB,EACGoB,QAASvU,EADZmT,EACYnT,KAAMosC,EADlBj5B,EACkBi5B,WAAYz4B,EAD9BR,EAC8BQ,UAEnC,OADmB5f,KAAKikB,MAAhBm0B,OAIJz4B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWf,EAAWY,EAAQgC,MAAO7V,MAAO,CAAE6C,MAAOvD,EAAMyD,OAAQzD,IAC/E0T,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWY,EAAQqC,KAAMlW,MAAO,CAAE0W,QAASg1B,IAC5C14B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWY,EAAQ83B,kBALhB,YArCHv4B,IAAMC,YAuD/Bk4B,EAAWp3B,aAAe,CACtB7U,KAAM,GACNosC,WAAY,GAGDr3B,UAhFA,SAAAC,GAAK,MAAK,CACrBuB,KAAM,CACF8U,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQtF,WAAW4O,QAAU,UAC/EnJ,aAAc,MACdwb,SAAU,UAEd11B,KAAM,CACFyU,WAAY,cACZ9nB,MAAO,OACPE,OAAQ,OACR8oC,UAAW,cAEfF,cAAe,CACX9oC,MAAO,OACPE,OAAQ,OACRqtB,aAAc,MACdzF,WAAY,aAgELtW,CAAmBk3B,8BCnE5BO,qNA2BFC,uBAAyB,SAAA/3C,GACrBd,EAAKyhB,iBAGT0W,uBAAyB,SAAAr3B,GACFd,EAAKwf,MAAhBrY,SAEOrG,EAAOqG,QAClBnH,EAAKyhB,iBAIb2W,kBAAoB,SAAAt3B,GAAU,IAClBqG,EAAWnH,EAAKwf,MAAhBrY,OAGR,GAFoBrG,EAAZyF,UAEQY,EAAhB,CAEA,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKrG,EAAOiE,MAEL,CACH,IAAMjF,EAAQC,IAAUuD,WACxBsQ,YAAgB9T,EAAOoE,QAHvBlE,EAAKyhB,kBAOb4W,kBAAoB,SAAAv3B,GAAU,IAClBqG,EAAWnH,EAAKwf,MAAhBrY,OAER,GAAKrG,EAAOyF,SACRzF,EAAOyF,UAAYY,EAAvB,CAEA,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKrG,EAAOiE,MAEL,CACH,IAAMjF,EAAQC,IAAUuD,WACxBsQ,YAAgB9T,EAAOoE,QAHvBlE,EAAKyhB,kBAOb6W,aAAe,SAAA9sB,GAAS,IAAA+T,EACSvf,EAAKwf,MAA1BrY,EADYoY,EACZpY,OAAQoxB,EADIhZ,EACJgZ,SACXA,IAEL/sB,EAAMqa,kBACN0S,EAASpxB,0FAzES4d,EAAWC,GAC7B,OAAID,EAAU5d,SAAWhH,KAAKqf,MAAMrY,QAIhC4d,EAAU3D,QAAUjhB,KAAKqf,MAAM4B,kDAQnCrO,IAAU2O,GAAG,mCAAoCvhB,KAAK04C,wBACtD94C,IAAU2hB,GAAG,uBAAwBvhB,KAAKg4B,wBAC1CplB,IAAU2O,GAAG,kBAAmBvhB,KAAKi4B,mBACrCrlB,IAAU2O,GAAG,kBAAmBvhB,KAAKk4B,kEAIrCtlB,IAAU5Q,eAAe,mCAAoChC,KAAK04C,wBAClE94C,IAAUoC,eAAe,uBAAwBhC,KAAKg4B,wBACtDplB,IAAU5Q,eAAe,kBAAmBhC,KAAKi4B,mBACjDrlB,IAAU5Q,eAAe,kBAAmBhC,KAAKk4B,oDAqD5C,IAAA3X,EACgEvgB,KAAKqf,MAAlEmB,EADHD,EACGC,QAASxZ,EADZuZ,EACYvZ,OAAQ2xC,EADpBp4B,EACoBo4B,WAAYn+B,EADhC+F,EACgC/F,kBAAmB4d,EADnD7X,EACmD6X,SAExD,GAAI3d,YAASzT,IAAWwT,EAAmB,CACvC,IAAMoF,EAAYe,IAAW,aAAc,eAAgB,CAAE6X,QAASJ,IACtE,OACIzY,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWA,EAAWE,QAAS9f,KAAKm4B,cACrCxY,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBACXD,EAAAnf,EAAAkM,cAACksC,EAAAp4C,EAAD,QAMhB,IAAMuD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAfb,IAiBGa,EAAUb,EAAVa,MAEFiW,EAAUF,YAAe5W,GACzBoE,EAAOvD,GAASA,EAAMoO,MAAQpT,IAAUoI,QAAQpD,EAAMoO,MAAMtQ,IAAM,KAClE8e,EAAM5hB,IAAU2I,WAAWJ,GAE3BkwB,EAAS,cAAArtB,OAAkByZ,KAAK6T,IAAItxB,GAAU,EAAK,GACnD4Y,EAAYe,IAAW,aAAD7gB,OAAAumB,EAAA,EAAAvmB,CAAA,GAAkBu4B,GAAalwB,GAAQ,CAAEqwB,QAASJ,IAE9E,OACIzY,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,YAAYE,QAAS9f,KAAKm4B,cACpC3W,EACG7B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWA,EAAW4B,IAAKA,EAAKI,WAAW,EAAOC,IAAI,KAE3DlC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWA,GACZD,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,aAAa/E,IAGpC89B,GAAcj9B,YAAc1U,IACzB2Y,EAAAnf,EAAAkM,cAACmsC,EAAD,CAAYr4B,QAAS,CAAEgC,KAAMhC,EAAQs4B,WAAYj2B,KAAMrC,EAAQu4B,YAAc/xC,OAAQA,YAjH3EgZ,cAgI9By4B,EAAgB33B,aAAe,CAC3BtG,mBAAmB,EACnBm+B,YAAY,GAGD33B,UA/IA,CACX83B,WAAY,CACR71B,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACR4P,OAAQ,GAEZkiB,WAAY,IAwIkB,CAAE3xB,WAAW,GAAhCpG,CAAwCy3B,GCrIjDO,4LACO,IAAA55B,EAC2Cpf,KAAKqf,MAA7CmB,EADHpB,EACGoB,QAASxZ,EADZoY,EACYpY,OAAQ+X,EADpBK,EACoBL,SAAUqZ,EAD9BhZ,EAC8BgZ,SAE7B6gB,EAAan8B,YAAkB9V,GAAQ,GAE7C,OACI2Y,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,sBAAuB,CAAEu4B,+BAAgCn6B,IAC/Ee,QAASsY,GACTzY,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,4BACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oCACXD,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,EAAQwT,mBAAiB,KAErDuE,GAAYY,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,gCAAiCH,EAAQ44B,UACjFz5B,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IACP,2BACA5B,EAAWyB,EAAQ64B,aAAe74B,EAAQ84B,kBAGlD35B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mCAEnBD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,6BAA6Bq5B,WAvB5Bl5B,IAAMC,YAmCvBgB,OAjDA,SAAAC,GAAK,MAAK,CACrBm4B,OAAQ,CACJ9yB,YAAarF,EAAM2b,QAAQC,QAAQC,MAEvCuc,aAAc,CACVE,UAAW,oBAAsBt4B,EAAM2b,QAAQC,QAAQC,KACvDsc,OAAQ,aAAen4B,EAAM2b,QAAQtF,WAAWkiB,OAEpDF,eAAgB,CACZC,UAAW,iBAAmBt4B,EAAM2b,QAAQC,QAAQC,KACpDsc,OAAQ,2BAuCkB,CAAEhyB,WAAW,GAAhCpG,CAAwCg4B,ICzDnDS,GAAgB,KAwCpB,SAASC,GAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAM3zC,OAAQ,OAAO,KAE1ByzC,GAAgBA,IAzCT,IAAIvwC,IAAI,CACX,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,KAAM,UACP,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,YAWV,IADA,IAAI0wC,EAAS,GACJ9zC,EAAI,EAAGA,EAAI6zC,EAAM3zC,OAAQF,IAAK,CACnC,IAAI2zC,GAAc32C,IAAI62C,EAAM7zC,IAGxB,OAAO,KAFP8zC,GAAUH,GAAcx2C,IAAI02C,EAAM7zC,IAM1C,MAAkB,KAAX8zC,EAAgB,KAAOA,EAGlC,IAAIC,GAAa,KAwCjB,SAASC,GAAcH,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAM3zC,OAAQ,OAAO,KAE1B6zC,GAAaA,IAzCN,IAAI3wC,IAAI,CACX,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,MACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,OAWV,IADA,IAAI0wC,EAAS,GACJ9zC,EAAI,EAAGA,EAAI6zC,EAAM3zC,OAAQF,IAAK,CACnC,IAAI+zC,GAAW/2C,IAAI62C,EAAM7zC,IAGrB,OAAO,KAFP8zC,GAAUC,GAAW52C,IAAI02C,EAAM7zC,IAMvC,MAAkB,KAAX8zC,EAAgB,KAAOA,2CClE5BG,uBACF,SAAAA,EAAY16B,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA+5C,IACfl6C,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAi6C,GAAA55C,KAAAH,KAAMqf,KAmBV26B,YApBmBl6C,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAoBL,SAAAC,IAAA,IAAAu5C,EAAAC,EAAAC,EAAAl4C,EAAAwI,EAAA2vC,EAAAC,EAAA16C,EAAA,OAAAqvB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVlB,EAAKy6C,uBAECL,EAAW,GACXC,EAAkBr4C,KAAgBgJ,KAAK,CACzC/B,QAAS,WACTyxC,aAAc,sBACdC,eAAgB,EAChBtoB,MAAO,MAEX+nB,EAASzwC,KAAK0wC,GAERC,EAAuBt4C,KAAgBgJ,KAAK,CAC9C/B,QAAS,oBACTgG,QAASC,IAAUiN,UACnBy+B,OAAO,IAEXR,EAASzwC,KAAK2wC,GAjBJt5C,EAAAE,KAAA,EAmB2B4I,QAAQymC,IAAI6J,EAASzsC,IAAI,SAAA/B,GAAC,OAAIA,EAAE/B,MAAM,SAAAsgB,GAAC,OAAI,UAnBtE,OAAA/nB,EAAApB,EAAAkK,KAAAN,EAAA3K,OAAA46C,EAAA,EAAA56C,CAAAmC,EAAA,GAmBHm4C,EAnBG3vC,EAAA,GAmBI4vC,EAnBJ5vC,EAAA,GAqBV5K,EAAK0kB,SAAS,CACVo2B,QAASP,EAAMQ,SACfP,cAAeA,IAGb16C,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAAOy6C,EAAMQ,UA3BpB,yBAAA/5C,EAAAU,SAAAb,MApBKb,EAkDnBy6C,qBAlDmBx6C,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAkDI,SAAAyB,IAAA,IAAAkd,EAAApY,EAAAsG,EAAAnD,EAAA,OAAA6kB,EAAAxuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAqe,EACYvf,EAAKwf,MAA5BrY,EADWoY,EACXpY,OAAQsG,EADG8R,EACH9R,WACXtG,EAFc,CAAA7E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAGdiM,EAHc,CAAAnL,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,sBAIfiM,EAAWtH,OAAS,GAJL,CAAA7D,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAKdkb,YAAavV,GALC,CAAA7E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAMd8Z,YAAgBnU,GANF,CAAA7E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,yBAAAc,EAAApB,KAAA,GAQEc,KAAgBgJ,KAAK,CACtC/B,QAAS,uBACT1C,QAASY,EACTmX,WAAY7Q,EAAW,GACvButC,WAAW,IAZI,QAQb1wC,EARahI,EAAA4I,KAenBlL,EAAK0kB,SAAS,CACVu2B,kBAAmB3wC,IAhBJ,yBAAAhI,EAAAZ,SAAAW,MAlDJrC,EAsEnBiuC,YAAc,WACVjsC,KAAgBgH,aAAa,CACzBC,QAAS,sBACTiyC,KAAM,QAzEKl7C,EA6EnBm7C,eAAiB,WAAM,IACX3jC,EAAMxX,EAAKwf,MAAXhI,EACAyjC,EAAsBj7C,EAAKokB,MAA3B62B,kBAER,GAAKA,GACAA,EAAkBG,KAAvB,CAEA,IAAM3jC,EAAG,aAAAtM,OAAgB8vC,EAAkBG,MACrC32C,EAAU+S,EAAE,cAGlB6jC,IAAKJ,EAAkBG,MAEvBp7C,EAAKs7C,sBAAsB7jC,EAAKhT,EAJjB,QAtFAzE,EA6FnBs7C,sBAAwB,SAAC7jC,EAAKhT,EAASiR,GACnC,GAAK+B,EAAL,CAD8C,IAAAiJ,EAGT1gB,EAAKwf,MAAlC+7B,EAHsC76B,EAGtC66B,gBAAiB56B,EAHqBD,EAGrBC,QACzB,GAAK46B,EAAL,CAIIhjC,KAAiBijC,mBAAmB/jC,EAAKgkC,IAAqC,IAAsB/lC,IAEpG6lC,EAAgB92C,EAAS,CACrBi3C,iBAAkBD,IAClB/lC,OAAQ,CACJoK,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACI8W,IAAI,QACJ0vB,aAAW,QACXhlB,MAAM,UACNpC,UAAWY,EAAQ0P,MACnBpQ,QAAS,kBAAM1H,KAAiBojC,sBAAsBlkC,KACtDqI,EAAAnf,EAAAkM,cAAC2+B,EAAA7qC,EAAD,aAhHDX,EAuHnB47C,oBAAsB,SAACz0C,EAAQsG,GAC3B,GAA0B,IAAtBA,EAAWtH,OAAc,OAAO,KAEpC,IAAM1B,EAAUmJ,KAAaxK,IAAI+D,EAAQsG,EAAW,IACpD,IAAKhJ,EAAS,OAAO,KAJqB,IAMlCo3C,EAA8Bp3C,EAA9Bo3C,iBAAkBn3C,EAAYD,EAAZC,QAC1B,IAAKm3C,GAAyC,2BAArBn3C,EAAQ,SAAuC,KAC5DK,EAAUL,EAAVK,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DmB,EAAUnB,EAAVmB,MACR,GAAIA,GAASA,EAAMC,OACf,OAAOD,EAAMA,EAAMC,OAAS,GAIpC,OAAO,MAxIQnG,EA2InB6jC,WAAa,WACT7jC,EAAKiuC,cADU,IAAA1lB,EAGiCvoB,EAAKwf,MAA7CrY,EAHOohB,EAGPphB,OAAQsG,EAHD8a,EAGC9a,WAAYrH,EAHbmiB,EAGaniB,UAAWg1C,EAHxB7yB,EAGwB6yB,KACvC,GAAKj0C,GAAWsG,GAAeA,GAAerH,GAAcg1C,EAA5D,CAEA,IAAMv9B,EAAO7d,EAAK87C,aAAa97C,EAAK+7C,WAAWvuB,SAE/CxtB,EAAKg8C,YAAYz4C,QAAQ,SAAA04C,GACrB,GAAIb,EAyCA,OAxCIv9B,GACA7b,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT1C,QAAS01C,EACT1qC,oBAAqB,EACrB2qC,uBAAuB,EACvBC,iBAAiB,EACjB59B,aAAc,KACdy1B,sBAAuB,CACnB/qC,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMA,EACNuN,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,UAKzBlwC,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT1C,QAAS01C,EACT1qC,oBAAqB,EACrB2qC,uBAAuB,EACvBC,iBAAiB,EACjB59B,aAAc,KACdy1B,sBAAuB,CACnB/qC,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMu9B,EACNhwB,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,KAOzB,IAAM9lC,EAAOhG,GAAapG,EAAK47C,oBAAoBz0C,EAAQsG,GAC3D,GAAIrB,EAAJ,CAAU,IACEuD,EAAyBvD,EAAzBuD,MAAOE,EAAkBzD,EAAlByD,OAAQ9K,EAAUqH,EAAVrH,MAEvB/C,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT1C,QAAS01C,EACT1qC,oBAAqB,EACrB2qC,uBAAuB,EACvBC,iBAAiB,EACjB59B,aAAc,KACdy1B,sBAAuB,CACnB/qC,QAAS,oBACTlE,MAAO,CACHkE,QAAS,cACTpG,GAAIkC,EAAMlC,IAEd+D,UAAW,KACXw1C,uBAAwB,GACxBzsC,MAAOA,EACPE,OAAQA,EACRkc,QAAS,CACL9iB,QAAS,gBACT4U,KAAMA,EACNuN,SAAU,MAEdqC,IAAK,UAOb5P,GACA7b,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT1C,QAAS01C,EACT1qC,oBAAqB,EACrB2qC,uBAAuB,EACvBC,iBAAiB,EACjB59B,aAAc,KACdy1B,sBAAuB,CACnB/qC,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMA,EACNuN,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,KAKzBlwC,KAAgBgJ,KAAK,CACjB/B,QAAS,kBACT1C,QAAS01C,EACTI,aAAcl1C,EACd4E,YAAa0B,EACbyuC,uBAAuB,EACvBC,iBAAiB,EACjBG,UAAU,QA7PHt8C,EAkQnBu8C,sBAAwB,SAAAp1C,GAChBnH,EAAKg8C,YAAY/4C,IAAIkE,GACrBnH,EAAKg8C,YAAY34C,OAAO8D,GAExBnH,EAAKg8C,YAAY56C,IAAI+F,EAAQA,GAGjCtD,QAAQ4F,IAAIzJ,EAAKg8C,aAEjBh8C,EAAKyhB,eA3QUzhB,EA8QnB87C,aAAe,SAAAU,GACX,IAAMlT,EAAYkT,EAAIlT,UAChB+D,EAAYmP,EAAInP,UAMtB,OAJI/D,GAA2B,OAAdA,GAAsB+D,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEmP,EAAInP,UAAY,IAGb/D,GAtRQtpC,EAyRnBy8C,oBAAsB,SAAAjxC,GACI,KAAlBA,EAAM09B,SACN19B,EAAMod,kBA3RK5oB,EA+RnB08C,kBAAoB,WAAM,IAAAv4B,EACankB,EAAKokB,MAAhC02B,EADc32B,EACd22B,QAASN,EADKr2B,EACLq2B,cAEXnN,EAAYrtC,EAAK28C,UAAUnvB,QAAQ6f,WACrCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtCrtC,EAAK28C,UAAUnvB,QAAQ6f,UAAY,IAGvC,IAAM/D,EAAYtpC,EAAK87C,aAAa97C,EAAK28C,UAAUnvB,SAAS4H,OAC5D,GAAKkU,EAAL,CAKA,IAAMsT,EAAY3C,GAAc3Q,GAC1BuT,EAAehD,GAAiBvQ,GAMhCwT,GAJctC,EACd,CAACA,EAAc33C,IAAIsI,OAAO2vC,EAAQjvC,OAAO,SAAAD,GAAC,OAAIA,IAAM4uC,EAAc33C,MAAKgJ,OAAO,SAAAD,GAAC,OAAI6R,YAAgB7R,KACnGkvC,GAE4BjvC,OAC9B,SAAAD,GAAC,OACG5L,EAAK+8C,cAAcnxC,EAAG09B,IACrBsT,GAAa58C,EAAK+8C,cAAcnxC,EAAGgxC,IACnCC,GAAgB78C,EAAK+8C,cAAcnxC,EAAGixC,KAG/C78C,EAAK0kB,SAAS,CAAEs4B,WAAY1T,EAAWwT,cAAeA,SAlBlD98C,EAAK0kB,SAAS,CAAEs4B,WAAY,KAAMF,cAAe,MAzStC98C,EA8TnBi9C,kBAAoB,SAAAzxC,GAChB,IAAMkoC,EAAYloC,EAAMi/B,cAAcC,QAAQ,cAC1CgJ,IACAloC,EAAMod,iBACN3jB,SAAS4lC,YAAY,cAAc,EAAO6I,KAlU/B1zC,EAsUnBk9C,mBAAqB,WACjB,IAAM7P,EAAYrtC,EAAK+7C,WAAWvuB,QAAQ6f,WACtCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtCrtC,EAAK+7C,WAAWvuB,QAAQ6f,UAAY,KAzUzBrtC,EA6UnBm9C,mBAAqB,SAAA3xC,GACjB,IAAMkoC,EAAYloC,EAAMi/B,cAAcC,QAAQ,cAC1CgJ,IACAloC,EAAMod,iBACN3jB,SAAS4lC,YAAY,cAAc,EAAO6I,KAjV/B1zC,EAqVnB+8C,cAAgB,SAAC51C,EAAQ61C,GAAe,IAC5BxlC,EAAMxX,EAAKwf,MAAXhI,EACAgjC,EAAkBx6C,EAAKokB,MAAvBo2B,cAER,GAAIA,GAAiBrzC,IAAWqzC,EAAc33C,KAE2B,KADvDqZ,YAAa/U,GAAQ,EAAMqQ,IAAM,IACrC4lC,oBAAoB5J,QAAQwJ,EAAW1oC,eAC7C,OAAO,EAKf,OAAsE,KADvD4H,YAAa/U,GAAQ,EAAOqQ,IAAM,IACtC4lC,oBAAoB5J,QAAQwJ,EAAW1oC,iBAKsB,KADvDgH,YAAgBnU,IAAW,IAC/Bi2C,oBAAoB5J,QAAQwJ,EAAW1oC,gBAtWrCtU,EA6WnBq9C,eAAiB,WACb9lB,WAAW,WACHv3B,EAAK28C,UAAUnvB,SACCxtB,EAAK28C,UAAUnvB,QAEvBqb,SAEb,MAjXH7oC,EAAKokB,MAAQ,CACT02B,QAAS,GACTN,cAAe,MAGnBx6C,EAAK28C,UAAYz8B,IAAMie,YACvBn+B,EAAK+7C,WAAa77B,IAAMie,YAExBn+B,EAAKg8C,YAAc,IAAI3yC,IAXRrJ,mFAefG,KAAKg6C,cAELh6C,KAAKk9C,kDAsWA,IAAA1yC,EAAAxK,KAAA4oB,EACkB5oB,KAAKqf,MAApBmB,EADHoI,EACGpI,QAASnJ,EADZuR,EACYvR,EADZ8oB,EAE4EngC,KAAKikB,MAA9E02B,EAFHxa,EAEGwa,QAASkC,EAFZ1c,EAEY0c,WAAYF,EAFxBxc,EAEwBwc,cAAetC,EAFvCla,EAEuCka,cAAeS,EAFtD3a,EAEsD2a,kBAMrDV,GAJcC,EACd,CAACA,EAAc33C,IAAIsI,OAAO2vC,EAAQjvC,OAAO,SAAAD,GAAC,OAAIA,IAAM4uC,EAAc33C,MAAKgJ,OAAO,SAAAD,GAAC,OAAI6R,YAAgB7R,KACnGkvC,GAEoBntC,IAAI,SAAA/B,GAAC,OAC3BkU,EAAAnf,EAAAkM,cAACywC,GAAD,CACI7lC,IAAK7L,EACLzE,OAAQyE,EACRsT,SAAUvU,EAAKqxC,YAAY/4C,IAAI2I,GAC/B2sB,SAAU,kBAAM5tB,EAAK4xC,sBAAsB3wC,QAI7C2xC,GAAcT,GAAiB,IAAInvC,IAAI,SAAA/B,GAAC,OAC1CkU,EAAAnf,EAAAkM,cAACywC,GAAD,CACI7lC,IAAK7L,EACLzE,OAAQyE,EACRsT,SAAUvU,EAAKqxC,YAAY/4C,IAAI2I,GAC/B2sB,SAAU,kBAAM5tB,EAAK4xC,sBAAsB3wC,QAInD,OACIkU,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACIyJ,MAAI,EACJuf,QAASxpB,KAAK8tC,YACd1jB,kBAAgB,uBAChBizB,mBAAiB,6BACjBz9B,UAAWY,EAAQ+G,QACnB5H,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,wBAAwB2U,EAAE,gBAC1CsI,EAAAnf,EAAAkM,cAAA,OACI2xB,IAAKr+B,KAAKw8C,UACV95C,GAAG,wBACHkoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAazzB,EAAE,UACf8zB,UAAWnrC,KAAKs8C,oBAChBvH,QAAS/0C,KAAKu8C,kBACdnR,QAASprC,KAAK88C,oBAElBn9B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,2BAC5C3G,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBAAuBw6B,GACrCyC,GACGl9B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ88B,WAAY,+BAAgCF,IAGtFp9C,KAAK67C,YAAY5vC,KAAO,GACrB0T,EAAAnf,EAAAkM,cAAA,OACI2xB,IAAKr+B,KAAK47C,WACVl5C,GAAG,yBACHkoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAazzB,EAAE,gBACf09B,QAAS/0C,KAAK+8C,mBACd3R,QAASprC,KAAKg9C,qBAGtBr9B,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAK8tC,YAAa9rB,MAAM,WACpC3K,EAAE,WAENrX,KAAK67C,YAAY5vC,KAAO,GACrB0T,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAK0jC,WAAY1hB,MAAM,UAAUu7B,WAAS,GACtDlmC,EAAE,UAGTrX,KAAK67C,YAAY5vC,MAAQ6uC,GACvBn7B,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAKg7C,eAAgBh5B,MAAM,WACvC3K,EAAE,sBAhcH0I,IAAMC,YAqdnB4G,GANCC,YACZ7F,IAleW,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChBowB,MAAO,CACH7M,QAASpC,EAAMu8B,QAAQC,KAAO,GAElCl2B,OAAQ,CACJvF,MAAOf,EAAM2b,QAAQlf,KAAKmf,SAE9B6gB,cAAe,CACXr6B,QAAS,EACTzW,QAAS,OACTqW,SAAU,YAEdq6B,WAAY,CACRhmB,WAAYrW,EAAM2b,QAAQtF,WAAWkiB,QAEtCryB,aAAYlG,KAmdI,CAAEmG,WAAW,IAChCC,cACAs2B,eAGW/2B,CAAQmzB,qWChcR6D,uBA7DX,SAAAA,EAAYv+B,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA49C,IACf/9C,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA89C,GAAAz9C,KAAAH,KAAMqf,KAeVw+B,YAAc,WACV,IAAMhlC,EAAM,IAAIJ,KACV4iB,EAAUx7B,EAAKi+C,OAASjlC,EACxBvD,EAAQ,IAAO+lB,EAAUx7B,EAAKwf,MAAM0+B,QAAW,IAErDl+C,EAAK0kB,SAAS,CACV8W,QAASA,EAAU,EAAIA,EAAU,EACjC/lB,MAAOA,EAAQ,IAAM,IAAMA,IAG3BuD,GAAOhZ,EAAKi+C,QACRj+C,EAAKm+C,UACLC,cAAcp+C,EAAKm+C,SACnBn+C,EAAKm+C,QAAU,OA1BvBn+C,EAAKokB,MAAQ,CACToX,QAASx7B,EAAKwf,MAAM0+B,QAAU,IAC9BzoC,MAAO,GALIzV,mFAUfG,KAAKkkB,UAAY,IAAIzL,KACrBzY,KAAK89C,OAAS99C,KAAKkkB,UACnBlkB,KAAK89C,OAAOI,gBAAgBl+C,KAAK89C,OAAOK,kBAAoBn+C,KAAKqf,MAAM0+B,SACvE/9C,KAAKg+C,QAAUI,YAAYp+C,KAAK69C,YAAa,oDAsBzC79C,KAAKg+C,UACLC,cAAcj+C,KAAKg+C,SACnBh+C,KAAKg+C,QAAU,uCAId,IAAAh6B,EACsBhkB,KAAKikB,MAAxB3O,EADH0O,EACG1O,MAAO+lB,EADVrX,EACUqX,QAEf,OACI1b,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,sBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,2BACXD,EAAAnf,EAAAkM,cAAC6+B,GAAA,EAAD,CAAYvpB,MAAM,YAAYqZ,EAAU,KAAMnvB,YAElDyT,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,+BACXD,EAAAnf,EAAAkM,cAACoW,GAAAtiB,EAAD,CAAkByL,KAAM,GAAIqJ,MAAO,IAAMA,EAAOoR,QAAQ,oBAnD5C3G,IAAMC,sBCwBhCq+B,WAAmB,CACrBz0B,SAAU,SACVC,WAAY,UAGVy0B,GAAsB,CACxB10B,SAAU,MACVC,WAAY,SAGV00B,8MACFC,oBAAsB,SAAAx3C,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,8CAAA5G,OAA+CjH,EAAK6W,MAApD,KAEJ,IAAK,qBACD,IAAMZ,EAAaC,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,EACOA,EAAWG,WAAX,0CAAAnP,OACyCjH,EAAK6W,MAD9C,6CAAA5P,OAEuCjH,EAAK6W,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,mDAAA5P,OAAoD8R,YAAkB9V,GAAtE,KAIR,OAAO,8EAGF,IAAAoY,EACiCpf,KAAKqf,MAAnCmK,EADHpK,EACGoK,QAASxiB,EADZoY,EACYpY,OAAWy3C,EADvB3+C,OAAA4+C,GAAA,EAAA5+C,CAAAsf,EAAA,sBAGL,OACIO,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAADV,OAAAo6B,OAAA,CACI/P,mBAAoB,EACpBX,QAAS,kBAAMA,GAAQ,IACvBY,kBAAgB,uBACZq0B,GACJ9+B,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,uBAAuBoa,YAAkB9V,IACzD2Y,EAAAnf,EAAAkM,cAAC4d,GAAA9pB,EAAD,KACImf,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,yBACXD,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,IACzB2Y,EAAAnf,EAAAkM,cAAC6d,GAAA/pB,EAAD,CAAmBkC,GAAG,6BACjB1C,KAAKw+C,oBAAoBx3C,MAItC2Y,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS,kBAAM0J,GAAQ,IAAQxH,MAAM,WAA7C,UAGArC,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS,kBAAM0J,GAAQ,IAAOxH,MAAM,UAAUu7B,WAAS,GAA/D,eAnDUx9B,IAAMC,WA4D9B2+B,oLACO,IAAAp+B,EACiCvgB,KAAKqf,MAAnCmK,EADHjJ,EACGiJ,QAASxiB,EADZuZ,EACYvZ,OAAWy3C,EADvB3+C,OAAA4+C,GAAA,EAAA5+C,CAAAygB,EAAA,sBAGL,OACIZ,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAADV,OAAAo6B,OAAA,CACI/P,mBAAoB,EACpBX,QAAS,kBAAMA,GAAQ,IACvBY,kBAAgB,uBACZq0B,GACJ9+B,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,uBAAuBoa,YAAkB9V,IACzD2Y,EAAAnf,EAAAkM,cAAC4d,GAAA9pB,EAAD,KACImf,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,yBACXD,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,IACzB2Y,EAAAnf,EAAAkM,cAAC6d,GAAA/pB,EAAD,CAAmBkC,GAAG,6BAAtB,0CAKRid,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS,kBAAM0J,GAAQ,IAAQxH,MAAM,WAA7C,UAGArC,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS,kBAAM0J,GAAQ,IAAOxH,MAAM,UAAUu7B,WAAS,GAA/D,eAvBax9B,IAAMC,WAgCjC4+B,eACF,SAAAA,EAAYv/B,GAAO,IAAA7U,EAAA,OAAA1K,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA4+C,IACfp0C,EAAA1K,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA8+C,GAAAz+C,KAAAH,KAAMqf,KASVw/B,kBAAoB,SAAAxzC,GAChBb,EAAK+Z,SAAS,CAAE6hB,SAAU/6B,EAAMi7B,iBAXjB97B,EAcnB+7B,gBAAkB,WACd/7B,EAAK+Z,SAAS,CAAE6hB,SAAU,QAfX57B,EAkBnBs0C,eAAiB,WACbt0C,EAAK+7B,kBACLnP,WAAW,kBAAM5sB,EAAK6U,MAAM0/B,mBAAmB,MApBhCv0C,EAuBnBw0C,mBAAqB,WACjBx0C,EAAK+7B,kBAEL/7B,EAAK+Z,SAAS,CAAE06B,kBAAkB,KA1BnBz0C,EA6BnB00C,2BAA6B,SAAA/0C,GAGzB,GAFAK,EAAK+Z,SAAS,CAAE06B,kBAAkB,IAE7B90C,EAAL,CAEA,IAAMnD,EAASoR,KAAiBs8B,YAE1B5qC,EAAU,CACZhB,QAAS,oBACT1C,QAASY,EACT+uC,uBAAuB,GAG3BvrC,EAAK2wC,sBAAsBn0C,EAAQ,2BAPnB,mBAOwD8C,KA1CzDU,EA6CnB20C,YAAc,WACV30C,EAAK+7B,kBAEL/7B,EAAK+Z,SAAS,CAAE66B,YAAY,KAhDb50C,EAmDnB60C,oBAAsB,SAAAl1C,GAGlB,GAFAK,EAAK+Z,SAAS,CAAE66B,YAAY,IAEvBj1C,EAAL,CAEA,IAAMnD,EAASoR,KAAiBs8B,YAC1BpwC,EAAUkG,EAAK80C,yBAAyBt4C,GACxC8C,EAAU4R,YAAc1U,GACxB,CAAE8B,QAAS,oBAAqB1C,QAASY,EAAQ+uC,uBAAuB,GACxE,CAAEjtC,QAAS,YAAa1C,QAASY,GAEvCwD,EAAK2wC,sBAAsBn0C,EAAQ,wBAAyB1C,EAASwF,KA9DtDU,EAiEnB2wC,sBAAwB,SAACn0C,EAAQu4C,EAAkBj7C,EAASwF,GACxD,GAAKy1C,EAAL,CAEA,IAAMjoC,EAAG,GAAAtM,OAAMu0C,EAAN,YAAAv0C,OAAiChE,GACpCuO,EAAM,eAAAlV,EAAAP,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAAG,SAAAC,IAAA,OAAAsuB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEDc,KAAgBgJ,KAAKf,GAFpB,cAAAjJ,EAAAC,KAAA,EAIPe,KAAgBgH,aAAa,CAAEC,QAASy2C,EAAkBv4C,OAAQA,EAAQkwB,YAAY,IAJ/Er2B,EAAA2+C,OAAA,2BAAA3+C,EAAAU,SAAAb,EAAA,oBAAH,yBAAAL,EAAAoB,MAAAzB,KAAA0B,YAAA,GAJwD+9C,EAe/Bj1C,EAAK6U,MAAlC+7B,EAf4DqE,EAe5DrE,gBAf4DqE,EAe3Cj/B,QACzB,GAAK46B,EAAL,CAGIhjC,KAAiBijC,mBAAmB/jC,EAAKgkC,IAAoC/lC,EARlE,WACX1T,KAAgBgH,aAAa,CAAEC,QAASy2C,EAAkBv4C,OAAQA,EAAQkwB,YAAY,QAQtFr1B,KAAgBgH,aAAa,CAAEC,QAASy2C,EAAkBv4C,OAAQA,EAAQkwB,YAAY,IACtFkkB,EAAgB92C,EAAS,CACrBi3C,iBAAkBD,IAAqC,IACvD/lC,OAAQ,CACJoK,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAY8W,IAAI,WAAW0K,MAAM,UAAUpC,UAAU,mBACjDD,EAAAnf,EAAAkM,cAACgzC,GAAD,CAAmB3B,QAASzC,OAEhC37B,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CACI8W,IAAI,OACJ0K,MAAM,UACN/V,KAAK,QACL6T,QAAS,kBAAM1H,KAAiBojC,sBAAsBlkC,KAJ1D,eA5FG9M,EAwGnBm1C,kBAAoB,SAAA34C,GAChB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,MAAO,kBAEX,IAAK,qBACD,IAAMoI,EAAaC,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,EACOA,EAAWG,WAAa,gBAAkB,cAG9C,KAEX,IAAK,kBACL,IAAK,iBACD,MAAO,sBAIf,OAAO,MA/HQ3P,EAkInB80C,yBAA2B,SAAAt4C,GACvB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,MAAO,eAClB,IAAKA,EAAK6N,KAAM,MAAO,eAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,MAAO,eAEX,IAAK,qBACD,IAAMoI,EAAaC,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,EACOA,EAAWG,WAAa,eAAiB,aAG7C,eAEX,IAAK,kBACL,IAAK,iBACD,MAAO,eAIf,MAAO,gBAtJP3P,EAAKyZ,MAAQ,CACTmiB,SAAU,KACVgZ,YAAY,EACZH,kBAAkB,GANPz0C,wEA4JV,IACGgW,EAAYxgB,KAAKqf,MAAjBmB,QADHwD,EAE8ChkB,KAAKikB,MAAhDmiB,EAFHpiB,EAEGoiB,SAAUgZ,EAFbp7B,EAEao7B,WAAYH,EAFzBj7B,EAEyBi7B,iBAExBj4C,EAASoR,KAAiBs8B,YAC1BkL,EAAe5iC,YAAgBhW,GAC/B64C,EAAa3iC,YAAclW,GAC3B84C,EAAiB9/C,KAAK2/C,kBAAkB34C,GAE9C,OACI2Y,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIu/C,YAAW3Z,EAAW,cAAgB,KACtC4Z,gBAAc,OACdpgC,UAAWY,EAAQy/B,eACnBjZ,aAAW,OACXlnB,QAAS9f,KAAK6+C,mBACdl/B,EAAAnf,EAAAkM,cAACwzC,GAAA1/C,EAAD,OAEJmf,EAAAnf,EAAAkM,cAACw6B,GAAA1mC,EAAD,CACIkC,GAAG,YACH0jC,SAAUA,EACVn8B,KAAMgT,QAAQmpB,GACd5c,QAASxpB,KAAKumC,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB1d,aAAc00B,GACdv0B,gBAAiBw0B,IACjB3+B,EAAAnf,EAAAkM,cAACud,GAAAzpB,EAAD,CAAUsf,QAAS9f,KAAK8+C,gBAAxB,aACCc,GAAgBjgC,EAAAnf,EAAAkM,cAACud,GAAAzpB,EAAD,CAAUsf,QAAS9f,KAAKg/C,oBAAxB,iBAChBa,GAAcC,GAAkBngC,EAAAnf,EAAAkM,cAACud,GAAAzpB,EAAD,CAAUsf,QAAS9f,KAAKm/C,aAAcW,IAE3EngC,EAAAnf,EAAAkM,cAACyzC,GAAD,CAAiBn5C,OAAQA,EAAQiD,KAAMm1C,EAAY51B,QAASxpB,KAAKq/C,sBACjE1/B,EAAAnf,EAAAkM,cAAC0zC,GAAD,CAAoBp5C,OAAQA,EAAQiD,KAAMg1C,EAAkBz1B,QAASxpB,KAAKk/C,qCA/L7Dn/B,IAAMC,WA0MpB4G,GALCC,YACZ7F,IAlTW,SAAAC,GAAK,MAAK,CACrBg/B,eAAgB,CACZl5B,OAAQ,qBAiTZ42B,eAGW/2B,CAAQg4B,cC9TjByB,uBACF,SAAAA,EAAYhhC,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAqgD,IACfxgD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAugD,GAAAlgD,KAAAH,KAAMqf,KA0DV84B,mBAAqB,SAAAx3C,GAAU,IACnBmL,EAAWjM,EAAKwf,MAAhBvT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAEvBA,IAAWnL,EAAOmO,SAClBjP,EAAK0kB,SAAS,CAAE9K,OAAQM,YAAc3V,GAAOk8C,SAAUrlC,YAAa7W,MAhEzD,IAGP0H,EAAWjM,EAAKwf,MAAhBvT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAJZ,OAMfjM,EAAKokB,MAAQ,CACTs8B,WAAYz0C,EACZ2N,OAAQM,YAAc3V,GACtBk8C,SAAUrlC,YAAa7W,IATZvE,qFA4BG+kB,EAAWC,GAAW,IAAAzF,EACdpf,KAAKqf,MAAvBvT,EADgCsT,EAChCtT,OAAQmV,EADwB7B,EACxB6B,MADwB+C,EAEXhkB,KAAKikB,MAA1BxK,EAFgCuK,EAEhCvK,OAAQ6mC,EAFwBt8B,EAExBs8B,SAEhB,OAAI17B,EAAU3D,QAAUA,IAIpB2D,EAAU9Y,SAAWA,IAIrB+Y,EAAUpL,SAAWA,GAIrBoL,EAAUy7B,WAAaA,gDAQ3BvxC,IAAUwS,GAAG,mBAAoBvhB,KAAKm4C,mEAItCppC,IAAU/M,eAAe,mBAAoBhC,KAAKm4C,qDAY7C,IACG33B,EAAYxgB,KAAKqf,MAAjBmB,QADH2f,EAEwBngC,KAAKikB,MAA1BxK,EAFH0mB,EAEG1mB,OAAQ6mC,EAFXngB,EAEWmgB,SAEhB,OACI3gC,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,iBAAkBH,EAAQggC,mBAA3B1gD,OAAAumB,EAAA,EAAAvmB,CAAA,CACjB2gD,eAAgBH,GACf9/B,EAAQkgC,yBAA2BJ,KAEvC7mC,sDAjEmB4F,EAAO4E,GACnC,GAAI5E,EAAMvT,SAAWmY,EAAMs8B,WAAY,KAC3Bz0C,EAAWuT,EAAXvT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAE3B,MAAO,CACHy0C,WAAYz0C,EACZ2N,OAAQM,YAAc3V,GACtBk8C,SAAUrlC,YAAa7W,IAI/B,OAAO,YA1BiB2b,IAAMC,YAqFvBgB,OA9FA,SAAAC,GAAK,MAAK,CACrBu/B,mBAAoB,CAChBx+B,MAA8B,SAAvBf,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQlf,KAAKijC,UAAY,WAE1ED,yBAA0B,CACtB1+B,MAAOf,EAAM2b,QAAQC,QAAQ+jB,KAAO,gBAyFV,CAAEx5B,WAAW,GAAhCpG,CAAwCq/B,ICjDxCQ,sNAvCXr7B,YAAc,WAAM,IAAApG,EACavf,EAAKwf,MAA1BvT,EADQsT,EACRtT,OAAQssB,EADAhZ,EACAgZ,SAEVh0B,EAAO2K,IAAU9L,IAAI6I,GACtB1H,GACAg0B,GAELA,EAASh0B,yFAXSwgB,EAAWC,GAC7B,OAAOD,EAAU9Y,SAAW9L,KAAKqf,MAAMvT,wCAalC,IACGA,EAAW9L,KAAKqf,MAAhBvT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAErB0T,EAAWzI,YAAgB3S,GAEjC,OACIub,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,OAAOE,QAAS9f,KAAKwlB,aAChC7F,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBACXD,EAAAnf,EAAAkM,cAACmT,GAAA,EAAD,CAAiB/T,OAAQA,IACzB6T,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBJ,IAEnCG,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAACo0C,GAAD,CAAmBh1C,OAAQA,eA9B7BiU,IAAMC,YCD1B+gC,sNAuBFrI,uBAAyB,SAAA/3C,GACrBd,EAAKyhB,iBAGT4W,kBAAoB,SAAAv3B,GAAU,IAClBqG,EAAWnH,EAAKwf,MAAhBrY,OAEJrG,EAAOyF,UAAYY,GAEvBnH,EAAKyhB,oGA/BasD,EAAWC,GAC7B,OAAID,EAAU5d,SAAWhH,KAAKqf,MAAMrY,QAIhC4d,EAAUvN,IAAMrX,KAAKqf,MAAMhI,8CAQ/BzE,IAAU2O,GAAG,mCAAoCvhB,KAAK04C,wBACtD9lC,IAAU2O,GAAG,kBAAmBvhB,KAAKk4B,kEAIrCtlB,IAAU5Q,eAAe,mCAAoChC,KAAK04C,wBAClE9lC,IAAU5Q,eAAe,kBAAmBhC,KAAKk4B,oDAe5C,IAAA9Y,EACoCpf,KAAKqf,MAAtChI,EADH+H,EACG/H,EAAGrQ,EADNoY,EACMpY,OAAQwT,EADd4E,EACc5E,kBAEbI,EAAQmB,YAAa/U,EAAQwT,EAAmBnD,GAEtD,OAAOsI,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBhF,UAxCbmF,IAAMC,YAiDvC+gC,GAAmBjgC,aAAe,CAC9BtG,mBAAmB,GAGR6M,qBAAkB05B,cCzC3BC,uBACF,SAAAA,EAAY3hC,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAghD,IACfnhD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAkhD,GAAA7gD,KAAAH,KAAMqf,KA8DV84B,mBAAqB,SAAAx3C,GAAU,IACnBqG,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAK6N,KAAV,CAEA,IAAIqvC,GAAiB,EACrB,OAAQl9C,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwI,EAAWb,KAAgBc,YAAYtW,EAAK6N,KAAK4H,gBACvD,GAAIY,GAAYA,EAAS+B,QACN/B,EAAS+B,QAAQ0nB,KAAK,SAAAp4B,GAAC,OAAIA,EAAEqD,UAAYnO,EAAOmO,YAE3DmyC,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGl9C,EAAK6N,KAAK9C,UAAYnO,EAAOmO,UAC7BmyC,GAAiB,GASzBA,GACAphD,EAAKohD,eAAel9C,KAnGTlE,EAuGnBohD,eAAiB,SAAAl9C,GACblE,EAAK0kB,SAAS,CACV28B,SAAU7nC,YAA6BtV,EAAKrB,IAC5C49C,SAAUtlC,YAAkCjX,EAAKrB,OA1GtC7C,EA8GnBshD,qBAAuB,SAAAxgD,GAAU,IACrBqG,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,KAGDA,EAAK6N,MACmB,oBAAvB7N,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACvD7N,EAAK6N,KAAK9C,UAAYnO,EAAOmO,SAE7BjP,EAAKohD,eAAel9C,KAxHTlE,EA4HnBuhD,2BAA6B,SAAAzgD,GAAU,IAC3BqG,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO6Y,gBAEpC3Z,EAAKohD,eAAel9C,IAtITlE,EA0InBwhD,2BAA6B,SAAA1gD,GAAU,IAC3BqG,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOuZ,eAEnCra,EAAKohD,eAAel9C,IApJTlE,EAwJnB81C,mBAAqB,SAAAh1C,GAAU,IACnBqG,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO+2B,YAAYh1B,IAEhD7C,EAAKohD,eAAel9C,IAlKTlE,EAsKnB+1C,mBAAqB,SAAAj1C,GAAU,IACnBqG,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOqZ,WAAWtX,IAE9C7C,EAAKohD,eAAel9C,IAhLT,IAGPiD,EAAWnH,EAAKwf,MAAhBrY,OAHO,OAKfnH,EAAKokB,MAAQ,CACT8e,WAAY/7B,EACZk6C,SAAU7nC,YAA6BrS,GACvCs5C,SAAUtlC,YAAkChU,IARjCnH,qFA0BG+kB,EAAWC,GAAW,IAChC7d,EAAWhH,KAAKqf,MAAhBrY,OADgCgd,EAEThkB,KAAKikB,MAA5Bi9B,EAFgCl9B,EAEhCk9B,SAAUZ,EAFsBt8B,EAEtBs8B,SAElB,OAAI17B,EAAU5d,SAAWA,IAIrB6d,EAAUq8B,WAAaA,GAIvBr8B,EAAUy7B,WAAaA,+CAQ3BvxC,IAAUwS,GAAG,mBAAoBvhB,KAAKm4C,oBACtC5+B,KAAgBgI,GAAG,mBAAoBvhB,KAAK21C,oBAC5C17B,KAAgBsH,GAAG,mBAAoBvhB,KAAK41C,oBAC5C7mC,IAAUwS,GAAG,qBAAsBvhB,KAAKmhD,sBACxC5nC,KAAgBgI,GAAG,2BAA4BvhB,KAAKohD,4BACpDnnC,KAAgBsH,GAAG,2BAA4BvhB,KAAKqhD,2EAIpDtyC,IAAU/M,eAAe,mBAAoBhC,KAAKm4C,oBAClD5+B,KAAgBvX,eAAe,mBAAoBhC,KAAK21C,oBACxD17B,KAAgBjY,eAAe,mBAAoBhC,KAAK41C,oBACxD7mC,IAAU/M,eAAe,qBAAsBhC,KAAKmhD,sBACpD5nC,KAAgBvX,eAAe,2BAA4BhC,KAAKohD,4BAChEnnC,KAAgBjY,eAAe,2BAA4BhC,KAAKqhD,6DAwH3D,IACG7gC,EAAYxgB,KAAKqf,MAAjBmB,QADH2f,EAE0BngC,KAAKikB,MAA5Bi9B,EAFH/gB,EAEG+gB,SAAUZ,EAFbngB,EAEamgB,SAElB,OACI3gC,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IACP,gBACA2/B,EAAW9/B,EAAQ8gC,qBAAuB9gC,EAAQ+gC,iBAErDL,sDAlLmB7hC,EAAO4E,GACnC,GAAI5E,EAAMrY,SAAWid,EAAM8e,WAAY,KAC3B/7B,EAAWqY,EAAXrY,OAER,MAAO,CACH+7B,WAAY/7B,EACZk6C,SAAU7nC,YAA6BrS,GACvCs5C,SAAUtlC,YAAkChU,IAIpD,OAAO,YAxBmB+Y,IAAMC,YAqMzBgB,OA9MA,SAAAC,GAAK,MAAK,CACrBsgC,eAAgB,CACZv/B,MAA8B,SAAvBf,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQlf,KAAKijC,UAAY,WAE1EW,qBAAsB,CAClBt/B,MAAOf,EAAM2b,QAAQC,QAAQ+jB,KAAO,gBAyMV,CAAEx5B,WAAW,GAAhCpG,CAAwCggC,IChNjDQ,uBACF,SAAAA,EAAYniC,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAwhD,IACf3hD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA0hD,GAAArhD,KAAAH,KAAMqf,KAaVmG,YAAc,WAAM,IAAApG,EACavf,EAAKwf,MAA1BrY,EADQoY,EACRpY,OAAQoxB,EADAhZ,EACAgZ,SAChB,GAAKA,EAAL,CAEA,IAAMr0B,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAELq0B,EAASr0B,KArBMlE,qFAUG+kB,EAAWC,GAC7B,OAAOD,EAAU5d,SAAWhH,KAAKqf,MAAMrY,wCAalC,IAAAuZ,EAC2DvgB,KAAKqf,MAA7DrY,EADHuZ,EACGvZ,OAAQy6C,EADXlhC,EACWkhC,aAAcC,EADzBnhC,EACyBmhC,WAAYlnC,EADrC+F,EACqC/F,kBAE1C,OACImF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,OAAOE,QAAS9f,KAAKwlB,aAChC7F,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBACXD,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,EAAQoxB,SAAUqpB,EAAcjnC,kBAAmBA,IAC5EmF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBACXD,EAAAnf,EAAAkM,cAACi1C,GAAD,CAAoB36C,OAAQA,EAAQwT,kBAAmBA,KAE1DknC,IAAelnC,GACZmF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAACk1C,GAAD,CAAqB56C,OAAQA,eAtCnC+Y,IAAMC,YAwDhCwhC,GAAY1gC,aAAe,CACvBtG,mBAAmB,EACnBknC,YAAY,GAGDF,+BClDTK,uBACF,SAAAA,EAAYxiC,GAAQ,OAAAvf,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA6hD,GAAA/hD,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA+hD,GAAA1hD,KAAAH,KACVqf,0EAGD,IAAAD,EACwDpf,KAAKqf,MAA1DmB,EADHpB,EACGoB,QAASxZ,EADZoY,EACYpY,OAAQqQ,EADpB+H,EACoB/H,EAAGyqC,EADvB1iC,EACuB0iC,WAAYhiC,EADnCV,EACmCU,QAAS0J,EAD5CpK,EAC4CoK,QAE7CuxB,EAAO1jC,EAAE,YAOb,OANIqE,YAAc1U,GACd+zC,EAAO1jC,EAAE,QACFuE,YAAc5U,KACrB+zC,EAAO1jC,EAAE,gBAITsI,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBACVkiC,GACGniC,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQuhC,eAAgBjiC,QAAS0J,GACpD7J,EAAAnf,EAAAkM,cAACs1C,GAAAxhD,EAAD,OAGRmf,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oCAAoCE,QAASA,GACxDH,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,yBAAyBm7B,KAE3C+G,GACEniC,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQyhC,gBAAiBniC,QAAS0J,GACrD7J,EAAAnf,EAAAkM,cAAC2+B,EAAA7qC,EAAD,eA3BQuf,IAAMC,YAwCvB4G,GALCC,YACZQ,cACArG,IA9CW,CACX+gC,eAAgB,CACZh7B,OAAQ,qBAEZk7B,gBAAiB,CACbl7B,OAAQ,sBAyCO,CAAEK,WAAW,IAGrBR,CAAQi7B,wFCvCjBK,eACF,SAAAA,EAAY7iC,GAAQ,OAAAvf,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAkiD,GAAApiD,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAoiD,GAAA/hD,KAAAH,KACVqf,0EAGD,IAAAD,EACkBpf,KAAKqf,MAApBmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EACTgrB,EAAYriC,KAAKikB,MAAjBoe,QAER,OACI1iB,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAAS9f,KAAKwiC,4BACxD7iB,EAAAnf,EAAAkM,cAAC66B,GAAA/mC,EAAD,KAAgB6hC,EAAwC1iB,EAAAnf,EAAAkM,cAACy1C,GAAA3hD,EAAD,MAA9Bmf,EAAAnf,EAAAkM,cAAC01C,GAAA5hD,EAAD,OAC1Bmf,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIq8B,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYkmB,QAAQ,UAAU27B,QAAM,GAC/BhrC,EAAE,oBAIfsI,EAAAnf,EAAAkM,cAAC41C,GAAA9hD,EAAD,KACImf,EAAAnf,EAAAkM,cAAC61C,GAAA/hD,EAAD,CAAQwhB,MAAM,UAAUK,SAAUriB,KAAKwiC,2BAA4B9f,SAAU2f,oBApB7DF,GAgCrBvb,GALCC,YACZQ,cACArG,IAnCW,CACXmuB,SAAU,CACN9rB,QAAS,cAiCM,CAAE+D,WAAW,IAGrBR,CAAQs7B,wFC3BjBM,eACF,SAAAA,EAAYnjC,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAwiD,IACf3iD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA0iD,GAAAriD,KAAAH,KAAMqf,KAoBVojC,gBAAkB,WACd5iD,EAAK0kB,SAAS,CAAEm+B,UAAW7iD,EAAKokB,MAAMy+B,YAtBvB7iD,EAyBnB8iD,kBAAoB,WAChB,IAAM7R,EAAgB14B,KAAiBs8B,YAC/B1tC,EAAWnH,EAAKwf,MAAhBrY,OACJ8pC,IAAkB9pC,GAGlBnF,KAAgB+gD,UAAU57C,IA/BfnH,EAmCnBgjD,YAAc,WAAM,IACR77C,EAAWnH,EAAKokB,MAAhBjd,OAEFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAK6N,KAAV,CALgB,IAOR9C,EAAY/K,EAAK6N,KAAjB9C,QACHA,GAELjN,KAAgBgJ,KAAK,CACjB/B,QAAS2pB,YAAc3jB,GAAW,cAAgB,YAClDA,QAASA,MA/CE,IAGP9H,EAAWnH,EAAKwf,MAAhBrY,OAHO,OAIfnH,EAAKokB,MAAQ,CACT8e,WAAY/7B,EACZ07C,UAAU,GANC7iD,wEAmDV,IAAAuf,EAC0Bpf,KAAKqf,MAA5BhI,EADH+H,EACG/H,EAAGrQ,EADNoY,EACMpY,OAAQwZ,EADdpB,EACcoB,QACXkiC,EAAa1iD,KAAKikB,MAAlBy+B,SAEF3+C,EAAO6O,IAAU3P,IAAI+D,GAErB87C,EAAUnnC,YAAY3U,GACxB+7C,GAAY,GACXD,GAAW/+C,EAAK6N,OACjBmxC,EAAYtwB,YAAc1uB,EAAK6N,KAAK9C,UAExC,IAAMk0C,EAAWnnC,YAAa7U,GACxBg0B,EAAYpf,YAAc5U,GAEhC,OACI2Y,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAAS9f,KAAKyiD,iBACxD9iC,EAAAnf,EAAAkM,cAAC66B,GAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAACu2C,GAAAziD,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIq8B,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYkmB,QAAQ,UAAU27B,QAAM,GAC/BhrC,EAAE,WAIdqrC,EAAW/iC,EAAAnf,EAAAkM,cAACw2C,GAAA1iD,EAAD,MAAiBmf,EAAAnf,EAAAkM,cAACy2C,GAAA3iD,EAAD,OAEjCmf,EAAAnf,EAAAkM,cAAC02C,GAAA5iD,EAAD,CAAU6iD,GAAIX,EAAU3E,QAAQ,OAAOuF,eAAa,GAChD3jC,EAAAnf,EAAAkM,cAACsiC,GAAAxuC,EAAD,CAAM+iD,UAAU,MAAMC,gBAAc,IAC9BV,GACEnjC,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAAS9f,KAAK2iD,mBACxDhjC,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIijD,OAAK,EACL5mB,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYkmB,QAAQ,UAAU27B,QAAM,GAC/BhrC,EAAE,mBAKnBsI,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAAS9f,KAAK6iD,aACxDljC,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIijD,OAAK,EACL5mB,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYwhB,MAAM,YAAY0E,QAAQ,UAAU27B,QAAM,GACrChrC,EAAZ0rC,EAAc,UAAe,qBAOrDD,GAAWE,GACRrjC,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,UAChCxvB,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIijD,OAAK,EACL5mB,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYwhB,MAAM,YAAY0E,QAAQ,UAAU27B,QAAM,GACrChrC,EAAZ2jB,EAAc,eAAoB,kBAMtD8nB,IAAYE,GACTrjC,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,UAChCxvB,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIijD,OAAK,EACL5mB,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYwhB,MAAM,YAAY0E,QAAQ,UAAU27B,QAAM,GACjDhrC,EAAE,wEAlHXgI,EAAO4E,GACnC,OAAI5E,EAAMrY,SAAWid,EAAM8e,WAChB,CACHA,WAAY1jB,EAAMrY,OAClB07C,UAAU,GAIX,YAnBY3iC,IAAMC,WA+IlB4G,GALCC,YACZQ,cACArG,IAlJW,CACXmuB,SAAU,CACN9rB,QAAS,cAgJM,CAAE+D,WAAW,IAGrBR,CAAQ47B,gCCjGjBkB,uBACF,SAAAA,EAAYrkC,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA0jD,IACf7jD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA4jD,GAAAvjD,KAAAH,KAAMqf,KAmGV+hC,2BAA6B,SAAAzgD,GACzB,IAAMoD,EAAO6O,IAAU3P,IAAIpD,EAAKwf,MAAMrY,QACjCjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO6Y,iBAEpC3Z,EAAK8jD,mBAEL9jD,EAAKyhB,gBA/GMzhB,EAmHnBwhD,2BAA6B,SAAA1gD,GACzB,IAAMoD,EAAO6O,IAAU3P,IAAIpD,EAAKwf,MAAMrY,QACjCjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOuZ,eAEnCra,EAAKyhB,eA5HMzhB,EAgInBshD,qBAAuB,SAAAxgD,GACnB,IAAMoD,EAAO6O,IAAU3P,IAAIpD,EAAKwf,MAAMrY,QACjCjD,KAGDA,EAAK6N,MACmB,oBAAvB7N,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACvD7N,EAAK6N,KAAK9C,UAAYnO,EAAOmO,SAE7BjP,EAAKyhB,gBAzIMzhB,EA6InBs4C,mBAAqB,SAAAx3C,GACbd,EAAKsc,QAAQrZ,IAAInC,EAAOmO,UACxBjP,EAAKyhB,eA/IMzhB,EAmJnB8jD,iBAAmB,WACf9jD,EAAKwa,cAELxa,EAAK+jD,oBAEL/jD,EAAKgkD,oBAxJUhkD,EA2JnBgkD,iBAAmB,WAAM,IACb78C,EAAWnH,EAAKwf,MAAhBrY,OAEFrH,EAAQC,IAAUuD,WAExBuQ,YAAiB/T,EAAO,CAACqH,IACzB,IAAMmV,EAAUF,YAAoBjV,GAAQwG,IAAI,SAAA/B,GAAC,OAAIA,EAAEqD,UACvDwC,YAAiB3R,EAAOwc,IAlKTtc,EAqKnBwa,YAAc,WAAM,IACRrT,EAAWnH,EAAKwf,MAAhBrY,OAERoV,YAAgBpV,IAxKDnH,EA2KnB+jD,kBA3KmB9jD,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KA2KC,SAAAC,IAAA,IAAAsG,EAAAmD,EAAA,OAAA6kB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACRiG,EAAWnH,EAAKwf,MAAhBrY,QAEQ2U,YAAY3U,GAHZ,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,qBAMHoZ,YAASzT,GANN,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EASKc,KAAgBgJ,KAAK,CACtC/B,QAAS,oBACTgG,QAASoE,YAAclM,GACvBwzC,eAAgB,EAChBtoB,MAAO,IAbK,OASV/nB,EATUtJ,EAAAkK,KAgBhBlL,EAAK0kB,SAAS,CAAEu/B,kBAAmB35C,EAAOywC,SAAS50C,OAAS,IAhB5C,yBAAAnF,EAAAU,SAAAb,MA3KDb,EA8LnBkkD,mBAAqB,WAAM,IAAA3kC,EACDvf,EAAKwf,MAAnBhI,EADe+H,EACf/H,EAAGrQ,EADYoY,EACZpY,OACLoU,EAAWD,YAAgBnU,GACjC,GAAKoU,EAAL,CAEA,IAAM4oC,EAAoBC,KAAYhhD,IAAI,YACpCihD,EAAeF,EAAoBA,EAAkB1uC,MAAQ,wBAEnE4lC,IAAKgJ,EAAe9oC,GAEpB,IAAM9D,EAAG,GAAAtM,OAAMhE,EAAN,kBACH1C,EAAU+S,EAAE,cAGlBxX,EAAKs7C,sBAAsB7jC,EAAKhT,EAFjB,QA1MAzE,EA+MnBs7C,sBAAwB,SAAC7jC,EAAKhT,EAASiR,GACnC,GAAK+B,EAAL,CAD8C,IAAAiJ,EAGT1gB,EAAKwf,MAAlC+7B,EAHsC76B,EAGtC66B,gBAAiB56B,EAHqBD,EAGrBC,QACzB,GAAK46B,EAAL,CAIIhjC,KAAiBijC,mBAAmB/jC,EAAKgkC,IAAqC,IAAsB/lC,IAEpG6lC,EAAgB92C,EAAS,CACrBi3C,iBAAkBD,IAClB/lC,OAAQ,CACJoK,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACI8W,IAAI,QACJ0vB,aAAW,QACXhlB,MAAM,UACNpC,UAAWY,EAAQ0P,MACnBpQ,QAAS,kBAAM1H,KAAiBojC,sBAAsBlkC,KACtDqI,EAAAnf,EAAAkM,cAAC2+B,EAAA7qC,EAAD,aAlODX,EAyOnBskD,gBAAkB,WAAM,IAAA/7B,EACEvoB,EAAKwf,MAAnBhI,EADY+Q,EACZ/Q,EAAGrQ,EADSohB,EACTphB,OACLo9C,EAAc/oC,YAAmBrU,GACvC,GAAKo9C,EAAL,CAEAlJ,IAAKx7B,aAAkB0kC,IAEvB,IAAM9sC,EAAG,GAAAtM,OAAMhE,EAAN,eACH1C,EAAU+S,EAAE,eAGlBxX,EAAKs7C,sBAAsB7jC,EAAKhT,EAFjB,QAlPAzE,EAuPnBwkD,kBAAoB,WAChBxkD,EAAKykD,mBAAmBj3B,QAAQmb,UAAY,GAxP7B3oC,EA2PnB0kD,iBAAmB,WAAM,IACbv9C,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GACAA,EAAKa,OAEVwT,KAAiBosC,6BAA6B,CAAEx9C,OAAQA,KAjQzCnH,EAoQnB4kD,eAAiB,WAAM,IAAA77B,EACO/oB,EAAKwf,MAAvBrY,EADW4hB,EACX5hB,OAAQwtB,EADG5L,EACH4L,MAEhBJ,aAASptB,EAAQ,MAAM,GAEnBwtB,GACA3yB,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,KA5QDnH,EAiRnB6kD,iBAAmB,WACf,OAAK7kD,EAAKykD,mBAEHzkD,EAAKykD,mBAAmBj3B,QAAQs3B,aAFF,GA/QrC9kD,EAAKykD,mBAAqBvkC,IAAMie,YAHjB,IAKPh3B,EAAWnH,EAAKwf,MAAhBrY,OALO,OAOfnH,EAAKsc,QAAU,IAAIjT,IACnBrJ,EAAKokB,MAAQ,CACT8e,WAAY/7B,EACZ88C,mBAAmB,GAVRjkD,uFAyBKmlB,EAAWC,GAAW,IAClCje,EAAWhH,KAAKqf,MAAhBrY,OAEFuzB,EAAOv6B,KAAKskD,mBAAmBj3B,QAC7Bmb,EAA0CjO,EAA1CiO,UAAWC,EAA+BlO,EAA/BkO,aAAcmc,EAAiBrqB,EAAjBqqB,aAC3B1/B,EAAW,CACbsjB,UAAWA,EACXC,aAAcA,EACdmc,aAAcA,GAOlB,OAJAlhD,QAAQ4F,IAAR,gDAAA0B,OACoDhE,EADpD,eAAAgE,OACwEw9B,EADxE,kBAAAx9B,OACkGy9B,EADlG,kBAAAz9B,OAC+H45C,IAGxH1/B,gDAGWN,EAAWC,GAAW,IAAA4a,EACdz/B,KAAKqf,MAAvBrY,EADgCy4B,EAChCz4B,OAAQia,EADwBwe,EACxBxe,MACR6iC,EAAsB9jD,KAAKikB,MAA3B6/B,kBAER,OAAIl/B,EAAU5d,SAAWA,IAIrB4d,EAAU3D,QAAUA,GAIpB4D,EAAUi/B,oBAAsBA,8CAOrB9+B,EAAWC,EAAWC,GAAU,IACvCle,EAAWhH,KAAKqf,MAAhBrY,OACJge,EAAUhe,SAAWA,GACrBhH,KAAK2jD,mBAGTjgD,QAAQ4F,IAAI,qBAAsBtJ,KAAKskD,oBACvC,IAAM/pB,EAAOv6B,KAAKskD,mBAAmBj3B,QAC7Bmb,EAA0CtjB,EAA1CsjB,UAAWC,EAA+BvjB,EAA/BujB,aAA+BvjB,EAAjB0/B,aACjClhD,QAAQ4F,IAAR,kDAAA0B,OACsDhE,EADtD,oBAAAgE,OAEQuvB,EAAKiO,UAFb,uBAAAx9B,OAG0BuvB,EAAKqqB,aAH/B,uBAAA55C,OAGiEuvB,EAAKkO,eAEtElO,EAAKiO,UAAYA,GAAajO,EAAKkO,aAAeA,GAClD/kC,QAAQ4F,IAAR,iDAAA0B,OACqDhE,EADrD,oBAAAgE,OAEQuvB,EAAKiO,UAFb,uBAAAx9B,OAG0BuvB,EAAKqqB,aAH/B,uBAAA55C,OAGiEuvB,EAAKkO,2DAKtEzoC,KAAK2jD,mBAEL50C,IAAUwS,GAAG,mBAAoBvhB,KAAKm4C,oBACtCppC,IAAUwS,GAAG,qBAAsBvhB,KAAKmhD,sBACxC5nC,KAAgBgI,GAAG,2BAA4BvhB,KAAKohD,4BACpDnnC,KAAgBsH,GAAG,2BAA4BvhB,KAAKqhD,2EAIpDtyC,IAAU/M,eAAe,mBAAoBhC,KAAKm4C,oBAClDppC,IAAU/M,eAAe,qBAAsBhC,KAAKmhD,sBACpD5nC,KAAgBvX,eAAe,2BAA4BhC,KAAKohD,4BAChEnnC,KAAgBjY,eAAe,2BAA4BhC,KAAKqhD,6DAsL3D,IAAA72C,EAAAxK,KAAAshC,EAWDthC,KAAKqf,MATLhI,EAFCiqB,EAEDjqB,EACAuI,EAHC0hB,EAGD1hB,UACA5Y,EAJCs6B,EAIDt6B,OACAwZ,EALC8gB,EAKD9gB,QACAqkC,EANCvjB,EAMDujB,kBACAC,EAPCxjB,EAODwjB,qBACAtwB,EARC8M,EAQD9M,MACAstB,EATCxgB,EASDwgB,WACAt4B,EAVC8X,EAUD9X,QAEIs6B,EAAsB9jD,KAAKikB,MAA3B6/B,kBAEF//C,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EACD,OACI4b,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBACXD,EAAAnf,EAAAkM,cAACq4C,GAAD,CAAmBv7B,QAASA,IAC5B7J,EAAAnf,EAAAkM,cAAA,OAAK2xB,IAAKr+B,KAAKskD,mBAAoB1kC,UAAU,uBAKzD,IAAMxE,EAAWD,YAAgBnU,GAC3Bo9C,EAAc/oC,YAAmBrU,GACjCwU,EAAMD,YAAWvU,GACjB87C,EAAUnnC,YAAY3U,GACtBg+C,EAAOvqC,YAASzT,GAEhBmV,EAAUF,YAAoBjV,GAC9BiK,EAAQ,GACdjR,KAAKmc,QAAU,IAAIjT,IACnBiT,EAAQ/Y,QAAQ,SAAA6hD,GACZ,IAAM7gD,EAAO2K,IAAU9L,IAAIgiD,EAAOn2C,SAC9B1K,IACAoG,EAAK2R,QAAQlb,IAAImD,EAAK1B,GAAI0B,EAAK1B,IAC/BuO,EAAMzH,KAAKpF,MAInB,IAGMpB,EAHciO,EAAMi0C,KAAK,SAACz5C,EAAG05C,GAC/B,OAAOxyB,YAAmBwyB,GAAKxyB,YAAmBlnB,KAE5B+B,IAAI,SAAApJ,GAAI,OAC9Bub,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAU73B,IAAKlT,EAAK1B,IACpDid,EAAAnf,EAAAkM,cAAC04C,GAAD,CAAat5C,OAAQ1H,EAAK1B,GAAI01B,SAAU5tB,EAAK66C,sBAI7CzgD,EAAUb,EAAVa,MAEFL,EACFob,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACq4C,GAAD,CACI/9C,OAAQA,EACR86C,WAAYA,EACZt4B,QAASA,EACT1J,QAAS9f,KAAKqkD,oBAElB1kC,EAAAnf,EAAAkM,cAAA,OAAK2xB,IAAKr+B,KAAKskD,mBAAoB1kC,UAAU,qBACzCD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,qBACXD,EAAAnf,EAAAkM,cAAC44C,GAAD,CACIt+C,OAAQA,EACR06C,WAAYltB,EACZha,mBAAoBga,EACpBitB,aAAc78C,EAAQ5E,KAAKukD,iBAAmB,SAGpDnpC,GAAYgpC,GAAe5oC,IACzBmE,EAAAnf,EAAAkM,cAACsiC,GAAAxuC,EAAD,KACK4a,GACGuE,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAAS9f,KAAK+jD,oBACxDpkC,EAAAnf,EAAAkM,cAAC66B,GAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAAC64C,GAAA/kD,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIq8B,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYkmB,QAAQ,UAAU27B,QAAM,GAC/BjnC,MAMpBgpC,GACGzkC,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAAS9f,KAAKmkD,iBACxDxkC,EAAAnf,EAAAkM,cAAC66B,GAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAAC84C,GAAAhlD,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIq8B,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYkmB,QAAQ,UAAU27B,QAAM,GAC/B3iC,aAAkB0kC,QAO1C5oC,GACGmE,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAUof,UAAWY,EAAQ2uB,UACzBxvB,EAAAnf,EAAAkM,cAAC66B,GAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+4C,GAAAjlD,EAAD,CAAkBof,UAAU,4BAEhCD,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIq8B,QAASrhB,EACT7O,MAAO,CAAE+4C,WAAY,WAAYC,SAAU,kBAM/DhmC,EAAAnf,EAAAkM,cAACoiC,GAAAtuC,EAAD,MACAmf,EAAAnf,EAAAkM,cAACsiC,GAAAxuC,EAAD,MACMwkD,GAAQrlC,EAAAnf,EAAAkM,cAACk5C,GAAD,CAAuB5+C,OAAQA,IACxC87C,GAAWnjC,EAAAnf,EAAAkM,cAACm5C,GAAD,CAAc7+C,OAAQA,KAChC87C,GACEnjC,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAAS9f,KAAKykD,gBACxD9kC,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIijD,OAAK,EACL5mB,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYwhB,MAAM,UAAU0E,QAAQ,UAAU27B,QAAM,GAC/ChrC,EAAE,eAAeyuC,mBAO1CnmC,EAAAnf,EAAAkM,cAACoiC,GAAAtuC,EAAD,MACAmf,EAAAnf,EAAAkM,cAACsiC,GAAAxuC,EAAD,KACImf,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAAC9H,UAAQ,EAAC1nB,UAAWY,EAAQ2uB,SAAUrvB,QAAS+kC,GAC5DllC,EAAAnf,EAAAkM,cAAC66B,GAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAAC86B,GAAAhnC,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIq8B,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYkmB,QAAQ,UAAU27B,QAAM,GAC/BhrC,EAAE,mBAKlBysC,GACGnkC,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAASglC,GACnDnlC,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CACIijD,OAAK,EACL5mB,QACIld,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYkmB,QAAQ,UAAU27B,QAAM,GAC/BhrC,EAAE,uBAO1BrU,EAAMgD,OAAS,GACZ2Z,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACoiC,GAAAtuC,EAAD,MACAmf,EAAAnf,EAAAkM,cAACsiC,GAAAxuC,EAAD,KAAOwC,MAO3B,OAAOwxB,EAAQ7U,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KAAG7gB,GAAcob,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,eAAgBf,IAAarb,sDAjb5D8a,EAAO4E,GACnC,OAAI5E,EAAMrY,SAAWid,EAAM8e,WAChB,CACHA,WAAY1jB,EAAMrY,OAClB88C,mBAAmB,GAIpB,YAvBW/jC,IAAMC,YAodjB4G,GARCC,YACZ6kB,cACArkB,cACArG,IA9dW,SAAAC,GAAK,MAAK,CACrB0uB,gBAAiB,CACb5oB,OAAQ,qBAEZg/B,OAAQ,GAGR71B,MAAO,CACH7M,QAASpC,EAAMu8B,QAAQC,KAAO,GAElCtO,SAAU,CACN9rB,QAAS,eAmdM,CAAE+D,WAAW,IAChCu2B,eACA9R,cAGWjlB,CAAQ88B,IC9gBjBsC,uBACF,SAAAA,EAAY3mC,GAAQ,OAAAvf,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAgmD,GAAAlmD,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAkmD,GAAA7lD,KAAAH,KACVqf,0EAGD,IAAAD,EACwBpf,KAAKqf,MAA1BmB,EADHpB,EACGoB,QAASgJ,EADZpK,EACYoK,QAEjB,OACI7J,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBACXD,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQylC,eAAgBnmC,QAAS0J,GACpD7J,EAAAnf,EAAAkM,cAACs1C,GAAAxhD,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,qCACXD,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,yBAAhB,6BAdeG,IAAMC,YAyB1BgB,OA/BA,CACXilC,eAAgB,CACZl/B,OAAQ,sBA6BD/F,CAAmBglC,IC1B5BE,uBACF,SAAAA,EAAY7mC,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAkmD,IACfrmD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAomD,GAAA/lD,KAAAH,KAAMqf,KA0BV8Y,aAAe,SAAAp0B,GAAQ,IACXywB,EAAU30B,EAAKwf,MAAfmV,MAERJ,aAASrwB,EAAKrB,IAEV8xB,GACA3yB,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,KAhChBnH,EAAKokB,MAAQ,CACT02B,QAAS,IAJE96C,mFAQC,IAAA2K,EAAAxK,KACRgH,EAAWhH,KAAKqf,MAAhBrY,OAEF8E,EAASoH,YAAclM,GACxB8E,GAELjK,KAAgBgJ,KAAK,CACjB/B,QAAS,oBACTgG,QAAShD,EACT0uC,eAAgB,EAChBtoB,MAAO,MACR/mB,KAAK,SAAAhB,GACJ,IAAMxK,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAAOwK,EAAOywC,UAE/BpwC,EAAK+Z,SAAS,CAAEo2B,QAASxwC,EAAOywC,8CAiB/B,IAAAvM,EAAAruC,KAAAof,EACiCpf,KAAKqf,MAAnC8mC,EADH/mC,EACG+mC,UAAW38B,EADdpK,EACcoK,QAASgL,EADvBpV,EACuBoV,MAGtB4lB,EAFcp6C,KAAKikB,MAAjB02B,QAEcntC,IAAI,SAAA/B,GAAC,OACvBkU,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAAC93B,IAAK7L,GAClBkU,EAAAnf,EAAAkM,cAAC44C,GAAD,CAAat+C,OAAQyE,EAAG2sB,SAAUiW,EAAKlW,kBAIzC5zB,EACFob,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC05C,GAAD,CAAsB58B,QAASA,IAC/B7J,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBjT,MAAO,CAAEw5C,cAC3C/L,IAKb,OAAO5lB,EAAQ7U,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KAAG7gB,GAAcob,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBAAoBrb,UA5D9Cwb,IAAMC,YAuEnCkmC,GAAeplC,aAAe,CAC1B0T,OAAO,EACP2xB,UAAW,GAGAD,oDC5ETG,uBACF,SAAAA,EAAYhnC,GAAQ,OAAAvf,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAqmD,GAAAvmD,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAumD,GAAAlmD,KAAAH,KACVqf,0EAGD,IAAAD,EACsBpf,KAAKqf,MAAxBmB,EADHpB,EACGoB,QAAS0P,EADZ9Q,EACY8Q,MAEjB,OACIvQ,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBACXD,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQylC,eAAgBnmC,QAASoQ,GACpDvQ,EAAAnf,EAAAkM,cAACs1C,GAAAxhD,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,qCACXD,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,yBAAhB,yBAdmBG,IAAMC,YAqB9BgB,OA3BA,CACXilC,eAAgB,CACZl/B,OAAQ,sBAyBD/F,CAAmBqlC,ICzB5BC,sNACFriC,MAAQ,CACJ3O,MAAO,KAGXixC,aAAe,SAACl7C,EAAOiK,GACnBzV,EAAK0kB,SAAS,CAAEjP,mFAGX,IAAA8J,EACsBpf,KAAKqf,MAAxBmK,EADHpK,EACGoK,QAASgL,EADZpV,EACYoV,MACTlf,EAAUtV,KAAKikB,MAAf3O,MAEF/Q,EACFob,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC85C,GAAD,CAA0Bt2B,MAAO1G,IACjC7J,EAAAnf,EAAAkM,cAAC+5C,GAAAjmD,EAAD,CACI8U,MAAOA,EACP+M,SAAUriB,KAAKumD,aACfG,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACTnnC,EAAAnf,EAAAkM,cAACq6C,GAAAvmD,EAAD,CAAKwmD,MAAM,QAAQr6C,MAAO,CAAEg/B,SAAU,UACtChsB,EAAAnf,EAAAkM,cAACq6C,GAAAvmD,EAAD,CAAKwmD,MAAM,OAAOr6C,MAAO,CAAEg/B,SAAU,UACrChsB,EAAAnf,EAAAkM,cAACq6C,GAAAvmD,EAAD,CAAKwmD,MAAM,QAAQr6C,MAAO,CAAEg/B,SAAU,UACtChsB,EAAAnf,EAAAkM,cAACq6C,GAAAvmD,EAAD,CAAKwmD,MAAM,QAAQr6C,MAAO,CAAEg/B,SAAU,YAKlD,OAAOnX,EAAQ7U,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KAAG7gB,GAAcob,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBrb,UAhC7Cwb,IAAMC,YA2ChCsmC,GAAYxlC,aAAe,CACvB0T,OAAO,EACP2xB,UAAW,GAGAG,UCrCTW,uBACF,SAAAA,EAAY5nC,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAinD,IACfpnD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAmnD,GAAA9mD,KAAAH,KAAMqf,KAmBV2xB,qBAAuB,SAAArwC,GACDd,EAAKwf,MAAfmV,OAGR30B,EAAK0kB,SAAS,CACVvd,OAAQrG,EAAOswC,WACfiW,WAAY,KACZC,iBAAiB,EACjBC,oBAAoB,KA5BTvnD,EAgCnBwnD,sBAAwB,WACpBxnD,EAAK0kB,SAAS,CAAE4iC,iBAAiB,KAjClBtnD,EAoCnBynD,uBAAyB,WACrBznD,EAAK0kB,SAAS,CAAE4iC,iBAAiB,KArClBtnD,EAwCnB0nD,yBAA2B,SAAA73C,GACvBhM,QAAQ4F,IAAI,oCAAqCoG,GACjD7P,EAAK0kB,SAAS,CAAE6iC,oBAAoB,KA1CrBvnD,EA6CnB2nD,0BAA4B,WACxB3nD,EAAK0kB,SAAS,CAAE6iC,oBAAoB,KA9CrBvnD,EAiDnB4nD,uBAAyB,WAAM,IACnBjzB,EAAU30B,EAAKwf,MAAfmV,MACe30B,EAAKokB,MAApBijC,WAEJrnD,EAAK0kB,SAAS,CAAE2iC,WAAY,OACrB1yB,EACP3yB,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,IAGZoR,KAAiBsvC,6BAA4B,IA5DlC7nD,EAgEnBwlD,iBAhEmB,eAAAhlD,EAAAP,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAgEA,SAAAC,EAAM0D,GAAN,IAAAL,EAAA,OAAAirB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVqD,EADU,CAAAvD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAGEc,KAAgBgJ,KAAK,CAClC/B,QAAS,oBACTgG,QAAS1K,EAAK1B,GACd+3C,OAAO,IANI,UAGX12C,EAHWlD,EAAAkK,KASfhH,EAAO6O,IAAU3P,IAAIc,EAAKrB,KAAOqB,EATlB,CAAAlD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,iBAYfxB,EAAK0kB,SAAS,CAAE2iC,WAAYnjD,EAAKrB,KAZlB,wBAAA7B,EAAAU,SAAAb,MAhEA,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAK8nD,WAAa5nC,IAAMie,YAHT,IAKPxJ,EAAUnV,EAAVmV,MALO,OAOf30B,EAAKokB,MAAQ,CACTjd,OAAQwtB,EAAQpc,KAAiBwvC,aAAexvC,KAAiBpR,QARtDnH,mFAafuY,KAAiBmJ,GAAG,qBAAsBvhB,KAAKgxC,qEAI/C54B,KAAiBpW,eAAe,qBAAsBhC,KAAKgxC,uDA8DtD,IAAA5xB,EACiCpf,KAAKqf,MAAnCmB,EADHpB,EACGoB,QAASZ,EADZR,EACYQ,UAAW4U,EADvBpV,EACuBoV,MADvBxQ,EAE+DhkB,KAAKikB,MAAjEjd,EAFHgd,EAEGhd,OAAQkgD,EAFXljC,EAEWkjC,WAAYC,EAFvBnjC,EAEuBmjC,gBAAiBC,EAFxCpjC,EAEwCojC,mBACvCtW,EAAgB9pC,GAAUkgD,EAC1Bf,EAAYnmD,KAAK2nD,YAAc3nD,KAAK2nD,WAAWt6B,QAAUrtB,KAAK2nD,WAAWt6B,QAAQq3B,mBAAqB,EAExGngD,EAAU,KAiCd,OA/BIA,EADA4iD,EAEIxnC,EAAAnf,EAAAkM,cAACm7C,GAAD,CACI7gD,OAAQ8pC,EACRtc,MAAOA,EACP2xB,UAAWA,EACX38B,QAASxpB,KAAKsnD,yBAGfF,EAEHznC,EAAAnf,EAAAkM,cAACo7C,GAAD,CACI9gD,OAAQ8pC,EACRtc,MAAOA,EACP2xB,UAAWA,EACX38B,QAASxpB,KAAKwnD,4BAKlB7nC,EAAAnf,EAAAkM,cAACq7C,GAAD,CACI1pB,IAAKr+B,KAAK2nD,WACV3gD,OAAQ8pC,EACRtc,MAAOA,EACPstB,WAAYoF,IAAelgD,EAC3B69C,kBAAmB7kD,KAAKqnD,sBACxBvC,qBAAsB9kD,KAAKunD,yBAC3B/9B,QAASxpB,KAAKynD,yBAKnBjzB,EACH7U,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KAAG7gB,GAEHob,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,CAAE0hC,gBAAiBxzB,GAAS5U,IAAarb,UA1H9Ewb,IAAMC,YAqI7BinC,GAASnmC,aAAe,CACpBlB,UAAW,KACXY,QAAS,KACTgU,OAAO,GAGIxT,WAAWmG,KAAXnG,CAAwBimC,cC9IjCgB,4LACO,IAAA7oC,EACoDpf,KAAKqf,MAA7CrY,GADZoY,EACGoB,QADHpB,EACYpY,QAAQoxB,EADpBhZ,EACoBgZ,SAAU5d,EAD9B4E,EAC8B5E,kBAE7By+B,EAAan8B,YAAkB9V,EAAQwT,GAE7C,OACImF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,YACXD,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,EAAQoxB,SAAUA,EAAU5d,kBAAmBA,EAAmBm+B,YAAU,IACrGh5B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBq5B,WAT3Bl5B,IAAMmoC,gBAqB5BD,GAAQnnC,aAAe,CACnBtG,mBAAmB,GAGRwG,WAlCA,CACXmnC,eAAgB,CACZllC,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACR4P,OAAQ,IA6BD7V,CAAmBinC,IC3B5BG,4LACO,IAAAhpC,EACgCpf,KAAKqf,MAAlCrY,EADHoY,EACGpY,OAAQ8Y,EADXV,EACWU,QAASU,EADpBpB,EACoBoB,QAEzB,OACIb,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAASA,GACnDH,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBACXD,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,EAAQwT,mBAAiB,IAClDmF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBACXD,EAAAnf,EAAAkM,cAACi1C,GAAD,CAAoB36C,OAAQA,gBAX5B+Y,IAAMmoC,gBA0BvBlnC,OAhCA,CACXmuB,SAAU,CACN9rB,QAAS,QA8BFrC,CAAmBonC,ICjB5BC,uBACF,SAAAA,EAAYhpC,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAqoD,IACfxoD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAuoD,GAAAloD,KAAAH,KAAMqf,KAkCV2xB,qBAAuB,SAAArwC,GAAU,IACrBswC,EAA+BtwC,EAA/BswC,WAAYqX,EAAmB3nD,EAAnB2nD,eAEpBzoD,EAAK0kB,SAAS,CACV0sB,WAAYA,EACZqX,eAAgBA,KAxCLzoD,EA4CnB2lB,YAAc,WAAM,IAAApG,EACavf,EAAKwf,MAA1BrY,EADQoY,EACRpY,OAAQoxB,EADAhZ,EACAgZ,SACXA,GAELA,EAASpxB,IA7CTnH,EAAKokB,MAAQ,CACTgtB,WAAY74B,KAAiBs8B,YAC7B4T,eAAgB,MALLzoD,qFASG+kB,EAAWC,GAAW,IAAAtE,EACdvgB,KAAKqf,MAAvBrY,EADgCuZ,EAChCvZ,OAAQia,EADwBV,EACxBU,MAEhB,OAAI4D,EAAUosB,aAAejqC,IAIzB6d,EAAUyjC,iBAAmBthD,GAI7B4d,EAAU3D,QAAUA,+CAQxB7I,KAAiBmJ,GAAG,qBAAsBvhB,KAAKgxC,qEAI/C54B,KAAiBpW,eAAe,qBAAsBhC,KAAKgxC,uDAmBtD,IAAAuX,EAAAngC,EACgCpoB,KAAKqf,MAAlCrY,EADHohB,EACGphB,OAAQ8Y,EADXsI,EACWtI,QAASU,EADpB4H,EACoB5H,QACnBgoC,EAAiBxoD,KAAKikB,MAAMgtB,WAE5B71B,EAAWD,YAAgBnU,GAC3ByhD,EAAe1rC,YAAyB/V,GAC1C0hD,EAAoB,GAKxB,OAJID,EAAe,IACfC,EAAqC,IAAjBD,EAAqB,iBAArB,KAAAz9C,OAA6Cy9C,EAA7C,iBAIpB9oC,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAAC5uB,QAAS,CAAEgC,KAAMhC,EAAQ2uB,UAAYrvB,QAASA,GAC3DH,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,qBAAD4nC,EAAA,GAAAzoD,OAAAumB,EAAA,EAAAvmB,CAAAyoD,EAChB/nC,EAAQmoC,iBAAmB3hD,IAAWwhD,GADtB1oD,OAAAumB,EAAA,EAAAvmB,CAAAyoD,EAEjB,oBAAqBvhD,IAAWwhD,GAFfD,IAIrBzoC,QAAS9f,KAAKwlB,aACd7F,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,IACzB2Y,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBACXD,EAAAnf,EAAAkM,cAACi1C,GAAD,CAAoB36C,OAAQA,KAEhC2Y,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkBH,EAAQooC,0BAArD,IACMxtC,EACDstC,cA/EH3oC,IAAMC,YA8FrBgB,OA1GA,SAAAC,GAAK,MAAK,CACrBkuB,SAAU,CACN9rB,QAAS,GAEbslC,iBAAkB,CACd7hC,gBAAiB7F,EAAM2b,QAAQC,QAAQC,KAAO,cAElD8rB,wBAAyB,CACrB5mC,MAA8B,SAAvBf,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQlf,KAAKijC,UAAY,aAkG5C,CAAEv5B,WAAW,GAAhCpG,CAAwCqnC,cCzFjDQ,uBACF,SAAAA,EAAYxpC,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA6oD,IACfhpD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA+oD,GAAA1oD,KAAAH,KAAMqf,KAkCV2xB,qBAAuB,SAAArwC,GACnBd,EAAK0kB,SAALzkB,OAAAohB,EAAA,EAAAphB,CAAA,GACOa,KAlCPd,EAAKokB,MAAQ,CACTgtB,WAAY74B,KAAiBs8B,YAC7BoU,cAAe1wC,KAAiB2wC,gBALrBlpD,qFASG+kB,EAAWC,GAAW,IAAAzF,EACHpf,KAAKqf,MAAlCrY,EADgCoY,EAChCpY,OAAQC,EADwBmY,EACxBnY,UAAWga,EADa7B,EACb6B,MAE3B,OAAI4D,EAAUosB,aAAejqC,GAAU6d,EAAUikC,gBAAkB7hD,IAI/D4d,EAAUyjC,iBAAmBthD,GAAU6d,EAAUmkC,oBAAsB/hD,GAIvE2d,EAAU3D,QAAUA,+CAQxB7I,KAAiBmJ,GAAG,qBAAsBvhB,KAAKgxC,qEAI/C54B,KAAiBpW,eAAe,qBAAsBhC,KAAKgxC,uDAStD,IAAAzwB,EAC0DvgB,KAAKqf,MAA5DrY,EADHuZ,EACGvZ,OAAQC,EADXsZ,EACWtZ,UAAWgiD,EADtB1oC,EACsB0oC,WAAYnpC,EADlCS,EACkCT,QAASU,EAD3CD,EAC2CC,QAASnJ,EADpDkJ,EACoDlJ,EACnDmxC,EAAiBxoD,KAAKikB,MAAMgtB,WAC5BiY,EAAoBlpD,KAAKikB,MAAM6kC,cAC/BxkD,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAEjCkK,EAAmB7M,EAAnB6M,eAEFqH,EAAOD,YAAejU,GACtB6kD,EAAanyC,YAAqB1S,GAClC8kD,EAAiBvyC,YAAyBvS,GAC1CC,EAAUgT,aAAWjT,EAAS+S,IAAM,OAEpCgyC,EACFl4C,GAAkB83C,EACdtpC,EAAAnf,EAAAkM,cAACmT,GAAA,EAAD,CAAiB/T,OAAQqF,IAEzBwO,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,IAGjC,OACI2Y,EAAAnf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACxvB,UAAWY,EAAQ2uB,SAAUrvB,QAASA,GACnDH,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IACP,gBADiB7gB,OAAAumB,EAAA,EAAAvmB,CAAA,GAEd0gB,EAAQ8oC,iBAAmBtiD,IAAWwhD,GAAkBvhD,IAAciiD,GACzE,CAAEK,oBAAqBviD,IAAWwhD,GAAkBvhD,IAAciiD,KAErEG,EACD1pC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBACVqpC,GAAcG,EACXzpC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBwpC,GAE/BzpC,EAAAnf,EAAAkM,cAACi1C,GAAD,CAAoB36C,OAAQA,IAEhC2Y,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,mBAAoBH,EAAQgpC,uBAAwBhxC,IAEnFmH,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkBH,EAAQgpC,uBAE7C7pC,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,MACM6jC,GAAcE,GACZxpC,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,yBAAyBupC,EAAzC,MAEH5kD,eAvFdwb,IAAMC,YA+GlB4G,GALCC,YACZ7F,IAvHW,SAAAC,GAAK,MAAK,CACrBkuB,SAAU,CACN9rB,QAAS,GAEbimC,iBAAkB,CACdhyB,WAAYrW,EAAM2b,QAAQC,QAAQC,KAAO,cAE7C0sB,qBAAsB,CAClBxnC,MAA8B,SAAvBf,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQlf,KAAKijC,UAAY,aA+GvD,CAAEv5B,WAAW,IAChCC,cAGWT,CAAQiiC,WCtGR7nC,WA/BA,SAAAC,GAAK,MAAK,CACrBwoC,cAAe,CACXnyB,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQ8sB,KAAK,KAAO,aAAe,UACrF1nC,MAA8B,SAAvBf,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQlf,KAAKmf,QAAU,aAAe,WAEvF8sB,qBAAsB,CAClB3nC,MAA8B,SAAvBf,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQlf,KAAKmf,QAAU,aAAe,aAyBzD,CAAEzV,WAAW,GAAhCpG,CArBf,SAAuB3B,GAAO,IAClBuM,EAAuCvM,EAAvCuM,QAASH,EAA8BpM,EAA9BoM,QAAS3L,EAAqBT,EAArBS,QAASU,EAAYnB,EAAZmB,QAEnC,OACIb,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkBH,EAAQipC,gBACjD9pC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBgM,GACtC3O,QAAQwO,IACL9L,EAAAnf,EAAAkM,cAAA,KAAGkT,UAAWY,EAAQmpC,qBAAsB7pC,QAASA,GAChD2L,MCefm+B,uBACF,SAAAA,EAAYvqC,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA4pD,IACf/pD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA8pD,GAAAzpD,KAAAH,KAAMqf,KA6CVwqC,yBAA2B,SAAAlpD,GAAU,IAG3BmpD,EAFWnpD,EAAT+c,KAEiBuX,OAEpB60B,EAGDjqD,EAAKg9C,WAAWiN,GAFhBjqD,EAAKm6C,eApDMn6C,EA0DnBkqD,oBAAsB,SAAAC,GAIlB,IAHA,IAAMvnD,EAAM,GACN+K,EAAM,IAAItE,IAEPpD,EAAI,EAAGA,EAAIkkD,EAAQhkD,OAAQF,IAAK,CACrC,IAAIqE,EAAS6/C,EAAQlkD,GAAG80C,SACxB,GAAIzwC,EACA,IAAK,IAAI8/C,EAAI,EAAGA,EAAI9/C,EAAOnE,OAAQikD,IAC1Bz8C,EAAI1K,IAAIqH,EAAO8/C,MAChBz8C,EAAIvM,IAAIkJ,EAAO8/C,GAAI9/C,EAAO8/C,IAC1BxnD,EAAI+G,KAAKW,EAAO8/C,KAUhC,OAJAxnD,EAAIyiD,KAAK,SAAC1kD,EAAG0pD,GACT,OAAOC,aAAav3C,IAAU3P,IAAIinD,GAAGE,MAAOx3C,IAAU3P,IAAIzC,GAAG4pD,SAG1D3nD,GA9EQ5C,EAiFnBg9C,WAjFmB,eAAAx8C,EAAAP,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAiFN,SAAAC,EAAMgd,GAAN,IAAA2sC,EAAA1qD,EAAAqH,EAAAqzC,EAAAJ,EAAAqQ,EAAA7N,EAAA8N,EAAA7N,EAAA8N,EAAAR,EAAApnD,EAAAyU,EAAAwlC,EAAA4N,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAv9C,EAAA6sC,EAAAnpC,EAAAnL,EAAA,OAAAkpB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTlB,EAAKwqD,UAAY,IAAI5xC,KACrB5Y,EAAK6d,KAAOA,EACN2sC,EAAYxqD,EAAKwqD,UACnB1qD,EAAQ,KAEJqH,EAAWnH,EAAKwf,MAAhBrY,OACAqzC,EAAkBx6C,EAAKokB,MAAvBo2B,cAEHrzC,EATI,CAAAnG,EAAAE,KAAA,gBAUCk5C,EAAW,GACXqQ,EAAezoD,KAAgBgJ,KAAK,CACtC/B,QAAS,cACTkpB,MAAOtU,EACPwU,MAAO,MAEX+nB,EAASzwC,KAAK8gD,IAER7N,EAAY3C,GAAcp8B,MAEtB6sC,EAAoB1oD,KAAgBgJ,KAAK,CAC3C/B,QAAS,cACTkpB,MAAOyqB,EACPvqB,MAAO,MAEX+nB,EAASzwC,KAAK+gD,KAGZ7N,EAAehD,GAAiBh8B,MAE5B8sC,EAAuB3oD,KAAgBgJ,KAAK,CAC9C/B,QAAS,cACTkpB,MAAO0qB,EACPxqB,MAAO,MAEX+nB,EAASzwC,KAAKghD,IAnCb3pD,EAAAE,KAAA,GAsCiB4I,QAAQymC,IAAI6J,EAASzsC,IAAI,SAAA/B,GAAC,OAAIA,EAAE/B,MAAM,SAAAsgB,GAAC,OAAI,UAtC5D,WAsCCggC,EAtCDnpD,EAAAkK,KAuCCnI,EAAQ/C,EAAKkqD,oBAAoBC,GAEnCK,IAAcxqD,EAAKwqD,UAzClB,CAAAxpD,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,qBA6CDg5C,IACQhjC,EAAMxX,EAAKwf,MAAXhI,EAEFwlC,EAAan/B,EAAKooC,gBAClB2E,EAAuB,CAAC,iBAAkBpzC,EAAE,iBAAiByuC,gBAG1Ct6C,KAAK,SAAA+iC,GAAE,OAAIA,EAAG9T,SAASoiB,MAC3CJ,GAAagO,EAAqBj/C,KAAK,SAAA+iC,GAAE,OAAIA,EAAG9T,SAASgiB,EAAUqJ,mBAEpEljD,EAAMmoD,OAAO,EAAG,EAAG1Q,EAAc33C,KAIzC7C,EAAK0kB,SAAS,CACVrB,IAAK,KACL8nC,cAAe,KACfpoD,MAAOA,EACPkoD,OAAQ,KACRv9C,SAAU,OAGd5N,EAAQC,IAAUuD,WAClBuQ,YAAiB/T,EAAOiD,KAEpB8a,EAAK1X,QAAUilD,KAtEd,CAAApqD,EAAAE,KAAA,gBAuEK2pD,EAAiB,GAEjBC,EAAgB9oD,KAAgBgJ,KAAK,CACvC/B,QAAS,oBACTkpB,MAAOtU,IAEXgtC,EAAelhD,KAAKmhD,GAEhBlO,IACMmO,EAAqB/oD,KAAgBgJ,KAAK,CAC5C/B,QAAS,oBACTkpB,MAAOyqB,IAEXiO,EAAelhD,KAAKohD,IApFvB/pD,EAAAE,KAAA,GAuF2B4I,QAAQymC,IAAIsa,EAAel9C,IAAI,SAAA/B,GAAC,OAAIA,EAAE/B,MAAM,SAAAsgB,GAAC,OAAI,UAvF5E,WAuFK6gC,EAvFLhqD,EAAAkK,KAwFK+/C,EAASjrD,EAAKkqD,oBAAoBc,GAEpCR,IAAcxqD,EAAKwqD,UA1FtB,CAAAxpD,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBA8FDxB,EAAK0kB,SAAS,CACVumC,OAAQA,IAGZnrD,EAAQC,IAAUuD,WAClBuQ,YAAiB/T,EAAOmrD,GAnGvB,WAuGLv9C,EAAW,IACXvG,EAxGK,CAAAnG,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAyGYc,KAAgBgJ,KAAK,CAClC/B,QAAS,qBACT1C,QAASY,EACTgrB,MAAOtU,EACPvM,eAAgB,EAChB8gB,gBAAiB,EACjB9G,OAAQ,EACR+G,MAAO,GACPxmB,OAAQ,OAjHP,QAyGL6B,EAzGK1M,EAAAkK,KAAAlK,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAoHYc,KAAgBgJ,KAAK,CAClC/B,QAAS,iBACTkpB,MAAOtU,EACPwtC,YAAa,EACb1Q,eAAgB,EAChB2Q,kBAAmB,EACnBj5B,MAAO,KA1HN,QAoHL3kB,EApHK1M,EAAAkK,KAAA,WA8HT0C,KAAaC,SAASH,EAASA,UAE3B88C,IAAcxqD,EAAKwqD,UAhId,CAAAxpD,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBA0IT,IANAxB,EAAK0kB,SAAS,CACVhX,SAAUA,IAGR6sC,EAAQ,IAAIlxC,IACZ+H,EAAQ,IAAI/H,IACTpD,EAAI,EAAGA,EAAIyH,EAASA,SAASvH,OAAQF,IAC1Cs0C,EAAMn5C,IAAIsM,EAASA,SAASzH,GAAGM,QAASmH,EAASA,SAASzH,GAAGM,SACzDmH,EAASA,SAASzH,GAAGqL,gBACrBF,EAAMhQ,IAAIsM,EAASA,SAASzH,GAAGqL,eAAgB5D,EAASA,SAASzH,GAAGqL,gBAI5ExR,EAAQC,IAAUuD,WAClBuQ,YAAiB/T,EAADG,OAAAspB,GAAA,EAAAtpB,CAAYs6C,EAAM5oC,SAClCF,YAAiB3R,EAADG,OAAAspB,GAAA,EAAAtpB,CAAYmR,EAAMO,SAnJzB,yBAAA3Q,EAAAU,SAAAb,MAjFM,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAuOnBm6C,YAvOmBl6C,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAuOL,SAAAyB,IAAA,IAAAkpD,EAAAC,EAAAlR,EAAA1vC,EAAA6gD,EAAApoC,EAAA8nC,EAAA3Q,EAAA16C,EAAA,OAAAqvB,EAAAxuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,WACSlB,EAAKwf,MAAhBrY,OADE,CAAA7E,EAAApB,KAAA,eAGNlB,EAAK0kB,SAAS,CACVrB,IAAK,KACL8nC,cAAe,KACfpoD,MAAO,KACPkoD,OAAQ,KACRv9C,SAAU,OARRpL,EAAAd,OAAA,wBAcJ+pD,EAAavpD,KAAgBgJ,KAAK,CACpC/B,QAAS,cACTyiD,SAAU,CAAEziD,QAAS,wBACrBopB,MAAO,KACRxoB,MAAM,WACL,MAAO,CAAEZ,QAAS,QAAS8xC,SAAU,MAGnCyQ,EAAuBxpD,KAAgBgJ,KAAK,CAC9C/B,QAAS,cACTkpB,MAAO,GACPE,MAAO,MACRxoB,MAAM,WACL,MAAO,CAAEZ,QAAS,QAAS8xC,SAAU,MAGnCT,EAAuBt4C,KAAgBgJ,KAAK,CAC9C/B,QAAS,oBACTgG,QAASC,IAAUiN,UACnBy+B,OAAO,IACR/wC,MAAM,SAAA/F,MAlCCxB,EAAApB,KAAA,EAoCwC4I,QAAQymC,IAAI,CAC1Dgb,EACAC,EACAlR,IAvCM,OAAA1vC,EAAAtI,EAAA4I,KAAAugD,EAAAxrD,OAAA46C,EAAA,EAAA56C,CAAA2K,EAAA,GAoCHyY,EApCGooC,EAAA,GAoCEN,EApCFM,EAAA,GAoCiBjR,EApCjBiR,EAAA,GA0CVzrD,EAAK0kB,SAAS,CACVrB,IAAKA,EACL8nC,cAAeA,EACf3Q,cAAeA,EACfz3C,MAAO,KACPkoD,OAAQ,KACRv9C,SAAU,OAGR5N,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAAOujB,EAAI03B,UAC5BlnC,YAAiB/T,EAAOqrD,EAAcpQ,UArD5B,yBAAAz4C,EAAAZ,SAAAW,MAvOKrC,EA+RnB2rD,oBA/RmB1rD,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KA+RG,SAAAgrD,IAAA,IAAArR,EAAAt0C,EAAA,OAAAkpB,EAAAxuB,EAAAI,KAAA,SAAA8qD,GAAA,cAAAA,EAAA5qD,KAAA4qD,EAAA3qD,MAAA,cAAA2qD,EAAA3qD,KAAA,EACEc,KAAgBgJ,KAAK,CACrC/B,QAAS,WACTyxC,aAAc,sBACdC,eAAgB,EAChBtoB,MAAO,KALO,OAQlB,IAPMkoB,EADYsR,EAAA3gD,KAQTjF,EAAIs0C,EAAMQ,SAAS50C,OAAS,EAAGF,GAAK,EAAGA,IAC5CjE,KAAgBgJ,KAAK,CACjB/B,QAAS,uBACT1C,QAASg0C,EAAMQ,SAAS90C,KAXd,wBAAA4lD,EAAAnqD,SAAAkqD,MA/RH5rD,EA+SnB8rD,yBAA2B,SAAAtgD,GACvBA,EAAMqa,kBAEN7jB,KAAgBgJ,KAAK,CACjB/B,QAAS,4BAGbjJ,EAAK0kB,SAAS,CAAEymC,cAAe,QAtThBnrD,EAyTnB+rD,oBAAsB,SAAC5kD,EAAQC,EAAW4kD,EAAaC,GAAa,IACxDC,EAAoBlsD,EAAKwf,MAAzB0sC,gBAEJF,GACAhqD,KAAgBgJ,KAAK,CACjB/B,QAAS,uBACT1C,QAASY,IAIjB+kD,EAAgB/kD,EAAQC,EAAW6kD,IAnUpBjsD,EAsUnBmsD,aAAe,WACX,IAAMzxB,EAAO16B,EAAKosD,QAAQ5+B,QAEtBkN,EAAKiO,UAAYjO,EAAKqqB,eAAiBrqB,EAAKkO,cAC5C5oC,EAAKqsD,kBA1UMrsD,EA8UnBssD,UAAY,SAAA5+C,GACR,IAAMvH,EAASuH,EAAWA,EAASA,SAASvH,OAAS,EAMrD,MAAO,CACHklD,YALellD,EAAS,EAAIuH,EAASA,SAASvH,EAAS,GAAGwS,KAAO,EAMjEgiC,eALiBx0C,EAAS,EAAIuH,EAASA,SAASvH,EAAS,GAAGI,QAAU,EAMtE+kD,kBALoBnlD,EAAS,EAAIuH,EAASA,SAASvH,EAAS,GAAGtD,GAAK,IAnVzD7C,EA4VnBusD,eAAiB,SAAC7+C,EAAUpD,GACxB,OAAKA,GACAA,EAAOoD,SAASvH,OAEhBuH,GACAA,EAASA,SAASvH,OAEhB,CACH6rB,YAAa1nB,EAAO0nB,YACpBtkB,SAAUA,EAASA,SAASvC,OAAOb,EAAOoD,WALxBpD,EAHFoD,GA7VL1N,EAyWnBqsD,eAzWmBpsD,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAyWF,SAAAiK,IAAA,IAAA1D,EAAAqjD,EAAA98C,EAAA4d,EAAAhhB,EAAAiwC,EAAAnpC,EAAAnL,EAAAnG,EAAA,OAAAqvB,EAAAxuB,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,WACTlB,EAAKwsD,QADI,CAAAzhD,EAAA7J,KAAA,eAAA6J,EAAAvJ,OAAA,oBAGL2F,EAAWnH,EAAKwf,MAAhBrY,OAEFqjD,EAAYxqD,EAAKwqD,UAEf98C,EAAa1N,EAAKokB,MAAlB1W,SAEF4d,EAAStrB,EAAKssD,UAAU5+C,GAE9B1N,EAAKwsD,SAAU,EACXliD,EAAS,IACTnD,EAbS,CAAA4D,EAAA7J,KAAA,gBAAA6J,EAAA7J,KAAA,GAcMc,KAAgBgJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACTgrB,MAAOnyB,EAAK6d,KACZvM,eAAgB,EAChB8gB,gBAAiB9G,EAAOggC,kBACxBj5B,MAAO,GACPxmB,OAAQ,OArBH,QAcTvB,EAdSS,EAAAG,KAAAH,EAAA7J,KAAA,wBAAA6J,EAAA7J,KAAA,GAwBMc,KAAgBgJ,KAAhB/K,OAAAohB,EAAA,EAAAphB,CAAA,CACXgJ,QAAS,iBACTkpB,MAAOnyB,EAAK6d,MACTyN,EAHQ,CAIX+G,MAAO,MA5BF,QAwBT/nB,EAxBSS,EAAAG,KAAA,WA+BblL,EAAKwsD,SAAU,EAEfn/B,aAAe/iB,EAAQoD,EAAWA,EAASA,SAAW,IAEtDE,KAAaC,SAASvD,EAAOoD,UAEzB88C,IAAcxqD,EAAKwqD,UArCV,CAAAz/C,EAAA7J,KAAA,gBAAA6J,EAAAvJ,OAAA,kBA+Cb,IANAxB,EAAK0kB,SAAS,CACVhX,SAAU1N,EAAKusD,eAAe7+C,EAAUpD,KAGtCiwC,EAAQ,IAAIlxC,IACZ+H,EAAQ,IAAI/H,IACTpD,EAAI,EAAGA,EAAIqE,EAAOoD,SAASvH,OAAQF,IACxCs0C,EAAMn5C,IAAIkJ,EAAOoD,SAASzH,GAAGM,QAAS+D,EAAOoD,SAASzH,GAAGM,SACrD+D,EAAOoD,SAASzH,GAAGqL,gBACnBF,EAAMhQ,IAAIkJ,EAAOoD,SAASzH,GAAGqL,eAAgBhH,EAAOoD,SAASzH,GAAGqL,gBAIlExR,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAADG,OAAAspB,GAAA,EAAAtpB,CAAYs6C,EAAM5oC,SAClCF,YAAiB3R,EAADG,OAAAspB,GAAA,EAAAtpB,CAAYmR,EAAMO,SAxDrB,yBAAA5G,EAAArJ,SAAAmJ,MAzWE7K,EAoanBysD,qBAAuB,SAAAjhD,GACnBA,EAAMqa,mBAraS7lB,EAwanBiuC,YAAc,YAGVtkB,EAFoB3pB,EAAKwf,MAAjBmK,YAtaR3pB,EAAKosD,QAAUlsC,IAAMie,YAHN,IAAA5e,EAKUvf,EAAKwf,MAAtBrY,EALOoY,EAKPpY,OAAQ0W,EALD0B,EAKC1B,KALD,OAOf7d,EAAKokB,MAAQ,CACTsoC,gBAAiBvlD,EACjBwlD,cAAe9uC,EAEfwF,IAAK,KACL8nC,cAAe,KACfpoD,MAAO,KACPkoD,OAAQ,KACRv9C,SAAU,MAfC1N,mFAqCfG,KAAKg6C,cAEL5hC,KAAiBmJ,GAAG,yBAA0BvhB,KAAK6pD,yEAInDzxC,KAAiBpW,eAAe,yBAA0BhC,KAAK6pD,2DAmY1D,IAAAr/C,EAAAxK,KAAAugB,EACuBvgB,KAAKqf,MAAzBmB,EADHD,EACGC,QAASxZ,EADZuZ,EACYvZ,OADZgd,EAEmDhkB,KAAKikB,MAArDf,EAFHc,EAEGd,IAAK8nC,EAFRhnC,EAEQgnC,cAAepoD,EAFvBohB,EAEuBphB,MAAOkoD,EAF9B9mC,EAE8B8mC,OAAQv9C,EAFtCyW,EAEsCzW,SAErCxJ,EAAO6O,IAAU3P,IAAI+D,GAErBylD,EACFvpC,GAAOA,EAAI03B,SACL13B,EAAI03B,SAASptC,IAAI,SAAA/B,GAAC,OACdkU,EAAAnf,EAAAkM,cAACggD,GAAD,CAASp1C,IAAK7L,EAAGzE,OAAQyE,EAAG2sB,SAAU,kBAAM5tB,EAAKohD,oBAAoBngD,EAAG,MAAM,GAAO,QAEzF,GAEJkhD,EACF3B,GAAiBA,EAAcpQ,SACzBoQ,EAAcpQ,SAASptC,IAAI,SAAA/B,GAAC,OACxBkU,EAAAnf,EAAAkM,cAACkgD,GAAD,CACIt1C,IAAK7L,EACLzE,OAAQyE,EACRqU,QAAS,kBAAMtV,EAAKohD,oBAAoBngD,EAAG,MAAM,GAAM,QAG/D,GAEJohD,EAAajqD,EACbA,EAAM4K,IAAI,SAAA/B,GAAC,OACPkU,EAAAnf,EAAAkM,cAACkgD,GAAD,CACIt1C,IAAK7L,EACLzE,OAAQyE,EACRqU,QAAS,kBAAMtV,EAAKohD,oBAAoBngD,EAAG,MAAM,GAAM,QAG/D,GAEAqhD,EAAchC,EACdA,EAAOt9C,IAAI,SAAA/B,GAAC,OACRkU,EAAAnf,EAAAkM,cAACqgD,GAAD,CAAiBz1C,IAAK7L,EAAGzE,OAAQyE,EAAGqU,QAAS,kBAAMtV,EAAKohD,oBAAoBngD,EAAG,MAAM,GAAM,QAE/F,GAEAuhD,EACFz/C,GAAYA,EAASA,SACfA,EAASA,SAASC,IAAI,SAAA/B,GAAC,OACnBkU,EAAAnf,EAAAkM,cAACugD,GAAD,CACI31C,IAAG,GAAAtM,OAAKS,EAAErF,QAAP,KAAA4E,OAAkBS,EAAE/I,IACvBsE,OAAQyE,EAAErF,QACVa,UAAWwE,EAAE/I,GACbumD,WAAYhsC,QAAQjW,GACpB8Y,QAAS,kBAAMtV,EAAKohD,oBAAoBngD,EAAErF,QAASqF,EAAE/I,IAAI,GAAO,QAGxE,GAENwqD,EAAkB,oBAKtB,OAJI3/C,GAAYA,EAASskB,cACrBq7B,EAA2C,IAAzB3/C,EAASskB,YAAoB,kBAA7B,SAAA7mB,OAA0DuC,EAASskB,YAAnE,cAIlBlS,EAAAnf,EAAAkM,cAAA,OAAK2xB,IAAKr+B,KAAKisD,QAASrsC,UAAWe,IAAWH,EAAQ2sC,OAAQ,UAAWC,SAAUptD,KAAKgsD,cACnFjoD,GACG4b,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,eACXD,EAAAnf,EAAAkM,cAAC2gD,GAAD,CAAezhC,QAAQ,uBACvBjM,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBACXD,EAAAnf,EAAAkM,cAAC44C,GAAD,CAAat+C,OAAQA,EAAQ06C,YAAY,KAE7C/hC,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIof,UAAWY,EAAQ8sC,sBACnBtmB,aAAW,SACXjB,YAAa/lC,KAAK8tC,aAClBnuB,EAAAnf,EAAAkM,cAAC2+B,EAAA7qC,EAAD,SAKfisD,EAASzmD,OAAS,GACf2Z,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBACXD,EAAAnf,EAAAkM,cAAC2gD,GAAD,CAAezhC,QAAQ,WACvBjM,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBwtC,SAAUptD,KAAKssD,sBAClD3sC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iCACd6sC,EACD9sC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mCAI1B+sC,EAAmB3mD,OAAS,GACzB2Z,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,+BACXD,EAAAnf,EAAAkM,cAAC2gD,GAAD,CAAezhC,QAAQ,SAASH,QAAQ,QAAQ3L,QAAS9f,KAAK2rD,2BAC7DgB,GAGRE,EAAW7mD,OAAS,GACjB2Z,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,sBACXD,EAAAnf,EAAAkM,cAAC2gD,GAAD,CAAezhC,QAAQ,uBACtBihC,GAGRC,EAAY9mD,OAAS,GAClB2Z,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBACXD,EAAAnf,EAAAkM,cAAC2gD,GAAD,CAAezhC,QAAQ,kBACtBkhC,GAGRv/C,GACGoS,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBACXD,EAAAnf,EAAAkM,cAAC2gD,GAAD,CAAezhC,QAASshC,IACvBF,uDAtgBW3tC,EAAO4E,GACnC,OAAI5E,EAAMrY,SAAWid,EAAMsoC,iBAAmBltC,EAAM3B,OAASuG,EAAMuoC,cACxD,CACHD,gBAAiBltC,EAAMrY,OACvBwlD,cAAentC,EAAM3B,KAErBwF,IAAK,KACL8nC,cAAe,KACfpoD,MAAO,KACPkoD,OAAQ,KACRv9C,SAAU,MAIX,YAlCMwS,IAAMC,YA8iBZ4G,GALCC,YACZ7F,IAtjBW,SAAAC,GAAK,MAAK,CACrBqsC,sBAAuB,CACnBvmC,OAAQ,kBAEZooB,SAAU,CACN9rB,QAAS,OAEb8pC,OAAQ,CACJ71B,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQtF,WAAW4O,QAAU,aA8iBhE,CAAE9e,WAAW,IAChCC,cAGWT,CAAQgjC,iVC7gBjB2D,eACF,SAAAA,EAAYluC,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAutD,IACf1tD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAytD,GAAAptD,KAAAH,KAAMqf,KASVknC,aAAe,SAAAl7C,GACXxL,EAAK0kB,SAAS,CAAE3S,KAAMvG,EAAMC,OAAOgK,QAEnC8C,KAAiBhX,KAAK,4BAA6B,CAC/CwQ,KAAMvG,EAAMC,OAAOgK,MACnBunB,QAASh9B,EAAK2tD,SAAS3tD,EAAKokB,MAAMjC,UAfvBniB,EAmBnB4tD,mBAAqB,SAAApiD,GACjBxL,EAAK0kB,SAAS,CAAEvC,MAAO3W,EAAMC,OAAOgK,QAEpC8C,KAAiBhX,KAAK,4BAA6B,CAC/CwQ,KAAM/R,EAAKokB,MAAMrS,KACjBirB,QAASh9B,EAAK2tD,SAASniD,EAAMC,OAAOgK,UAxBzBzV,EA4BnB6tD,eAAiB,SAAAp4C,GACb,OAAQA,GACJ,KAAKq4C,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAK,KACN,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQpuD,EAiDnB2tD,SAAW,SAAAl4C,GACP,OAAQA,GACJ,IAAK,MACD,OAAOq4C,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,IAAK,SACD,OAAOC,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQpuD,EAsEnBiuC,YAAc,WACVjuC,EAAK0kB,SAAS,CAAEta,MAAM,KAvEPpK,EA0EnBoK,KAAO,WACHpK,EAAK0kB,SAAS,CAAEta,MAAM,KAxEtBpK,EAAKokB,MAAQ,CACTha,MAAM,EACN2H,KAAM/R,EAAKwf,MAAM4B,MAAM2b,QAAQhrB,KAC/BoQ,MAAOniB,EAAK6tD,eAAe7tD,EAAKwf,MAAM4B,MAAM2b,QAAQC,QAAQC,OANjDj9B,wEA8EV,IACG2gB,EAAYxgB,KAAKqf,MAAjBmB,QADHwD,EAEmBhkB,KAAKikB,MAArBrS,EAFHoS,EAEGpS,KAAMoQ,EAFTgC,EAEShC,MAEd,OACIrC,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACI2pB,mBAAoB,EACpBlgB,KAAMjK,KAAKikB,MAAMha,KACjBuf,QAASxpB,KAAK8tC,YACd1jB,kBAAgB,qBAChBizB,mBAAiB,4BACjB19B,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,sBAAhB,cACAid,EAAAnf,EAAAkM,cAAC4d,GAAA9pB,EAAD,KACImf,EAAAnf,EAAAkM,cAACwhD,GAAA1tD,EAAD,CAAa+iD,UAAU,WAAW3jC,UAAWY,EAAQ2tC,aACjDxuC,EAAAnf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CAAW28B,SAAO,EAAComB,UAAU,UAA7B,SAGA5jC,EAAAnf,EAAAkM,cAAC2hD,GAAA7tD,EAAD,CACIwmC,aAAW,QACX4L,KAAK,SACLhzB,UAAWY,EAAQqX,MACnBviB,MAAO1D,EACPyQ,SAAUriB,KAAKumD,cACf5mC,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CAAkB8U,MAAM,QAAQi5C,QAAS5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CAAOwhB,MAAM,YAAcglC,MAAM,UAC1ErnC,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CAAkB8U,MAAM,OAAOi5C,QAAS5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CAAOwhB,MAAM,YAAcglC,MAAM,WAGjFrnC,EAAAnf,EAAAkM,cAACwhD,GAAA1tD,EAAD,CAAa+iD,UAAU,WAAW3jC,UAAWY,EAAQ2tC,aACjDxuC,EAAAnf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CAAW28B,SAAO,EAAComB,UAAU,UAA7B,UAGA5jC,EAAAnf,EAAAkM,cAAC2hD,GAAA7tD,EAAD,CACIwmC,aAAW,SACX4L,KAAK,UACLhzB,UAAWY,EAAQqX,MACnBviB,MAAO0M,EACPK,SAAUriB,KAAKytD,oBACf9tC,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACI8U,MAAM,MACNi5C,QACI5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CACIggB,QAAS,CACLgC,KAAMhC,EAAQguC,QACd9rC,QAASlC,EAAQkC,WAI7BskC,MAAM,QAEVrnC,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACI8U,MAAM,SACNi5C,QACI5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CACIggB,QAAS,CACLgC,KAAMhC,EAAQiuC,WACd/rC,QAASlC,EAAQkC,WAI7BskC,MAAM,WAEVrnC,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACI8U,MAAM,QACNi5C,QACI5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CACIggB,QAAS,CACLgC,KAAMhC,EAAQkuC,UACdhsC,QAASlC,EAAQkC,WAI7BskC,MAAM,UAEVrnC,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACI8U,MAAM,QACNi5C,QACI5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CACIggB,QAAS,CACLgC,KAAMhC,EAAQmuC,UACdjsC,QAASlC,EAAQkC,WAI7BskC,MAAM,UAEVrnC,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACI8U,MAAM,OACNi5C,QACI5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CACIggB,QAAS,CACLgC,KAAMhC,EAAQouC,SACdlsC,QAASlC,EAAQkC,WAI7BskC,MAAM,SAEVrnC,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACI8U,MAAM,SACNi5C,QACI5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CACIggB,QAAS,CACLgC,KAAMhC,EAAQquC,WACdnsC,QAASlC,EAAQkC,WAI7BskC,MAAM,WAEVrnC,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACI8U,MAAM,aACNi5C,QACI5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CACIggB,QAAS,CACLgC,KAAMhC,EAAQsuC,eACdpsC,QAASlC,EAAQkC,WAI7BskC,MAAM,2BAtMZjnC,IAAMC,WAkNjBgB,OAtQA,SAAAC,GAAK,MAAK,CACrBktC,YAAa,CACTpnC,OAA6B,EAArB9F,EAAMu8B,QAAQC,MAE1B5lB,MAAO,CACH9Q,OAAM,GAAA/b,OAAKiW,EAAMu8B,QAAQC,KAAnB,SAEV+Q,QAAS,CACLxsC,MAAO2rC,KAAI,KACXoB,YAAa,CACT/sC,MAAO2rC,KAAI,OAGnBc,WAAY,CACRzsC,MAAO4rC,KAAO,KACdmB,YAAa,CACT/sC,MAAO4rC,KAAO,OAGtBc,UAAW,CACP1sC,MAAO6rC,KAAM,KACbkB,YAAa,CACT/sC,MAAO6rC,KAAM,OAGrBc,UAAW,CACP3sC,MAAO8rC,KAAM,KACbiB,YAAa,CACT/sC,MAAO8rC,KAAM,OAGrBc,SAAU,CACN5sC,MAAO+rC,KAAK,KACZgB,YAAa,CACT/sC,MAAO+rC,KAAK,OAGpBc,WAAY,CACR7sC,MAAOgsC,KAAO,KACde,YAAa,CACT/sC,MAAOgsC,KAAO,OAGtBc,eAAgB,CACZ9sC,MAAOisC,KAAW,KAClBc,YAAa,CACT/sC,MAAOisC,KAAW,OAG1BvrC,QAAS,KAqNqB,CAAE0E,WAAW,GAAhCpG,CAAwCusC,aCjQjDyB,eACF,SAAAA,EAAY3vC,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAgvD,IACfnvD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAkvD,GAAA7uD,KAAAH,KAAMqf,KAWVknC,aAAe,SAAAl7C,GACXxL,EAAK0kB,SAAS,CAAE0qC,SAAU5jD,EAAMC,OAAOgK,QAEvCzT,KAAgBgH,aAAa,CAAEC,QAAS,6BAA8BmmD,SAAU5jD,EAAMC,OAAOgK,SAf9EzV,EAkBnBiuC,YAAc,WACVjuC,EAAK0kB,SAAS,CAAEta,MAAM,KAnBPpK,EAsBnBoK,KAAO,WACHpK,EAAK0kB,SAAS,CAAEta,MAAM,KAvBP,IAGPilD,EAAS7vC,EAAT6vC,KACFD,EAAWC,EAAOA,EAAKD,SAAW,KAJzB,OAMfpvD,EAAKokB,MAAQ,CACTha,MAAM,EACNglD,SAAUA,GAAY,MARXpvD,wEA0BV,IAAAuf,EACkBpf,KAAKqf,MAAXhI,GADZ+H,EACGoB,QADHpB,EACY/H,GADZ2M,EAEsBhkB,KAAKikB,MAAxBha,EAFH+Z,EAEG/Z,KAAMglD,EAFTjrC,EAESirC,SAGRE,GAFOC,KAAkBrU,MAAQ,CAAEsU,eAAgB,KAElCA,eAAe7hD,IAAI,SAAA/B,GAAC,OACvCkU,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACI8W,IAAK7L,EAAE/I,GACP4S,MAAO7J,EAAE/I,GACT6rD,QAAS5uC,EAAAnf,EAAAkM,cAAC6V,GAAA/hB,EAAD,CAAOwhB,MAAM,YACtBglC,MAAK,GAAAh8C,OAAKS,EAAEmnC,KAAP,SAAA5nC,OAAmBS,EAAE6jD,YAArB,SAIb,OACI3vC,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACI2pB,mBAAoB,EACpBlgB,KAAMA,EACNuf,QAASxpB,KAAK8tC,YACd1jB,kBAAgB,wBAChBizB,mBAAiB,+BACjB19B,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,yBAAyB2U,EAAE,aAC3CsI,EAAAnf,EAAAkM,cAAC4d,GAAA9pB,EAAD,KACImf,EAAAnf,EAAAkM,cAACwhD,GAAA1tD,EAAD,CAAa+iD,UAAU,YACnB5jC,EAAAnf,EAAAkM,cAAC2hD,GAAA7tD,EAAD,CACIwmC,aAAW,WACX4L,KAAK,YACLt9B,MAAO25C,EACP5sC,SAAUriB,KAAKumD,cACd4I,aAxDApvC,IAAMC,WA0EpB4G,GAPCC,YACZ6kB,cACArkB,cACArG,IA/EW,SAAAC,GAAK,MAAK,CACrBktC,YAAa,CACTpnC,OAA6B,EAArB9F,EAAMu8B,QAAQC,MAE1B5lB,MAAO,CACH9Q,OAAM,GAAA/b,OAAKiW,EAAMu8B,QAAQC,KAAnB,WA0ES,CAAEr2B,WAAW,IAChCykB,cAGWjlB,CAAQooC,aC5EjB3Q,GAAmB,CACrBz0B,SAAU,SACVC,WAAY,QAGV+0B,eACF,SAAAA,EAAYv/B,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA4+C,IACf/+C,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA8+C,GAAAz+C,KAAAH,KAAMqf,KAgBV/d,2BAA6B,SAAAX,GACzBd,EAAK0kB,SAAS,CAAEgrC,mBAAoB5uD,EAAOyB,uBAlB5BvC,EAqBnB2vD,eAAiB,SAAAnkD,GAAS,IACdkkD,EAAuB1vD,EAAKokB,MAA5BsrC,mBACHE,aAAqBF,IAE1B1vD,EAAK0kB,SAAS,CAAE6hB,SAAU/6B,EAAMi7B,iBAzBjBzmC,EA4BnB0mC,gBAAkB,WACd1mC,EAAK0kB,SAAS,CAAE6hB,SAAU,QA7BXvmC,EAgCnB6vD,aAAe,WACX7vD,EAAK0mC,kBAEL1mC,EAAKwf,MAAMswC,YAnCI9vD,EAsCnB+vD,mBAtCmB9vD,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAsCE,SAAAC,IAAA,OAAAsuB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBlB,EAAK0mC,kBADY1lC,EAAAE,KAAA,EAGXJ,eAHW,wBAAAE,EAAAU,SAAAb,MAtCFb,EA4CnBgwD,iBAAmB,SAAAxkD,GACfxL,EAAK0mC,kBAEL1mC,EAAKiwD,YAAY7lD,QA/CFpK,EAkDnBkwD,eAAiB,SAAA1kD,GACbxL,EAAK0mC,kBAEL1mC,EAAKmwD,eAAe/lD,QArDLpK,EAwDnBowD,OAAS,SAAA5xB,GACL36B,QAAQ4F,IAARxJ,OAAAowD,GAAA,EAAApwD,QAAAowD,GAAA,EAAApwD,CAAAD,KACAA,EAAKmwD,eAAiB3xB,GAvDtBx+B,EAAKokB,MAAQ,CACTsrC,mBAAoBn3C,KAAiB+3C,wBACrC/pB,SAAU,MALCvmC,mFAUfuY,KAAiBmJ,GAAG,2BAA4BvhB,KAAKsB,2EAIrD8W,KAAiBpW,eAAe,2BAA4BhC,KAAKsB,6DA+C5D,IAAAkJ,EAAAxK,KAAAof,EACkBpf,KAAKqf,MAApBmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EADZ2M,EAEoChkB,KAAKikB,MAAtCmiB,EAFHpiB,EAEGoiB,SAAUmpB,EAFbvrC,EAEaurC,mBAEZa,EAAkBX,aAAqBF,GACzC5vC,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACw6B,GAAA1mC,EAAD,CACIkC,GAAG,YACH0jC,SAAUA,EACVn8B,KAAMgT,QAAQmpB,GACd5c,QAASxpB,KAAKumC,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB1d,aAAc00B,IACd1+B,EAAAnf,EAAAkM,cAACud,GAAAzpB,EAAD,CAAUsf,QAAS9f,KAAK4vD,oBAAqBv4C,EAAE,mBAC/CsI,EAAAnf,EAAAkM,cAACud,GAAAzpB,EAAD,CAAUsf,QAAS9f,KAAK6vD,kBAAmBx4C,EAAE,eAC7CsI,EAAAnf,EAAAkM,cAACud,GAAAzpB,EAAD,CAAUsf,QAAS9f,KAAK+vD,gBAAiB14C,EAAE,aAC3CsI,EAAAnf,EAAAkM,cAACud,GAAAzpB,EAAD,CAAUsf,QAAS9f,KAAK0vD,cAAer4C,EAAE,aAGjD,KAEJ,OACIsI,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIu/C,YAAW3Z,EAAW,cAAgB,KACtC4Z,gBAAc,OACdpgC,UAAWY,EAAQy/B,eACnBjZ,aAAW,OACXlnB,QAAS9f,KAAKwvD,gBACd7vC,EAAAnf,EAAAkM,cAAC2jD,GAAA7vD,EAAD,OAEH4vD,EACDzwC,EAAAnf,EAAAkM,cAAC4jD,GAAD,CAAaC,SAAU,SAAAlyB,GAAG,OAAK7zB,EAAKslD,YAAczxB,KAClD1e,EAAAnf,EAAAkM,cAAC8jD,GAAD,CAAgBnyB,IAAK,SAAAA,GAAG,OAAK7zB,EAAKwlD,eAAiB3xB,aAjGtCte,IAAMC,WA4GpB4G,GALCC,YACZQ,cACArG,IAvHW,CACXi/B,eAAgB,CACZl5B,OAAQ,qBAEZ0pC,iBAAkB,CACd1pC,OAAQ,mBAkHO,CAAEK,WAAW,IAGrBR,CAAQg4B,ICxGjB8R,uBACF,SAAAA,EAAYrxC,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA0wD,IACf7wD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA4wD,GAAAvwD,KAAAH,KAAMqf,KA8BV/d,2BAA6B,SAAAX,GACzBd,EAAK0kB,SAAS,CAAEgrC,mBAAoB5uD,EAAOyB,uBAhC5BvC,EAmCnB6vD,aAAe,WACX7vD,EAAK0kB,SAAS,CAAEta,MAAM,KApCPpK,EAuCnB8wD,WAAa,WACT9wD,EAAKiuC,cACLjsC,KAAgB+uD,UAzCD/wD,EA4CnBiuC,YAAc,WACVjuC,EAAK0kB,SAAS,CAAEta,MAAM,KA7CPpK,EAgDnBgxD,aAAe,WAAM,IAAAzxC,EACgBvf,EAAKwf,MAA9ByxC,EADS1xC,EACT0xC,SAAUC,EADD3xC,EACC2xC,WACVxB,EAAuB1vD,EAAKokB,MAA5BsrC,mBACHE,aAAqBF,IAE1BuB,GAAUC,IArDKlxD,EAwDnB4pC,cAAgB,SAAAp+B,GACU,KAAlBA,EAAM09B,SACN19B,EAAMod,kBA1DK5oB,EA8DnB6yC,YAAc,WACV,IAAMvJ,EAAYtpC,EAAKmxD,YAAY3jC,QAAQ8b,UACrC+D,EAAYrtC,EAAKmxD,YAAY3jC,QAAQ6f,WAEvCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtCrtC,EAAKmxD,YAAY3jC,QAAQ6f,UAAY,IAGzC90B,KAAiBhX,KAAK,yBAA0B,CAAEsc,KAAMyrB,KAtEzCtpC,EAyEnBsqC,YAAc,SAAA9+B,GACV,IAAMkoC,EAAYloC,EAAMi/B,cAAcC,QAAQ,cAC1CgJ,IACAloC,EAAMod,iBACN3jB,SAAS4lC,YAAY,cAAc,EAAO6I,KA1E9C1zC,EAAKmxD,YAAcjxC,IAAMie,YAEzBn+B,EAAKokB,MAAQ,CACTsrC,mBAAoBn3C,KAAiB+3C,wBACrClmD,MAAM,GAGVpK,EAAKypC,YAActG,aAASnjC,EAAKypC,YAAa,KAV/BzpC,kFAaAmlB,EAAWC,EAAWC,GAAU,IAAA1a,EAAAxK,KAC3CA,KAAKqf,MAAM0xC,YAAc/wD,KAAKqf,MAAM0xC,aAAe/rC,EAAU+rC,YAC7D35B,WAAW,WACH5sB,EAAKwmD,YAAY3jC,SACjB7iB,EAAKwmD,YAAY3jC,QAAQqb,SAE9B,iDAKPtwB,KAAiBmJ,GAAG,2BAA4BvhB,KAAKsB,2EAIrD8W,KAAiBpW,eAAe,2BAA4BhC,KAAKsB,6DAqD5D,IAAAif,EACuCvgB,KAAKqf,MAAzCmB,EADHD,EACGC,QAASV,EADZS,EACYT,QAASixC,EADrBxwC,EACqBwwC,WAAY15C,EADjCkJ,EACiClJ,EAC9BpN,EAASjK,KAAKikB,MAAdha,KAEFgnD,EAAsBhnD,EACxB0V,EAAAnf,EAAAkM,cAACwkD,GAAA,EAAD,CAAQ/mC,mBAAoB,EAAGlgB,KAAMA,EAAMuf,QAASxpB,KAAK8tC,YAAa1jB,kBAAgB,qBAClFzK,EAAAnf,EAAAkM,cAACwkD,GAAA,EAAD,CAAaxuD,GAAG,qBAAqB2U,EAAE,YACvCsI,EAAAnf,EAAAkM,cAACwkD,GAAA,EAAD,KACIvxC,EAAAnf,EAAAkM,cAACwkD,GAAA,EAAD,CAAmBtxC,UAAWY,EAAQ2wC,YAAa95C,EAAE,sBAEzDsI,EAAAnf,EAAAkM,cAACwkD,GAAA,EAAD,KACIvxC,EAAAnf,EAAAkM,cAACwkD,GAAA,EAAD,CAAQpxC,QAAS9f,KAAK8tC,YAAa9rB,MAAM,WACpC3K,EAAE,WAEPsI,EAAAnf,EAAAkM,cAACwkD,GAAA,EAAD,CAAQpxC,QAAS9f,KAAK2wD,WAAY3uC,MAAM,WACnC3K,EAAE,SAIf,KAEJ,OACIsI,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iBACTmxC,EASEpxC,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,4BACXD,EAAAnf,EAAAkM,cAAA,OACIhK,GAAG,yBACH27B,IAAKr+B,KAAKgxD,YACVlmB,YAAazzB,EAAE,UACfC,IAAKmB,OACLmyB,iBAAe,EACfC,gCAA8B,EAC9BM,UAAWnrC,KAAKypC,cAChBsL,QAAS/0C,KAAK0yC,YACdtH,QAASprC,KAAKmqC,gBAnB1BxqB,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC0kD,GAAD,CAAgBzB,SAAU3vD,KAAK0vD,eAC9BuB,EACDtxC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oCAAoCE,QAASA,GACxDH,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,yBAAyBvI,EAAE,cAoBvDsI,EAAAnf,EAAAkM,cAACwkD,GAAA,EAAD,CACItxC,UAAWY,EAAQ6wC,iBACnBrqB,aAAY3vB,EAAE,UACd0uB,YAAa/lC,KAAK6wD,cAClBlxC,EAAAnf,EAAAkM,cAAC4kD,GAAA9wD,EAAD,CAAeyJ,KAAM8mD,EAAYluC,KAAMlD,EAAAnf,EAAAkM,cAAC6kD,GAAA/wD,EAAD,MAAgBgxD,SAAU7xC,EAAAnf,EAAAkM,cAAC2+B,EAAA7qC,EAAD,iBAtIzDuf,IAAMC,YAyJnB4G,GALCC,YACZQ,cACArG,IA/JW,CACXqwC,iBAAkB,CACdtqC,OAAQ,kBAEZoqC,WAAY,CACRzL,WAAY,cA6JL9+B,CAAQ8pC,IC7KjBe,6NA+BFC,2BAA6B,SAAA/wD,GACNd,EAAKwf,MAAhBrY,SAEOrG,EAAOqG,SAClBnH,EAAK+/C,aAAej/C,EAAOu2B,WAC3Br3B,EAAKyhB,kBAIbo3B,uBAAyB,SAAA/3C,GACrBd,EAAKyhB,iBAGTlhB,SAAW,SAAAO,GACYd,EAAKwf,MAAhBrY,SAEOrG,EAAOyF,SAEtBvG,EAAKyhB,oGAhDasD,EAAWC,GAC7B,OAAID,EAAU5d,SAAWhH,KAAKqf,MAAMrY,QAIhC4d,EAAUvN,IAAMrX,KAAKqf,MAAMhI,8CAQ/BzE,IAAU2O,GAAG,mCAAoCvhB,KAAK04C,wBACtD9lC,IAAU2O,GAAG,2BAA4BvhB,KAAK0xD,4BAC9C9+C,IAAU2O,GAAG,yBAA0BvhB,KAAKI,UAC5CwS,IAAU2O,GAAG,wBAAyBvhB,KAAKI,UAC3CwS,IAAU2O,GAAG,sBAAuBvhB,KAAKI,UACzCwS,IAAU2O,GAAG,uBAAwBvhB,KAAKI,yDAI1CwS,IAAU5Q,eAAe,mCAAoChC,KAAK04C,wBAClE9lC,IAAU5Q,eAAe,2BAA4BhC,KAAK0xD,4BAC1D9+C,IAAU5Q,eAAe,yBAA0BhC,KAAKI,UACxDwS,IAAU5Q,eAAe,wBAAyBhC,KAAKI,UACvDwS,IAAU5Q,eAAe,sBAAuBhC,KAAKI,UACrDwS,IAAU5Q,eAAe,uBAAwBhC,KAAKI,2CAwBjD,IAAAgf,EACiBpf,KAAKqf,MAAnBrY,EADHoY,EACGpY,OAAQqQ,EADX+H,EACW/H,EAEhB,GAAIrX,KAAK4/C,aAAc,OAAOjgC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkB,QAE/D,IAAM7b,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO4b,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkB,QAEnD,IAAI+xC,EAAiB,KACfz8C,EAAeH,YAAoB/N,GAKzC,GAJIkO,IACAy8C,EAAiBhyC,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,yBAAyB1K,KAGzDy8C,EAAgB,CACjB,IAAMtgB,EAAQ7zB,YAAaxW,GAC3B,GAAIoS,YAAcpS,GAAS,CACvB,IAAM0W,EAAO2zB,EAAM3zB,MAAQ,OAE3Bi0C,EACIhyC,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,wBAAwBvI,EAAE,SAAW,MACpDqG,IAMjB,IAAKi0C,EAAgB,CACjB,IAAMptD,EAAU6S,YAAsBrT,EAAMsT,IAAM,OAC5C8xC,EAAajyC,YAAyBnT,GAC5C4tD,EACIhyC,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK+jC,GAAcxpC,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,yBAAyBupC,EAAzC,MACd5kD,GAKb,OAAOob,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkB+xC,UA3Fb5xC,IAAMC,YA+F1BqH,iBAAkBoqC,ICtF3BG,uBACF,SAAAA,EAAYvyC,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA4xD,IACf/xD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA8xD,GAAAzxD,KAAAH,KAAMqf,KAwCVqyC,2BAA6B,SAAA/wD,GACNd,EAAKwf,MAAhBrY,SAEOrG,EAAOqG,SAClBnH,EAAK+/C,aAAej/C,EAAOu2B,WAC3Br3B,EAAKyhB,gBA9CMzhB,EAkDnB64C,uBAAyB,SAAA/3C,GACrBd,EAAKyhB,eAnDUzhB,EAsDnBO,SAAW,SAAAO,GAAU,IACTqG,EAAWnH,EAAKwf,MAAhBrY,OAEJrG,EAAOyF,UAAYY,GAEvBnH,EAAKyhB,eA3DUzhB,EA8DnByiC,kCAAoC,SAAA3hC,GAAU,IAClCqG,EAAWnH,EAAKwf,MAAhBrY,OAEFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAEL,OAAQpD,EAAO4hC,MAAM,UACjB,IAAK,sCAC0B,uBAAvBx+B,EAAK6N,KAAK,UAA4D,uBAAvB7N,EAAK6N,KAAK,UACzD/R,EAAKyhB,cAET,MAEJ,IAAK,wCAC0B,oBAAvBvd,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACtD/R,EAAKyhB,gBA7EFzhB,qFAIG+kB,EAAWC,GAC7B,OAAID,EAAU5d,SAAWhH,KAAKqf,MAAMrY,QAGhC4d,EAAU3D,QAAUjhB,KAAKqf,MAAM4B,kDAQnCrO,IAAU2O,GAAG,mCAAoCvhB,KAAK04C,wBACtD9lC,IAAU2O,GAAG,2BAA4BvhB,KAAK0xD,4BAC9C9+C,IAAU2O,GAAG,yBAA0BvhB,KAAKI,UAC5CwS,IAAU2O,GAAG,6BAA8BvhB,KAAKI,UAChDwS,IAAU2O,GAAG,qBAAsBvhB,KAAKI,UACxCwS,IAAU2O,GAAG,iCAAkCvhB,KAAKI,UACpDwS,IAAU2O,GAAG,sBAAuBvhB,KAAKI,UACzCwS,IAAU2O,GAAG,uBAAwBvhB,KAAKI,UAC1CwS,IAAU2O,GAAG,+BAAgCvhB,KAAKI,UAClDgY,KAAiBmJ,GAAG,kCAAmCvhB,KAAKsiC,kFAI5D1vB,IAAU5Q,eAAe,mCAAoChC,KAAK04C,wBAClE9lC,IAAU5Q,eAAe,2BAA4BhC,KAAK0xD,4BAC1D9+C,IAAU5Q,eAAe,yBAA0BhC,KAAKI,UACxDwS,IAAU5Q,eAAe,6BAA8BhC,KAAKI,UAC5DwS,IAAU5Q,eAAe,qBAAsBhC,KAAKI,UACpDwS,IAAU5Q,eAAe,iCAAkChC,KAAKI,UAChEwS,IAAU5Q,eAAe,sBAAuBhC,KAAKI,UACrDwS,IAAU5Q,eAAe,uBAAwBhC,KAAKI,UACtDwS,IAAU5Q,eAAe,+BAAgChC,KAAKI,UAC9DgY,KAAiBpW,eAAe,kCAAmChC,KAAKsiC,oEA+CxE,GAAItiC,KAAK4/C,aAAc,OAAO,KADzB,IAAAxgC,EAGuBpf,KAAKqf,MAAzBmB,EAHHpB,EAGGoB,QAASxZ,EAHZoY,EAGYpY,OAEXjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAEQA,EAAlB6P,cARH,IAUCi+C,EAAoBr6C,YAAyBzT,GAC7C+tD,EAAcn6C,YAAmB5T,GACjCguD,EAAqBl6C,YAA0B9T,GAC/CiuD,EAAkBF,EAAc,GAAsB,IAAhBA,GAAqBC,EAAqB,EAChFE,EAAgB74C,YAAcrV,EAAKrB,IACnCwvD,EAAgBn6C,YAAYhU,GAAQ,qBAAuB,GAEjE,OACI4b,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACKysC,IAAsBI,GAAiBtyC,EAAAnf,EAAAkM,cAAA,KAAGkT,UAAU,wBACpDmyC,GACGpyC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,eAAgBH,EAAQ2xC,cAC/CxyC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAf,MAGPoyC,EACGryC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWuxC,EAAe,eAAgB1xC,EAAQ2xC,cAC9DxyC,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,qBAAqBkyC,IAEzC/tD,EAAKquD,YAAcP,EACnBlyC,EAAAnf,EAAAkM,cAAA,KAAGkT,UAAU,wBACb,aApHaG,IAAMC,YA0HxBgB,OAhIA,SAAAC,GAAK,MAAK,CACrBkxC,YAAa,CACT76B,WAAYrW,EAAM2b,QAAQC,QAAQC,QA8HR,CAAE1V,WAAW,GAAhCpG,CAAwC4wC,ICzExCS,uBAhEX,SAAAA,EAAYhzC,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAqyD,IACfxyD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAuyD,GAAAlyD,KAAAH,KAAMqf,KA+BVqyC,2BAA6B,SAAA/wD,GACNd,EAAKwf,MAAhBrY,SAEOrG,EAAOqG,SAClBnH,EAAK+/C,aAAej/C,EAAOu2B,WAC3Br3B,EAAKyhB,gBArCMzhB,EAyCnB64C,uBAAyB,SAAA/3C,GACrBd,EAAKyhB,eA1CUzhB,EA6CnBO,SAAW,SAAAO,GACYd,EAAKwf,MAAhBrY,SAEOrG,EAAOyF,SAEtBvG,EAAKyhB,eAlDUzhB,qFAIG+kB,EAAWC,GAC7B,OAAID,EAAU5d,SAAWhH,KAAKqf,MAAMrY,mDAQpC4L,IAAU2O,GAAG,mCAAoCvhB,KAAK04C,wBACtD9lC,IAAU2O,GAAG,2BAA4BvhB,KAAK0xD,4BAC9C9+C,IAAU2O,GAAG,yBAA0BvhB,KAAKI,UAC5CwS,IAAU2O,GAAG,wBAAyBvhB,KAAKI,UAC3CwS,IAAU2O,GAAG,sBAAuBvhB,KAAKI,UACzCwS,IAAU2O,GAAG,+BAAgCvhB,KAAKI,UAClDwS,IAAU2O,GAAG,2BAA4BvhB,KAAKI,yDAI9CwS,IAAU5Q,eAAe,mCAAoChC,KAAK04C,wBAClE9lC,IAAU5Q,eAAe,2BAA4BhC,KAAK0xD,4BAC1D9+C,IAAU5Q,eAAe,yBAA0BhC,KAAKI,UACxDwS,IAAU5Q,eAAe,wBAAyBhC,KAAKI,UACvDwS,IAAU5Q,eAAe,sBAAuBhC,KAAKI,UACrDwS,IAAU5Q,eAAe,+BAAgChC,KAAKI,UAC9DwS,IAAU5Q,eAAe,2BAA4BhC,KAAKI,2CAyB1D,GAAIJ,KAAK4/C,aAAc,OAAO,KADzB,IAGG54C,EAAWhH,KAAKqf,MAAhBrY,OAEFjD,EAAO6O,IAAU3P,IAAI+D,GACrBwR,EAAOW,YAAmBpV,GAEhC,OAAO4b,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KAAG5M,GAAQmH,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBAAoBpH,WA9D7BuH,IAAMC,YC2ChCsyC,uBACF,SAAAA,EAAYjzC,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAsyD,IACfzyD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAwyD,GAAAnyD,KAAAH,KAAMqf,KAkCV2xB,qBAAuB,SAAArwC,GAAU,IACrBqG,EAAWnH,EAAKwf,MAAhBrY,OAEJA,IAAWrG,EAAO2nD,gBAAkBthD,IAAWrG,EAAOswC,YACtDpxC,EAAKyhB,eAvCMzhB,EA2CnBs4B,aAAe,WACX/D,aAASv0B,EAAKwf,MAAMrY,SAzCpBnH,EAAK0nB,OAASxH,IAAMie,YAEpB,IAAMj6B,EAAO6O,IAAU3P,IAAIpD,EAAKwf,MAAMrY,QALvB,OAMfnH,EAAKokB,MAAQ,CACTlgB,KAAMA,GAPKlE,qFAWG+kB,EAAWC,GAC7B,OAAID,EAAU5d,SAAWhH,KAAKqf,MAAMrY,SAIhC4d,EAAU3D,QAAUjhB,KAAKqf,MAAM4B,OAI/B2D,EAAUxC,SAAWpiB,KAAKqf,MAAM+C,oDAQpChK,KAAiBmJ,GAAG,qBAAsBvhB,KAAKgxC,qEAI/C54B,KAAiBpW,eAAe,qBAAsBhC,KAAKgxC,uDAetD,IAAA5xB,EACkDpf,KAAKqf,MAApDmB,EADHpB,EACGoB,QAASxZ,EADZoY,EACYpY,OAAQwT,EADpB4E,EACoB5E,kBAEzB,GAHK4E,EACuCgD,OAEhC,OAAO,KAEnB,IACMmwC,EADgBn6C,KAAiBs8B,cACF1tC,EAErC,OACI2Y,EAAAnf,EAAAkM,cAAA,OACI2xB,IAAKr+B,KAAKunB,OACV3H,UAAWe,IACP4xC,EAAa/xC,EAAQgyC,aAAehyC,EAAQ+G,OAC5CgrC,EAAa,gBAAkB,UAEnCxsB,YAAa/lC,KAAKm4B,cAClBxY,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBACXD,EAAAnf,EAAAkM,cAACysC,EAAD,CACInyC,OAAQA,EACRwT,kBAAmBA,EACnBm+B,YAAU,EACVn4B,QAAS,CAAEs4B,WAAYt4B,EAAQs4B,WAAYC,WAAYv4B,EAAQu4B,cAEnEp5B,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBACXD,EAAAnf,EAAAkM,cAACi1C,GAAD,CAAoB36C,OAAQA,IAC5B2Y,EAAAnf,EAAAkM,cAAC+lD,GAAD,CAAmBzrD,OAAQA,KAE/B2Y,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAACgmD,GAAD,CAAsB1rD,OAAQA,IAC9B2Y,EAAAnf,EAAAkM,cAACimD,GAAD,CAAoB3rD,OAAQA,eA9E5BgZ,cA6F5BsyC,GAAcxxC,aAAe,CACzBsB,QAAQ,EACR5H,mBAAmB,GAGRwG,WApIA,SAAAC,GAAK,MAAK,CACrB63B,WAAY,CACR71B,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACR4P,OAAQ,GAEZkiB,WAAY,GACZyZ,aAAc,CACVxwC,MAAO,OACP8E,gBAAiB7F,EAAM2b,QAAQC,QAAQC,KACvCC,aAAc,EACd61B,OAAQ,UACR7rC,OAAQ,SACR8rC,gBAAiB,CACbv7B,WAAYrW,EAAM2b,QAAQC,QAAQC,OAG1CvV,OAAQ,CACJwV,aAAc,EACd61B,OAAQ,UACR7rC,OAAQ,SACR+rC,UAAW,CACPhsC,gBAAiB7F,EAAM2b,QAAQC,QAAQC,KAAO,KAC9C+1B,gBAAiB,CACbv7B,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQtF,WAAW4O,QAAU,WAEnF6sB,gBAAiB,CACbz7B,WAAYrW,EAAM2b,QAAQC,QAAQC,KAAO,UAwGvB,CAAE1V,WAAW,GAAhCpG,CAAwCsxC,ICoMxCU,uBAvUX,SAAAA,EAAY3zC,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAgzD,IACfnzD,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAkzD,GAAA7yD,KAAAH,KAAMqf,KA0DV4zC,wBAA0B,SAAAtyD,GAClBA,EAAOu2B,WACPr3B,EAAKqzD,YAAYjyD,IAAIN,EAAOqG,OAAQrG,EAAOqG,QAE3CnH,EAAKqzD,YAAYhwD,OAAOvC,EAAOqG,QAGnCnH,EAAKyhB,eAlEUzhB,EAqEnByB,2BAA6B,SAAAX,GAAU,IAC3ByB,EAAwBzB,EAAxByB,oBAERvC,EAAK0kB,SAAS,CAAEgrC,mBAAoBntD,GAAuB,kBAAMvC,EAAKszD,oBAxEvDtzD,EA2EnB64C,uBAAyB,SAAA/3C,GACrBd,EAAKuzD,YAAW,IA5EDvzD,EAgFnBwzD,wBAA0B,SAAA1yD,GACtB,IAAM2yD,EAAqB3yD,EAAOsjB,MAC1BsvC,EAAoB1zD,EAAKokB,MAAzBsvC,iBAER1zD,EAAK0kB,SAAS,CAAEgvC,gBAAiBD,IAG7BC,GAC6B,4BAA7BA,EAAgB,UACgB,4BAAhCD,EAAmB,YAGG1gD,IAAU4gD,eAAextD,OAAS,IAG5D4M,IAAU4gD,eAAiB,GAC3B3zD,EAAK0kB,SAAS,CAAE61B,MAAO,IAAM,kBAAMv6C,EAAKuzD,YAAW,QAhGpCvzD,EAmGnBszD,eAnGmBrzD,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAmGF,SAAAC,IAAA,IAAA6uD,EAAA,OAAAvgC,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACLwuD,EAAuB1vD,EAAKokB,MAA5BsrC,qBACkD,4BAAhCA,EAAmB,SAFhC,CAAA1uD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGHnB,IAAUyC,OAAO,kBAAMxC,EAAKuzD,eAHzB,wBAAAvyD,EAAAU,SAAAb,MAnGEb,EA0GnB4zD,kBAAoB,SAAA9yD,GAIhB,GAAqB,MAAjBA,EAAOypD,OACEx3C,IAAU3P,IAAItC,EAAOyF,SAClC,CAKIzF,EAAOyF,UAAYgS,KAAiBs8B,cACpC7yC,KAAgB+gD,UAAU,GAC1BxqC,KAAiBsvC,6BAA4B,IAIjD,IADA,IAAI/M,EAAU,GACL70C,EAAI,EAAGA,EAAIjG,EAAKokB,MAAMm2B,MAAMp0C,OAAQF,IAAK,CAC9C,IAAI/B,EAAO6O,IAAU3P,IAAIpD,EAAKokB,MAAMm2B,MAAMt0C,IAC1C,GAAI/B,GAAuB,MAAfA,EAAKqmD,MACb,OAAQrmD,EAAK6N,KAAK,UACd,IAAK,qBAEkC,yBADhB2H,KAAgBtW,IAAIc,EAAK6N,KAAK4H,gBAClCC,OAAO,UAClBkhC,EAAQnxC,KAAKzF,EAAKrB,IAEtB,MAEJ,IAAK,kBAIL,IAAK,iBACDi4C,EAAQnxC,KAAKzF,EAAKrB,IAClB,MAEJ,IAAK,qBAEkC,yBADhBuX,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eAClCT,OAAO,UAClBkhC,EAAQnxC,KAAKzF,EAAKrB,KAQtC7C,EAAK6zD,aAAa/Y,KAzJH96C,EA4JnBO,SAAW,SAAAO,GAAU,IACTyF,EAAmBzF,EAAnByF,QACR,GAAc,MADazF,EAAVypD,MACjB,CACA,IAAMrmD,EAAO6O,IAAU3P,IAAImD,GAC3B,GAAKrC,GAAuB,MAAfA,EAAKqmD,MAAlB,CAJiB,IAQThQ,EAAUv6C,EAAKokB,MAAfm2B,MAEJuZ,EAAa,GACjB,GAAIvZ,EAAMp0C,OAAS,EAEf,IADqBo0C,EAAMvW,KAAK,SAAAp4B,GAAC,OAAIA,IAAMrF,IACxB,CACf,IAAMwtD,EAAehhD,IAAU3P,IAAIm3C,EAAMA,EAAMp0C,OAAS,IAAIokD,MAC5D,GAA+C,IAA3CD,aAAayJ,EAAc7vD,EAAKqmD,OAChC,OAEJuJ,EAAWnqD,KAAKzF,EAAKrB,IAM7B,IADA,IAAIi4C,EAAU,GACL70C,EAAI,EAAGA,EAAIs0C,EAAMp0C,OAAQF,IAAK,CACnC,IAAI/B,EAAO6O,IAAU3P,IAAIm3C,EAAMt0C,IAC/B,GAAI/B,GAAuB,MAAfA,EAAKqmD,MACb,OAAQrmD,EAAK6N,KAAK,UACd,IAAK,qBAEkC,yBADhB2H,KAAgBtW,IAAIc,EAAK6N,KAAK4H,gBAClCC,OAAO,UAClBkhC,EAAQnxC,KAAKzF,EAAKrB,IAEtB,MAEJ,IAAK,kBAIL,IAAK,iBACDi4C,EAAQnxC,KAAKzF,EAAKrB,IAClB,MAEJ,IAAK,qBAEkC,yBADhBuX,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eAClCT,OAAO,UAClBkhC,EAAQnxC,KAAKzF,EAAKrB,KAQtC7C,EAAK6zD,aAAa/Y,EAASgZ,EAAY,WACnC9zD,EAAKgkD,iBAAiB8P,QAnNX9zD,EA+OnBmsD,aAAe,WACX,IAAMzxB,EAAO16B,EAAKosD,QAAQ5+B,QAEtBkN,GAAQA,EAAKiO,UAAYjO,EAAKqqB,cAAgBrqB,EAAKkO,cACnD5oC,EAAKuzD,cAnPMvzD,EAuPnBuzD,WAvPmBtzD,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAuPN,SAAAyB,IAAA,IAAAsoC,EAAA4P,EAAAyZ,EAAAC,EAAA/vD,EAAAoG,EAAA4pD,EAAAryD,UAAA,OAAAstB,EAAAxuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAOypC,EAAPupB,EAAA/tD,OAAA,QAAAsI,IAAAylD,EAAA,IAAAA,EAAA,GACD3Z,EAAUv6C,EAAKokB,MAAfm2B,OAEJv6C,EAAKwsD,QAHA,CAAAlqD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,wBAKLwyD,EAAc,sBACdC,EAAe,GACdtpB,GAAW4P,GAASA,EAAMp0C,OAAS,IAC9BjC,EAAO6O,IAAU3P,IAAIm3C,EAAMA,EAAMp0C,OAAS,OAE5C6tD,EAAc9vD,EAAKqmD,MACnB0J,EAAe/vD,EAAKrB,IAI5B7C,EAAKwsD,SAAU,EAfNlqD,EAAApB,KAAA,GAgBYc,KAAgBgJ,KAAK,CACtC/B,QAAS,WACT0xC,eAAgBsZ,EAChBvZ,aAAcsZ,EACd3hC,MAAO8hC,MACRC,QAAQ,WACPp0D,EAAKwsD,SAAU,IAtBV,SAgBHliD,EAhBGhI,EAAA4I,MA2BE6vC,SAAS50C,OAAS,GAAKmE,EAAOywC,SAAS,KAAOkZ,GACrD3pD,EAAOywC,SAASsZ,QAGhB1pB,EACA3qC,EAAKs0D,aAAahqD,EAAOywC,SAAU,kBAAM/6C,EAAKgkD,iBAAiB15C,EAAOywC,YAEtE/6C,EAAKu0D,YAAYjqD,EAAOywC,SAAU,kBAAM/6C,EAAKgkD,iBAAiB15C,EAAOywC,YAlChE,yBAAAz4C,EAAAZ,SAAAW,MApPTrC,EAAKqzD,YAAc,IAAIhqD,IAEvBrJ,EAAKosD,QAAUlsC,IAAMie,YAErBn+B,EAAKokB,MAAQ,CACTm2B,MAAO,GACPmV,mBAAoBn3C,KAAiB+3C,wBACrCoD,gBAAiBn7C,KAAiBi8C,sBAVvBx0D,qFAcG+kB,EAAWC,GAC7B,OAAIA,EAAUu1B,QAAUp6C,KAAKikB,MAAMm2B,sDAOfp1B,EAAWC,GAG/B,MAAO,CAAEujB,UAFiBxoC,KAAKisD,QAAvB5+B,QAEiBmb,sDAGVxjB,EAAWC,EAAWC,GAAU,IAC9BqV,EAASv6B,KAAKisD,QAAvB5+B,QACAmb,EAActjB,EAAdsjB,UAERjO,EAAKiO,UAAYA,8CAIjBxoC,KAAKmzD,iBAEL/6C,KAAiBmJ,GAAG,2BAA4BvhB,KAAKsB,4BAErDsR,IAAU2O,GAAG,mCAAoCvhB,KAAK04C,wBACtD9lC,IAAU2O,GAAG,yBAA0BvhB,KAAKI,UAC5CwS,IAAU2O,GAAG,qBAAsBvhB,KAAKI,UACxCwS,IAAU2O,GAAG,wBAAyBvhB,KAAKI,UAC3CwS,IAAU2O,GAAG,kBAAmBvhB,KAAKyzD,mBACrC7gD,IAAU2O,GAAG,wBAAyBvhB,KAAKizD,wEAI3C76C,KAAiBpW,eAAe,2BAA4BhC,KAAKsB,4BAEjEsR,IAAU5Q,eAAe,mCAAoChC,KAAK04C,wBAClE9lC,IAAU5Q,eAAe,yBAA0BhC,KAAKI,UACxDwS,IAAU5Q,eAAe,qBAAsBhC,KAAKI,UACpDwS,IAAU5Q,eAAe,wBAAyBhC,KAAKI,UACvDwS,IAAU5Q,eAAe,kBAAmBhC,KAAKyzD,mBACjD7gD,IAAU5Q,eAAe,wBAAyBhC,KAAKizD,8DA+J9CtY,GAAoC,IAA3BgZ,EAA2BjyD,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAd,GAAI2H,EAAU3H,UAAAsE,OAAA,EAAAtE,UAAA,QAAA4M,EACvCgmD,EAAiB3Z,EAAQ3vC,OAAO2oD,GAAYzO,KAAK,SAAC1kD,EAAG0pD,GACvD,OAAOC,aAAav3C,IAAU3P,IAAIinD,GAAGE,MAAOx3C,IAAU3P,IAAIzC,GAAG4pD,SAG5D4I,EAAYuB,iBAAiBv0D,KAAKikB,MAAMm2B,MAAOka,IAIpDt0D,KAAKukB,SAAS,CAAE61B,MAAOka,GAAkBjrD,4CA6D5B+wC,GACb,IAAMz6C,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAAOy6C,uCAGhBA,EAAO/wC,GACM,IAAjB+wC,EAAMp0C,QAEVhG,KAAKukB,SAAS,CAAE61B,MAAOp6C,KAAKikB,MAAMm2B,MAAMpvC,OAAOovC,IAAU/wC,wCAGhD+wC,EAAO/wC,GAChBrJ,KAAKukB,SAAS,CAAE61B,MAAOA,GAAS/wC,yCAInBrJ,KAAKisD,QAAQ5+B,QACrBmb,UAAY,mCAGZ,IAAAh+B,EAAAxK,KAGCw0D,EAFYx0D,KAAKikB,MAAfm2B,MAEc5sC,IAAI,SAAA/B,GAAC,OAAIkU,EAAAnf,EAAAkM,cAAC+nD,GAAD,CAAen9C,IAAK7L,EAAGzE,OAAQyE,EAAG2W,OAAQ5X,EAAK0oD,YAAYpwD,IAAI2I,OAW9F,OACIkU,EAAAnf,EAAAkM,cAAA,OAAK2xB,IAAKr+B,KAAKisD,QAASrsC,UAAU,eAAewtC,SAAUptD,KAAKgsD,cAC3DwI,8CA9FWE,EAAYf,GAChC,GAAIe,EAAW1uD,SAAW2tD,EAAW3tD,OAAQ,CACzC,IAAK,IAAIF,EAAI,EAAGA,EAAI4uD,EAAW1uD,OAAQF,IACnC,GAAI4uD,EAAW5uD,KAAO6tD,EAAW7tD,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,SA7OWia,IAAMC,YCE1B20C,eACF,SAAAA,EAAYt1C,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA20D,IACf90D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA60D,GAAAx0D,KAAAH,KAAMqf,KAeVu1C,kCAAoC,WAChC/0D,EAAK0kB,SAAS,CAAEswC,qBAAqB,KAjBtBh1D,EAoBnBi1D,aAAe,WACPj1D,EAAKk1D,UAETl1D,EAAKk1D,SAAU,EACf39B,WAAW,WACPrtB,OAAO7E,SAAS8vD,UACjB,OAvBHn1D,EAAKokB,MAAQ,CACT4wC,qBAAqB,GAJVh1D,mFASfuY,KAAiBmJ,GAAG,kCAAmCvhB,KAAK40D,kFAI5Dx8C,KAAiBpW,eAAe,kCAAmChC,KAAK40D,oEAgBnE,IACGC,EAAwB70D,KAAKikB,MAA7B4wC,oBACAr0C,EAAYxgB,KAAKqf,MAAjBmB,QAEFjc,EAAUswD,EACZl1C,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQkmB,QAAQ,YAAY1E,MAAM,UAAUpC,UAAWY,EAAQgC,KAAM1C,QAAS9f,KAAK80D,cAAnF,UAGA,KAEJ,OAAOn1C,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KAAG7gB,UAxCQwb,IAAMC,WA4CjBgB,OAvDA,CACXwB,KAAM,CACFuE,OAAQ,EACR1D,QAAS,OACT7T,MAAO,OACPutB,aAAc,EACd/a,MAAO,QACPizC,UAAW,SAgDJj0C,CAAmB2zC,IC3C5BO,uBACF,SAAAA,EAAY71C,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAk1D,IACfr1D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAo1D,GAAA/0D,KAAAH,KAAMqf,KA4CV81C,0BAA4B,SAAAx0D,GACxBd,EAAKyhB,eA9CUzhB,EAiDnBu1D,oCAAsC,SAAAz0D,GAClCd,EAAK0kB,SAAS,CACV8wC,qBAAsBj9C,KAAiBi9C,wBAnD5Bx1D,EAuDnBy1D,yBAA2B,SAAA30D,GACvBd,EAAK0kB,SAAS,CACVwsC,YAAY,EACZwE,aAAc50D,EAAOqG,OACrB61C,WAAY,QA3DDh9C,EA+DnBwkD,kBAAoB,WAChBxkD,EAAK21D,YAAYnoC,QAAQooC,eAhEV51D,EAmEnBgxD,aAAe,SAAA6E,GACX71D,EAAK0kB,SAAS,CACVwsC,WAAY2E,EACZH,aAAc,EACd1Y,WAAY,QAvEDh9C,EA2EnB+rD,oBAAsB,SAAC5kD,EAAQC,EAAW8pD,GAAe,IAC7C4E,EAAiB91D,EAAKwf,MAAtBs2C,aAERvhC,aAASptB,EAAQC,GAEjB0uD,EAAa3uD,EAAQC,GAErB,IAAMsuD,EAAexE,EAAalxD,EAAKokB,MAAMsxC,aAAe,EACtD1Y,EAAakU,EAAalxD,EAAKokB,MAAM44B,WAAa,KAExDh9C,EAAK0kB,SAAS,CACVwsC,WAAYA,EACZwE,aAAcA,EACd1Y,WAAYA,KAxFDh9C,EA4FnBiuC,YAAc,WACVjuC,EAAK0kB,SAAS,CACVwsC,YAAY,EACZwE,aAAc,EACd1Y,WAAY,QAhGDh9C,EAoGnB+1D,uBAAyB,SAAAl4C,GACrB7d,EAAK0kB,SAAS,CACVs4B,WAAYn/B,KAnGhB7d,EAAK21D,YAAcz1C,IAAMie,YAEzBn+B,EAAKokB,MAAQ,CACToxC,qBAAsBj9C,KAAiBi9C,qBACvCtE,YAAY,EACZwE,aAAc,EACd1Y,WAAY,MATDh9C,qFAaG+kB,EAAWC,GAC7B,OAAIA,EAAUwwC,uBAAyBr1D,KAAKikB,MAAMoxC,uBAI9CxwC,EAAUksC,aAAe/wD,KAAKikB,MAAM8sC,aAIpClsC,EAAU0wC,eAAiBv1D,KAAKikB,MAAMsxC,cAItC1wC,EAAUg4B,aAAe78C,KAAKikB,MAAM44B,yDAQxCzkC,KAAiBmJ,GAAG,oCAAqCvhB,KAAKo1D,qCAC9Dh9C,KAAiBmJ,GAAG,yBAA0BvhB,KAAKs1D,0BACnDl9C,KAAiBmJ,GAAG,0BAA2BvhB,KAAKm1D,0EAIpD/8C,KAAiBpW,eAAe,oCAAqChC,KAAKo1D,qCAC1Eh9C,KAAiBpW,eAAe,yBAA0BhC,KAAKs1D,0BAC/Dl9C,KAAiBpW,eAAe,0BAA2BhC,KAAKm1D,4DAgE3D,IACG30C,EAAYxgB,KAAKqf,MAAjBmB,QADHwD,EAEkEhkB,KAAKikB,MAApEoxC,EAFHrxC,EAEGqxC,qBAAsBtE,EAFzB/sC,EAEyB+sC,WAAYwE,EAFrCvxC,EAEqCuxC,aAAc1Y,EAFnD74B,EAEmD64B,WAExD,OACIl9B,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAWH,EAAQ8F,YAAa,UAAW,CAClDuvC,uBAAwBR,KAE5B11C,EAAAnf,EAAAkM,cAACopD,GAAD,CACI/E,WAAYA,EACZjxC,QAAS9f,KAAKqkD,kBACdyM,SAAU9wD,KAAK6wD,aACfkF,mBAAoB/1D,KAAK41D,yBAE7Bj2C,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAACspD,GAAD,CAAa33B,IAAKr+B,KAAKw1D,cACtBzE,GACGpxC,EAAAnf,EAAAkM,cAACupD,GAAD,CACIjvD,OAAQuuD,EACR73C,KAAMm/B,EACNkP,gBAAiB/rD,KAAK4rD,oBACtBpiC,QAASxpB,KAAK8tC,eAI1BnuB,EAAAnf,EAAAkM,cAACwpD,GAAD,cArIMl2C,cA+IPgB,OAnJA,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,GACbqnB,aAAYlG,KAkJJD,CAAmBk0C,mCC/H5BiB,uBACF,SAAAA,EAAY92C,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAm2D,IACft2D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAq2D,GAAAh2D,KAAAH,KAAMqf,KAOVsG,aAAe,WACX9jB,KAAgBgH,aAAa,CAAEC,QAAS,gCATzBjJ,EAYnBupC,aAAe,WACX,IAAIgtB,GAA0B,EADbzgD,GAAA,EAAAC,GAAA,EAAAC,OAAAvH,EAAA,IAEjB,QAAAwH,EAAAC,EAAkCtI,KAAauR,cAAc3J,SAA7DW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAhV,QAAAmV,MAAAP,GAAA,EAAuE,KAAA1T,EAAA6T,EAAAR,MAA5DtO,EAA4D/E,EAA5D+E,OAAQC,EAAoDhF,EAApDgF,UACT3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACV8xD,GAA0B,EAC1B,MAEJ,IAAK9xD,EAAQ+xD,6BAA8B,CACvCD,GAA0B,EAC1B,QAVS,MAAAjgD,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAcjBhW,EAAK0kB,SAAS,CACV+xC,kBAAkB,EAClBF,wBAAyBA,EACzBvqD,OAAQuqD,KA7BGv2D,EAiCnB02D,qBAAuB,WAAM,IAGrB7zD,EAFImJ,EAAWhM,EAAKokB,MAAhBpY,OAGFyB,EAAa,GAJMiJ,GAAA,EAAAC,GAAA,EAAAC,OAAAnI,EAAA,IAKzB,QAAAoI,EAAAC,EAAkClJ,KAAauR,cAAc3J,SAA7DW,OAAAC,cAAAM,GAAAG,EAAAC,EAAA5V,QAAAmV,MAAAK,GAAA,EAAuE,KAAA+0C,EAAA50C,EAAApB,MAA5DtO,EAA4DskD,EAA5DtkD,OAAQC,EAAoDqkD,EAApDrkD,UACfvE,EAAKsE,EACLsG,EAAW9D,KAAKvC,IAPK,MAAAkP,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAUzB5W,EAAK8lB,eAEL9jB,KAAgBgJ,KAAK,CACjB/B,QAAS,iBACT1C,QAAS1D,EACTkJ,YAAa0B,EACbzB,OAAQA,KAjDGhM,EAqDnB22D,mBAAqB,WACjB32D,EAAK0kB,SAAS,CAAE1Y,QAAShM,EAAKokB,MAAMpY,UAtDrBhM,EAyDnB42D,kBAAoB,WAChB52D,EAAK0kB,SAAS,CAAE+xC,kBAAkB,KA1DnBz2D,EA6DnB62D,cAAgB,WACZ,IAAIh0D,EACE4K,EAAa,GAFDqpD,GAAA,EAAAC,GAAA,EAAAC,OAAAvoD,EAAA,IAGlB,QAAAwoD,EAAAC,EAAkCtpD,KAAauR,cAAc3J,SAA7DW,OAAAC,cAAA0gD,GAAAG,EAAAC,EAAAh2D,QAAAmV,MAAAygD,GAAA,EAAuE,KAAAK,EAAAF,EAAAxhD,MAA5DtO,EAA4DgwD,EAA5DhwD,OAAQC,EAAoD+vD,EAApD/vD,UACfvE,EAAKsE,EACLsG,EAAW9D,KAAKvC,IALF,MAAAkP,GAAAygD,GAAA,EAAAC,EAAA1gD,EAAA,YAAAwgD,GAAA,MAAAI,EAAA3gD,QAAA2gD,EAAA3gD,SAAA,WAAAwgD,EAAA,MAAAC,GAQlBh3D,EAAK8lB,eAEL9jB,KAAgBgH,aAAa,CACzBC,QAAS,sBACTiyC,KAAM,CACF/zC,OAAQtE,EACR4K,WAAYA,MA3ELzN,EAgFnBo3D,YAAc,WACV,GAAwC,IAApCxpD,KAAauR,cAAc/S,KAA/B,CADgB,IAAAirD,EAGczpD,KAAauR,cAAc3J,SAAStU,OAAOuU,MAAjEtO,EAHQkwD,EAGRlwD,OAAQC,EAHAiwD,EAGAjwD,UAEhBpH,EAAK8lB,eAEL9jB,KAAgBgH,aAAa,CAAEC,QAAS,oBAAqB9B,OAAQA,EAAQC,UAAWA,MApFxFpH,EAAKokB,MAAQ,CACTqyC,kBAAkB,GAJPz2D,wEA0FV,IAAAuf,EACyBpf,KAAKqf,MAA3BmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EAAGqC,EADf0F,EACe1F,MADfsK,EAEyDhkB,KAAKikB,MAA3DqyC,EAFHtyC,EAEGsyC,iBAAkBF,EAFrBpyC,EAEqBoyC,wBAAyBvqD,EAF9CmY,EAE8CnY,OAE7C7E,EAASoR,KAAiBs8B,YAE5ByiB,GAAe,EANdC,GAAA,EAAAC,GAAA,EAAAC,OAAAhpD,EAAA,IAOL,QAAAipD,EAAAC,EAAkC/pD,KAAauR,cAAc3J,SAA7DW,OAAAC,cAAAmhD,GAAAG,EAAAC,EAAAz2D,QAAAmV,MAAAkhD,GAAA,EAAuE,KAAAK,EAAAF,EAAAjiD,MAA5DtO,EAA4DywD,EAA5DzwD,OAAQC,EAAoDwwD,EAApDxwD,UACT3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACV6yD,GAAe,EACf,MAEJ,IAAK7yD,EAAQozD,+BAAiCpzD,EAAQ+xD,6BAA8B,CAChFc,GAAe,EACf,QAfH,MAAAhhD,GAAAkhD,GAAA,EAAAC,EAAAnhD,EAAA,YAAAihD,GAAA,MAAAI,EAAAphD,QAAAohD,EAAAphD,SAAA,WAAAihD,EAAA,MAAAC,GAmBL,IAAIK,GAAiB,EAnBhBC,GAAA,EAAAC,GAAA,EAAAC,OAAAxpD,EAAA,IAoBL,QAAAypD,EAAAC,EAAkCvqD,KAAauR,cAAc3J,SAA7DW,OAAAC,cAAA2hD,GAAAG,EAAAC,EAAAj3D,QAAAmV,MAAA0hD,GAAA,EAAuE,KAAAK,EAAAF,EAAAziD,MAA5DtO,EAA4DixD,EAA5DjxD,OAAQC,EAAoDgxD,EAApDhxD,UACT3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACVqzD,GAAiB,EACjB,MAEJ,IAAKrzD,EAAQo3C,iBAAkB,CAC3Byb,GAAe,EACf,QA5BH,MAAAhhD,GAAA0hD,GAAA,EAAAC,EAAA3hD,EAAA,YAAAyhD,GAAA,MAAAI,EAAA5hD,QAAA4hD,EAAA5hD,SAAA,WAAAyhD,EAAA,MAAAC,GAgCL,IAAMI,EAAyB,IAAVx+C,GAAe4D,YAAgBtW,GAEpD,OACI2Y,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,mBAC3CqxC,GACGh4C,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUpC,UAAWY,EAAQ23C,WAAYr4C,QAAS9f,KAAK02D,eAChEh9C,GAAS,EAAIrC,EAAE,WAAf,GAAArM,OAA+BqM,EAAE,WAAjC,KAAArM,OAA+C0O,IAGvDy9C,GACGx3C,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUpC,UAAWY,EAAQ23C,WAAYr4C,QAAS9f,KAAKopC,cAChE1vB,GAAS,EAAIrC,EAAE,UAAf,GAAArM,OAA8BqM,EAAE,UAAhC,KAAArM,OAA6C0O,IAGrDw+C,GACGv4C,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUpC,UAAWY,EAAQ23C,WAAYr4C,QAAS9f,KAAKi3D,aAChE5/C,EAAE,UAGXsI,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,yBACfD,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUpC,UAAWY,EAAQ43C,YAAat4C,QAAS9f,KAAK2lB,cACjEtO,EAAE,YAGXsI,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACI2pB,mBAAoB,EACpBlgB,KAAMqsD,EACN9sC,QAASxpB,KAAKy2D,kBACdrsC,kBAAgB,uBAChBzK,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,uBAAhB,WACAid,EAAAnf,EAAAkM,cAAC4d,GAAA9pB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC6d,GAAA/pB,EAAD,KACe,IAAVkZ,EACK,6CADL,mCAAA1O,OAEwC0O,EAFxC,eAIJ08C,GACGz2C,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACI+tD,QACI5uC,EAAAnf,EAAAkM,cAAC2rD,GAAA73D,EAAD,CAAUkiB,QAAS7W,EAAQwW,SAAUriB,KAAKw2D,mBAAoBx0C,MAAM,YAExEglC,MACItrC,YAAc1U,GAAd,cAAAgE,OAAsC8R,YAAkB9V,IAAY,oBAKpF2Y,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAKy2D,kBAAmBz0C,MAAM,WAA/C,UAGArC,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAKu2D,qBAAsBv0C,MAAM,WAAlD,gBA/KIjC,IAAMC,YAkMnB4G,GALCC,YACZ7F,IA1MW,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChBq4D,WAAY,CACRpxC,OAAQ,mBACR4kB,SAAU,SAEdysB,YAAa,CACTrxC,OAAQ,mBACR4kB,SAAU,UAEXxkB,aAAYlG,KAiMI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQuvC,IC1LjBmC,eACF,SAAAA,EAAYj5C,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAs4D,IACfz4D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAw4D,GAAAn4D,KAAAH,KAAMqf,KA8DVk5C,8BAAgC,SAAA53D,GAC5B,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiBs8B,aACvC3wC,GACDA,EAAKrB,KAAO/B,EAAOyF,SAEvBvG,EAAKyhB,eApEUzhB,EAuEnB24D,8BAAgC,SAAA73D,GAC5Bd,EAAK0kB,SAAS,CAAEk0C,eAAgBhrD,KAAauR,cAAc/S,QAxE5CpM,EA2EnBmxC,qBAAuB,SAAArwC,GACnBd,EAAKyhB,eA5EUzhB,EA+EnBwzD,wBAA0B,SAAA1yD,GACtBd,EAAK0kB,SAAS,CAAEgvC,gBAAiB5yD,EAAOsjB,SAhFzBpkB,EAmFnByB,2BAA6B,SAAAX,GACzBd,EAAK0kB,SAAS,CAAEgrC,mBAAoB5uD,EAAOyB,uBApF5BvC,EAuFnBq4B,kBAAoB,SAAAv3B,GAChB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiBs8B,aACvC3wC,GACDA,EAAKrB,KAAO/B,EAAOyF,SAEvBvG,EAAKyhB,eA5FUzhB,EA+FnBs4C,mBAAqB,SAAAx3C,GACjB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiBs8B,aAC5C,GAAK3wC,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwI,EAAWb,KAAgBc,YAAYtW,EAAK6N,KAAK4H,gBACvD,GAAIY,GAAYA,EAAS+B,QACN/B,EAAS+B,QAAQ0nB,KAAK,SAAAp4B,GAAC,OAAIA,EAAEqD,UAAYnO,EAAOmO,WAE3DjP,EAAKyhB,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACGvd,EAAK6N,KAAK9C,UAAYnO,EAAOmO,SAC7BjP,EAAKyhB,gBAvHFzhB,EAiInB64D,uBAAyB,SAAA/3D,GACCyX,KAAiBs8B,cAEjB/zC,EAAOyF,SACzBvG,EAAKyhB,eArIMzhB,EAyInB81C,mBAAqB,SAAAh1C,GACjB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiBs8B,aACvC3wC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO+2B,YAAYh1B,IAEhD7C,EAAKyhB,eAlJMzhB,EAsJnB+1C,mBAAqB,SAAAj1C,GACjB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiBs8B,aACvC3wC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOqZ,WAAWtX,IAE9C7C,EAAKyhB,eA/JMzhB,EAmKnBuhD,2BAA6B,SAAAzgD,GACzB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiBs8B,aACvC3wC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO6Y,gBAEpC3Z,EAAKyhB,eA5KMzhB,EAgLnBwhD,2BAA6B,SAAA1gD,GACzB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiBs8B,aACvC3wC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOuZ,eAEnCra,EAAKyhB,eAzLMzhB,EA6LnBshD,qBAAuB,SAAAxgD,GACnB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiBs8B,aACvC3wC,KAGDA,EAAK6N,MACmB,oBAAvB7N,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACvD7N,EAAK6N,KAAK9C,UAAYnO,EAAOmO,SAE7BjP,EAAKyhB,gBAtMMzhB,EA0MnBk/C,gBAAkB,WACd,IAAM/3C,EAASoR,KAAiBs8B,YACnB9hC,IAAU3P,IAAI+D,IAG3BoR,KAAiBsvC,6BAA4B,IA/M9B7nD,EAkNnB84D,iBAAmB,WACf,IAAM3xD,EAASoR,KAAiBs8B,YACnB9hC,IAAU3P,IAAI+D,IAG3BoR,KAAiBwgD,WAAW5xD,IAvNbnH,EA0NnBg5D,SAAW,SAAAC,GAGP,OAAOzhD,EAFOxX,EAAKwf,MAAXhI,GAECyhD,GACJtuB,QAAQ,MAAO,IACfA,QAAQ,SAAK,KA5NlB3qC,EAAKokB,MAAQ,CACTsrC,mBAAoBn3C,KAAiB+3C,wBACrCoD,gBAAiBn7C,KAAiBi8C,sBALvBx0D,qFASG+kB,EAAWC,GAC7B,OAAIA,IAAc7kB,KAAKikB,QAInBW,EAAU3D,QAAUjhB,KAAKqf,MAAM4B,OAI/B2D,EAAUvN,IAAMrX,KAAKqf,MAAMhI,+CAQ/Be,KAAiBmJ,GAAG,wBAAyBvhB,KAAKqzD,yBAClDj7C,KAAiBmJ,GAAG,2BAA4BvhB,KAAKsB,4BACrD8W,KAAiBmJ,GAAG,qBAAsBvhB,KAAKgxC,sBAE/CvjC,KAAa8T,GAAG,8BAA+BvhB,KAAKw4D,+BACpD/qD,KAAa8T,GAAG,6BAA8BvhB,KAAKw4D,+BAEnD5lD,IAAU2O,GAAG,8BAA+BvhB,KAAKu4D,+BACjD3lD,IAAU2O,GAAG,kBAAmBvhB,KAAKk4B,mBACrCnpB,IAAUwS,GAAG,mBAAoBvhB,KAAKm4C,oBACtCvlC,IAAU2O,GAAG,uBAAwBvhB,KAAK04D,wBAC1C3pD,IAAUwS,GAAG,qBAAsBvhB,KAAKmhD,sBACxC5nC,KAAgBgI,GAAG,2BAA4BvhB,KAAKohD,4BACpDnnC,KAAgBsH,GAAG,2BAA4BvhB,KAAKqhD,4BACpD9nC,KAAgBgI,GAAG,mBAAoBvhB,KAAK21C,oBAC5C17B,KAAgBsH,GAAG,mBAAoBvhB,KAAK41C,mEAI5Cx9B,KAAiBpW,eAAe,wBAAyBhC,KAAKqzD,yBAC9Dj7C,KAAiBpW,eAAe,2BAA4BhC,KAAKsB,4BACjE8W,KAAiBpW,eAAe,qBAAsBhC,KAAKgxC,sBAE3DvjC,KAAazL,eAAe,8BAA+BhC,KAAKw4D,+BAChE/qD,KAAazL,eAAe,6BAA8BhC,KAAKw4D,+BAE/D5lD,IAAU5Q,eAAe,8BAA+BhC,KAAKu4D,+BAC7D3lD,IAAU5Q,eAAe,kBAAmBhC,KAAKk4B,mBACjDnpB,IAAU/M,eAAe,mBAAoBhC,KAAKm4C,oBAClDvlC,IAAU5Q,eAAe,uBAAwBhC,KAAK04D,wBACtD3pD,IAAU/M,eAAe,qBAAsBhC,KAAKmhD,sBACpD5nC,KAAgBvX,eAAe,2BAA4BhC,KAAKohD,4BAChEnnC,KAAgBjY,eAAe,2BAA4BhC,KAAKqhD,4BAChE9nC,KAAgBvX,eAAe,mBAAoBhC,KAAK21C,oBACxD17B,KAAgBjY,eAAe,mBAAoBhC,KAAK41C,qDAsKnD,IAAAx2B,EACkBpf,KAAKqf,MAApBmB,EADHpB,EACGoB,QAASnJ,EADZ+H,EACY/H,EADZ2M,EAE2DhkB,KAAKikB,MAA7DsrC,EAFHvrC,EAEGurC,mBAAoBgE,EAFvBvvC,EAEuBuvC,gBAAiBkF,EAFxCz0C,EAEwCy0C,eAE7C,GAAIA,EACA,OAAO94C,EAAAnf,EAAAkM,cAACqsD,GAAD,CAAer/C,MAAO++C,IAGjC,IAAMzxD,EAASoR,KAAiBs8B,YAC1B3wC,EAAO6O,IAAU3P,IAAI+D,GAErBgyD,EAAmB99C,YAAqBlU,GAC1C4T,EAAQmB,YAAa/U,GAAQ,EAAMqQ,GACnC6pC,EAAW3mC,YAAgBvT,GAAQ,GACnCiyD,GAAwB,EAE5B,GAAI1F,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACD34C,EAAQ5a,KAAK64D,SAAS,cACtB3X,EAAW,GACX+X,GAAwB,EACxB,MACJ,IAAK,mCACDr+C,EAAQ5a,KAAK64D,SAAS,uBACtB3X,EAAW,GACX+X,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACDr+C,EAAQ5a,KAAK64D,SAAS,YACtB3X,EAAW,GACX+X,GAAwB,EACxB,MACJ,IAAK,mCACDr+C,EAAQ5a,KAAK64D,SAAS,uBACtB3X,EAAW,GACX+X,GAAwB,OAG7B,GAAI1J,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACD30C,EAAQ5a,KAAK64D,SAAS,eACtB3X,EAAW,GACX+X,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACDr+C,EAAQ5a,KAAK64D,SAAS,WACtB3X,EAAW,GACX+X,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACDr+C,EAAQ5a,KAAK64D,SAAS,WACtB3X,EAAW,GACX+X,GAAwB,OAIhCr+C,EAAQ5a,KAAK64D,SAAS,WACtB3X,EAAW,GACX+X,GAAwB,EAG5B,OACIt5C,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,mBAC5C3G,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,gBAAiB,OAAQ5c,EAAO,iBAAmB,kBACzE+b,QAAS9f,KAAK++C,iBACdp/B,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,yBAAyBhF,GACxCq+C,GACGt5C,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,mBAAhB,KACAD,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,mBAAhB,KACAD,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,mBAAhB,MAGRD,EAAAnf,EAAAkM,cAAA,QACIkT,UAAWe,IAAW,sBAAD7gB,OAAAumB,EAAA,EAAAvmB,CAAA,GAChB0gB,EAAQ04C,wBAA0BF,KAEtC9X,GAELvhC,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,wBAEnB7b,GACG4b,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIof,UAAWY,EAAQ24C,wBACnBnyB,aAAW,SACXlnB,QAAS9f,KAAK24D,kBACdh5C,EAAAnf,EAAAkM,cAAC6kD,GAAA/wD,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC0sD,GAAD,CAAgBra,gBAAiB/+C,KAAK++C,2BA7UzC/+B,aA0VN4G,GALCC,YACZQ,cACArG,IA7WW,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChBsvC,OAAQ,CACJroB,OAAQ,QAEZk5B,eAAgB,CACZl5B,OAAQ,qBAEZ0pC,iBAAkB,CACd1pC,OAAQ,kBAEZoyC,wBAAyB,CACrBpyC,OAAQ,kBAEZsyC,eAAgB,CACZtyC,OAAQ,kBAEZmyC,wBAAyB,CACrBl3C,MAAOf,EAAM2b,QAAQC,QAAQ+jB,KAAO,eAErCz5B,aAAYlG,KA0VI,CAAEmG,WAAW,IAGrBR,CAAQ0xC,2MChWjBgB,sNACFr1C,MAAQ,CACJmiB,SAAU,KACV9wB,MAAOya,KAAYQ,OACnBgpC,UAAWxpC,KAAYQ,OACvBipC,UAAU,EACVC,YAAY,EACZC,WAAW,KAWfC,0BAA4B,SAAAh5D,GAAU,IAC1B4vB,EAAuB5vB,EAAvB4vB,OAAQqpC,EAAej5D,EAAfi5D,gBAEGtrD,IAAfsrD,EACA/5D,EAAK0kB,SAAS,CAAEjP,MAAOib,IAEvB1wB,EAAK0kB,SAAS,CAAEjP,MAAOib,EAAQgpC,UAAWK,OAIlDC,kBAAoB,SAAAzzB,GAChBvmC,EAAK0kB,SAAS,CAAE6hB,SAAUA,OAG9B0zB,mBAAqB,WAAM,IAAA91C,EACqBnkB,EAAKokB,MAAzCu1C,EADex1C,EACfw1C,SAAUC,EADKz1C,EACLy1C,WAAYC,EADP11C,EACO01C,UAE1BF,GACAC,GACAC,GAEJ75D,EAAK0kB,SAAS,CAAE6hB,SAAU,UAG9B2zB,iBAAmB,SAAC1uD,EAAO2uD,GACvBn6D,EAAK0kB,SAAS,CAAEk1C,YAAY,IAExBO,GACAn6D,EAAKg6D,kBAAkBxuD,EAAMi7B,kBAIrC2zB,iBAAmB,WACfp6D,EAAK0kB,SAAS,CAAEk1C,YAAY,GAAS,WACjC55D,EAAKi6D,0BAIbI,sBAAwB,WACpBr6D,EAAK0kB,SAAS,CAAEm1C,WAAW,GAAS,WAChC75D,EAAKi6D,0BAIbK,iBAAmB,WAAM,IAAAh6B,EACQtgC,EAAKokB,MAA1B3O,EADa6qB,EACb7qB,MAAOikD,EADMp5B,EACNo5B,UACTa,EAAY9kD,EAAQ,EAAI,EAAIikD,GAAahnC,IAE/C1wB,KAAgBgH,aAAa,CACzBC,QAAS,0BACTynB,OAAQ6pC,OAIhB7T,aAAe,SAACl7C,EAAOiK,GAAU,IAAA8qB,EACGvgC,EAAKokB,MAA7Bu1C,EADqBp5B,EACrBo5B,SAAUD,EADWn5B,EACXm5B,UAEdC,EACA33D,KAAgBgH,aAAa,CACzBC,QAAS,0BACTynB,OAAQjb,IAGZzT,KAAgBgH,aAAa,CACzBC,QAAS,0BACT8wD,WAAYtkD,EAAQ,EAAIA,EAAQikD,EAChChpC,OAAQjb,OAKpB+kD,gBAAkB,WAAM,IACZ/kD,EAAUzV,EAAKokB,MAAf3O,MAERzV,EAAK0kB,SAAS,CACVi1C,UAAU,EACVD,UAAWjkD,OAInBglD,cAAgB,WAAM,IAAA75B,EACW5gC,EAAKokB,MAA1B3O,EADUmrB,EACVnrB,MAAOikD,EADG94B,EACH84B,UAEf15D,EAAK0kB,SACD,CACIi1C,UAAU,EACVD,UAAWjkD,EAAQ,EAAIA,EAAQikD,GAEnC,WACI15D,EAAKi6D,0BAKjBS,cAAgB,SAAAjlD,GACZ,OAAc,IAAVA,EACOqK,EAAAnf,EAAAkM,cAAC8tD,GAAAh6D,EAAD,CAAeuhB,SAAS,UAG/BzM,EAAQ,IACDqK,EAAAnf,EAAAkM,cAAC+tD,GAAAj6D,EAAD,CAAgBuhB,SAAS,UAGhCzM,EAAQ,GACDqK,EAAAnf,EAAAkM,cAACguD,GAAAl6D,EAAD,CAAgBuhB,SAAS,UAG7BpC,EAAAnf,EAAAkM,cAACiuD,GAAAn6D,EAAD,CAAcuhB,SAAS,8FAlH9BgO,KAAYxO,GAAG,0BAA2BvhB,KAAK25D,0EAI/C5pC,KAAY/tB,eAAe,0BAA2BhC,KAAK25D,4DAiHtD,IAAAnvD,EAAAxK,KACGwgB,EAAYxgB,KAAKqf,MAAjBmB,QADHkgB,EAEuB1gC,KAAKikB,MAAzBmiB,EAFH1F,EAEG0F,SAAU9wB,EAFborB,EAEaprB,MACZrL,EAAOgT,QAAQmpB,GAErB,OACIzmB,EAAAnf,EAAAkM,cAAA,OACIkuD,aAAc,SAAA5wC,GAAC,OAAIxf,EAAKuvD,iBAAiB/vC,GAAG,IAC5C6wC,aAAc76D,KAAKi6D,iBACnBttD,MAAO,CACHsW,SAAU,WACVqU,WAAY,gBAEhB3X,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQumB,WAAY/kB,MAAM,UAAUlC,QAAS9f,KAAKm6D,kBACpEn6D,KAAKu6D,cAAcjlD,IAExBqK,EAAAnf,EAAAkM,cAAA,OACIC,MAAO,CACHsW,SAAU,WACVqU,WAAY,cACZwjC,WAAY7wD,EAAO,UAAY,SAC/B4sB,OAAQ,GAEZ+jC,aAAc,SAAA5wC,GAAC,OAAIxf,EAAKuvD,iBAAiB/vC,GAAG,IAC5C6wC,aAAc76D,KAAKk6D,uBACnBv6C,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAWH,EAAQ8F,YAAa9F,EAAQgC,MACnD7V,MAAO,CACHouD,UAAW,EACXC,YAAa,EACb7zC,YAAa,UAEjBxH,EAAAnf,EAAAkM,cAAC4pC,GAAA91C,EAAD,CACIggB,QAAS,CAAEy6C,UAAWz6C,EAAQ+1B,OAAQE,MAAOj2B,EAAQi2B,OACrDC,IAAK,EACL/vB,IAAK,EACLrR,MAAOA,EACP+M,SAAUriB,KAAKumD,aACf2U,YAAal7D,KAAKq6D,gBAClBc,UAAWn7D,KAAKs6D,cAChB1wC,UAAQ,cAxKT7J,IAAMC,YAiLlBgB,OArMA,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChBinC,WAAY,CACR1jB,QAAS,GAEbb,KAAM,CACF5V,QAAS,OACT8C,OAAQ,IACRF,MAAO,GACP6T,QAAS,SACTiU,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQtF,WAAW4O,QAAU,WAEnFqQ,OAAQ,CACJlzB,QAAS,UAEbozB,MAAO,CACH2kB,QAAS,IAEVj0C,aAAYlG,KAoLe,CAAEmG,WAAW,GAAhCpG,CAAwCs4C,8CCtMjD+B,eACF,SAAAA,EAAYh8C,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAq7D,IACfx7D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAu7D,GAAAl7D,KAAAH,KAAMqf,KAiBVi8C,0BAA4B,SAAA36D,GAAU,IAC1B8vB,EAAW9vB,EAAX8vB,OAER5wB,EAAK0kB,SAAS,CAAEkM,YArBD5wB,EAwBnB07D,aAAe,WAAM,IACT9qC,EAAW5wB,EAAKokB,MAAhBwM,OAEJ+qC,EAAa/qC,EACjB,OAAQA,GACJ,KAAKf,KAAWE,KACZ4rC,EAAa9rC,KAAWG,OACxB,MAEJ,KAAKH,KAAWG,OACZ2rC,EAAa9rC,KAAWI,WACxB,MAEJ,KAAKJ,KAAWI,WACZ0rC,EAAa9rC,KAAWE,KAKhC/tB,KAAgBgH,aAAa,CACzBC,QAAS,0BACT2nB,OAAQ+qC,KA7CG37D,EAiDnB47D,QAAU,SAAAhrC,GACN,OAAQA,GACJ,KAAKf,KAAWE,KAGhB,KAAKF,KAAWG,OACZ,OAAOlQ,EAAAnf,EAAAkM,cAACgvD,GAAAl7D,EAAD,CAAYuhB,SAAS,UAEhC,KAAK2N,KAAWI,WACZ,OAAOnQ,EAAAnf,EAAAkM,cAACivD,GAAAn7D,EAAD,CAAeuhB,SAAS,UAEnC,QACI,OAAOpC,EAAAnf,EAAAkM,cAACgvD,GAAAl7D,EAAD,CAAYuhB,SAAS,YA7DrB,IAGP0O,EAAWV,KAAXU,OAHO,OAKf5wB,EAAKokB,MAAQ,CACTwM,UANW5wB,mFAWfkwB,KAAYxO,GAAG,0BAA2BvhB,KAAKs7D,0EAI/CvrC,KAAY/tB,eAAe,0BAA2BhC,KAAKs7D,4DAmDtD,IACG96C,EAAYxgB,KAAKqf,MAAjBmB,QACAiQ,EAAWzwB,KAAKikB,MAAhBwM,OAER,OACI9Q,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIof,UAAWY,EAAQumB,WACnB/kB,MAAOyO,IAAWf,KAAWE,KAAO,UAAY,UAChD9P,QAAS9f,KAAKu7D,cACbv7D,KAAKy7D,QAAQhrC,WA5EH1Q,IAAMC,WAkFlBgB,OAxFA,CACX+lB,WAAY,CACR1jB,QAAS,IAsFFrC,CAAmBq6C,yBCnF5BO,eACF,SAAAA,EAAYv8C,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA47D,IACf/7D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA87D,GAAAz7D,KAAAH,KAAMqf,KAiBVw8C,2BAA6B,SAAAl7D,GAAU,IAC3B+vB,EAAY/vB,EAAZ+vB,QAER7wB,EAAK0kB,SAAS,CAAEmM,aArBD7wB,EAwBnBi8D,cAAgB,WAAM,IACVprC,EAAY7wB,EAAKokB,MAAjByM,QAER7uB,KAAgBgH,aAAa,CACzBC,QAAS,2BACT4nB,SAAUA,KA7BC,IAGPA,EAAYX,KAAZW,QAHO,OAKf7wB,EAAKokB,MAAQ,CACTyM,WANW7wB,mFAWfkwB,KAAYxO,GAAG,2BAA4BvhB,KAAK67D,2EAIhD9rC,KAAY/tB,eAAe,2BAA4BhC,KAAK67D,6DAkBvD,IACGr7C,EAAYxgB,KAAKqf,MAAjBmB,QACAkQ,EAAY1wB,KAAKikB,MAAjByM,QAER,OACI/Q,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIof,UAAWY,EAAQumB,WACnB/kB,MAAQ0O,EAAsB,UAAZ,UAClB5Q,QAAS9f,KAAK87D,eACdn8C,EAAAnf,EAAAkM,cAACqvD,GAAAv7D,EAAD,CAAauhB,SAAS,kBA3CVhC,IAAMC,WAiDnBgB,OAvDA,CACX+lB,WAAY,CACR1jB,QAAS,IAqDFrC,CAAmB46C,IClD5BI,eACF,SAAAA,EAAY38C,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAg8D,IACfn8D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAk8D,GAAA77D,KAAAH,KAAMqf,KAiBV48C,gCAAkC,SAAAt7D,GAAU,IAChCgwB,EAAiBhwB,EAAjBgwB,aAER9wB,EAAK0kB,SAAS,CAAEoM,kBArBD9wB,EAwBnBq8D,mBAAqB,WAAM,IAGjBC,EAFmBt8D,EAAKokB,MAAtB0M,eAGa2B,IAA6B8pC,IAA2B9pC,IAE7EzwB,KAAgBgH,aAAa,CACzBC,QAAS,gCACT6nB,aAAcwrC,KAhCH,IAGPxrC,EAAiBZ,KAAjBY,aAHO,OAKf9wB,EAAKokB,MAAQ,CACT0M,gBANW9wB,mFAWfkwB,KAAYxO,GAAG,gCAAiCvhB,KAAKi8D,gFAIrDlsC,KAAY/tB,eAAe,gCAAiChC,KAAKi8D,kEAqB5D,IACGz7C,EAAYxgB,KAAKqf,MAAjBmB,QACAmQ,EAAiB3wB,KAAKikB,MAAtB0M,aAER,OACIhR,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIof,UAAWY,EAAQumB,WACnB/kB,MAAO2O,EAAe2B,IAA6B,UAAY,UAC/DxS,QAAS9f,KAAKk8D,oBACdv8C,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,+BAAf,cA9CiBG,IAAMC,WAoDxBgB,OAzDA,CACX+lB,WAAY,CACR1jB,QAAS,IAuDFrC,CAAmBg7C,ICdnBK,eA7CX,SAAAA,EAAYh9C,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAq8D,IACfx8D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAu8D,GAAAl8D,KAAAH,KAAMqf,KAiBV6gB,wBAA0B,SAAAv/B,GAAU,IACxBswB,EAAgBtwB,EAAhBswB,YAERpxB,EAAK0kB,SAAS,CACV0M,YAAaA,EACbsP,kBAAmBD,aAAkB7b,KAAKC,MAAMuM,GAAe,OAvBpDpxB,EA2BnBogC,cAAgB,SAAChP,EAAaD,GAGHsP,aAAkB7b,KAAKC,MAAMsM,GAAY,IAKhE,OAJ0BsP,aAAkB7b,KAAKC,MAAMuM,GAAe,KA5BtEpxB,EAAKokB,MAAQ,CACTgN,YAAa,EACbD,SAAU,EACVgP,WAAYngC,EAAKogC,cAAc,EAAG,IANvBpgC,mFAWfkwB,KAAYxO,GAAG,wBAAyBvhB,KAAKkgC,wEAI7CnQ,KAAY/tB,eAAe,wBAAyBhC,KAAKkgC,0DAuBpD,IACGK,EAAsBvgC,KAAKikB,MAA3Bsc,kBAER,OAAO5gB,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KAAGmb,UA1CCxgB,IAAMC,oBCanBs8C,uBACF,SAAAA,EAAYj9C,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAs8D,IACfz8D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAw8D,GAAAn8D,KAAAH,KAAMqf,KA0BVk9C,eAAiB,WACb,IAAMhiC,EAAO16B,EAAKosD,QAAQ5+B,QAC1B,GAAKkN,EAAL,CAFmB,IAIXtzB,EAJWnH,OAAAowD,GAAA,EAAApwD,QAAAowD,GAAA,EAAApwD,CAAAD,IAIXoH,UACR,GAAKA,EAAL,CAEA,IAAM5D,EAAOxD,EAAK28D,WAAWv5D,IAAIgE,GACjC,GAAK5D,EAAL,CAEA,IAAMukC,EAAO60B,eAAqBp5D,GAC7BukC,IAELrN,EAAKiO,UAAYZ,EAAK80B,UAAY,QAxCnB78D,EAyDnB88D,kCAAoC,SAAAh8D,GAAU,IAClCi8D,EAASj8D,EAATi8D,KAEJA,EACA/8D,EAAK0kB,SACD,CACIs4C,kBAAmBD,GAEvB,WACI/8D,EAAKi9D,YAIbj9D,EAAK0kB,SACD,CACIs4C,kBAAmBD,GAEvB,WACI/8D,EAAKk9D,cA3EFl9D,EAiFnB2/B,0BAA4B,SAAA7+B,GAAU,IAC1BqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UAEhBpH,EAAKmH,OAASA,EACdnH,EAAKoH,UAAYA,GArFFpH,EAwFnBm9D,mCAAqC,SAAAr8D,GAAU,IAAAs8D,EAAAn9D,OAAAowD,GAAA,EAAApwD,QAAAowD,GAAA,EAAApwD,CAAAD,IACnCmH,EADmCi2D,EACnCj2D,OAAQC,EAD2Bg2D,EAC3Bh2D,UAEZtG,EAAOqG,SAAWA,GAAUrG,EAAOsG,YAAcA,GACjDpH,EAAK0kB,SAAS,CACV4L,SAAU,QA7FHtwB,EAkGnBq9D,4BAA8B,SAAAv8D,GAAU,IAAAw8D,EAAAr9D,OAAAowD,GAAA,EAAApwD,QAAAowD,GAAA,EAAApwD,CAAAD,IAC5BmH,EAD4Bm2D,EAC5Bn2D,OAAQC,EADoBk2D,EACpBl2D,UACRkpB,EAAaxvB,EAAbwvB,SAEJnpB,IAAWmpB,EAASnpB,QAAUC,IAAckpB,EAASlpB,WACrDpH,EAAK0kB,SAAS,CACV4L,SAAUA,KAxGHtwB,EA6GnBi9D,QAAU,WACNM,aAAav9D,EAAKw9D,aAElBx9D,EAAKw9D,YAAcjmC,WAAW,WAAM,IAAApT,EACcnkB,EAAKokB,MAA3Cq5C,EADwBt5C,EACxBs5C,eAAgBT,EADQ74C,EACR64C,kBACxBh9D,EAAK0kB,SAAS,CACVta,KAAMqzD,GAAkBT,KAE7B,MArHYh9D,EAwHnBk9D,SAAW,WACPK,aAAav9D,EAAKk+C,SAElBl+C,EAAKk+C,QAAU3mB,WAAW,WAAM,IAAA+I,EACkBtgC,EAAKokB,MAA3Cq5C,EADoBn9B,EACpBm9B,eAAgBT,EADI18B,EACJ08B,kBACxBh9D,EAAK0kB,SAAS,CACVta,KAAMqzD,GAAkBT,KAE7B,MAhIYh9D,EAmInBk6D,iBAAmB,WACfl6D,EAAK0kB,SAAS,CACVs4C,mBAAmB,EACnB5yD,MAAM,KAtIKpK,EA0InBo6D,iBAAmB,WACfp6D,EAAK0kB,SACD,CACIs4C,mBAAmB,GAEvB,WACIh9D,EAAKk9D,cAhJEl9D,EAqJnBmsD,aAAe,WACX,IAAMzxB,EAAO16B,EAAKosD,QAAQ5+B,QACrBkN,IAEkB,IAAnBA,EAAKiO,UACL3mC,KAAgBgH,aAAa,CACzBC,QAAS,kCAENyxB,EAAKkO,eAAiBlO,EAAKiO,UAAYjO,EAAKqqB,cACnD/iD,KAAgBgH,aAAa,CACzBC,QAAS,oCA5JjBjJ,EAAKosD,QAAUlsC,IAAMie,YACrBn+B,EAAK28D,WAAa,IAAItzD,IAJP,IAMP5E,EAAsByrB,KAAtBzrB,QAAS6rB,EAAaJ,KAAbI,SANF,OAQftwB,EAAKmH,OAAS1C,EAAUA,EAAQ8B,QAAU,EAC1CvG,EAAKoH,UAAY3C,EAAUA,EAAQ5B,GAAK,EAExC7C,EAAKokB,MAAQ,CACTha,MAAM,EACNqzD,gBAAgB,EAChBT,mBAAmB,EACnB1sC,SAAUA,GAfCtwB,kFAmBAmlB,EAAWC,EAAWC,GAAU,IACvCjb,EAASjK,KAAKikB,MAAdha,MAEHgb,EAAUhb,MAAQA,GACnBjK,KAAKu8D,6DAqBTxsC,KAAYxO,GAAG,0BAA2BvhB,KAAKw/B,2BAC/CzP,KAAYxO,GAAG,4BAA6BvhB,KAAKk9D,6BACjDntC,KAAYxO,GAAG,mCAAoCvhB,KAAKg9D,oCACxDjtC,KAAYxO,GAAG,kCAAmCvhB,KAAK28D,kFAIvD5sC,KAAY/tB,eAAe,0BAA2BhC,KAAKw/B,2BAC3DzP,KAAY/tB,eAAe,4BAA6BhC,KAAKk9D,6BAC7DntC,KAAY/tB,eAAe,mCAAoChC,KAAKg9D,oCACpEjtC,KAAY/tB,eAAe,kCAAmChC,KAAK28D,oEA8G9D,IAAAnyD,EAAAxK,KACGwgB,EAAYxgB,KAAKqf,MAAjBmB,QADH4f,EAGsBpgC,KAAKikB,MAAxBha,EAHHm2B,EAGGn2B,KAAMkmB,EAHTiQ,EAGSjQ,SACd,IAAKlmB,EAAM,OAAO,KAClB,IAAKkmB,EAAU,OAAO,KALjB,IAOG5iB,EAAa4iB,EAAb5iB,SACR,OAAKA,EACDA,EAASvH,QAAU,EAAU,MAEjChG,KAAKw8D,WAAWv9C,QAGZU,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,YACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,mBAAoBH,EAAQgC,KAAMhC,EAAQ8F,cACjE3G,EAAAnf,EAAAkM,cAAA,OACI2xB,IAAKr+B,KAAKisD,QACVrsC,UAAU,iBACVg7C,aAAc56D,KAAK+5D,iBACnBc,aAAc76D,KAAKi6D,iBACnB7M,SAAUptD,KAAKgsD,cACd77B,EAAS5iB,SACLgwD,MAAM,GACNC,UACAhwD,IAAI,SAAA/B,GAAC,OACFkU,EAAAnf,EAAAkM,cAAA,OAAK4K,IAAK7L,EAAE/I,GAAI27B,IAAK,SAAAkQ,GAAE,OAAI/jC,EAAKgyD,WAAWv7D,IAAIwK,EAAE/I,GAAI6rC,IAAK3uB,UAAU,iBAC/DmM,aAAStgB,EAAG,kBAAM6T,aAAU7T,EAAErF,QAASqF,EAAE/I,aAnBhD,YA7KPqd,IAAMC,YA0MdgB,OAjNA,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChB0iB,KAAM,CACF8U,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQtF,WAAW4O,QAAU,YAEhF/e,aAAYlG,KA6MJD,CAAmBs7C,ICvL5BmB,uBACF,SAAAA,EAAYp+C,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAy9D,IACf59D,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA29D,GAAAt9D,KAAAH,KAAMqf,KA6EV48C,gCAAkC,SAAAt7D,GAAU,IAChCgwB,EAAiBhwB,EAAjBgwB,aAEF6B,EAAS3yB,EAAKo9B,SAAS5P,QACxBmF,IAELA,EAAO7B,aAAeA,IApFP9wB,EAuFnB85D,0BAA4B,SAAAh5D,GAAU,IAC1B4vB,EAAW5vB,EAAX4vB,OAEFiC,EAAS3yB,EAAKo9B,SAAS5P,QACxBmF,IAELA,EAAOjC,OAASA,IA7FD1wB,EAgGnB69B,iCAAmC,SAAA/8B,GAC/Bd,EAAK69D,mBAAqBzgD,QAAQ7E,KAAiBulB,qBAjGpC99B,EAoGnB89D,+BAAiC,SAAAh9D,GAC7Bd,EAAK69D,oBAAqB,GArGX79D,EAwGnB+9D,+BAAiC,SAAAj9D,GAC7Bd,EAAK69D,oBAAqB,GAzGX79D,EA4GnBg+D,8BAAgC,SAAAl9D,GAC5Bd,EAAK69D,oBAAqB,EAE1B,IAAMlrC,EAAS3yB,EAAKo9B,SAAS5P,QACxBmF,GAELA,EAAO+K,SAlHQ19B,EAqHnBi+D,iBAAmB,SAAC58D,EAAMoD,GAAY,IAC1B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB7C,EAAK0kB,SACD,CACI/C,IAAK3hB,EAAKk+D,YAAYz5D,IAE1B,WACI,IAAMkuB,EAAS3yB,EAAKo9B,SAAS5P,QACzBmF,GACI3yB,EAAK69D,qBACLlrC,EAAO+K,QAEP17B,KAAgBgH,aAAa,CACzBC,QAAS,yBACT9B,OAAQZ,EACRa,UAAWvE,QArIhB7C,EA6InBm+D,wBAA0B,SAAAr9D,GAAU,IACxBqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UACR3C,EAAYzE,EAAKokB,MAAjB3f,QAER,GAAKA,EAAL,CAJgC,IAMxB8B,EAAyB9B,EAAzB8B,QAAS1D,EAAgB4B,EAAhB5B,GAAI6B,EAAYD,EAAZC,QACrB,GAAKA,GACDyC,IAAWZ,GAAWa,IAAcvE,EAExC,OAAQ6B,EAAQ,UACZ,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAkCW,EAAlCX,MAAOc,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAE3B,GAAIb,EAAO,CACP,IAAMxD,EAAOwD,EAAMA,MACfxD,GACArB,EAAKi+D,iBAAiB58D,EAAMoD,GAIpC,GAAIkB,EAAY,KACJ6B,EAAU7B,EAAV6B,MACJA,GACAxH,EAAKi+D,iBAAiBz2D,EAAO/C,GAIrC,GAAIiB,EAAY,KACJD,EAAUC,EAAVD,MACJA,GACAzF,EAAKi+D,iBAAiBx4D,EAAOhB,IAKzC,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MACR,GAAIA,EAAO,CACP,IAAMxD,EAAOwD,EAAMA,MACfxD,GACArB,EAAKi+D,iBAAiB58D,EAAMoD,GAIpC,MAEJ,IAAK,mBAAoB,IACbkB,EAAejB,EAAfiB,WACR,GAAIA,EAAY,KACJ6B,EAAU7B,EAAV6B,MACJA,GACAxH,EAAKi+D,iBAAiBz2D,EAAO/C,GAIrC,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WACR,GAAIA,EAAY,KACJD,EAAUC,EAAVD,MACJA,GACAzF,EAAKi+D,iBAAiBx4D,EAAOhB,OAhN9BzE,EAyNnBq9D,4BAA8B,SAAAv8D,GAAU,IAC5BwvB,EAAaxvB,EAAbwvB,SACAnpB,EAAsBmpB,EAAtBnpB,OAAQC,EAAckpB,EAAdlpB,UACR3C,EAAYzE,EAAKokB,MAAjB3f,QAEJA,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,GACxDpH,EAAK0kB,SAAS,CAAE4L,SAAUA,KA/NftwB,EAmOnBo+D,yBAA2B,SAAAt9D,GACvBd,EAAK0kB,SAAS,CACVjgB,QAAS,KACT6rB,SAAU,KACVS,SAAS,EACTpP,IAAK,QAxOM3hB,EA4OnB2/B,0BAA4B,SAAA7+B,GAAU,IAC1BqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UADkB+c,EAETnkB,EAAKokB,MAAtB3f,EAF0B0f,EAE1B1f,QAASkd,EAFiBwC,EAEjBxC,IAEjB,GAAIld,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,GACxD,GAAIua,EAAK,CACL,IAAMgR,EAAS3yB,EAAKo9B,SAAS5P,QACzBmF,IACIA,EAAO0rC,OACP1rC,EAAO8K,OAEP9K,EAAO+K,cAIhB,CACH,IAAM/b,EAAM3hB,EAAKk+D,YAAYhuC,KAAYzrB,SACnCssB,EAAU3T,QAAQuE,GACPuO,KAAYI,SAC7BtwB,EAAK0kB,SACD,CACIjgB,QAASyrB,KAAYzrB,QACrB6rB,SAAUJ,KAAYI,SACtBS,QAASA,EACTpP,IAAKA,GAET,WACI,IAAMgR,EAAS3yB,EAAKo9B,SAAS5P,QACzBmF,IACAA,EAAOvB,YAAcpxB,EAAKqkB,UACtBrkB,EAAK69D,oBACLlrC,EAAO+K,aA3QZ19B,EAqRnBs+D,WAAa,WACTt8D,KAAgBgH,aAAa,CACzBC,QAAS,2BAvREjJ,EA2RnBu+D,WAAa,WAAM,IACP95D,EAAYzE,EAAKokB,MAAjB3f,QACHA,GAELzC,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,MAlSR7C,EAsSnBw+D,WAAa,WACTx8D,KAAgBgH,aAAa,CACzBC,QAAS,2BAxSEjJ,EA4SnBk+D,YAAc,SAAAz5D,GACV,GAAIA,EAAS,KACDC,EAAYD,EAAZC,QACR,GAAIA,EAAS,KACDG,EAA4CH,EAA5CG,MAAOc,EAAqCjB,EAArCiB,WAAYD,EAAyBhB,EAAzBgB,WAAYF,EAAad,EAAbc,SAEvC,GAAIX,EAAO,CACP,IAAMxD,EAAOwD,EAAMA,MACnB,GAAIxD,EACA,OAAOkT,YAAOlT,GAItB,GAAIsE,EAAY,KACJ6B,EAAU7B,EAAV6B,MACR,GAAIA,EACA,OAAO+M,YAAO/M,GAItB,GAAI9B,EAAY,KACJD,EAAUC,EAAVD,MACR,GAAIA,EACA,OAAO8O,YAAO9O,GAItB,GAAID,EAAU,CACV,GAAIA,EAASX,MAAO,CAChB,IAAMxD,EAAOmE,EAASX,MAAMA,MAC5B,GAAIxD,EACA,OAAOkT,YAAOlT,GAItB,GAAImE,EAASG,WAAY,KACb6B,EAAUhC,EAASG,WAAnB6B,MACR,GAAIA,EACA,OAAO+M,YAAO/M,GAItB,GAAIhC,EAASE,WAAY,KACbD,EAAUD,EAASE,WAAnBD,MACR,GAAIA,EACA,OAAO8O,YAAO9O,MAOlC,MAAO,IAhWQzF,EAmWnBy+D,YAAc,WAAqB,IAApBvtC,IAAoBrvB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACvB4C,EAAYzE,EAAKokB,MAAjB3f,QACHA,IAELzC,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBquB,SAAUA,IAGdlxB,EAAK0kB,SACD,GAKA,WACI1iB,KAAgBgH,aAAa,CACzBC,QAAS,uBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBquB,SAAUA,QAzXPlxB,EA+XnB0+D,iBAAmB,WACf1+D,EAAKy+D,aAAY,IAhYFz+D,EAmYnBiuC,YAAc,WACV,IAAMtb,EAAS3yB,EAAKo9B,SAAS5P,QACzBmF,GACAA,EAAO+K,QAGX19B,EAAKy+D,aAAY,IAzYFz+D,EA4YnB2+D,iBAAmB,WAAM,IACbl6D,EAAYzE,EAAKokB,MAAjB3f,QACR,GAAKA,EAAL,CAEA,IAAMkuB,EAAS3yB,EAAKo9B,SAAS5P,QACxBmF,IAEL3yB,EAAK0kB,SAAS,CACV0M,YAAauB,EAAOvB,YACpBsP,kBAAmBD,aAAkB7b,KAAKC,MAAM8N,EAAOvB,aAAe,MAG1EpvB,KAAgBgH,aAAa,CACzBC,QAAS,wBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBsuB,SAAUwB,EAAOxB,SACjBC,YAAauB,EAAOvB,YACpBC,UAAWzY,KAAKI,WA9ZLhZ,EAkanBshC,cAAgB,WAAM,IACV78B,EAAYzE,EAAKokB,MAAjB3f,QACR,GAAKA,EAAL,CAEA,IAAMkuB,EAAS3yB,EAAKo9B,SAAS5P,QAC7B,GAAKmF,EAAL,CALkB,IAOV7B,EAAyBZ,KAAzBY,aAAcJ,EAAWR,KAAXQ,OAEdnqB,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GACXgC,EAAQ0pB,aAAShoB,EAAS1D,GAMhC,GAJA8vB,EAAO7B,aAAejsB,EAAQ4tB,IAA6B3B,EAC3D6B,EAAOjC,OAASA,EAChBiC,EAAO+L,OAAQ,GAEX75B,EAAJ,CAIA,IAAIysB,EAAS,KACT,kBAAmBqB,EACnBrB,EAASqB,EAAOisC,gBACT,qBAAsBjsC,IAC7BrB,EAASqB,EAAOksC,oBAGfvtC,GAILtvB,KAAgBgH,aAAa,CACzBC,QAAS,iCACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnByuB,OAAQA,QArcGtxB,EAycnB8+D,gBAAkB,WAAM,IACZr6D,EAAYzE,EAAKokB,MAAjB3f,QACR,GAAKA,EAAL,CAEAzE,EAAK0kB,SAAS,CACVqM,SAAS,IAGb,IAAM4B,EAAS3yB,EAAKo9B,SAAS5P,QACxBmF,GAEL3wB,KAAgBgH,aAAa,CACzBC,QAAS,wBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBuuB,YAAauB,EAAOvB,YACpBD,SAAUwB,EAAOxB,SACjBE,UAAWzY,KAAKI,UA1dLhZ,EA8dnB++D,iBAAmB,WAAM,IACbt6D,EAAYzE,EAAKokB,MAAjB3f,QACHA,IAELzE,EAAK0kB,SAAS,CACVqM,SAAS,IAGE/wB,EAAKo9B,SAAS5P,SAG7BxrB,KAAgBgH,aAAa,CACzBC,QAAS,yBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,OA5eR7C,EAgfnBq8D,mBAAqB,WAAM,IAGjBC,EAFmBt8D,EAAKokB,MAAtB0M,eAGa2B,IAA6B8pC,IAA2B9pC,IAE7EzyB,EAAK0kB,SACD,CACIoM,aAAcwrC,GAElB,WACI,IAAM3pC,EAAS3yB,EAAKo9B,SAAS5P,QACxBmF,IAELA,EAAO7B,aAAewrC,KAI9Bt6D,KAAgBgH,aAAa,CACzBC,QAAS,gCACT6nB,aAAcwrC,KApgBHt8D,EAwgBnBg/D,QAAU,SAACv6D,EAAS6rB,GAChB,IAAK7rB,EAAS,OAAO,EACrB,IAAK6rB,IAAaA,EAAS5iB,SAASvH,OAAQ,OAAO,EAFtB,IAIrBI,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEX6P,EAAQ4d,EAAS5iB,SAAS8jB,UAAU,SAAA5lB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACjF,OAAe,IAAX6P,GAEGA,EAAQ,EAAI4d,EAAS5iB,SAASvH,QAjhBtBnG,EAohBnBi/D,QAAU,SAACx6D,EAAS6rB,GAChB,IAAK7rB,EAAS,OAAO,EACrB,IAAK6rB,IAAaA,EAAS5iB,SAASvH,OAAQ,OAAO,EAFtB,IAIrBI,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEX6P,EAAQ4d,EAAS5iB,SAAS8jB,UAAU,SAAA5lB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACjF,OAAe,IAAX6P,GAEGA,EAAQ,GAAK,GA7hBL1S,EAgiBnBk/D,sBAAwB,WACpBl9D,KAAgBgH,aAAa,CACzBC,QAAS,kCACT8zD,MAAM,KAniBK/8D,EAuiBnBm/D,sBAAwB,WACpBn9D,KAAgBgH,aAAa,CACzBC,QAAS,kCACT8zD,MAAM,KA1iBK/8D,EA8iBnBo/D,iBAAmB,WAAM,IACb36D,EAAYzE,EAAKokB,MAAjB3f,QACHA,GAEL8vB,aAAS9vB,EAAQ8B,QAAS9B,EAAQ5B,KA/iBlC7C,EAAKo9B,SAAWld,IAAMie,YAHP,IAKP15B,EAAsByrB,KAAtBzrB,QAAS6rB,EAAaJ,KAAbI,SALF,OAOftwB,EAAKqkB,UAAYg7C,IAEjBr/D,EAAKokB,MAAQ,CACTgN,YAAa,EACbsP,kBAAmBD,aAAkB,GACrCh8B,QAASA,EACT6rB,SAAUA,EACVS,SAAS,EACTpP,IAAK3hB,EAAKk+D,YAAYz5D,IAfXzE,qFAmBG+kB,EAAWC,EAAWC,GAAa,IAC7C7D,EAAUjhB,KAAKqf,MAAf4B,MAD6Ckf,EAETngC,KAAKikB,MAAzC3f,EAF6C67B,EAE7C77B,QAAS6rB,EAFoCgQ,EAEpChQ,SAAU3O,EAF0B2e,EAE1B3e,IAAKoP,EAFqBuP,EAErBvP,QAEhC,OAAIhM,EAAU3D,QAAUA,IAIpB4D,EAAUvgB,UAAYA,IAItBugB,EAAUsL,WAAaA,IAIvBtL,EAAUrD,MAAQA,GAIlBqD,EAAU+L,UAAYA,iDAQ1BhxB,IAAU2hB,GAAG,4BAA6BvhB,KAAKg+D,yBAC/Cp+D,IAAU2hB,GAAG,4BAA6BvhB,KAAKg+D,yBAC/Cp+D,IAAU2hB,GAAG,wBAAyBvhB,KAAKg+D,yBAC3CjuC,KAAYxO,GAAG,0BAA2BvhB,KAAKw/B,2BAC/CzP,KAAYxO,GAAG,yBAA0BvhB,KAAKi+D,0BAC9CluC,KAAYxO,GAAG,4BAA6BvhB,KAAKk9D,6BACjDntC,KAAYxO,GAAG,8BAA+BvhB,KAAK69D,+BACnD9tC,KAAYxO,GAAG,+BAAgCvhB,KAAK49D,gCACpD7tC,KAAYxO,GAAG,+BAAgCvhB,KAAK29D,gCACpD5tC,KAAYxO,GAAG,0BAA2BvhB,KAAK25D,2BAC/C5pC,KAAYxO,GAAG,gCAAiCvhB,KAAKi8D,iCAErD7jD,KAAiBmJ,GAAG,iCAAkCvhB,KAAK09B,iFAI3D99B,IAAUoC,eAAe,4BAA6BhC,KAAKg+D,yBAC3Dp+D,IAAUoC,eAAe,4BAA6BhC,KAAKg+D,yBAC3Dp+D,IAAUoC,eAAe,wBAAyBhC,KAAKg+D,yBACvDjuC,KAAY/tB,eAAe,0BAA2BhC,KAAKw/B,2BAC3DzP,KAAY/tB,eAAe,yBAA0BhC,KAAKi+D,0BAC1DluC,KAAY/tB,eAAe,4BAA6BhC,KAAKk9D,6BAC7DntC,KAAY/tB,eAAe,8BAA+BhC,KAAK69D,+BAC/D9tC,KAAY/tB,eAAe,+BAAgChC,KAAK49D,gCAChE7tC,KAAY/tB,eAAe,+BAAgChC,KAAK29D,gCAChE5tC,KAAY/tB,eAAe,0BAA2BhC,KAAK25D,2BAC3D5pC,KAAY/tB,eAAe,gCAAiChC,KAAKi8D,iCAEjE7jD,KAAiBpW,eAAe,iCAAkChC,KAAK09B,mEA0elE,IACGld,EAAYxgB,KAAKqf,MAAjBmB,QADH4f,EAEuCpgC,KAAKikB,MAAzC2M,EAFHwP,EAEGxP,QAAStsB,EAFZ87B,EAEY97B,QAAS6rB,EAFrBiQ,EAEqBjQ,SAAU3O,EAF/B4e,EAE+B5e,IAEhC9c,GAAQ,EACZ,GAAIJ,EAAS,KACD8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GACjBgC,EAAQ0pB,aAAShoB,EAAS1D,GAG9B,IAAMkY,EAAQoT,aAAc1pB,GACtB66D,EAAWrzC,aAAYxnB,GACvBkU,EAAOS,aAAQ3U,GACf86D,GAAY16D,EACZ26D,GAAoB36D,EACpB46D,EAAa56D,EACb66D,EAAc76D,EACdm6D,EAAU7+D,KAAK6+D,QAAQv6D,EAAS6rB,GAChC2uC,EAAU9+D,KAAK8+D,QAAQx6D,EAAS6rB,GAEtC,OACIxQ,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAA,SACIkT,UAAU,sBACVye,IAAKr+B,KAAKi9B,SACVzb,IAAKA,EACLgd,UAAU,EACV+G,UAAU,EACV/1B,MAAO,GACPE,OAAQ,GACR+xB,UAAWzhC,KAAKmhC,cAChBq+B,OAAQx/D,KAAK2+D,gBACbc,QAASz/D,KAAK4+D,iBACdc,aAAc1/D,KAAKw+D,iBACnBmB,QAAS3/D,KAAKu+D,mBAEjBj6D,GACGqb,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ8F,YAAa,kBAC5C3G,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACI8mC,UAAWu3B,EACXj/C,UAAWY,EAAQumB,WACnB/kB,MAAM,UACNlC,QAAS9f,KAAKm+D,YACdx+C,EAAAnf,EAAAkM,cAACkzD,GAAAp/D,EAAD,CAAkBuhB,SAAS,WAE/BpC,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIof,UAAWY,EAAQumB,WACnB/kB,MAAM,UACNslB,UAAW9lB,EACX1B,QAAS9f,KAAKo+D,YACbxtC,EAAUjR,EAAAnf,EAAAkM,cAACkqC,GAAAp2C,EAAD,MAAgBmf,EAAAnf,EAAAkM,cAACmqC,GAAAr2C,EAAD,OAE/Bmf,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACI8mC,UAAWw3B,EACXl/C,UAAWY,EAAQumB,WACnB/kB,MAAM,UACNlC,QAAS9f,KAAKq+D,YACd1+C,EAAAnf,EAAAkM,cAACmzD,GAAAr/D,EAAD,CAAcuhB,SAAS,WAE3BpC,EAAAnf,EAAAkM,cAACozD,GAAD,MACAngD,EAAAnf,EAAAkM,cAAA,OACIkT,UAAU,wBACVg7C,aAAc56D,KAAK++D,sBACnBlE,aAAc76D,KAAKg/D,sBACnBl/C,QAAS9f,KAAKi/D,kBACdt/C,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBACVhF,EACAwkD,GACGz/C,EAAAnf,EAAAkM,cAAA,QAAMkO,MAAOukD,GAAb,OAEK3mD,IAVjB,OAeImH,EAAAnf,EAAAkM,cAACqzD,GAAD,OAEJpgD,EAAAnf,EAAAkM,cAACszD,GAAD,MACCX,GAAoB1/C,EAAAnf,EAAAkM,cAACuzD,GAAD,MACpBX,GAAc3/C,EAAAnf,EAAAkM,cAACwzD,GAAD,MACdX,GAAe5/C,EAAAnf,EAAAkM,cAACyzD,GAAD,MAChBxgD,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CAAYof,UAAWY,EAAQumB,WAAYjnB,QAAS9f,KAAK8tC,aACrDnuB,EAAAnf,EAAAkM,cAAC2+B,EAAA7qC,EAAD,CAAWuhB,SAAS,oBAxoBrBhC,IAAMC,YAspBlB4G,GALCC,YACZQ,cACArG,IA1pBW,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,CAChBinC,WAAY,CACR1jB,QAAS,IAEV8D,aAAYlG,KAspBI,CAAEmG,WAAW,IAGrBR,CAAQ62C,ICtkBR2C,uBA7GX,SAAAA,EAAY/gD,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAogE,IACfvgE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAsgE,GAAAjgE,KAAAH,KAAMqf,KAeVghD,uBAAyB,SAAA1/D,GACrBd,EAAK0kB,SAAS,CAAEi1C,SAAUphD,KAAiBkoD,iBAjB5BzgE,EAoBnB0gE,gBAAkB,SAAAl1D,GACdA,EAAMod,iBACNpd,EAAMqa,mBAtBS7lB,EAyBnB2gE,WAAa,SAAAn1D,GACTA,EAAMod,iBACNpd,EAAMqa,kBACNtN,KAAiBqoD,aAAY,GAE7B5gE,EAAK2yC,6BAA6BnnC,EAAMq1D,aAAavuB,QA9BtCtyC,EAiCnB8gE,gBAAkB,SAAAt1D,GACdA,EAAMod,iBACNpd,EAAMqa,kBACNtN,KAAiBqoD,aAAY,IApCd5gE,EAuCnB2yC,6BAA+B,SAAAL,GAC3B,GAAqB,IAAjBA,EAAMnsC,OAEV,IAAK,IAAIF,EAAI,EAAGA,EAAIqsC,EAAMnsC,OAAQF,IAAK,CACnC,IAAI5E,EAAOixC,EAAMrsC,GACXvB,EAAU,CACZuE,QAAS,uBACThE,SAAU,CAAEgE,QAAS,gBAAiB8pC,KAAM1xC,EAAK0xC,KAAM3nC,KAAM/J,IAGjErB,EAAK+wC,eAAersC,EAAS,SAAA4F,GAAM,OAAIvK,IAAUqzC,WAAW9oC,EAAO5F,QAAQO,SAASA,SAASpC,GAAIyH,OAjDtFtK,EAqDnB+wC,eArDmB,eAAAvwC,EAAAP,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAqDF,SAAAC,EAAO6D,EAAS8E,GAAhB,IAAAynC,EAAA3mC,EAAA,OAAA6kB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACP+vC,EAAgB14B,KAAiBs8B,YAD1B,CAAA7zC,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIRkD,EAJQ,CAAA1D,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAOTsX,KAAiBw7B,sBAAjB,mCAAA5oC,OAA0E8lC,IAPjEjwC,EAAAE,KAAA,EASUc,KAAgBgJ,KAAK,CACpC/B,QAAS,cACT1C,QAAS0qC,EACT1/B,oBAAqB,EACrByiC,sBAAuBtvC,IAblB,OASL4F,EATKtJ,EAAAkK,KAkBTlJ,KAAgBgJ,KAAK,CACjB/B,QAAS,eACT1C,QAAS0qC,EACTllC,YAAa,CAACzB,EAAOzH,MAGzB2G,EAASc,GAxBAtJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAG,GAAAH,EAAA,SA0BTkzC,MAAM,qBAAuBC,KAAKC,UAALpzC,EAAAG,KA1BpB,yBAAAH,EAAAU,SAAAb,EAAA,kBArDE,gBAAAc,EAAAc,GAAA,OAAAjC,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKokB,MAAQ,CACTu1C,SAAUphD,KAAiBkoD,eAJhBzgE,mFASfuY,KAAiBmJ,GAAG,uBAAwBvhB,KAAKqgE,uEAIjDjoD,KAAiBpW,eAAe,uBAAwBhC,KAAKqgE,yDAsExD,IACG7G,EAAax5D,KAAKikB,MAAlBu1C,SAER,OACI75C,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACKo0C,GACG75C,EAAAnf,EAAAkM,cAAA,OACIkT,UAAU,oBACVghD,YAAa5gE,KAAKugE,gBAClBM,YAAa7gE,KAAK2gE,gBAClBG,OAAQ9gE,KAAKwgE,YACb7gD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,6BACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,0BACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,2BAAf,mBACAD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,8BAAf,+CAlGFG,IAAMC,kDCoDpC,IAwBM+gD,8MACF98C,MAAQ,CACJ+8C,SAAU,QAGdC,eAAiB,SAAAr5B,GACb/nC,EAAK0kB,SAAS,CACVy8C,SAAUp5B,OAIlBs5B,YAAc,SAAA71D,GACVA,EAAMqa,kBADa,IAGXiH,EAAgB9sB,EAAKwf,MAArBsN,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBzb,EAAmByb,EAAnBzb,eAERke,aAASle,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAA+B,IACxB/K,EAAwBwmB,EAAxBxmB,QAAS+X,EAAeyO,EAAfzO,WAEjBiW,aAAShuB,EAAS+X,GAAY,6EAMjC,IAAAiB,EAC+Bpf,KAAKqf,MAAjChI,EADH+H,EACG/H,EAAGmJ,EADNpB,EACMoB,QAASmM,EADfvN,EACeuN,YACZq0C,EAAahhE,KAAKikB,MAAlB+8C,SAEFpmD,EAAQiS,aAAgBF,EAAatV,GACrC8pD,EAAUz0C,aAAsBC,GAClChN,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK/N,EAAE,cACHsI,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAWY,EAAQ4gD,MAAO/iC,IAAKr+B,KAAKihE,kBAG9C,GAGJ,OACIthD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkBH,EAAQ6gD,aAAc,YAAnE,GAAAr2D,OACQqM,EAAE,oBADV,MAAArM,OACkCqM,EAAE,QADpC,KAEIsI,EAAAnf,EAAAkM,cAAC40D,GAAA9gE,EAAD,CACIoa,MAAOumD,EACP3gD,QAAS,CAAE+gD,OAAQ/gD,EAAQghD,YAAaL,QAAS3gD,EAAQ2gD,SACzDM,YAAa,CACTC,cAAe,CACXC,UAAW,CACPP,MAAO,CACHQ,QAAS3kD,QAAQ+jD,GACjB5vB,QAAS4vB,MAKzBa,UAAU,OACVliD,EAAAnf,EAAAkM,cAAA,KAAGoT,QAAS9f,KAAKkhE,aAActmD,YArE7BmF,IAAMC,WAqFb4G,GALCC,YACZ7F,IAzGW,SAAAC,GAAK,MAAK,CACrBogD,aAAc,CACVr/C,MAAOf,EAAM2b,QAAQC,QAAQC,MAEjC0kC,aAnDoBx/C,EAmDQf,EAAM2b,QAAQ8sB,KAAK,KAlDxC,CACHoY,kCAAmC,CAC/B5+C,IAAK,EACLC,KAAM,EACN43C,UAAW,UACXvrD,MAAO,MACPE,OAAQ,MACRqyD,YAAa,CACT/G,YAAa,gBACb10C,YAAW,2BAAAtb,OAA6BgX,EAA7B,kBAGnBggD,+BAAgC,CAC5B/6C,OAAQ,EACR9D,KAAM,EACN8+C,aAAc,UACdzyD,MAAO,MACPE,OAAQ,MACRqyD,YAAa,CACT/G,YAAa,gBACb10C,YAAW,GAAAtb,OAAKgX,EAAL,0CAGnBkgD,iCAAkC,CAC9B/+C,KAAM,EACNg/C,WAAY,UACZzyD,OAAQ,MACRF,MAAO,MACPuyD,YAAa,CACT/G,YAAa,gBACb10C,YAAW,eAAAtb,OAAiBgX,EAAjB,8BAGnBogD,gCAAiC,CAC7Bp7C,MAAO,EACPq7C,YAAa,UACb3yD,OAAQ,MACRF,MAAO,MACPuyD,YAAa,CACT/G,YAAa,gBACb10C,YAAW,uCAAAtb,OAAyCgX,OAWhEo/C,MAAO,CACHn+C,SAAU,WACVlB,SAAU,EACVvS,MAAO,MACPE,OAAQ,MACRqyD,YAAa,CACTx9D,QAAS,KACTwiB,OAAQ,OACRna,QAAS,QACT4C,MAAO,EACPE,OAAQ,EACRyX,YAAa,UAGrBg6C,QAAS,CACLp6C,OAAQ,iBAnEhB,IAAwB/E,GAwJD,CAAEoF,WAAW,IAChCC,cAGWT,CAAQm6C,ICzGRuB,uBAvDX,SAAAA,EAAYjjD,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAsiE,IACfziE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAwiE,GAAAniE,KAAAH,KAAMqf,KACDkjD,wBAA0B1iE,EAAK0iE,wBAAwBlyB,KAA7BvwC,OAAAowD,GAAA,EAAApwD,QAAAowD,GAAA,EAAApwD,CAAAD,KAC/BA,EAAK2iE,2BAA6B3iE,EAAK2iE,2BAA2BnyB,KAAhCvwC,OAAAowD,GAAA,EAAApwD,QAAAowD,GAAA,EAAApwD,CAAAD,KAElCA,EAAKokB,MAAQ,CACTw+C,aAAcpjD,EAAMojD,aACpBC,QAAQ,GAPG7iE,mFAYf4N,KAAa8T,GAAG,0BAA2BvhB,KAAKuiE,yBAChD90D,KAAa8T,GAAG,6BAA8BvhB,KAAKuiE,yBAEnD3vD,IAAU2O,GAAG,uBAAwBvhB,KAAKwiE,4EAGtBG,GAChB3iE,KAAKqf,MAAMpY,YAAc07D,EAAQhkD,gBAAkBgkD,EAAQr+D,UAC3DtE,KAAK4iE,aAAeD,EAAQr+D,QAAQ5B,GACpC1C,KAAKukB,SAAS,CAAEk+C,aAAcE,EAAQr+D,QAAQsa,oEAI3B+jD,GAEnB3iE,KAAKqf,MAAMrY,SAAW27D,EAAQv8D,UAC5BpG,KAAKqf,MAAMujD,cAAgB5iE,KAAKqf,MAAMujD,cAAgBD,EAAQjrD,6BAC5D1X,KAAKqf,MAAMpY,WAAa07D,EAAQjrD,8BAEpC1X,KAAKukB,SAAS,CAAEk+C,aAAc,KAAMC,QAAQ,mDAKhDj1D,KAAazL,eAAe,0BAA2BhC,KAAKuiE,yBAC5D90D,KAAazL,eAAe,6BAA8BhC,KAAKuiE,yBAE/D3vD,IAAU5Q,eAAe,uBAAwBhC,KAAKwiE,6DAItD,IAAIK,EAAiB,yBAQrB,OAPI7iE,KAAKikB,MAAMw+C,eACXI,EACyC,8BAArC7iE,KAAKikB,MAAMw+C,aAAa,SAClB,uBACA,yBAGPziE,KAAKikB,MAAMy+C,QAAU/iD,EAAAnf,EAAAkM,cAAA,KAAGkT,UAAWe,IAAW,qBAAsBkiD,YApDvD9iD,IAAMC,6BCYnBgB,WAbA,SAAAC,GAAK,MAAK,CACrB6hD,gBAAiB,CACbxrC,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQ8sB,KAAK,KAAO,UACtE1nC,MAA8B,SAAvBf,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQlf,KAAKmf,QAAU,aAU7D7b,CANf,SAAyB3B,GAAO,IACpBmB,EAAYnB,EAAZmB,QAER,OAAOb,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,mBAAoBH,EAAQsiD,kBAAvD,qGCQLC,sNACFxrD,WAAa,WAAM,IAAA6H,EACwEvf,EAAKwf,MAApFmB,EADOpB,EACPoB,QAASxZ,EADFoY,EACEpY,OAAQC,EADVmY,EACUnY,UAAWgF,EADrBmT,EACqBnT,KAAmB+2D,GADxC5jD,EAC2Bc,YAD3Bd,EACwC4jD,kBAAkB1jD,EAD1DF,EAC0DE,UAEnEhb,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAJN,IAMPC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAPN,IASPc,EAAad,EAAbc,SACR,IAAKA,EAAU,OAAO,KAVP,IAaX49D,EAaA59D,EAbA49D,UACAroD,EAYAvV,EAZAuV,MACAa,EAWApW,EAXAoW,YAEA7W,GASAS,EAVAoD,IAUApD,EATAT,OACAJ,EAQAa,EARAb,UACAc,EAOAD,EAPAC,MACAZ,EAMAW,EANAX,MACAI,EAKAO,EALAP,SACAU,EAIAH,EAJAG,WACAD,EAGAF,EAHAE,WACAH,EAEAC,EAFAD,QACAwM,EACAvM,EADAuM,KAGJ,GAAIxM,EACA,OACIua,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK69C,GACGtjD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBoiD,GAE/EroD,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAnf,EAAAkM,cAAC2f,GAAA,EAAD,CAASrlB,OAAQA,EAAQC,UAAWA,EAAW7B,QAASA,EAASka,UAAWA,KAKxF,GAAI9Z,EACA,OACIma,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK69C,GACGtjD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBoiD,GAE/EroD,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAnf,EAAAkM,cAAC+f,GAAA,EAAD,CAAWzlB,OAAQA,EAAQC,UAAWA,EAAWG,UAAW5B,EAAY8Z,UAAWA,KAK/F,GAAI/Z,EACA,OACIoa,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK69C,GACGtjD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBoiD,GAE/EroD,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAnf,EAAAkM,cAAC8f,GAAA,EAAD,CAAWxlB,OAAQA,EAAQC,UAAWA,EAAWM,UAAWhC,EAAY+Z,UAAWA,KAK/F,GAAI5a,EACA,OACIib,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK69C,GACGtjD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBoiD,GAE/EroD,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAnf,EAAAkM,cAACsf,GAAA,EAAD,CAAOhlB,OAAQA,EAAQC,UAAWA,EAAWvC,MAAOA,EAAO4a,UAAWA,KAKlF,GAAIxa,EACA,OACI6a,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK69C,GACGtjD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBoiD,GAE/EroD,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAnf,EAAAkM,cAACwf,GAAA,EAAD,CAAUllB,OAAQA,EAAQC,UAAWA,EAAWnC,SAAUA,EAAUwa,UAAWA,KAK3F,GAAI9a,IACqB4P,YAAO5P,EAAUA,YAClBA,EAAUiC,WAC1B,OACIkZ,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK69C,GACGtjD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBoiD,GAE/EroD,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAnf,EAAAkM,cAACyT,GAAA,EAAD,CAAWnZ,OAAQA,EAAQC,UAAWA,EAAWzC,UAAWA,EAAW8a,UAAWA,KAMlG,GAAIha,GACIA,EAAMmB,UACN,OACIkZ,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK69C,GACGtjD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBoiD,GAE/EroD,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBnE,GACvDkE,EAAAnf,EAAAkM,cAAC6f,GAAA,EAAD,CAAOvlB,OAAQA,EAAQC,UAAWA,EAAW3B,MAAOA,EAAOga,UAAWA,KAMtF,GAAI1a,EAAO,CACP,IAAMqB,EAAY8J,aAAQnL,EAAMmB,MAAOkG,GACjCi3D,GACQ,YAATtxD,GAA+B,UAATA,KACtBqxD,GAAaroD,GAASa,IACvBxV,GACAA,EAAUuJ,QAAUvJ,EAAUyJ,OAE5B/C,EAAQu2D,EACR,CACIC,MAAO,QACPhB,WAAY,EACZF,aAAc,GAElB,GACN,OACItiD,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK89C,GACGvjD,EAAAnf,EAAAkM,cAAC02D,GAAA,EAAD,CACIljD,YAAa8iD,EACbr2D,MAAOA,EACP3F,OAAQA,EACRC,UAAWA,EACXrC,MAAOA,EACP0a,UAAWA,IAGlB2jD,GACGtjD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBoiD,GAE/EroD,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBnE,IACrDynD,GAAcvjD,EAAAnf,EAAAkM,cAAC02D,GAAA,EAAD,CAAOp8D,OAAQA,EAAQC,UAAWA,EAAWrC,MAAOA,EAAO0a,UAAWA,KAKlG,OACIK,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACK69C,GACGtjD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBoiD,GAE/EroD,GAAS+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBAAwBnE,6EAK1D,IACG+E,EAAYxgB,KAAKqf,MAAjBmB,QAER,OACIb,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,YACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,kBAAmBH,EAAQI,yBACtDjB,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBAAoB5f,KAAKuX,sBAnLlCwI,IAAMC,YAkM5B+iD,GAAQjiD,aAAe,CACnB7U,KAAMgG,IACNiO,YAAaa,IACbiiD,iBAAkBK,KAGPriD,WA5MA,SAAAC,GAAK,OAAAnhB,OAAAohB,EAAA,EAAAphB,CAAA,GACbqhB,aAAaF,KA2MLD,CAAmB+hD,IC/K5BO,uBACF,SAAAA,EAAYjkD,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAsjE,IACfzjE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAwjE,GAAAnjE,KAAAH,KAAMqf,KA0EVkkD,6BAA+B,SAAA5iE,GACtBd,EAAKokB,MAAMlF,UAEhBlf,EAAK0kB,SAAS,CAAExF,UAAU,KA9EXlf,EAiFnB2jE,iCAAmC,SAAA7iE,GAAU,IAAAye,EACXvf,EAAKwf,MAA3BrY,EADiCoY,EACjCpY,OAAQC,EADyBmY,EACzBnY,UADyB+c,EAEPnkB,EAAKokB,MAA/BlF,EAFiCiF,EAEjCjF,SAAU0kD,EAFuBz/C,EAEvBy/C,YAEd1kD,IAEA/X,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC7Cw8D,EACA5jE,EAAK0kB,SAAS,CAAEk/C,aAAa,GAAS,WAClCrsC,WAAW,WACPv3B,EAAK0kB,SAAS,CAAEk/C,aAAa,KAC9B,KAGP5jE,EAAK0kB,SAAS,CAAEk/C,aAAa,IAE1BA,GACP5jE,EAAK0kB,SAAS,CAAEk/C,aAAa,MAlGlB5jE,EAsGnB24D,8BAAgC,SAAA73D,GAAU,IAAA4f,EACR1gB,EAAKwf,MAA3BrY,EAD8BuZ,EAC9BvZ,OAAQC,EADsBsZ,EACtBtZ,UACR8X,EAAape,EAAboe,SAEJ/X,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK0kB,SAAS,CAAExF,WAAU0kD,aAAa,KA3G5B5jE,EA+GnB6jE,sBAAwB,SAAA/iE,GAAU,IACtByF,EAAwBzF,EAAxByF,QAAS+X,EAAexd,EAAfwd,WADaiK,EAEAvoB,EAAKwf,MAA3BrY,EAFsBohB,EAEtBphB,OAAQC,EAFcmhB,EAEdnhB,UAEZD,IAAWZ,GAAWa,IAAckX,GACpCte,EAAKyhB,eApHMzhB,EAwHnB8jE,qBAAuB,SAAAhjE,GAAU,IACrByF,EAAwBzF,EAAxByF,QAAS+X,EAAexd,EAAfwd,WADYyK,EAEC/oB,EAAKwf,MAA3BrY,EAFqB4hB,EAErB5hB,OAAQC,EAFa2hB,EAEb3hB,UAEZD,IAAWZ,GAAWa,IAAckX,GACpCte,EAAKyhB,eA7HMzhB,EAiInB+jE,uBAAyB,SAAAjjE,GAAU,IACvByF,EAAwBzF,EAAxByF,QAAS+X,EAAexd,EAAfwd,WADcshB,EAED5/B,EAAKwf,MAA3BrY,EAFuBy4B,EAEvBz4B,OAAQC,EAFew4B,EAEfx4B,UAEhB,GAAID,IAAWZ,GACXa,IAAckX,EAAlB,CAEA,IAAM7Z,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAR+B,IAUvBC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,cACD1E,EAAKyhB,kBAhJEzhB,EAsJnBwlD,iBAAmB,SAAAv5C,GACfujB,aAASvjB,GAAQ,IAvJFjM,EA0JnB8jD,iBAAmB,SAAA38C,GACfotB,aAASptB,GAAQ,IA3JFnH,EA8JnBgkE,gBAAkB,WACd,GAAKhkE,EAAKmlC,YAEQj7B,OAAOs+B,eAAesB,WACxC,CAJoB,IAAArI,EAMUzhC,EAAKwf,MAA3BrY,EANYs6B,EAMZt6B,OAAQC,EANIq6B,EAMJr6B,UAEV8X,GAAYtR,KAAauR,cAAclc,IAA3B,UAAAkI,OAAyChE,EAAzC,eAAAgE,OAA6D/D,IAC/EqtB,aAActtB,EAAQC,EAAW8X,KAvKlBlf,EA0KnBikE,gBAAkB,SAAA95C,GACdA,EAAEvB,iBACFuB,EAAEtE,kBAFiB,IAAAq+C,EAIWlkE,EAAKwf,MAA3BrY,EAJW+8D,EAIX/8D,OAAQC,EAJG88D,EAIH98D,UAEV3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAEpBqW,YAAgBtW,GAEjCnF,KAAgBgH,aAAa,CACzBC,QAAS,oBACT9B,OAAQA,EACRC,UAAWA,IAKI3C,GAAWA,EAAQo3C,kBAEtC75C,KAAgBgH,aAAa,CACzBC,QAAS,sBACTiyC,KAAM,CACF/zC,OAAQA,EACRsG,WAAY,CAACrG,OAlMVpH,EAwMnByf,UAAY,SAAAjU,GACJA,IACAA,EAAMod,iBACNpd,EAAMqa,mBAHO,IAAAs+C,EAMankE,EAAKwf,MAA3BrY,EANSg9D,EAMTh9D,OAAQC,EANC+8D,EAMD/8D,UAEhBqY,aAAUtY,EAAQC,IAhNHpH,EAmNnBokE,mBAAqB,WACjBpkE,EAAK0kB,SAAS,CAAEk/C,aAAa,KApNd5jE,EAuNnBqlC,gBAAkB,WACdrlC,EAAKmlC,WAAY,GAxNFnlC,EA2NnBilC,gBAAkB,WACdjlC,EAAKmlC,WAAY,GA5NFnlC,EA+NnBimC,eAAiB,WACbjmC,EAAKqkE,UAAW,GArNZrkE,EAAKokB,MAAQ,CACTlF,UAAU,EACV0kD,aAAa,GAbN5jE,qFAkBG+kB,EAAWC,GAAW,IAAAs/C,EACgCnkE,KAAKqf,MAArE4B,EADgCkjD,EAChCljD,MAAOja,EADyBm9D,EACzBn9D,OAAQC,EADiBk9D,EACjBl9D,UAAWw7D,EADM0B,EACN1B,aAAc2B,EADRD,EACQC,oBADRjkC,EAEOngC,KAAKikB,MAA5CuD,EAFgC2Y,EAEhC3Y,YAAazI,EAFmBohB,EAEnBphB,SAAU0kD,EAFStjC,EAETsjC,YAE/B,OAAI7+C,EAAU3D,QAAUA,IAIpB2D,EAAU5d,SAAWA,IAIrB4d,EAAU3d,YAAcA,IAIxB2d,EAAU69C,eAAiBA,IAI3B79C,EAAUw/C,sBAAwBA,IAIlCv/C,EAAU2C,cAAgBA,IAI1B3C,EAAU9F,WAAaA,GAIvB8F,EAAU4+C,cAAgBA,oDAQ9Bh2D,KAAa8T,GAAG,iCAAkCvhB,KAAKwjE,kCACvD/1D,KAAa8T,GAAG,8BAA+BvhB,KAAKw4D,+BACpD/qD,KAAa8T,GAAG,6BAA8BvhB,KAAKujE,8BACnD91D,KAAa8T,GAAG,uBAAwBvhB,KAAK4jE,wBAC7Cn2D,KAAa8T,GAAG,sBAAuBvhB,KAAK0jE,uBAC5Cj2D,KAAa8T,GAAG,qBAAsBvhB,KAAK2jE,qEAI3Cl2D,KAAazL,eAAe,iCAAkChC,KAAKwjE,kCACnE/1D,KAAazL,eAAe,8BAA+BhC,KAAKw4D,+BAChE/qD,KAAazL,eAAe,6BAA8BhC,KAAKujE,8BAC/D91D,KAAazL,eAAe,uBAAwBhC,KAAK4jE,wBACzDn2D,KAAazL,eAAe,sBAAuBhC,KAAK0jE,uBACxDj2D,KAAazL,eAAe,qBAAsBhC,KAAK2jE,uDA2JlD,IAAAU,EAC0DrkE,KAAKqf,MAA5DhI,EADHgtD,EACGhtD,EAAGmJ,EADN6jD,EACM7jD,QAASxZ,EADfq9D,EACer9D,OAAQC,EADvBo9D,EACuBp9D,UAAWm9D,EADlCC,EACkCD,oBADlChkC,EAEqDpgC,KAAKikB,MAA/BlF,GAF3BqhB,EAEG5Y,YAFH4Y,EAEgBjd,KAFhBid,EAEsBld,IAFtBkd,EAE2BrhB,UAAU0kD,EAFrCrjC,EAEqCqjC,YAEpCn/D,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAOqb,EAAAnf,EAAAkM,cAAA,8BALhB,IAOGkS,EAAuEta,EAAvEsa,cAAeN,EAAwDha,EAAxDga,MAAOD,EAAiD/Z,EAAjD+Z,UAAWjN,EAAsC9M,EAAtC8M,oBAAqB8c,EAAiB5pB,EAAjB4pB,aAExDxQ,EAAOiO,aAAQrnB,GACfggE,EAAUz4C,aAAWvnB,GACrBkU,EAAOS,aAAQ3U,GACf66D,EAAWrzC,aAAYxnB,GACvBigE,EAAQx4C,aAASznB,EAAStE,KAAKsf,WACrCtf,KAAK0iE,OAAS11C,aAAU1oB,GACxB,IAAMkgE,EAAev3C,aAAgB3oB,GAE/B+kD,EAAOmb,EACT7kD,EAAAnf,EAAAkM,cAACmT,GAAA,EAAD,CAAiB/T,OAAQ04D,EAAcpsC,SAAUp4B,KAAKqlD,mBAEtD1lC,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,EAAQoxB,SAAUp4B,KAAK2jD,mBAG9C8gB,EAAmB9jD,IACrB,UACAH,EAAQlc,QACR,CAAEogE,mBAAoB3lD,GAHSjf,OAAAumB,EAAA,EAAAvmB,CAAA,GAI5B0gB,EAAQmkD,gBAAkB5lD,GAJEjf,OAAAumB,EAAA,EAAAvmB,CAAA,GAM5B0gB,EAAQokD,mBAAqBnB,IAAgB1kD,IAGpD,OACIY,EAAAnf,EAAAkM,cAAA,OACIkT,UAAW6kD,EACX7+B,YAAa5lC,KAAK8kC,gBAClBe,WAAY7lC,KAAK8lC,eACjBC,YAAa/lC,KAAKklC,gBAClBplB,QAAS9f,KAAK6jE,gBACdgB,eAAgB7kE,KAAKikE,oBACpBG,GAAuBzkD,EAAAnf,EAAAkM,cAACo4D,GAAD,MACxBnlD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAAA,KAAGkT,UAAU,wBACZ5f,KAAK0iE,QACF/iD,EAAAnf,EAAAkM,cAACq4D,GAAD,CAAe/9D,OAAQA,EAAQC,UAAWA,EAAWw7D,aAAc7jD,IAEtEyqC,EACD1pC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,mBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,kBACTsO,GAAgBvO,EAAAnf,EAAAkM,cAAC8sB,GAAA,EAAD,CAAexyB,OAAQA,EAAQotB,UAAQ,EAACtoB,OAAQ04D,EAAcn1C,UAAQ,IACvFnB,GAAgBvO,EAAAnf,EAAAkM,cAACs4D,GAAD,CAASr4C,YAAauB,IACvCvO,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBACXD,EAAAnf,EAAAkM,cAAA,oBACC4R,EAAQ,GACLqB,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAA,KAAGkT,UAAU,uBACbD,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,iBAAhB,OAEKtB,EAFL,cAOPD,EAAY,GAAKsB,EAAAnf,EAAAkM,cAAA,YAAO2K,EAAE,iBAAT,QAClBsI,EAAAnf,EAAAkM,cAAA,KAAGkT,UAAU,eAAeE,QAAS9f,KAAK8jE,iBACtCnkD,EAAAnf,EAAAkM,cAAA,QAAMkO,MAAOukD,GAAW3mD,MAInCyE,QAAQ7L,IAAwBuO,EAAAnf,EAAAkM,cAACyqC,GAAA,EAAD,CAAOnwC,OAAQA,EAAQC,UAAWmK,IAClEmzD,EACD5kD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBlC,GAC9B4mD,GAAW3kD,EAAAnf,EAAAkM,cAACu4D,GAAD,CAASj+D,OAAQA,EAAQC,UAAWA,EAAWqY,UAAWtf,KAAKsf,sBA5S7EU,cAyTP4G,GALCC,YACZ7F,IAxUW,SAAAC,GAAK,MAAK,CACrB3c,QAAS,CACLwiB,gBAAiB,eAErBo+C,mBAAoB,CAChBljD,MAAOf,EAAM2b,QAAQC,QAAQC,MAEjC6nC,gBAAiB,CACb79C,gBAAiB7F,EAAM2b,QAAQC,QAAQC,KAAO,MAElDqoC,yBAA0B,CACtBhhD,KAAM,CAAE2C,gBAAiB7F,EAAM2b,QAAQC,QAAQC,KAAO,MACtD1Y,GAAI,CAAE0C,gBAAiB,gBAE3B89C,mBAAoB,CAChBpgE,UAAW,6BAyTI,CAAE4iB,WAAW,IAChCC,cAGWT,CAAQ08C,cC/VjB8B,WAAiB,CACnB51D,MAAO,GACPE,OAAQ,GACRqtB,aAAc,MACdhW,OAAQ,wBAaNs+C,eACF,SAAAA,EAAYhmD,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAqlE,IACfxlE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAulE,GAAAllE,KAAAH,KAAMqf,KAkDVmkD,iCAAmC,SAAA7iE,GAAU,IAAAye,EACXvf,EAAKwf,MAA3BrY,EADiCoY,EACjCpY,OAAQC,EADyBmY,EACzBnY,UADyB+c,EAEPnkB,EAAKokB,MAA/BlF,EAFiCiF,EAEjCjF,SAAU0kD,EAFuBz/C,EAEvBy/C,YAEd1kD,IAEA/X,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC7Cw8D,EACA5jE,EAAK0kB,SAAS,CAAEk/C,aAAa,GAAS,WAClCrsC,WAAW,WACPv3B,EAAK0kB,SAAS,CAAEk/C,aAAa,KAC9B,KAGP5jE,EAAK0kB,SAAS,CAAEk/C,aAAa,IAE1BA,GACP5jE,EAAK0kB,SAAS,CAAEk/C,aAAa,MApElB5jE,EAwEnBokE,mBAAqB,WACjBpkE,EAAK0kB,SAAS,CAAEk/C,aAAa,KAzEd5jE,EA4EnByf,UAAY,SAAAjU,GACJA,IACAA,EAAMod,iBACNpd,EAAMqa,mBAHO,IAAAnF,EAMa1gB,EAAKwf,MAA3BrY,EANSuZ,EAMTvZ,OAAQC,EANCsZ,EAMDtZ,UAEhBqY,aAAUtY,EAAQC,IA1EdpH,EAAKokB,MAAQ,CACTw/C,aAAa,GAXN5jE,qFAgBG+kB,EAAWC,GAAW,IAAA+D,EACyB5oB,KAAKqf,MAA9DrY,EADgC4hB,EAChC5hB,OAAQC,EADwB2hB,EACxB3hB,UAAWw7D,EADa75C,EACb65C,aAAc2B,EADDx7C,EACCw7C,oBACjCX,EAAgBzjE,KAAKikB,MAArBw/C,YAER,OAAI7+C,EAAU5d,SAAWA,IAIrB4d,EAAU3d,YAAcA,IAIxB2d,EAAU69C,eAAiBA,IAI3B79C,EAAUw/C,sBAAwBA,GAIlCv/C,EAAU4+C,cAAgBA,iDAQ9Bh2D,KAAa8T,GAAG,iCAAkCvhB,KAAKwjE,iFAIvD/1D,KAAazL,eAAe,iCAAkChC,KAAKwjE,mEAuC9D,IAAA/jC,EACuDz/B,KAAKqf,MAAzDmB,EADHif,EACGjf,QAASxZ,EADZy4B,EACYz4B,OAAQC,EADpBw4B,EACoBx4B,UAAWm9D,EAD/B3kC,EAC+B2kC,oBAC5BX,EAAgBzjE,KAAKikB,MAArBw/C,YAEFn/D,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAOqb,EAAAnf,EAAAkM,cAAA,sCALhB,IAOGnI,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAOob,EAAAnf,EAAAkM,cAAA,sCARhB,IAUG9H,EAAUL,EAAVK,MAEF8Y,EAAO6P,aAAyBjpB,GAAS,GAEzCmgE,EAAmB9jD,IAAW,kBAAD7gB,OAAAumB,EAAA,EAAAvmB,CAAA,GAAuB0gB,EAAQokD,mBAAqBnB,IAEvF,OACI9jD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAW6kD,EAAkBI,eAAgB7kE,KAAKikE,oBAClDG,GAAuBzkD,EAAAnf,EAAAkM,cAACo4D,GAAD,MACxBnlD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,2BACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,2BAA2BlC,IAE7C9Y,GACG+a,EAAAnf,EAAAkM,cAAC02D,GAAA,EAAD,CACIp8D,OAAQA,EACRC,UAAWA,EACXrC,MAAOA,EACP+H,MAAOy4D,GACP9lD,UAAWtf,KAAKsf,oBApHXS,IAAMC,WA4HpBgB,OAtIA,SAAAC,GAAK,MAAK,CACrBkkD,yBAA0B,CACtBhhD,KAAM,CAAE2C,gBAAiB7F,EAAM2b,QAAQC,QAAQC,KAAO,MACtD1Y,GAAI,CAAE0C,gBAAiB,gBAE3B89C,mBAAoB,CAChBpgE,UAAW,6BAgIe,CAAE4iB,WAAW,GAAhCpG,CAAwCqkD,cC/HjDC,WAAqBxlE,OAAO6vB,OAAO,CACrCC,KAAM,OACN21C,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,0BASpBC,eACF,SAAAA,EAAYtmD,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA2lE,IACf9lE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA6lE,GAAAxlE,KAAAH,KAAMqf,KAwJVmgB,0BAA4B,SAAA7+B,GACxB,IAAM45B,EAAO16B,EAAKosD,QAAQ5+B,QAEpBu4C,EAAmBrrC,EAAKqqB,aACxBihB,EAAgBtrC,EAAKiO,UAC3B3oC,EAAK0kB,SAAS,CAAEuhD,cAAc,GAAQ,WAC9BvrC,EAAKiO,YAAcq9B,IACnBtrC,EAAKiO,WAAa/jB,KAAK6T,IAAIstC,EAAmBrrC,EAAKqqB,kBAhK5C/kD,EAqKnBkmE,0BAA4B,SAAAC,GACxB,IAAMzrC,EAAO16B,EAAKosD,QAAQ5+B,QAE1BxtB,EAAK+lE,iBAAmBrrC,EAAKqqB,aAC7B/kD,EAAKgmE,cAAgBtrC,EAAKiO,WAzKX3oC,EA4KnBu/B,uBAAyB,SAAA4mC,GACrB,IAAMzrC,EAAO16B,EAAKosD,QAAQ5+B,QAK1BxtB,EAAK0kB,SAAS,CAAEuhD,cAAc,GAAS,WAC/BvrC,EAAKiO,YAAc3oC,EAAKgmE,gBACxBtrC,EAAKiO,WAAa/jB,KAAK6T,IAAIz4B,EAAK+lE,iBAAmBrrC,EAAKqqB,kBApLjD/kD,EAyLnBomE,wBAA0B,SAAAtlE,GACtBd,EAAK0kB,SAAS,CACV2hD,gBAAiBz4D,KAAauR,cAAc/S,KAAO,EACnDk6D,eAAgBb,GAAmBI,wBA5LxB7lE,EAgMnB6xD,2BAA6B,SAAA/wD,GACNd,EAAKwf,MAAhBrY,SAEOrG,EAAOqG,QAClBnH,EAAK0kB,SAAS,CAAEq7B,aAAcj/C,EAAOu2B,cApM1Br3B,EAwMnB+jE,uBAAyB,SAAAjjE,GAAU,IACvBqG,EAAWnH,EAAKwf,MAAhBrY,OACAwL,EAAY3S,EAAKokB,MAAjBzR,QACApM,EAAwBzF,EAAxByF,QAAS+X,EAAexd,EAAfwd,WAEjB,GAAInX,IAAWZ,IAEsC,IAAjDoM,EAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOyb,IAAoB,CACpD,IAAM7Z,EAAUmJ,KAAaxK,IAAImD,EAAS+X,GAC1C,IAAK7Z,EAAS,OAEd,IAAM3E,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAO,CAAC2E,MApNjBzE,EAwNnBumE,wBAA0B,SAAAzlE,GACHd,EAAKwf,MAAhBrY,OACOrG,EAAOyF,SA1NPvG,EA6NnBwmE,6BAA+B,SAAA1lE,GAAU,IAC7B2D,EAA4B3D,EAA5B2D,QAASqa,EAAmBhe,EAAnBge,eAEjB,GADmB9e,EAAKwf,MAAhBrY,SACO1C,EAAQ8B,QAAvB,CAEA,IAAIkgE,GAAsB,EAE1B,OADoBhiE,EAAZC,QACQ,UACZ,IAAK,cACD+hE,GAAsB,EAK9B,GAAKA,EAAL,CAEA,IAAIH,EAAiBb,GAAmB11C,KAClC2K,EAAO16B,EAAKosD,QAAQ5+B,QAEtBkN,EAAKiO,YAAcjO,EAAKkO,aAAelO,EAAKqqB,aAC5CuhB,EAAiBb,GAAmBC,iBAG/BjhE,EAAQmT,cACb0uD,EAAiBb,GAAmBC,kBAGxC7hE,QAAQ4F,IAAI,mEAAqE68D,GACjFtmE,EAAK0mE,eAAe5nD,EAAgBra,EAAS6hE,GAC7C,IAAMxmE,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAO,CAAC2E,IAC5BqhE,EAAaa,aAAa,CAACliE,OA5PZzE,EA+PnB4mE,mBAAqB,SAAA9lE,GACjB,GAAKd,EAAK6mE,UAAV,CAD2B,IAGnBpiE,EAAY3D,EAAZ2D,QAER,GADmBzE,EAAKwf,MAAhBrY,SACO1C,EAAQ8B,QAAvB,CAEA,IAAI+/D,EAAiBb,GAAmB11C,KAClC2K,EAAO16B,EAAKosD,QAAQ5+B,QAEtBkN,EAAKiO,YAAcjO,EAAKkO,aAAelO,EAAKqqB,aAC5CuhB,EAAiBb,GAAmBC,iBAG/BjhE,EAAQmT,cACb0uD,EAAiBb,GAAmBC,kBAGxC,IAAM/yD,EAAU,CAAClO,GAEjBZ,QAAQ4F,IAAI,yDAA2D68D,GACvEtmE,EAAK8mE,YAAY9mE,EAAKqtB,eAAe1a,GAAU2zD,GAC/C,IAAMxmE,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAO6S,GAC3BmzD,EAAaa,aAAah0D,MAvRX3S,EA0RnB+mE,uBAAyB,SAAAjmE,GACFd,EAAKwf,MAAhBrY,SACOrG,EAAOyF,SAEjBzF,EAAOkmE,cAEZhnE,EAAKinE,cAAcnmE,EAAOiL,cAhSX/L,EAmSnBknE,kBAAoB,WAChB,GAAKlnE,EAAK0N,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAIrE,IACflG,EAAQgkE,aAAYnnE,EAAKosD,QAASpsD,EAAKonE,UACpCnhE,EAAI,EAAGA,EAAI9C,EAAMgD,OAAQF,IAAK,CACnC,IAAMxB,EAAUzE,EAAK0N,SAASvK,EAAM8C,IACpC,GAAIxB,EAAS,KAAA4iE,EACqB5iE,EAAQ+a,MAA9BrY,EADCkgE,EACDlgE,OAAQC,EADPigE,EACOjgE,UACVqQ,EAAG,GAAAtM,OAAMhE,EAAN,KAAAgE,OAAgB/D,GACzBsG,EAAStM,IAAIqW,EAAKA,IAI1BzV,KAAgBgH,aAAa,CACzBC,QAAS,6BACTyE,SAAUA,MAnTC1N,EAyenBsnE,sBAzemB,eAAA9mE,EAAAP,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAyeK,SAAAC,EAAMyJ,GAAN,IAAAi9D,EAAAC,EAAAvhE,EAAA,OAAAkpB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACdqmE,EAAiB,EACnBC,EAAal9D,GAAUA,EAAOoD,SAASvH,OAAS,GAAKmE,EAAOoD,SAASvH,OAASshE,IAEzExhE,EAAI,EAJO,YAIJA,EAAIshE,GAAkBC,GAJlB,CAAAxmE,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKDlB,EAAKuzD,aALJ,OAKhBjpD,EALgBtJ,EAAAkK,KAMhBs8D,EAAal9D,GAAUA,EAAOoD,SAASvH,OAAS,GAAKmE,EAAOoD,SAASvH,OAASshE,IAN9D,OAI8BxhE,IAJ9BjF,EAAAE,KAAA,iCAAAF,EAAAU,SAAAb,MAzeL,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAmfnBuzD,WAnfmBtzD,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAmfN,SAAAyB,IAAA,IAAA8E,EAAAugE,EAAAld,EAAAlgD,EAAAxK,EAAA,OAAAqvB,EAAAxuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACDiG,EAAWnH,EAAKwf,MAAhBrY,OADC,CAAA7E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,qBAILxB,EAAKwsD,QAJA,CAAAlqD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,qBAMLxB,EAAK2nE,oBANA,CAAArlE,EAAApB,KAAA,eAOLlB,EAAK4nE,wBAPAtlE,EAAAd,OAAA,wBAWLkmE,EAAgB,EAChB1nE,EAAKokB,MAAMzR,SAAW3S,EAAKokB,MAAMzR,QAAQxM,OAAS,IAClDuhE,EAAgB1nE,EAAKokB,MAAMzR,QAAQ,GAAG9P,IAG1C7C,EAAKwsD,SAAU,EAEThC,EAAYxqD,EAAKwqD,UAlBdloD,EAAApB,KAAA,GAmBUc,KAAgBgJ,KAAK,CACpC/B,QAAS,iBACT1C,QAASY,EACTirB,gBAAiBs1C,EACjBp8C,OAAQ,EACR+G,MAAOo1C,MACRrT,QAAQ,WACPp0D,EAAKwsD,SAAU,IA1BV,WAmBLliD,EAnBKhI,EAAA4I,KA6BLs/C,IAAcxqD,EAAKwqD,UA7Bd,CAAAloD,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,qBAiCLxB,EAAKwf,MAAMrY,SAAWA,EAjCjB,CAAA7E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,yBAsCToM,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASiwD,UAChB39D,EAAK6nE,aAAa7nE,EAAKqtB,eAAe/iB,EAAOoD,UAAW,WAC/CpD,EAAOoD,SAASvH,QACjBnG,EAAK4nE,0BAGP9nE,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCo4D,EAAaa,aAAar8D,EAAOoD,UA/CxBpL,EAAAd,OAAA,SAiDF8I,GAjDE,yBAAAhI,EAAAZ,SAAAW,MAnfMrC,EAuiBnBqtB,eAAiB,SAAA3f,GACb,OAAOA,EAAS7B,OAAO,SAAAD,GAAC,MAA2B,yBAAvBA,EAAElH,QAAQ,YAxiBvB1E,EA2iBnB4nE,sBA3iBmB3nE,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KA2iBK,SAAAgrD,IAAA,IAAAzkD,EAAA0V,EAAAtC,EAAAutD,EAAAJ,EAAAld,EAAAlgD,EAAAxK,EAAA,OAAAqvB,EAAAxuB,EAAAI,KAAA,SAAA8qD,GAAA,cAAAA,EAAA5qD,KAAA4qD,EAAA3qD,MAAA,UACZiG,EAAWnH,EAAKwf,MAAhBrY,OADY,CAAA0kD,EAAA3qD,KAAA,eAAA2qD,EAAArqD,OAAA,qBAIhBxB,EAAKwsD,QAJW,CAAAX,EAAA3qD,KAAA,eAAA2qD,EAAArqD,OAAA,oBAMdqb,EAAeF,YAAgBxV,GANjB,CAAA0kD,EAAA3qD,KAAA,eAAA2qD,EAAArqD,OAAA,oBASd+Y,EAAWH,KAAgBI,YAAYqC,GATzB,CAAAgvC,EAAA3qD,KAAA,gBAAA2qD,EAAArqD,OAAA,qBAWf+Y,EAASwtD,6BAXM,CAAAlc,EAAA3qD,KAAA,gBAAA2qD,EAAArqD,OAAA,yBAapBxB,EAAK2nE,qBAAsB,EAbP9b,EAAA3qD,KAAA,GAeSc,KAAgBgJ,KAAK,CAC9C/B,QAAS,uBACT0Q,eAAgBY,EAASwtD,+BAjBT,WAedD,EAfcjc,EAAA3gD,KAAA,CAAA2gD,EAAA3qD,KAAA,gBAAA2qD,EAAArqD,OAAA,yBAsBhBkmE,EAAgB,EAEhB1nE,EAAKokB,MAAMzR,SACX3S,EAAKokB,MAAMzR,QAAQxM,OAAS,GAC5BnG,EAAKokB,MAAMzR,QAAQ,GAAGpM,UAAYuhE,EAAejlE,KAEjD6kE,EAAgB1nE,EAAKokB,MAAMzR,QAAQ,GAAG9P,IAG1C7C,EAAKwsD,SAAU,EAEThC,EAAYxqD,EAAKwqD,UAjCHqB,EAAA3qD,KAAA,GAkCCc,KAAgBgJ,KAAK,CACtC/B,QAAS,iBACT1C,QAASuhE,EAAejlE,GACxBuvB,gBAAiBs1C,EACjBp8C,OAAQ,EACR+G,MAAOo1C,MACRrT,QAAQ,WACPp0D,EAAKwsD,SAAU,IAzCC,WAkCdliD,EAlCcuhD,EAAA3gD,KA4ChBs/C,IAAcxqD,EAAKwqD,UA5CH,CAAAqB,EAAA3qD,KAAA,gBAAA2qD,EAAArqD,OAAA,qBAgDhBxB,EAAKwf,MAAMrY,SAAWA,EAhDN,CAAA0kD,EAAA3qD,KAAA,gBAAA2qD,EAAArqD,OAAA,kBAqDpBoM,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASiwD,UAChB39D,EAAK6nE,aAAa7nE,EAAKqtB,eAAe/iB,EAAOoD,WACvC5N,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCo4D,EAAaa,aAAar8D,EAAOoD,UA1Db,yBAAAm+C,EAAAnqD,SAAAkqD,MA3iBL5rD,EAwmBnBqsD,eAxmBmBpsD,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAwmBF,SAAAiK,IAAA,IAAA1D,EAAAjD,EAAAwjE,EAAAld,EAAAlgD,EAAAxK,EAAA,OAAAqvB,EAAAxuB,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,UACLiG,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAFd,CAAA4D,EAAA7J,KAAA,eAAA6J,EAAAvJ,OAAA,qBAKTxB,EAAKwsD,QALI,CAAAzhD,EAAA7J,KAAA,eAAA6J,EAAAvJ,OAAA,qBAMTxB,EAAK6mE,UANI,CAAA97D,EAAA7J,KAAA,eAAA6J,EAAAvJ,OAAA,wBAQTkmE,EAAgB,EAChB1nE,EAAKokB,MAAMzR,SAAW3S,EAAKokB,MAAMzR,QAAQxM,OAAS,IAClDuhE,EAAgB1nE,EAAKokB,MAAMzR,QAAQ3S,EAAKokB,MAAMzR,QAAQxM,OAAS,GAAGtD,IAGtE7C,EAAKwsD,SAAU,EAEThC,EAAYxqD,EAAKwqD,UAfVz/C,EAAA7J,KAAA,GAgBMc,KAAgBgJ,KAAK,CACpC/B,QAAS,iBACT1C,QAASY,EACTirB,gBAAiBs1C,EACjBp8C,QAASm8C,IAAsB,EAC/Bp1C,MAAOo1C,IAAsB,IAC9BrT,QAAQ,WACPp0D,EAAKwsD,SAAU,IAvBN,WAgBTliD,EAhBSS,EAAAG,KA0BTs/C,IAAcxqD,EAAKwqD,UA1BV,CAAAz/C,EAAA7J,KAAA,gBAAA6J,EAAAvJ,OAAA,qBA8BTxB,EAAKwf,MAAMrY,SAAWA,EA9Bb,CAAA4D,EAAA7J,KAAA,gBAAA6J,EAAAvJ,OAAA,yBAkCT0C,EAAKoT,aACLtX,EAAK6mE,UAAYv8D,EAAOoD,SAASvH,OAAS,GAAKjC,EAAKoT,aAAazU,KAAOyH,EAAOoD,SAAS,GAAG7K,GAE3F7C,EAAK6mE,WAAY,EAGrBx5C,aAAe/iB,EAAQtK,EAAKokB,MAAMzR,SAIlC/E,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASiwD,UAChB95D,QAAQ4F,IAAI,0DACZzJ,EAAK8mE,YAAY9mE,EAAKqtB,eAAe/iB,EAAOoD,UAAW+3D,GAAmB11C,MACpEjwB,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCo4D,EAAaa,aAAar8D,EAAOoD,UAlDpB3C,EAAAvJ,OAAA,SAoDN8I,GApDM,yBAAAS,EAAArJ,SAAAmJ,MAxmBE7K,EAgtBnBmsD,aAAe,WACXnsD,EAAKknE,oBAEL,IAAMxsC,EAAO16B,EAAKosD,QAAQ5+B,QAG1B,GAAIxtB,EAAKgoE,qBAGL,OAFAnkE,QAAQ4F,IAAI,iDACZzJ,EAAKgoE,sBAAuB,GAI5BhoE,EAAKioE,iCACLpkE,QAAQ4F,IAAI,wDAIZixB,EAAKiO,WAAa,GAClB9kC,QAAQ4F,IAAI,kCACZzJ,EAAKuzD,cACE74B,EAAKiO,UAAYjO,EAAKqqB,eAAiBrqB,EAAKkO,eACnD/kC,QAAQ4F,IAAI,sCACZzJ,EAAKqsD,mBAtuBMrsD,EA4uBnBkoE,qBAAuB,SAAA7iD,GAAY,IAAA9F,EACDvf,EAAKwf,MAA3BrY,EADuBoY,EACvBpY,OADuBgd,GAAA5E,EACfnY,UACoBpH,EAAKokB,OAAjCkiD,EAFuBniD,EAEvBmiD,eAAgB3zD,EAFOwR,EAEPxR,QAChBg2B,EAA0CtjB,EAA1CsjB,UAAWC,EAA+BvjB,EAA/BujB,aAAcmc,EAAiB1/B,EAAjB0/B,aAUjC,GARAlhD,QAAQ4F,IAAR,8DAAA0B,OAEqBm7D,EAFrB,uCAAAn7D,OAGwBw9B,EAHxB,0CAAAx9B,OAI2By9B,EAJ3B,0CAAAz9B,OAK2B45C,EAL3B,4BAAA55C,OAMahE,IAETm/D,IAAmBb,GAAmB11C,WACnC,GAAIu2C,IAAmBb,GAAmBC,iBAC7C1lE,EAAKmoE,sBACF,GAAI7B,IAAmBb,GAAmBG,kBAC7C5lE,EAAKooE,uBACF,GAAI9B,IAAmBb,GAAmBE,iBAAkB,CAC/D,IAAMjrC,EAAO16B,EAAKosD,QAAQ5+B,QAC1B3pB,QAAQ4F,IAAR,qEAAA0B,OAEqBuvB,EAAKiO,UAF1B,2CAAAx9B,OAGwBuvB,EAAKqqB,aAH7B,2CAAA55C,OAIwBuvB,EAAKkO,aAJ7B,gCAAAz9B,OAKahE,IAIb,IADA,IAAIkhE,GAAW,EACNpiE,EAAI,EAAGA,EAAI0M,EAAQxM,OAAQF,IAAK,CACrC,IAAIqiE,EAAgBtoE,EAAKuoE,SAASnlE,IAAI6C,GAClCzC,EAAOo5D,eAAqB0L,GAChC,GAAI9kE,GAEI8kE,EAAc9oD,MAAM+kD,oBAAqB,CACzC7pC,EAAKiO,UAAYnlC,EAAKq5D,UACtBwL,GAAW,EACX,OAKPA,GACDroE,EAAKmoE,iBAGTtkE,QAAQ4F,IAAR,oEAAA0B,OAEqBuvB,EAAKiO,UAF1B,2CAAAx9B,OAGwBuvB,EAAKqqB,aAH7B,2CAAA55C,OAIwBuvB,EAAKkO,aAJ7B,gCAAAz9B,OAKahE,SAEV,GAAIm/D,IAAmBb,GAAmBI,qBAAsB,CACnE,IAAMnrC,EAAO16B,EAAKosD,QAAQ5+B,QAC1B3pB,QAAQ4F,IAAR,yEAAA0B,OAEqBuvB,EAAKiO,UAF1B,2CAAAx9B,OAGwBuvB,EAAKqqB,aAH7B,2CAAA55C,OAIwBuvB,EAAKkO,aAJ7B,gCAAAz9B,OAKahE,IAEbuzB,EAAKiO,UAAYA,GAAajO,EAAKkO,aAAeA,GAClD/kC,QAAQ4F,IAAR,wEAAA0B,OAEqBuvB,EAAKiO,UAF1B,2CAAAx9B,OAGwBuvB,EAAKqqB,aAH7B,2CAAA55C,OAIwBuvB,EAAKkO,aAJ7B,gCAAAz9B,OAKahE,MAhzBFnH,EAqzBnBooE,gBAAkB,WAAM,IAAA1nD,EACU1gB,EAAKwf,MAA3BrY,EADYuZ,EACZvZ,OAAQC,EADIsZ,EACJtZ,UACRuL,EAAY3S,EAAKokB,MAAjBzR,QAEF+nB,EAAO16B,EAAKosD,QAAQ5+B,QAC1B3pB,QAAQ4F,IAAR,uCAAA0B,OAC2C/D,EAD3C,2CAAA+D,OAEqBuvB,EAAKiO,UAF1B,uCAAAx9B,OAGwBuvB,EAAKqqB,aAH7B,uCAAA55C,OAIwBuvB,EAAKkO,aAJ7B,4BAAAz9B,OAKahE,IAIb,IADA,IAAIkhE,GAAW,EACNpiE,EAAI,EAAGA,EAAI0M,EAAQxM,OAAQF,IAAK,CACrC,IAAIqiE,EAAgBtoE,EAAKuoE,SAASnlE,IAAI6C,GAClCzC,EAAOo5D,eAAqB0L,GAChC,GAAI9kE,GAEI8kE,EAAc9oD,MAAMpY,YAAcA,EAAW,CAC7CszB,EAAKiO,UAAYnlC,EAAKq5D,UAAYniC,EAAKqqB,aAAe,EACtDsjB,GAAW,EACX,OAKPA,GACDroE,EAAKmoE,iBAGTtkE,QAAQ4F,IAAR,uCAAA0B,OAC2C/D,EAD3C,0CAAA+D,OAEqBuvB,EAAKiO,UAF1B,uCAAAx9B,OAGwBuvB,EAAKqqB,aAH7B,uCAAA55C,OAIwBuvB,EAAKkO,aAJ7B,4BAAAz9B,OAKahE,KAz1BEnH,EA61BnBmoE,eAAiB,WACbnoE,EAAKgoE,sBAAuB,EAC5B,IAAMttC,EAAO16B,EAAKosD,QAAQ5+B,QAC1B3pB,QAAQ4F,IAAR,oEAAA0B,OAEwBuvB,EAAKkO,aAF7B,uCAAAz9B,OAGwBuvB,EAAKqqB,aAH7B,oCAAA55C,OAIqBuvB,EAAKiO,UAJ1B,4BAAAx9B,OAKanL,EAAKwf,MAAMrY,SAGFuzB,EAAKkO,aAAelO,EAAKqqB,eACzBrqB,EAAKiO,WACvBjO,EAAKiO,UAAYjO,EAAKkO,aAAelO,EAAKqqB,aAC1ClhD,QAAQ4F,IAAR,oEAAA0B,OAEqBuvB,EAAKiO,UAF1B,2CAAAx9B,OAGwBuvB,EAAKqqB,aAH7B,2CAAA55C,OAIwBuvB,EAAKkO,aAJ7B,8CAAAz9B,OAK2BnL,EAAKgoE,qBALhC,gCAAA78D,OAManL,EAAKwf,MAAMrY,UAGxBtD,QAAQ4F,IAAR,oFAAA0B,OAEqBuvB,EAAKiO,UAF1B,2CAAAx9B,OAGwBuvB,EAAKqqB,aAH7B,2CAAA55C,OAIwBuvB,EAAKkO,aAJ7B,8CAAAz9B,OAK2BnL,EAAKgoE,qBALhC,gCAAA78D,OAManL,EAAKwf,MAAMrY,UA13BbnH,EA+3BnBwoE,cA/3BmBvoE,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KA+3BH,SAAA6nE,IAAA,IAAAthE,EAAAjD,EAAAmuB,EAAAm4B,EAAAlgD,EAAAxK,EAAA,OAAAqvB,EAAAxuB,EAAAI,KAAA,SAAA2nE,GAAA,cAAAA,EAAAznE,KAAAynE,EAAAxnE,MAAA,UACJiG,EAAWnH,EAAKwf,MAAhBrY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAFf,CAAAuhE,EAAAxnE,KAAA,eAAAwnE,EAAAlnE,OAAA,wBAKZxB,EAAKwqD,UAAY5xC,KAAKI,MACtBhZ,EAAKwsD,SAAU,EACfxsD,EAAK6mE,WAAY,EAEK,EACP,EACTx0C,EAAQo1C,IAERjd,EAAYxqD,EAAKwqD,UAbXke,EAAAxnE,KAAA,GAcSc,KAAgBgJ,KAAK,CACtC/B,QAAS,iBACT1C,QAASrC,EAAKrB,GACduvB,gBARkB,EASlB9G,OARW,EASX+G,MAAOA,IAnBC,WAcN/nB,EAdMo+D,EAAAx9D,KAsBRs/C,IAAcxqD,EAAKwqD,UAtBX,CAAAke,EAAAxnE,KAAA,gBAAAwnE,EAAAlnE,OAAA,qBA4BRxB,EAAKwf,MAAMrY,SAAWA,EA5Bd,CAAAuhE,EAAAxnE,KAAA,gBAAAwnE,EAAAlnE,OAAA,kBAgCR0C,EAAKoT,aACLtX,EAAK6mE,UAAYv8D,EAAOoD,SAASvH,OAAS,GAAKjC,EAAKoT,aAAazU,KAAOyH,EAAOoD,SAAS,GAAG7K,GAE3F7C,EAAK6mE,WAAY,EAGrBj5D,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASiwD,UAGS,EACzB95D,QAAQ4F,IAAI,yCAEZzJ,EAAK2qC,QAHoB,EAGQrgC,EAAOoD,SAAU+3D,GAAmBC,kBAG/D5lE,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCmG,YAAiB/T,EAAO,CAACqH,IAEzB2+D,EAAaa,aAAar8D,EAAOoD,UAEjC1N,EAAKsnE,sBAAsBh9D,GAtDf,yBAAAo+D,EAAAhnE,SAAA+mE,MA/3BGzoE,EAw7BnB2oE,oBAAsB,SAAAn9D,GAClBA,EAAMod,iBACNpd,EAAMqa,kBAFqB,IAInB1e,EAAWnH,EAAKwf,MAAhBrY,OACH4V,YAAa5V,IAElBoR,KAAiBqoD,aAAY,IA57B7B/8D,QAAQ4F,IAAR,6BAAA0B,OAAyCqU,EAAMrY,OAA/C,gBAAAgE,OAAoEqU,EAAMpY,YAE1EpH,EAAKwqD,UAAY5xC,KAAKI,MACtBhZ,EAAKokB,MAAQ,CACT8e,WAAY,EACZ0lC,cAAe,KACf3C,cAAc,EACdtzD,QAAS,GACTotC,cAAc,EACdsmB,iBAAiB,EACjBC,eAAgBb,GAAmB11C,KACnC84C,mBAAoB,GAGxB7oE,EAAKosD,QAAUlsC,IAAMie,YACrBn+B,EAAKonE,SAAWlnD,IAAMie,YAEtBn+B,EAAKuoE,SAAW,IAAIl/D,IAEpBrJ,EAAKknE,kBAAoB4B,aAAS9oE,EAAKknE,kBAAmB,KAtB3ClnE,uFAyCKmlB,EAAWC,GAAW,IAClCje,EAAWhH,KAAKqf,MAAhBrY,OAEFuzB,EAAOv6B,KAAKisD,QAAQ5+B,QACpBnI,EAAW,CACbsjB,UAAWjO,EAAKiO,UAChBC,aAAclO,EAAKkO,aACnBmc,aAAcrqB,EAAKqqB,cAWvB,OARAlhD,QAAQ4F,IAAR,iEAAA0B,OAEqBuvB,EAAKiO,UAF1B,uCAAAx9B,OAGwBuvB,EAAKkO,aAH7B,uCAAAz9B,OAIwBuvB,EAAKqqB,aAJ7B,4BAAA55C,OAKahE,IAGNke,6CAGQF,EAAWC,EAAWC,GAAU,IAAAkD,EACjBpoB,KAAKqf,MAA3BrY,EADuCohB,EACvCphB,OAAQC,EAD+BmhB,EAC/BnhB,UAEVszB,EAAOv6B,KAAKisD,QAAQ5+B,QAC1B3pB,QAAQ4F,IAAR,2CAAA0B,OAC+ChE,EAD/C,gBAAAgE,OACoE/D,EADpE,kCAAA+D,OAEmBga,EAAUhe,OAF7B,qBAAAgE,OAEuDga,EAAU/d,UAFjE,oCAAA+D,OAGqBuvB,EAAKiO,UAH1B,uCAAAx9B,OAIwBuvB,EAAKkO,aAJ7B,uCAAAz9B,OAKwBuvB,EAAKqqB,eAGzB5/B,EAAUhe,SAAWA,GAAUge,EAAU/d,YAAcA,EACvDjH,KAAK2jD,iBAAiB38C,EAAQge,EAAUhe,OAAQC,EAAW+d,EAAU/d,WAErEjH,KAAK+nE,qBAAqB7iD,iDAIZN,EAAWC,GAAW,IAAA+D,EACH5oB,KAAKqf,MAAlCrY,EADgC4hB,EAChC5hB,OAAQC,EADwB2hB,EACxB3hB,UAAWga,EADa2H,EACb3H,MADakf,EAEmCngC,KAAKikB,MAAxE6hD,EAFgC3lC,EAEhC2lC,aAActzD,EAFkB2tB,EAElB3tB,QAASgnD,EAFSr5B,EAETq5B,SAAU5Z,EAFDzf,EAECyf,aAAcsmB,EAFf/lC,EAEe+lC,gBAEvD,OAAIthD,EAAU3D,QAAUA,IAIpB2D,EAAU5d,SAAWA,IAIrB4d,EAAU3d,YAAcA,IAIxB4d,EAAUihD,eAAiBA,IAI3BjhD,EAAUrS,UAAYA,IAItBqS,EAAU20C,WAAaA,IAIvB30C,EAAU+6B,eAAiBA,GAI3B/6B,EAAUqhD,kBAAoBA,oDAOlB,IACRl/D,EAAWhH,KAAKqf,MAAhBrY,OACRhH,KAAK2jD,iBAAiB38C,EAAQ,GAE9ByG,KAAa8T,GAAG,mBAAoBvhB,KAAKymE,oBACzCh5D,KAAa8T,GAAG,uBAAwBvhB,KAAK4mE,wBAC7Cn5D,KAAa8T,GAAG,uBAAwBvhB,KAAK4jE,wBAC7Cn2D,KAAa8T,GAAG,6BAA8BvhB,KAAKqmE,8BACnD54D,KAAa8T,GAAG,8BAA+BvhB,KAAKimE,yBACpDx4D,KAAa8T,GAAG,6BAA8BvhB,KAAKimE,yBACnDrzD,IAAU2O,GAAG,wBAAyBvhB,KAAKomE,yBAC3CxzD,IAAU2O,GAAG,2BAA4BvhB,KAAK0xD,4BAE9C3hC,KAAYxO,GAAG,0BAA2BvhB,KAAKw/B,2BAC/CzP,KAAYxO,GAAG,0BAA2BvhB,KAAK+lE,2BAC/Ch2C,KAAYxO,GAAG,uBAAwBvhB,KAAKo/B,uEAI5C3xB,KAAazL,eAAe,mBAAoBhC,KAAKymE,oBACrDh5D,KAAazL,eAAe,uBAAwBhC,KAAK4mE,wBACzDn5D,KAAazL,eAAe,uBAAwBhC,KAAK4jE,wBACzDn2D,KAAazL,eAAe,6BAA8BhC,KAAKqmE,8BAC/D54D,KAAazL,eAAe,8BAA+BhC,KAAKimE,yBAChEx4D,KAAazL,eAAe,6BAA8BhC,KAAKimE,yBAC/DrzD,IAAU5Q,eAAe,wBAAyBhC,KAAKomE,yBACvDxzD,IAAU5Q,eAAe,2BAA4BhC,KAAK0xD,4BAE1D3hC,KAAY/tB,eAAe,0BAA2BhC,KAAKw/B,2BAC3DzP,KAAY/tB,eAAe,0BAA2BhC,KAAK+lE,2BAC3Dh2C,KAAY/tB,eAAe,uBAAwBhC,KAAKo/B,yGAyLrCp4B,EAAQshD,EAAgBrhD,EAAW+hD,2GAChDjlD,EAAO6O,IAAU3P,IAAI+D,GACrB4hE,EAAeh2D,IAAU3P,IAAIqlD,GAEnCtoD,KAAKqqD,UAAY5xC,KAAKI,MACtB7Y,KAAKqsD,SAAU,EACfrsD,KAAK0mE,WAAY,EACjB1mE,KAAKwnE,qBAAsB,EAE3BxnE,KAAK8nE,kCAAmC,GACpC/jE,0BACAlC,KAAgBgJ,KAAK,CACjB/B,QAAS,WACT1C,QAASrC,EAAKrB,KAGZggE,GAAUz7D,GAAalD,EAAK6T,aAAe,EAC3C2vD,EACF7E,GAAU3+D,EAAK6T,aAAe,EAAI7T,EAAK8kE,2BAA6B5hE,GAAwB,EAC1FkkB,EAAUu3C,GAAU3+D,EAAK6T,aAAe,GAAM3Q,GAAa,EAAIqgE,IAAsB,EACrFp1C,EACDwwC,GAAU3+D,EAAK6T,aAAe,GAAM3Q,EAAY,EAAIqgE,IAAsBA,IAEzEjd,EAAYrqD,KAAKqqD,oBACFxoD,KAAgBgJ,KAAK,CACtC/B,QAAS,iBACT1C,QAASrC,EAAKrB,GACduvB,gBAAiBs1C,EACjBp8C,OAAQA,EACR+G,MAAOA,eALL/nB,SAQFkgD,IAAcrqD,KAAKqqD,gEAMnBtmD,EAAKoT,aACLnX,KAAK0mE,UAAYv8D,EAAOoD,SAASvH,OAAS,GAAKjC,EAAKoT,aAAazU,KAAOyH,EAAOoD,SAAS,GAAG7K,GAE3F1C,KAAK0mE,WAAY,EAGrBj5D,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASiwD,UAGZkL,EAAqBr2C,OAAOy2C,YAC5B/kE,GAAQA,EAAK6T,aAAe,oBACnB9R,EAAIqE,EAAOoD,SAASvH,OAAS,eAAGF,GAAK,uBAClCpD,EAAOyH,EAAOoD,SAASzH,GAAvBpD,MAEHyH,EAAOoD,SAASzH,GAAG2R,aACpB/U,EAAKqB,EAAK8kE,4BACVnmE,EAAKgmE,oBAELA,EAAqBhmE,8DAPoBoD,4BAarD4iE,EAAqBA,IAAuBr2C,OAAOy2C,UAAY,EAAIJ,EACnEhlE,QAAQ4F,IAAI,uCAAyCo/D,GAEjDvC,EAAiBb,GAAmBC,iBACpCt+D,EACAk/D,EAAiBb,GAAmBG,kBAC7B/C,GAAUgG,IACjBvC,EAAiBb,GAAmBE,kBAGxCxlE,KAAKwqC,QAAQk+B,EAAoBv+D,EAAOoD,SAAU44D,EAAgB,WAC9D37D,EAAKs9D,kCAAmC,EACpC7gE,GACAotB,aAAiBrtB,EAAQC,KAK3BtH,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCmG,YAAiB/T,EAAO,CAACqH,IACzB2M,YAAiBhU,EAAOqH,GAExB2+D,EAAaa,aAAar8D,EAAOoD,UAEjCvN,KAAKmnE,sBAAsBh9D,GAG3BiS,YAAgBrY,EAAKrB,4BAErB1C,KAAKwqC,QACD,EACA,GACA86B,GAAmBC,iBACnB,kBAAO/6D,EAAKs9D,kCAAmC,YAInDc,GACA/mE,KAAgBgJ,KAAK,CACjB/B,QAAS,YACT1C,QAASwiE,EAAalmE,iKAiBR6K,GAEtB,IAAK,IAAIzH,EAAIyH,EAASvH,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAIxB,EAAUiJ,EAASzH,GACvB,GAAIxB,GAAWA,EAAQC,QACnB,OAAQD,EAAQC,QAAQ,UACpB,IAAK,eAAgB,IAAAwkE,EACD/oE,KAAKgpE,gBAAgB1kE,GADpB2kE,EAAAnpE,OAAA46C,EAAA,EAAA56C,CAAAipE,EAAA,GACZrmE,EADYumE,EAAA,GAEjB,GAFiBA,EAAA,GAGHh5D,aAAa3L,EAAQC,QAAQK,MAAMmB,OACpCoC,MACLvI,IAAUuS,oBAAoBzP,EAAI4B,GAG1C,MAEJ,IAAK,iBAAkB,IAAA4kE,EACHlpE,KAAKmpE,kBAAkB7kE,GADpB8kE,EAAAtpE,OAAA46C,EAAA,EAAA56C,CAAAopE,EAAA,GACdxmE,EADc0mE,EAAA,GAEnB,GAFmBA,EAAA,GAGL9kE,EAAQC,QAAQa,QAAQA,QACzB+C,MACLvI,IAAUuS,oBAAoBzP,EAAI4B,qCAkMtDokE,EAAoBl2D,EAAS2zD,EAAgB98D,GACjDrJ,KAAKukB,SACD,CAAEmkD,mBAAoBA,EAAoBl2D,QAASA,EAAS2zD,eAAgBA,GAC5E98D,wCAIKmJ,EAASnJ,GACK,IAAnBmJ,EAAQxM,OAKZhG,KAAKukB,SACD,CAAE/R,QAASA,EAAQxH,OAAOhL,KAAKikB,MAAMzR,SAAU2zD,eAAgBb,GAAmBI,sBAClFr8D,GANIA,GAAUA,2CAUPggE,EAAc/kE,EAAS6hE,EAAgB98D,GAC7C/E,GAELtE,KAAKukB,SACD,CACI/R,QAASxS,KAAKikB,MAAMzR,QAAQ9G,OAAO,SAAAD,GAAC,OAAIA,EAAE/I,KAAO2mE,IAAcr+D,OAAO,CAAC1G,IACvE6hE,eAAgBA,GAEpB98D,uCAIImJ,EAAS2zD,EAAgB98D,GACV,IAAnBmJ,EAAQxM,QAEZhG,KAAKukB,SAAS,CAAE/R,QAASxS,KAAKikB,MAAMzR,QAAQxH,OAAOwH,GAAU2zD,eAAgBA,GAAkB98D,yCAGrFuC,EAAavC,GAAU,IACzBmJ,EAAYxS,KAAKikB,MAAjBzR,QACR,GAAuB,IAAnBA,EAAQxM,OAAZ,CAEA,IAAIwH,EAAM,IAAItE,IAAI0C,EAAY4B,IAAI,SAAA/B,GAAC,MAAI,CAACA,EAAGA,MAE3CzL,KAAKukB,SACD,CAAE/R,QAASA,EAAQ9G,OAAO,SAAAD,GAAC,OAAK+B,EAAI1K,IAAI2I,EAAE/I,MAAMyjE,eAAgBb,GAAmBC,kBACnFl8D,qCAsPC,IAAAglC,EAAAruC,KACGwgB,EAAYxgB,KAAKqf,MAAjBmB,QADH4f,EAEkEpgC,KAAKikB,MAApEzR,EAFH4tB,EAEG5tB,QAASk2D,EAFZtoC,EAEYsoC,mBAAoB9oB,EAFhCxf,EAEgCwf,aAAcsmB,EAF9C9lC,EAE8C8lC,gBA6BnD,OA3BAxiE,QAAQ4F,IAAR,oCAAA0B,OAAgD40C,GAAgBptC,GAEhExS,KAAKooE,SAASnpD,QACdjf,KAAKuN,SAAWqyC,EACV,KACAptC,EAAQhF,IAAI,SAAC/B,EAAG3F,GAAJ,OACRgR,aAAiBrL,GACbkU,EAAAnf,EAAAkM,cAAC48D,GAAD,CACIhyD,IAAG,WAAAtM,OAAaS,EAAErF,QAAf,gBAAA4E,OAAqCS,EAAE/I,IAC1C27B,IAAK,SAAAkQ,GAAE,OAAIF,EAAK+5B,SAASnnE,IAAI6E,EAAGyoC,IAChCvnC,OAAQyE,EAAErF,QACVa,UAAWwE,EAAE/I,GACb0hE,oBAAqBsE,IAAuBj9D,EAAE/I,KAGlDid,EAAAnf,EAAAkM,cAAC68D,GAAD,CACIjyD,IAAG,WAAAtM,OAAaS,EAAErF,QAAf,gBAAA4E,OAAqCS,EAAE/I,IAC1C27B,IAAK,SAAAkQ,GAAE,OAAIF,EAAK+5B,SAASnnE,IAAI6E,EAAGyoC,IAChCvnC,OAAQyE,EAAErF,QACVa,UAAWwE,EAAE/I,GACb8mE,WAAS,EACT/G,aAAch3D,EAAEmT,cAChBwlD,oBAAqBsE,IAAuBj9D,EAAE/I,OAM5Did,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAWH,EAAQ8W,WAAY,gBAAiB,CACvDmyC,iCAAkCvD,IAEtCtF,YAAa5gE,KAAKwoE,qBAClB7oD,EAAAnf,EAAAkM,cAAA,OAAK2xB,IAAKr+B,KAAKisD,QAASrsC,UAAU,wBAAwBwtC,SAAUptD,KAAKgsD,cACrErsC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,sBACfD,EAAAnf,EAAAkM,cAAA,OAAK2xB,IAAKr+B,KAAKinE,SAAUrnD,UAAU,uBAC9B5f,KAAKuN,WAGdoS,EAAAnf,EAAAkM,cAACg9D,GAAD,MACA/pD,EAAAnf,EAAAkM,cAACw2B,GAAA,EAAD,0DAp9BoB7jB,EAAO4E,GACnC,OAAI5E,EAAMrY,SAAWid,EAAM8e,YAAc1jB,EAAMpY,YAAcgd,EAAMwkD,cACxD,CACH1lC,WAAY1jB,EAAMrY,OAClByhE,cAAeppD,EAAMpY,UACrB24C,cAAc,EACdsmB,iBAAiB,EACjBC,eAAgBb,GAAmBC,iBACnCmD,mBAAoB,GAIrB,0CAsZSn7D,GACXA,GACmB,IAApBA,EAASvH,QACRuH,EAAS,GAAGnH,SAEjBvE,KAAgBgJ,KAAK,CACjB/B,QAAS,eACT1C,QAASmH,EAAS,GAAGnH,QACrBwF,YAAa2B,EAASC,IAAI,SAAA/B,GAAC,OAAIA,EAAE/I,cArclBqd,IAAMC,WAq/BlBgB,OA3/BA,SAAAC,GAAK,MAAK,CACrBqW,WAAY,CACRA,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQ8sB,KAAK,KAAO,iBAy/B5C,CAAEtiC,WAAW,GAAhCpG,CAAwC2kD,IClgCjDgE,sNACF1lD,MAAQ,CACJjd,OAAQoR,KAAiBwvC,gBAiB7BgiB,+BAAiC,SAAAjpE,GAAU,IAC/BqG,EAAWrG,EAAXqG,OAERnH,EAAK0kB,SAAS,CAAEvd,cAGpB8mC,YAAc,WACVjsC,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,0FAvBM4d,EAAWC,EAAWC,GAAa,IAC7C9d,EAAWhH,KAAKikB,MAAhBjd,OAER,OAAO6d,EAAU7d,SAAWA,8CAI5BoR,KAAiBmJ,GAAG,2BAA4BvhB,KAAK4pE,+EAIrDxxD,KAAiBpW,eAAe,2BAA4BhC,KAAK4pE,iEAgB5D,IACGppD,EAAYxgB,KAAKqf,MAAjBmB,QACAxZ,EAAWhH,KAAKikB,MAAhBjd,OACR,OAAKA,EAGD2Y,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACIyJ,MAAI,EACJkgB,mBAAoB,EACpBX,QAASxpB,KAAK8tC,YACdttB,QAAS,CAAEgC,KAAMhC,EAAQiuB,WAAYwsB,UAAWz6C,EAAQqpD,cAAerwB,MAAOh5B,EAAQspD,YACtFnqD,EAAAnf,EAAAkM,cAACq9D,GAAD,CAAUnqD,UAAWY,EAAQwpD,aAAchjE,OAAQA,EAAQwtB,OAAK,KARpD,YAnCCzU,IAAMC,YAmDpBgB,OAnEA,SAAAC,GAAK,MAAK,CACrB+oD,aAAc,CACVx6D,MAAO,KAEXq6D,cAAe,CACXI,WAAY,SAEhBx7B,WAAY,CACRzsB,MAAOf,EAAM2b,QAAQlf,KAAKmf,QAC1BhG,OAAQ,GAEZizC,UAAW,CACPt6D,MAAO,OAuDAwR,CAAmB2oD,wDChD5BO,8MACFjmD,MAAQ,CACJmiB,SAAU,QAGdC,gBAAkB,SAAAh7B,GACdxL,EAAKw3C,WAAWhsC,EAAMi7B,kBAG1B+Q,WAAa,SAAAjR,GACTvmC,EAAK0kB,SAAS,CAAE6hB,gBAGpB0H,YAAc,WACVjuC,EAAK0kB,SAAS,CAAE6hB,SAAU,UAG9B4U,eAAiB,WACbn7C,EAAKiuC,cADc,IAGXz2B,EAAMxX,EAAKwf,MAAXhI,EAEF4jC,EAAOp7C,EAAKsqE,gBAAgBvwC,KAAa9lB,YAC/C,GAAKmnC,EAAL,CAEAC,IAAKD,GAEL,IAAM3jC,EAAG,GAAAtM,OAAMiwC,EAAN,uBACH32C,EAAU+S,EAAE,cAGlBxX,EAAKs7C,sBAAsB7jC,EAAKhT,EAFjB,UAKnB6lE,gBAAkB,SAAAr2D,GACd,IAAKA,EAAY,MAAO,GADI,IAGpB8+B,EAAS9+B,EAAT8+B,KACR,IAAKA,EAAM,MAAO,GAElB,IAAMoR,EAAoBC,KAAYhhD,IAAI,YAE1C,OAAQ+gD,EAAoBA,EAAkB1uC,MAAQ,yBAA2B,eAAiBs9B,KAGtGuI,sBAAwB,SAAC7jC,EAAKhT,EAASiR,GACnC,GAAK+B,EAAL,CAD8C,IAAA8H,EAGNvf,EAAKwf,MAArC+7B,EAHsCh8B,EAGtCg8B,gBAAiB56B,EAHqBpB,EAGrBoB,QAHqBpB,EAGZ/H,EAClC,GAAK+jC,EAAL,CAIIhjC,KAAiBijC,mBAAmB/jC,EAAKgkC,IAAqC,IAAsB/lC,IAEpG6lC,EAAgB92C,EAAS,CACrBi3C,iBAAkBD,IAClB/lC,OAAQ,CACJoK,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACI8W,IAAI,QACJ0vB,aAAW,QACXhlB,MAAM,UACNpC,UAAWY,EAAQ0P,MACnBpQ,QAAS,kBAAM1H,KAAiBojC,sBAAsBlkC,KACtDqI,EAAAnf,EAAAkM,cAAC2+B,EAAA7qC,EAAD,eAOpB4pE,YAAc,WACVvqE,EAAKiuC,cAEL,IAAMmN,EAAOp7C,EAAKsqE,gBAAgBvwC,KAAa9lB,YAC1CmnC,IAELp5C,KAAgBgH,aAAa,CACzBC,QAAS,yBACTgL,WAAY,OAGhBjS,KAAgBgH,aAAa,CACzBC,QAAS,sBACTiyC,KAAM,CAAEE,oFAIP,IAAA16B,EAC6BvgB,KAAKqf,MAA/BmB,EADHD,EACGC,QAASnJ,EADZkJ,EACYlJ,EAAGuI,EADfW,EACeX,UACZwmB,EAAapmC,KAAKikB,MAAlBmiB,SAER,OACIzmB,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAACo6B,EAAAtmC,EAAD,CACIof,UAAWY,EAAQumB,WAAa,IAAMnnB,EACtConB,aAAW,QACX/8B,KAAMgT,QAAQmpB,GACdtmB,QAAS9f,KAAKqmC,iBACd1mB,EAAAnf,EAAAkM,cAACwzC,GAAA1/C,EAAD,OAEJmf,EAAAnf,EAAAkM,cAACw6B,GAAA1mC,EAAD,CACIkC,GAAG,cACH0jC,SAAUA,EACVn8B,KAAMgT,QAAQmpB,GACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB1d,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBL,QAASxpB,KAAK8tC,aACdnuB,EAAAnf,EAAAkM,cAACud,GAAAzpB,EAAD,CAAUsf,QAAS9f,KAAKg7C,gBACpBr7B,EAAAnf,EAAAkM,cAAC66B,GAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAAC29D,GAAA7pE,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CAAcq8B,QAASxlB,EAAE,eAE7BsI,EAAAnf,EAAAkM,cAACud,GAAAzpB,EAAD,CAAUsf,QAAS9f,KAAKoqE,aACpBzqD,EAAAnf,EAAAkM,cAAC66B,GAAA/mC,EAAD,KACImf,EAAAnf,EAAAkM,cAAC49D,GAAA9pE,EAAD,OAEJmf,EAAAnf,EAAAkM,cAAC+6B,GAAAjnC,EAAD,CAAcq8B,QAASxlB,EAAE,6BA/Hb0I,IAAMC,WA+I3B4G,GANCC,YACZ7F,IAhJW,SAAAC,GAAK,MAAK,CACrBiP,MAAO,CACH7M,QAASpC,EAAMu8B,QAAQC,KAAO,KA8If,CAAEr2B,WAAW,IAChCC,cACAs2B,eAGW/2B,CAAQsjD,ICvHjBK,uBACF,SAAAA,EAAYlrD,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAuqE,IACf1qE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAyqE,GAAApqE,KAAAH,KAAMqf,KAwBVmrD,iCAAmC,SAAA7pE,GAAU,IACjCmT,EAAe8lB,KAAf9lB,WAERjU,EAAK0kB,SAAS,CAAEzQ,gBA5BDjU,EA+BnB4qE,6BAA+B,SAAA9pE,GAAU,IAC7BmT,EAAenT,EAAfmT,WAIR,GAFAjU,EAAK0kB,SAAS,CAAEzQ,eAEZA,EAAY,CACZ,IAAMnU,EAAQC,IAAUuD,WACxB0Q,YAAsBlU,EAAOmU,KAtClBjU,EA0CnBiuC,YAAc,WACVjsC,KAAgBgH,aAAa,CACzBC,QAAS,yBACTgL,WAAY,QA7CDjU,EAiDnB8wD,WAAa,WAAM,IACP78C,EAAejU,EAAKokB,MAApBnQ,WACR,GAAKA,EAAL,CAFe,IAIPmmB,EAAiBnmB,EAAjBmmB,aAERp4B,KAAgBgJ,KAAK,CACjB/B,QAAS,mBACTimB,OAAQjb,EAAWpR,GACnBu3B,cAAeA,IAGnBp6B,EAAKiuC,gBA7DUjuC,EAgEnB8jC,mBAAqB,SAAAC,GAAa,IAGxBx+B,EAFiBvF,EAAKokB,MAApBnQ,WACAE,SACiB6vB,KAAK,SAAAp4B,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOkhC,IACpD,GAAKx+B,EAAL,CAEA,IAAMzF,EAAQC,IAAUuD,WACxBiN,YAAmBzQ,EAAOyF,EAAS,MAEXvF,EAAKwkC,oBAAoBT,GACjCxgC,QAAQ,SAAAqI,GACpB2E,YAAmBzQ,EAAO8L,EAAG,UA3ElB5L,EA+EnBwkC,oBAAsB,SAAAT,GAAa,IACvB9vB,EAAejU,EAAKokB,MAApBnQ,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBE,EAAaF,EAAbE,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAMswB,EAAU,GACV/xB,EAAQyB,EAASqd,UAAU,SAAA5lB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOkhC,IACvD,IAAe,IAAXrxB,EAAc,MAAO,GAEzB,IACMgyB,EAAM9f,KAAKC,MAAMnS,EADE,GAEnBiyB,EAASjyB,EAFU,EAInBkyB,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ96B,KAXS,EAWei7B,EAAUE,GAE9CL,EAAQ96B,KAba,EAaWi7B,EAAUD,GACtCI,EAdiB,GAejBN,EAAQ96B,KAfS,EAeei7B,EAAUG,IAI9CD,GAAc,GACdL,EAAQ96B,KApBa,EAoBW+6B,EAAMI,GAEtCC,EAtBqB,GAuBrBN,EAAQ96B,KAvBa,EAuBW+6B,EAAMK,GAGtCF,EAAUjgB,KAAKogB,KAAK7wB,EAAShO,OA1BR,KA2BjB2+B,GAAc,GACdL,EAAQ96B,KA5BS,EA4Bek7B,EAAUC,GAE9CL,EAAQ96B,KA9Ba,EA8BWk7B,EAAUF,GACtCI,EA/BiB,GAgCjBN,EAAQ96B,KAhCS,EAgCek7B,EAAUE,IAI3CN,EAAQ92B,IAAI,SAAA1H,GAAC,OAAIkO,EAASlO,MA9HlBjG,EAiInBilC,gBAAkB,SAAAz5B,GACd,IAAMu4B,EAAYvR,OAAOhnB,EAAMC,OAAOy5B,QAAQnB,WACzCA,GAEA/jC,EAAKmlC,YAEVnlC,EAAK0kB,SAAS,CAAEqf,cAChB/jC,EAAK8jC,mBAAmBC,KAxIT/jC,EA2InBqlC,gBAAkB,SAAA75B,GACd,IAAMu4B,EAAYvR,OAAOhnB,EAAMC,OAAOy5B,QAAQnB,WAC9C,GAAKA,EAUL,OARA/jC,EAAK0kB,SAAS,CAAEqf,cAChB/jC,EAAK8jC,mBAAmBC,GAExB/jC,EAAKmlC,WAAY,EACjBlgC,SAASqgC,iBAAiB,UAAWtlC,EAAKulC,eAE1C/5B,EAAMod,iBACNpd,EAAMqa,mBACC,GAvJQ7lB,EA0JnBulC,cAAgB,WACZvlC,EAAK0kB,SAAS,CAAEqf,UAAW,IAC3B/jC,EAAKmlC,WAAY,EACjBlgC,SAASugC,oBAAoB,UAAWxlC,EAAKulC,gBA1J7CvlC,EAAKokB,MAAQ,CACTnQ,WAAY8lB,KAAa9lB,WACzB8vB,UAAW,GALA/jC,qFASG+kB,EAAWC,EAAWC,GAAa,IAAAd,EACnBhkB,KAAKikB,MAA/BnQ,EAD6CkQ,EAC7ClQ,WAAY8vB,EADiC5f,EACjC4f,UAEpB,OAAO9vB,IAAe+Q,EAAU/Q,YAAc8vB,IAAc/e,EAAU+e,sDAItEhK,KAAarY,GAAG,yBAA0BvhB,KAAKyqE,8BAC/C7wC,KAAarY,GAAG,6BAA8BvhB,KAAKwqE,iFAInD5wC,KAAa53B,eAAe,yBAA0BhC,KAAKyqE,8BAC3D7wC,KAAa53B,eAAe,6BAA8BhC,KAAKwqE,mEA0I1D,IAAAprD,EACkBpf,KAAKqf,MAApBhI,EADH+H,EACG/H,EAAGmJ,EADNpB,EACMoB,QADN2f,EAE6BngC,KAAKikB,MAA/BnQ,EAFHqsB,EAEGrsB,WAAY8vB,EAFfzD,EAEeyD,UACpB,IAAK9vB,EAAY,OAAO,KAHnB,IAKG8G,EAA0C9G,EAA1C8G,MAAO5G,EAAmCF,EAAnCE,SAAUmwB,EAAyBrwB,EAAzBqwB,OAAQlK,EAAiBnmB,EAAjBmmB,aAE3Bj3B,EAAQgR,EAASxG,IAAI,SAAA/B,GAAC,OACxBkU,EAAAnf,EAAAkM,cAAA,OACIkT,UAAU,0BACVtI,IAAK7L,EAAErG,QAAQ1C,GACf8iC,kBAAiB/5B,EAAErG,QAAQ1C,GAC3BiK,MAAO,CAAE6C,MAAO,GAAIE,OAAQ,KAC5BiQ,EAAAnf,EAAAkM,cAAC2f,GAAA,EAAD,CACI/U,IAAK7L,EAAErG,QAAQ1C,GACfkd,UAAU,kCACVxa,QAASqG,EACTyU,YAAawlB,IACb/M,MAAM,IAEVhZ,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iCAAiCnU,EAAE+hB,UAIpDmY,EAAe3xB,EAASqd,UAAU,SAAA5lB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOkhC,IACxDx+B,GAA4B,IAAlBugC,EAAsB3xB,EAAS2xB,GAAgB,KACzDnY,GAA0B,IAAlBmY,EAAsBxB,EAAOwB,GAAcxB,OAAOC,KAAK,KAAO,KAE5E,OACIzkB,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACIof,UAAWY,EAAQiuB,WACnBxkC,MAAI,EACJkgB,mBAAoB,EACpBX,QAASxpB,KAAK8tC,YACd1jB,kBAAgB,gCAChB5J,QAAS,CAAEg5B,MAAOh5B,EAAQspD,YAC1BnqD,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CACIkC,GAAG,gCACHkd,UAAWe,IAAWH,EAAQkqD,gBAAT5qE,OAAAumB,EAAA,EAAAvmB,CAAA,GAChB0gB,EAAQmqD,qBAAuB1tD,QAAQ7X,KAE5CiqC,mBAAiB,GACjB1vB,EAAAnf,EAAAkM,cAACiiC,GAAAnuC,EAAD,CAAYkmB,QAAQ,KAAK9G,UAAWY,EAAQ8uB,eAAgB+S,QAAM,GAC7DznC,GAEL+E,EAAAnf,EAAAkM,cAACk+D,GAAD,CAAuBhrD,UAAWY,EAAQqqD,mBAE9ClrD,EAAAnf,EAAAkM,cAAC4d,GAAA9pB,EAAD,CACIggB,QAAS,CAAEgC,KAAMhC,EAAQkuB,aACzB9I,YAAa5lC,KAAK8kC,gBAClBe,WAAY7lC,KAAK8lC,eACjBC,YAAa/lC,KAAKklC,iBACjBliC,GAEL2c,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,CAAeof,UAAWe,IAAW7gB,OAAAumB,EAAA,EAAAvmB,CAAA,GAAG0gB,EAAQmqD,qBAAuB1tD,QAAQ7X,MAC3Eua,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUlC,QAAS9f,KAAK8tC,aACjCz2B,EAAE,WAEPsI,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQwhB,MAAM,UAAUlC,QAAS9f,KAAK2wD,YAClBt5C,EAAf4iB,EAAiB,SAAc,SAGvChd,QAAQ7X,IACLua,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,8BACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oCAAoC4N,GACnD7N,EAAAnf,EAAAkM,cAAC2f,GAAA,EAAD,CAASjnB,QAASA,EAAS8a,YAAa8lB,eAlOjCjmB,IAAMC,YAiPtB4G,GALCC,YACZ7F,IA5QW,SAAAC,GAAK,MAAK,CACrBytB,YAAa,CACT9hC,QAAS,OACTk+D,SAAU,OACV7V,UAAW,IACX5xC,QAAS,cACTiU,WAAY,eAEhBwyC,UAAW,CACPt6D,MAAO,KAEXk7D,gBAAiB,CACb99D,QAAS,OACTm+D,cAAe,MACfd,WAAY,UAEhBx7B,WAAY,CACRzsB,MAAOf,EAAM2b,QAAQlf,KAAKmf,SAE9BguC,gBAAiB,CACb9jD,OAAQ,uBAEZuoB,eAAgB,CACZV,SAAU,EACVo8B,WAAY,GAEhBL,qBAAsB,CAClBvnD,cAAe,WAkPnBiE,cAGWT,CAAQ2jD,IC/KRU,uBA1GX,SAAAA,EAAY5rD,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAirE,IACfprE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAmrE,GAAA9qE,KAAAH,KAAMqf,KAiCV6rD,8BAAgC,SAAAvqE,GAC5Bd,EAAKyhB,eAnCUzhB,EAsCnBmxC,qBAAuB,SAAArwC,GACnBd,EAAK0kB,SAAS,CACVvd,OAAQrG,EAAOswC,WACfhqC,UAAWtG,EAAOmoD,iBAzCPjpD,EA6CnBmoE,eAAiB,WACbnoE,EAAKsrE,aAAanD,kBA9CHnoE,EAiDnBwoE,cAAgB,WACZxoE,EAAKsrE,aAAa9C,iBAlDHxoE,EAqDnBooE,gBAAkB,WACdpoE,EAAKsrE,aAAalD,mBAnDlBpoE,EAAKokB,MAAQ,CACTjd,OAAQoR,KAAiBs8B,YACzBztC,UAAWmR,KAAiB2wC,eAC5BqiB,cAAe,GANJvrE,qFAUG+kB,EAAWC,GAC7B,OAAIA,EAAU7d,SAAWhH,KAAKikB,MAAMjd,SAGhC6d,EAAU5d,YAAcjH,KAAKikB,MAAMhd,WAGnC4d,EAAUumD,gBAAkBprE,KAAKikB,MAAMjF,2DAQ3C5G,KAAiBmJ,GAAG,oCAAqCvhB,KAAKkrE,+BAC9D9yD,KAAiBmJ,GAAG,qBAAsBvhB,KAAKgxC,qEAI/C54B,KAAiBpW,eAAe,oCAAqChC,KAAKkrE,+BAC1E9yD,KAAiBpW,eAAe,qBAAsBhC,KAAKgxC,uDA0BtD,IAAAxmC,EAAAxK,KAAAgkB,EAiCwChkB,KAAKikB,MAA1Cjd,EAjCHgd,EAiCGhd,OAAQC,EAjCX+c,EAiCW/c,UACRouD,GAlCHrxC,EAiCsBonD,cACMhzD,KAAzBi9C,sBAER,OACI11C,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,iBAAkB,CAAE0qD,8BAA+BhW,KAC1E11C,EAAAnf,EAAAkM,cAAC4+D,GAAD,MACA3rD,EAAAnf,EAAAkM,cAAC6+D,GAAD,CAAQvkE,OAAQA,IAChB2Y,EAAAnf,EAAAkM,cAAC8+D,GAAD,CAAcjb,SAAU,SAAAlyB,GAAG,OAAK7zB,EAAK2gE,aAAe9sC,GAAMr3B,OAAQA,EAAQC,UAAWA,IACrF0Y,EAAAnf,EAAAkM,cAACgpC,GAAA,EAAD,CAAQ1uC,OAAQA,IAChB2Y,EAAAnf,EAAAkM,cAAC++D,GAAD,MACA9rD,EAAAnf,EAAAkM,cAACg/D,GAAD,cArGY1rD,qJCyCb2rD,uBA1CX,SAAAA,EAAYtsD,GAAQ,OAAAvf,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA2rE,GAAA7rE,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA6rE,GAAAxrE,KAAAH,KACVqf,0EAGD,IAAAD,EACyBpf,KAAKqf,MAA3BrY,EADHoY,EACGpY,OAAQC,EADXmY,EACWnY,UAEV3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAErB,IAAMwH,EAASmhB,aAAgB3oB,GACzB66D,EAAWrzC,aAAYxnB,GAEvBsnE,EAAc9/D,EAChB6T,EAAAnf,EAAAkM,cAACmT,GAAA,EAAD,CAAiB/T,OAAQA,IAEzB6T,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,IAG7B,OACI2Y,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gCACVgsD,EACDjsD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gCACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBACXD,EAAAnf,EAAAkM,cAAC8sB,GAAA,EAAD,CAAexyB,OAAQA,EAAQ8E,OAAQA,KAE3C6T,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iCACXD,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,gBAAgBu/C,cA7B3Bp/C,IAAMC,sBCHjC6rD,uBACF,SAAAA,EAAYxsD,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA6rE,IACfhsE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA+rE,GAAA1rE,KAAAH,KAAMqf,KAGVmG,YAAc,SAAAna,GACVA,EAAMqa,mBALS7lB,wEAQV,IACG6d,EAAS1d,KAAKqf,MAAd3B,KAER,OACIiC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBAAgBE,QAAS9f,KAAKwlB,aACzC7F,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,sBAAsBlC,WAd1BqC,IAAMC,YAwBjC6rD,GAAa/qD,aAAe,GAEb+qD,oBClBTC,WAAS/rD,IAAMowB,KAAK,kBAAMxmC,QAAAymC,IAAA,CAAAvyB,EAAAmM,EAAA,GAAAnM,EAAAmM,EAAA,KAAA7e,KAAA0S,EAAAwyB,KAAA,cAuXjB07B,eApXX,SAAAA,EAAY1sD,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA+rE,IACflsE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAisE,GAAA5rE,KAAAH,KAAMqf,KA+FV2sD,2BAA6B,SAAArrE,GAAU,IAAAye,EACLvf,EAAKwf,MAA3BrY,EAD2BoY,EAC3BpY,OAAQC,EADmBmY,EACnBnY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAKosE,uBApGMpsE,EAwGnBosE,oBAxGmBnsE,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAwGG,SAAAC,IAAA,IAAA6f,EAAAvZ,EAAAC,EAAAgF,EAAAigE,EAAAC,EAAAjrE,EAAAkrE,EAAA,OAAAp9C,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAwf,EACkB1gB,EAAKwf,MAAjCrY,EADUuZ,EACVvZ,OAAQC,EADEsZ,EACFtZ,UAAWgF,EADTsU,EACStU,KAEtB0hB,aAAgB3mB,EAAQC,GAHX,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAA6qE,EAOYl6D,YAAahL,EAAQC,EAAWgF,GAP5CkgE,EAAArsE,OAAA46C,EAAA,EAAA56C,CAAAosE,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAOIjrE,EAPJirE,EAAA,GAAAtrE,EAAAE,KAAA,EAQUlB,EAAKwsE,iBAAiBnrE,GARhC,OAQZkrE,EARYvrE,EAAAkK,KAUlBlL,EAAK0kB,SAAS,CAAE6nD,kBAVE,wBAAAvrE,EAAAU,SAAAb,MAxGHb,EAqHnBwsE,iBAAmB,SAAAnrE,GACf,OAAO,IAAIyI,QAAQ,SAAAC,GACf,GAAK1I,EAAL,CAKA,IAAMiH,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,IACpC,GAAKyF,EAAL,CAKA,IAAMmkE,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAAnhE,GAAK,OAAIzB,EAAQoqC,KAAKy4B,MAAMphE,EAAMC,OAAOnB,UAC7DmiE,EAAWliE,QAAU,kBAAMR,EAAQ,OACnC0iE,EAAWI,QAAU,kBAAM9iE,EAAQ,OACnC0iE,EAAWK,WAAWxkE,QARlByB,EAAQ,WANRA,EAAQ,SAxHD/J,EA0InBm+D,wBAA0B,SAAAr9D,GAAU,IAAAynB,EACIvoB,EAAKwf,MAAjCrY,EADwBohB,EACxBphB,OAAQC,EADgBmhB,EAChBnhB,UAAWgF,EADKmc,EACLnc,KAE3B,GAAIjF,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAAW,KAAA2lE,EAC9B56D,YAAahL,EAAQC,EAAWgF,GADF4gE,EAAA/sE,OAAA46C,EAAA,EAAA56C,CAAA8sE,EAAA,GACrDp9D,EADqDq9D,EAAA,GAC9Cn9D,EAD8Cm9D,EAAA,GACtC3rE,EADsC2rE,EAAA,GAE5DhtE,EAAK0kB,SAAS,CACV/U,QACAE,SACAxO,WAlJOrB,EAuJnBitE,iCAAmC,SAAAnsE,GAAU,IAAAioB,EACX/oB,EAAKwf,MAA3BrY,EADiC4hB,EACjC5hB,OAAQC,EADyB2hB,EACzB3hB,UAEhB,GAAID,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAAW,KAAA8lE,EAC9Bh7D,YAAoB/K,EAAQC,GADE+lE,EAAAltE,OAAA46C,EAAA,EAAA56C,CAAAitE,EAAA,GACrDv9D,EADqDw9D,EAAA,GAC9Ct9D,EAD8Cs9D,EAAA,GACtC9rE,EADsC8rE,EAAA,GAE5DntE,EAAK0kB,SAAS,CACVmsB,eAAgBlhC,EAChBmhC,gBAAiBjhC,EACjBjJ,UAAWvF,MA/JJrB,EAoKnB+jE,uBAAyB,SAAAjjE,GAAU,IAAA8+B,EACK5/B,EAAKwf,MAAjCrY,EADuBy4B,EACvBz4B,OAAQC,EADew4B,EACfx4B,UAAWgF,EADIwzB,EACJxzB,KACnB7F,EAAwBzF,EAAxByF,QAAS+X,EAAexd,EAAfwd,WAEjB,GAAInX,IAAWZ,GAAWa,IAAckX,EAAY,KAAA8uD,EAClBj7D,YAAahL,EAAQC,EAAWgF,GADdihE,EAAAptE,OAAA46C,EAAA,EAAA56C,CAAAmtE,EAAA,GACzCz9D,EADyC09D,EAAA,GAClCx9D,EADkCw9D,EAAA,GAC1BhsE,EAD0BgsE,EAAA,GAE1C5oE,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACnCyW,EAAOiO,aAAQrnB,GACrBzE,EAAK0kB,SAAS,CACV/U,MAAOA,EACPE,OAAQA,EACRxO,KAAMA,EACNwc,KAAMA,MAhLC7d,EAqLnBstE,mBAAqB,SAAA9hE,GACbA,GAAOA,EAAMqa,mBAtLF7lB,EAyLnButE,YAAc,SAAAC,GACVxtE,EAAK0kB,SAAS,CACV8oD,WAxLJxtE,EAAKo9B,SAAWld,IAAMie,YACtBn+B,EAAKytE,UAAYvtD,IAAMie,YAJR,IAAAsD,EAMqBzhC,EAAKwf,MAAjCrY,EANOs6B,EAMPt6B,OAAQC,EANDq6B,EAMCr6B,UAAWgF,EANZq1B,EAMYr1B,KANZshE,EAQav7D,YAAahL,EAAQC,EAAWgF,GAR7CuhE,EAAA1tE,OAAA46C,EAAA,EAAA56C,CAAAytE,EAAA,GAQV/9D,EARUg+D,EAAA,GAQH99D,EARG89D,EAAA,GAQKtsE,EARLssE,EAAA,GASftsE,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EATlB,IAAAusE,EAWoC17D,YAAoB/K,EAAQC,GAXhEymE,EAAA5tE,OAAA46C,EAAA,EAAA56C,CAAA2tE,EAAA,GAWV/8B,EAXUg9B,EAAA,GAWM/8B,EAXN+8B,EAAA,GAWuBjnE,EAXvBinE,EAAA,GAYfjnE,EAAY7G,IAAUqD,IAAIwD,EAAU/D,KAAO+D,EAE3C,IAAMnC,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACnCyW,EAAOiO,aAAQrnB,GAfN,OAoBfzE,EAAKokB,MAAQ,CACTopD,MAAO,EACPtqC,WAAY/7B,EACZyhE,cAAexhE,EACf0mE,WAAW,EACXn+D,MAAOA,EACPE,OAAQA,EACRxO,KAAMA,EACNwc,KAAMA,EACNgzB,eAAgBA,EAChBC,gBAAiBA,EACjBlqC,UAAWA,GAGf5G,EAAKosE,sBAlCUpsE,mFAqEfD,IAAU2hB,GAAG,2BAA4BvhB,KAAKgsE,4BAC9CpsE,IAAU2hB,GAAG,wBAAyBvhB,KAAKg+D,yBAC3Cp+D,IAAU2hB,GAAG,wBAAyBvhB,KAAKg+D,yBAC3Cp+D,IAAU2hB,GAAG,4BAA6BvhB,KAAKg+D,yBAC/Cp+D,IAAU2hB,GAAG,iCAAkCvhB,KAAK8sE,kCACpDltE,IAAU2hB,GAAG,qCAAsCvhB,KAAK8sE,kCACxDr/D,KAAa8T,GAAG,uBAAwBvhB,KAAK4jE,uEAI7ChkE,IAAUoC,eAAe,2BAA4BhC,KAAKgsE,4BAC1DpsE,IAAUoC,eAAe,wBAAyBhC,KAAKg+D,yBACvDp+D,IAAUoC,eAAe,wBAAyBhC,KAAKg+D,yBACvDp+D,IAAUoC,eAAe,4BAA6BhC,KAAKg+D,yBAC3Dp+D,IAAUoC,eAAe,iCAAkChC,KAAK8sE,kCAChEltE,IAAUoC,eAAe,qCAAsChC,KAAK8sE,kCACpEr/D,KAAazL,eAAe,uBAAwBhC,KAAK4jE,mEAG1C5+C,EAAWC,EAAWC,GAAU,IAAA6+C,EACjB/jE,KAAKqf,MAA3BrY,EADuC+8D,EACvC/8D,OAAQC,EAD+B88D,EAC/B98D,UAEZ+d,EAAUhe,SAAWA,GAAUge,EAAU/d,YAAcA,GACvDjH,KAAKisE,uDAmGJ,IAAAzhE,EAAAxK,KAAAgkE,EACyBhkE,KAAKqf,MAA3BrY,EADHg9D,EACGh9D,OAAQC,EADX+8D,EACW/8D,UADX+c,EAYDhkB,KAAKikB,MATLmoD,EAHCpoD,EAGDooD,cACA58D,EAJCwU,EAIDxU,MACAE,EALCsU,EAKDtU,OACAghC,EANC1sB,EAMD0sB,eACAC,EAPC3sB,EAOD2sB,gBACAzvC,EARC8iB,EAQD9iB,KACAwc,EATCsG,EASDtG,KACAjX,EAVCud,EAUDvd,UACAknE,EAXC3pD,EAWD2pD,UAEJ,IAAKzsE,EAAM,OAAO,KAElB,IAAMiH,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAC1CqZ,EAAM5hB,IAAU2I,WAAWJ,IAAS,GAEpCylE,EAAgBnnE,EAAY7G,IAAUoI,QAAQvB,EAAU/D,KAAO+D,EAAU0B,KAAO,KAChFiuB,EAAex2B,IAAU2I,WAAWqlE,GACpCh1C,EAAYhE,aAAmB,CAAEplB,MAAOkhC,EAAgBhhC,OAAQihC,IAEhEk9B,EAAUngD,aAAe1mB,EAAQC,GACjC6mE,EAAchgD,aAAmB9mB,EAAQC,GACzC8mE,EAAWpgD,aAAgB3mB,EAAQC,GACrC+mE,EAAax+D,EACby+D,EAAcv+D,EAClB,GAAI+U,KAAKkC,IAAIqnD,EAAYC,GAAe,IAAK,CACzC,IAAMr+D,EAAQ,IAAM6U,KAAKkC,IAAIqnD,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAMxpD,KAAKC,MAAMspD,EAAap+D,IAC7B,IAAM6U,KAAKC,MAAMupD,EAAcr+D,GAG5E,IAAIrL,EAAU,KACd,GAAIspE,EACAtpE,EACIob,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gCACXD,EAAAnf,EAAAkM,cAAA,SACI2xB,IAAKr+B,KAAKi9B,SACVrd,UAAU,oCACV4B,IAAKA,EACL1B,QAAS9f,KAAKmtE,mBACd5nC,UAAQ,EACR/G,UAAQ,EACRhvB,MAAOw+D,EACPt+D,OAAQu+D,EACRzO,OAAQ,WACJh1D,EAAK+Z,SAAS,CAAEopD,WAAW,IAC3B9rE,KAAgBgH,aAAa,CACzBC,QAAS,iCAGjB24B,UAAW,WACP,IAAMjP,EAAShoB,EAAKyyB,SAAS5P,QACzBmF,IACAA,EAAOjC,OAASR,KAAYQ,SAGpCkvC,QAAS,WACL59D,KAAgBgH,aAAa,CACzBC,QAAS,kCAGjB62D,QAAS,WACL99D,KAAgBgH,aAAa,CACzBC,QAAS,kCAGjBolE,eAAgB,WACZ,IAAM17C,EAAShoB,EAAKyyB,SAAS5P,QACzBmF,GACA3wB,KAAgBgH,aAAa,CACzBC,QAAS,0BACTynB,OAAQiC,EAAOjC,aAK7Bo9C,KACInsD,GAAO4U,EACLzW,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,uCAAwC,CAC1DqY,gBAAiBJ,IAErBpX,IAAK4U,EACLvU,IAAI,GACJrS,MAAOw+D,EACPt+D,OAAQu+D,IAGZtuD,EAAAnf,EAAAkM,cAAA,OACIkT,UAAU,uCACVjT,MAAO,CACH6C,MAAOw+D,EACPt+D,OAAQu+D,YAM7B,GAAIH,EACPvpE,EACIob,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gCACXD,EAAAnf,EAAAkM,cAAA,SACIkT,UAAU,oCACV4B,IAAKA,EACL1B,QAAS9f,KAAKmtE,mBACd1uC,MAAI,EACJD,UAAQ,EACRhvB,MAAOw+D,EACPt+D,OAAQu+D,EACRzO,OAAQ,WACJh1D,EAAK+Z,SAAS,CAAEopD,WAAW,QAGjCA,KACInsD,GAAO4U,EACLzW,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAW,uCAAwC,CAC1DqY,gBAAiBJ,IAErBpX,IAAK4U,EACLvU,IAAI,GACJrS,MAAOw+D,EACPt+D,OAAQu+D,IAGZtuD,EAAAnf,EAAAkM,cAAA,OACIkT,UAAU,uCACVjT,MAAO,CACH6C,MAAOw+D,EACPt+D,OAAQu+D,YAM7B,GAAIF,EAAU,CACjB,IAAMI,EAAiB,CACnB1vC,MAAM,EACN2vC,UAAU,EAEVhC,cAAeA,EACfiC,iBAAkB,CACdC,oBAAqB,mBAGrBjB,EAAUrtE,KAAKikB,MAAfopD,MAER9oE,EACIob,EAAAnf,EAAAkM,cAACo/D,GAAD,CACIztC,IAAKr+B,KAAKstE,UACVD,MAAOA,EACPvkD,QAASqlD,EACTz+D,OAAO,OACPF,MAAO,IACP++D,WAAW,EACXC,UAAU,SAIlBjqE,EAAUob,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,6BAA6B4B,IAAKA,EAAKK,IAAI,GAAG/B,QAAS9f,KAAKmtE,qBAGzF,OACIxtD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAACiT,EAAAnf,EAAMo0C,SAAP,CAAgBC,SAAS,IAAItwC,GAE7Bob,EAAAnf,EAAAkM,cAAC2oB,GAAA,EAAD,CAAcn0B,KAAMA,EAAM21B,OAAQ,IACjCnZ,GAAQA,EAAK1X,OAAS,GAAK2Z,EAAAnf,EAAAkM,cAAC+hE,GAAD,CAAc/wD,KAAMA,wDAnU5B2B,EAAO4E,GAAO,IAClCjd,EAA4BqY,EAA5BrY,OAAQC,EAAoBoY,EAApBpY,UAAWgF,EAASoT,EAATpT,KAE3B,GAAIjF,IAAWid,EAAM8e,YAAc97B,IAAcgd,EAAMwkD,cAAe,KAAAiG,EACtC18D,YAAahL,EAAQC,EAAWgF,GADM0iE,EAAA7uE,OAAA46C,EAAA,EAAA56C,CAAA4uE,EAAA,GAC7Dl/D,EAD6Dm/D,EAAA,GACtDj/D,EADsDi/D,EAAA,GAC9CztE,EAD8CytE,EAAA,GAElEztE,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAFiC,IAAA0tE,EAIf78D,YAAoB/K,EAAQC,GAJb4nE,EAAA/uE,OAAA46C,EAAA,EAAA56C,CAAA8uE,EAAA,GAI7Dl+B,EAJ6Dm+B,EAAA,GAI7Cl+B,EAJ6Ck+B,EAAA,GAI5BpoE,EAJ4BooE,EAAA,GAKlEpoE,EAAY7G,IAAUqD,IAAIwD,EAAU/D,KAAO+D,EAE3C,IAAMnC,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAGzC,MAAO,CACHomE,MAAO,EACPtqC,WAAY/7B,EACZyhE,cAAexhE,EACf0mE,WAAW,EACXn+D,MAAOA,EACPE,OAAQA,EACRxO,KAAMA,EACNwc,KAVSiO,aAAQrnB,GAWjBosC,eAAgBA,EAChBC,gBAAiBA,EACjBlqC,UAAWA,GAInB,OAAO,YAlEkBsZ,IAAMC,WCqBxB8uD,sNA/BXtpD,YAAc,SAAAna,GACVA,EAAMqa,kBADa,IAAAtG,EAGWvf,EAAKwf,MAA3BioB,EAHWloB,EAGXkoB,SAAUxnB,EAHCV,EAGDU,QAEdwnB,GAEJxnB,EAAQzU,4EAGH,IAAAkV,EACgCvgB,KAAKqf,MAAlCioB,EADH/mB,EACG+mB,SAAUynC,EADbxuD,EACawuD,KAAMC,EADnBzuD,EACmByuD,SAElBpvD,EAAYe,IACd2mB,EAAW,+BAAiC,sBAC5C,CAAEynC,KAAMA,IAGZ,OACIpvD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWA,EAAWE,QAAS9f,KAAKwlB,aACpCwpD,UArBejvD,IAAMC,YCyBvBivD,4LAzBF,IAAA7vD,EACuBpf,KAAKqf,MAAzBzE,EADHwE,EACGxE,MAAOsmC,EADV9hC,EACU8hC,SAEf,OACIvhC,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,4BACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oCACXD,EAAAnf,EAAAkM,cAAA,YAAOkO,GAEHqC,QAAQikC,IACJvhC,EAAAnf,EAAAkM,cAAA,mBAEKw0C,YAZGnhC,IAAMC,YCCpCkvD,sNACF1pD,YAAc,SAAAna,GACVA,EAAMqa,kBADa,IAAAtG,EAGWvf,EAAKwf,MAA3BS,EAHWV,EAGXU,QAHWV,EAGFkoB,UAIjBxnB,EAAQzU,4EAGH,IAAAkV,EACmDvgB,KAAKqf,MAArDqD,EADHnC,EACGmC,QAASssD,EADZzuD,EACYyuD,SAAUxuD,EADtBD,EACsBC,QAAS8mB,EAD/B/mB,EAC+B+mB,SAAU1sB,EADzC2F,EACyC3F,MAE9C,OACI+E,EAAAnf,EAAAkM,cAAA,OACIkT,UAAWe,IAAW2mB,EAAW,sCAAwC,6BAApDxnC,OAAAumB,EAAA,EAAAvmB,CAAA,GAChB0gB,EAAQkC,QAAUA,IAEvB9H,MAAOA,EACPkF,QAAS9f,KAAKwlB,aACbwpD,UArBqBjvD,IAAMC,YAkC7BgB,OAxCA,SAAAC,GAAK,MAAK,CACrByB,QAAS,CACLV,MAAOf,EAAM2b,QAAQC,QAAQC,QAsCtB9b,CAAmBkuD,yBCvC5BC,GAAY,CACd9rD,QAAS,GACTrB,MAAO,SAGLotD,eACF,SAAAA,EAAY/vD,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAovE,IACfvvE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAsvE,GAAAjvE,KAAAH,KAAMqf,KA4CV2+C,wBAA0B,SAAAr9D,GAAU,IACxBoH,EAAWlI,EAAKokB,MAAhBlc,OAEJA,IAAWpH,EAAOoH,QAClBlI,EAAK0kB,SAAS,CACV+iB,SAAU8nC,EAA0BC,aAAatnE,MAlD1ClI,EA2DnB2lB,YAAc,SAAAna,GACVA,EAAMqa,kBADa,IAGX5F,EAAYjgB,EAAKwf,MAAjBS,QACajgB,EAAKokB,MAAlBqjB,UAGRxnB,EAAQzU,IAlEO,IAGPtD,EAAWsX,EAAXtX,OAHO,OAKflI,EAAKokB,MAAQ,CACTqrD,gBAAiBvnE,EACjBA,OAAQA,EACRu/B,SAAU8nC,EAA0BC,aAAatnE,IARtClI,mFA4BfD,IAAU2hB,GAAG,4BAA6BvhB,KAAKg+D,yBAC/Cp+D,IAAU2hB,GAAG,uBAAwBvhB,KAAKg+D,yBAC1Cp+D,IAAU2hB,GAAG,2BAA4BvhB,KAAKg+D,yBAC9Cp+D,IAAU2hB,GAAG,wBAAyBvhB,KAAKg+D,yBAC3Cp+D,IAAU2hB,GAAG,uBAAwBvhB,KAAKg+D,yBAC1Cp+D,IAAU2hB,GAAG,wBAAyBvhB,KAAKg+D,wEAI3Cp+D,IAAUoC,eAAe,4BAA6BhC,KAAKg+D,yBAC3Dp+D,IAAUoC,eAAe,uBAAwBhC,KAAKg+D,yBACtDp+D,IAAUoC,eAAe,2BAA4BhC,KAAKg+D,yBAC1Dp+D,IAAUoC,eAAe,wBAAyBhC,KAAKg+D,yBACvDp+D,IAAUoC,eAAe,uBAAwBhC,KAAKg+D,yBACtDp+D,IAAUoC,eAAe,wBAAyBhC,KAAKg+D,0DA2BlD,IACGpjD,EAAU5a,KAAKqf,MAAfzE,MACA0sB,EAAatnC,KAAKikB,MAAlBqjB,SAER,OACI3nB,EAAAnf,EAAAkM,cAAC6iE,GAAD,CAAyBjoC,SAAUA,EAAU1sB,MAAOA,EAAOkF,QAAS9f,KAAKwlB,aACrE7F,EAAAnf,EAAAkM,cAAC8iE,GAAAhvE,EAAD,CAAUmM,MAAOwiE,yDA/DG9vD,EAAO4E,GAAO,IAClClc,EAAWsX,EAAXtX,OAGR,OAAIA,IAFwBkc,EAApBqrD,gBAGG,CACHA,gBAAiBvnE,EACjBA,OAAQA,EACRu/B,SAAU8nC,EAA0BC,aAAatnE,IAIlD,YAzByBgY,IAAMC,WAAxCovD,GAwDKC,aAAe,SAAAtnE,GAClB,OAAQkV,QAAQrd,IAAUoI,QAAQD,KA+B3BqnE,UC7CTK,WAAmB,CACrBpsD,QAAS,GACTqsD,UAAW,eAGTP,GAAY,CACd9rD,QAAS,IAGPssD,GAAsB,CACxBtsD,QAAS,IAGPusD,eACF,SAAAA,EAAYvwD,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA4vE,IACf/vE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA8vE,GAAAzvE,KAAAH,KAAMqf,KA4FV8rB,UAAY,SAAA9/B,GACR,GAAsB,KAAlBA,EAAM09B,QAAgB,CAEtB,GADqClpC,EAAKokB,MAAlC4rD,yBACsB,OAE9BhwE,EAAKiuC,mBACoB,KAAlBziC,EAAM09B,QACblpC,EAAKw+D,aACoB,KAAlBhzD,EAAM09B,SACblpC,EAAKiwE,kBAtGMjwE,EA0GnB+jE,uBAAyB,SAAAjjE,GAAU,IACvByF,EAAkDzF,EAAlDyF,QAAS+X,EAAyCxd,EAAzCwd,WAAYK,EAA6B7d,EAA7B6d,YAAaD,EAAgB5d,EAAhB4d,YAClCvX,EAAWnH,EAAKwf,MAAhBrY,OAFuBgd,EAGUnkB,EAAKokB,MAAtC8rD,EAHuB/rD,EAGvB+rD,iBAAkBh+C,EAHK/N,EAGL+N,WAE1B,GAAI/qB,IAAWZ,EAAf,CAEA,IAAM9B,EAAUmJ,KAAaxK,IAAImD,EAAS+X,GAC1C,GAAK7Z,EAAL,CAKA,GAHA8N,YAAuB,CAAC9N,IAELmpB,aAAejP,KAAiBiP,aAAelP,GAClD,CACZ,GACI1e,EAAK2S,QAAQxM,QAAU,IACtBnG,EAAKmwE,kBACFC,aAAQ9xD,EAAYte,EAAK2S,QAAQ,GAAG9P,GAAI7C,EAAK2S,QAAQ3S,EAAK2S,QAAQxM,OAAS,GAAGtD,KACpF,CAGE,IAFA,IAAIwtE,GAAW,EACX19D,EAAU,GACL1M,EAAI,EAAGA,EAAIjG,EAAK2S,QAAQxM,OAAQF,IACjCjG,EAAK2S,QAAQ1M,GAAGpD,GAAKyb,EACrB3L,EAAQhJ,KAAK3J,EAAK2S,QAAQ1M,KAErBoqE,IACDA,GAAW,EACX19D,EAAQhJ,KAAKlF,IAEjBkO,EAAQhJ,KAAK3J,EAAK2S,QAAQ1M,KAGlCjG,EAAK2S,QAAUA,EAGnB,IAAMD,EAAQ1S,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IACnDlwE,EAAK0kB,SAAS,CACV4rD,aAActwE,EAAKswE,aAAa59D,GAChC69D,iBAAkBvwE,EAAKuwE,iBAAiB79D,GACxCwf,WAAYA,EAAa,IAKjC,IADuBtE,aAAejP,IAAgBiP,aAAelP,GAClD,CACf,IAAI8xD,EAAaxwE,EAAK2S,QAGtB,GAFA3S,EAAK2S,QAAU3S,EAAK2S,QAAQ9G,OAAO,SAAAD,GAAC,OAAIA,EAAE/I,KAAOyb,IAE7C4xD,IAAqB5xD,EAAY,CACjC,IAAMmyD,EAAY,IAAIpnE,IACtBonE,EAAUrvE,IAAIkd,EAAYA,GAE1Bte,EAAKgxB,gBAAgBw/C,EAAYC,GACjCzwE,EAAK0kB,SAAS,CACVwN,WAAYtN,KAAKkC,IAAIoL,EAAa,EAAG,SAEtC,CACH,IAAMxf,EAAQ1S,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IACnDlwE,EAAK0kB,SAAS,CACV4rD,aAActwE,EAAKswE,aAAa59D,GAChC69D,iBAAkBvwE,EAAKuwE,iBAAiB79D,GACxCwf,WAAYtN,KAAKkC,IAAIoL,EAAa,EAAG,UAvKlClyB,EA6KnB+mE,uBAAyB,SAAAjmE,GAAU,IACvByF,EAAuCzF,EAAvCyF,QAASwF,EAA8BjL,EAA9BiL,YAAai7D,EAAiBlmE,EAAjBkmE,aACtB7/D,EAAWnH,EAAKwf,MAAhBrY,OAFuBm5B,EAGUtgC,EAAKokB,MAAtC8rD,EAHuB5vC,EAGvB4vC,iBAAkBh+C,EAHKoO,EAGLpO,WAE1B,GAAK80C,GACD7/D,IAAWZ,EAAf,CAEA,IAAMkqE,EAAY1kE,EAAYuhB,OAAO,SAACC,EAAamjD,GAE/C,OADAnjD,EAAYnsB,IAAIsvE,EAAWA,GACpBnjD,GACR,IAAIlkB,KAEDmnE,EAAaxwE,EAAK2S,QACpBg+D,EAAeH,EAAWrqE,OAE9BnG,EAAK2S,QAAU3S,EAAK2S,QAAQ9G,OAAO,SAAAD,GAAC,OAAK6kE,EAAUxtE,IAAI2I,EAAE/I,MACzD8tE,GAAgB3wE,EAAK2S,QAAQxM,OAE7BnG,EAAK0kB,SAAS,CAAEwN,WAAYtN,KAAKkC,IAAIoL,EAAay+C,EAAc,KAE3D3wE,EAAK2S,QAAQxM,OAKdsqE,EAAUxtE,IAAIitE,IACdlwE,EAAKgxB,gBAAgBw/C,EAAYC,GALjCl4D,KAAiBsW,sBAAsB,QAnM5B7uB,EA4MnB4mE,mBAAqB,SAAA9lE,GAAU,IACnBqG,EAAWnH,EAAKwf,MAAhBrY,OADmBo5B,EAEcvgC,EAAKokB,MAAtC8rD,EAFmB3vC,EAEnB2vC,iBAAkBh+C,EAFCqO,EAEDrO,WAElBztB,EAAY3D,EAAZ2D,QACR,GAAKA,GACAmpB,aAAenpB,EAAQC,UAExBD,EAAQ8B,UAAYY,GACnBnH,EAAKmwE,iBAAV,CAEAnwE,EAAK2S,QAAU,CAAClO,GAAS0G,OAAOnL,EAAK2S,SACrC,IAAMD,EAAQ1S,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IAEnDlwE,EAAK0kB,SAAS,CACV4rD,aAActwE,EAAKswE,aAAa59D,GAChC69D,iBAAkBvwE,EAAKuwE,iBAAiB79D,GACxCwf,WAAYA,EAAa,MA7NdlyB,EAiOnB4wE,UAAY,SAACzpE,EAAQC,GACjB,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAFU,IAIvBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACHuE,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACHA,QAAS,qCAGjB,QACI,OAAO,OAzPAjJ,EA8PnB6wE,YA9PmB5wE,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KA8PL,SAAAC,IAAA,IAAA0e,EAAApY,EAAAC,EAAAyE,EAAAvB,EAAA4lE,EAAAx9D,EAAAo+D,EAAAC,EAAAl3D,EAAAm3D,EAAA,OAAA7hD,EAAAxuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAqe,EACoBvf,EAAKwf,MAA3BrY,EADEoY,EACFpY,OAAQC,EADNmY,EACMnY,UAEVyE,EAAS7L,EAAK4wE,UAAUzpE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACTyE,SAAU,GACVskB,YAAa,IAEbnmB,EAVM,CAAAvJ,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAWSc,KAAgBgJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACTgrB,MAAO,GACP7gB,eAAgB,EAChB8gB,gBAAiBhrB,EACjBkkB,QAAS2lD,IACT5+C,MAAO,EAAI4+C,IACXplE,OAAQA,IAnBN,OAWNvB,EAXMhI,EAAA4I,KAAA,UAuBVmiB,aAAe/iB,EAAQtK,EAAK2S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B1N,EAAK2S,QAAUrI,EAAOoD,SACtB1N,EAAKmwE,iBAA8C,IAA3B7lE,EAAOoD,SAASvH,OAEhC+pE,EAAqBlwE,EAAKokB,MAA1B8rD,iBACFx9D,EAAQ1S,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IAEnDlwE,EAAK0kB,SAAS,CACV4rD,aAActwE,EAAKswE,aAAa59D,GAChC69D,iBAAkBvwE,EAAKuwE,iBAAiB79D,MAG7B,IAAXA,EArCM,CAAApQ,EAAApB,KAAA,SAsCNlB,EAAK2S,QAAU,CAAC/E,KAAaxK,IAAI+D,EAAQ+oE,IACzCt9D,YAA0B,EAAG5S,EAAK2S,SAvC5BrQ,EAAApB,KAAA,oBAyCN0R,YAA0BF,EAAO1S,EAAK2S,SAEhC9G,EAAS7L,EAAK4wE,UAAUzpE,EAAQC,GA3ChC,CAAA9E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,kBA8CAuvE,EAAW,KACbl3D,EAAQ,EA/CNm3D,EAAA7hD,EAAAxuB,EAAAC,KAAA,SAAAowE,IAAA,IAAA1mE,EAAA4lE,EAAAx9D,EAAA,OAAAyc,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAiDmBc,KAAgBgJ,KAAK,CACtC/B,QAAS,qBACT1C,QAASY,EACTgrB,MAAO,GACP7gB,eAAgB,EAChB8gB,gBAAiBpyB,EAAK2S,QAAQxM,OAAS,EAAInG,EAAK2S,QAAQ,GAAG9P,GAAK,EAChEyoB,QAAS,GACT+G,MAAO,IACPxmB,OAAQA,IAzDV,OAiDIvB,EAjDJtJ,EAAAkK,KA2DF2O,GAASvP,EAAOoD,SAASvH,OAEzBknB,aAAe/iB,EAAQtK,EAAK2S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B1N,EAAK2S,QAAUrI,EAAOoD,SAASvC,OAAOnL,EAAK2S,SAC3C3S,EAAKmwE,iBAA8C,IAA3B7lE,EAAOoD,SAASvH,OAEhC+pE,EAAqBlwE,EAAKokB,MAA1B8rD,iBACFx9D,EAAQ1S,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IAEnDlwE,EAAK0kB,SAAS,CACV4rD,aAActwE,EAAKswE,aAAa59D,GAChC69D,iBAAkBvwE,EAAKuwE,iBAAiB79D,GACxCy9D,iBAAkBnwE,EAAKmwE,iBACvBj+C,WAAY5nB,EAAO0nB,cA1ErB,yBAAAhxB,EAAAU,SAAAsvE,KAAA,WAgDEhxE,EAAKmwE,oBAAoBt2D,EAAQk3D,GAhDnC,CAAAzuE,EAAApB,KAAA,gBAAAoB,EAAA4uE,cAAAF,IAAA,iBAAA1uE,EAAApB,KAAA,kCAAAoB,EAAAZ,SAAAb,MA9PKb,EA8UnBiuC,YAAc,WACV11B,KAAiBsW,sBAAsB,MADvB,IAGRqhD,EAAqBlwE,EAAKokB,MAA1B8rD,iBACFx9D,EAAQ1S,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,KACpC,IAAXx9D,GACAD,YAAgCC,EAAO1S,EAAK2S,UApVjC3S,EAwVnBmxE,cAAgB,SAACxsE,EAAWF,GACxB,GAAKA,EAAL,CADoC,IAE5B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAK8B,EAAL,CAJoC,IAMjBtD,EAAoBsD,EAA/BA,UAAiBopB,EAAcppB,EAAdopB,UACzB,GAAK1sB,EAAL,CAPoC,IASxB6G,EAAW7G,EAAfwB,GAER+O,YAAevQ,EAAM0sB,GAAalrB,EAAI4B,EAAS,kBAAM1E,IAAUiI,oBAAoBzB,EAAS1D,EAAIqF,SAnWjFlI,EAsWnBoxE,aAAe,SAACnsE,EAAUR,GACtB,GAAKA,EAAL,CADkC,IAE1B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAKoC,EAAL,CAJkC,IAMhB5D,EAAoB4D,EAA9BA,SAAgB8oB,EAAc9oB,EAAd8oB,UACxB,GAAK1sB,EAAL,CAPkC,IAStB6G,EAAW7G,EAAfwB,GAER+O,YAAevQ,EAAM0sB,GAAalrB,EAAI4B,EAAS,kBAAM1E,IAAU+G,mBAAmBP,EAAS1D,EAAIqF,SAjXhFlI,EAoXnBqxE,UAAY,SAAC5rE,EAAOhB,GAChB,GAAKA,EAAL,CAD4B,IAEpB8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAK4C,EAAL,CAJ4B,IAMbpE,EAAoBoE,EAA3BA,MAAasoB,EAActoB,EAAdsoB,UACrB,GAAK1sB,EAAL,CAP4B,IAShB6G,EAAW7G,EAAfwB,GAER+O,YAAevQ,EAAM0sB,GAAalrB,EAAI4B,EAAS,kBAAM1E,IAAU+H,gBAAgBvB,EAAS1D,EAAIqF,SA/X7ElI,EAkYnBsxE,UAAY,SAACvsE,EAAON,GAChB,GAAKA,EAAL,CAD4B,IAEpB8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAKkC,EAAL,CAEA,IAAMqB,EAAY8J,aAAQnL,EAAMmB,MAAOiK,KACvC,GAAK/J,EAAL,CAP4B,IASb/E,EAAS+E,EAAhBrB,MACR,GAAK1D,EAAL,CAV4B,IAYhB6G,EAAW7G,EAAfwB,GAER+O,YAAevQ,EAAMA,EAAKwB,GAAK,OAAQ4B,EAAS,kBAAM1E,IAAUuG,gBAAgBC,EAAS1D,EAAIqF,UAhZ9ElI,EAmZnBuxE,WAAa,WAAM,IACPpqE,EAAWnH,EAAKwf,MAAhBrY,OACA+oE,EAAqBlwE,EAAKokB,MAA1B8rD,iBAEFzrE,EAAUmJ,KAAaxK,IAAI+D,EAAQ+oE,GACzC,GAAKzrE,EAAL,CALe,IAOPC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAER3E,EAAKmxE,cAAcxsE,EAAWF,GAC9B,MAEJ,IAAK,yBAA0B,IACnBM,EAAUL,EAAVK,MAER/E,EAAKsxE,UAAUvsE,EAAON,GACtB,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERjF,EAAKoxE,aAAansE,EAAUR,GAC5B,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAER/E,EAAKsxE,UAAUvsE,EAAON,GACtB,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,OAFC,IAIRb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MAEpC,GAAId,EAEA,YADA3E,EAAKmxE,cAAcxsE,EAAWF,GAIlC,GAAIQ,EAEA,YADAjF,EAAKoxE,aAAansE,EAAUR,GAIhC,GAAIM,EAEA,YADA/E,EAAKsxE,UAAUvsE,EAAON,GAI1B,GAAIgB,EAEA,YADAzF,EAAKqxE,UAAU5rE,EAAOhB,GAG1B,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAERzF,EAAKqxE,UAAU5rE,EAAOhB,MApdfzE,EA0dnB62D,cAAgB,WAAM,IACV1vD,EAAWnH,EAAKwf,MAAhBrY,OACA+oE,EAAqBlwE,EAAKokB,MAA1B8rD,iBAERluE,KAAgBgH,aAAa,CACzBC,QAAS,sBACTiyC,KAAM,CACF/zC,OAAQA,EACRsG,WAAY,CAACyiE,OAleNlwE,EAuenBupC,aAAe,WACXvpC,EAAKwxE,oBAxeUxxE,EAigBnBuwE,iBAAmB,SAAA79D,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP1S,EAAK2S,QAAQxM,QArgBjBnG,EAwgBnBiwE,eAAiB,SAAAzkE,GACTA,GACAA,EAAMqa,kBAFY,IAKdqqD,EAAqBlwE,EAAKokB,MAA1B8rD,iBAEFv+C,EADQ3xB,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IACzB,EAE1B,OAAOlwE,EAAKyxE,UAAU9/C,EAAW,WACzBA,IAAc3xB,EAAK2S,QAAQxM,OAAS,GACpCnG,EAAK0xE,kBAnhBE1xE,EAwhBnB0xE,aAxhBmBzxE,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAwhBJ,SAAAyB,IAAA,IAAAkmB,EAAAphB,EAAAC,EAAA8oE,EAAArkE,EAAAvB,EAAAoI,EAAA,OAAAyc,EAAAxuB,EAAAI,KAAA,SAAA8qD,GAAA,cAAAA,EAAA5qD,KAAA4qD,EAAA3qD,MAAA,UAAAqnB,EACmBvoB,EAAKwf,MAA3BrY,EADGohB,EACHphB,OAAQC,EADLmhB,EACKnhB,UACR8oE,EAAqBlwE,EAAKokB,MAA1B8rD,iBAEFrkE,EAAS7L,EAAK4wE,UAAUzpE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACTyE,SAAU,GACVskB,YAAa,IAEbnmB,EAXO,CAAAggD,EAAA3qD,KAAA,eAAA2qD,EAAA3qD,KAAA,EAYQc,KAAgBgJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACTgrB,MAAO,GACP7gB,eAAgB,EAChB8gB,gBAAiB89C,EACjB5kD,OAAQ,EACR+G,MAAO4+C,IACPplE,OAAQA,IApBL,OAYPvB,EAZOuhD,EAAA3gD,KAAA,OAwBXmiB,aAAe/iB,EAAQtK,EAAK2S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B1N,EAAK2S,QAAU3S,EAAK2S,QAAQxH,OAAOb,EAAOoD,UAEpCgF,EAAQ1S,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IAEnDlwE,EAAK0kB,SAAS,CACV4rD,aAActwE,EAAKswE,aAAa59D,GAChC69D,iBAAkBvwE,EAAKuwE,iBAAiB79D,GACxCwf,WAAY5nB,EAAO0nB,cAlCZ,yBAAA65B,EAAAnqD,SAAAW,MAxhBIrC,EA8jBnBswE,aAAe,SAAA59D,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAlkBL1S,EAqkBnBw+D,WAAa,SAAAhzD,GACLA,GACAA,EAAMqa,kBAFQ,IAKVqqD,EAAqBlwE,EAAKokB,MAA1B8rD,iBAEFv+C,EADQ3xB,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IACzB,EAE1B,OAAOlwE,EAAKyxE,UAAU9/C,EAAW,WACX,IAAdA,GACA3xB,EAAK2xE,cAhlBE3xE,EAqlBnB2xE,SArlBmB1xE,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAqlBR,SAAAgrD,IAAA,IAAA7iC,EAAA5hB,EAAAC,EAAA8oE,EAAArkE,EAAAvB,EAAAoI,EAAA,OAAAyc,EAAAxuB,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,UAAA6nB,EACuB/oB,EAAKwf,MAA3BrY,EADD4hB,EACC5hB,OAAQC,EADT2hB,EACS3hB,UACR8oE,EAAqBlwE,EAAKokB,MAA1B8rD,iBAEFrkE,EAAS7L,EAAK4wE,UAAUzpE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACTyE,SAAU,GACVskB,YAAa,IAEbnmB,EAXG,CAAAd,EAAA7J,KAAA,eAAA6J,EAAA7J,KAAA,EAYYc,KAAgBgJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACTgrB,MAAO,GACP7gB,eAAgB,EAChB8gB,gBAAiB89C,EACjB5kD,QAAS2lD,IACT5+C,MAAO4+C,IAAoB,EAC3BplE,OAAQA,IApBT,OAYHvB,EAZGS,EAAAG,KAAA,OAwBPmiB,aAAe/iB,EAAQtK,EAAK2S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B1N,EAAKmwE,iBAA8C,IAA3B7lE,EAAOoD,SAASvH,OACxCnG,EAAK2S,QAAUrI,EAAOoD,SAASvC,OAAOnL,EAAK2S,SAErCD,EAAQ1S,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IAEnDlwE,EAAK0kB,SAAS,CACV4rD,aAActwE,EAAKswE,aAAa59D,GAChC69D,iBAAkBvwE,EAAKuwE,iBAAiB79D,GACxCy9D,iBAAkBnwE,EAAKmwE,iBACvBj+C,WAAY5nB,EAAO0nB,cApChB,yBAAAjnB,EAAArJ,SAAAkqD,MArlBQ5rD,EA6nBnByxE,UAAY,SAAC/+D,EAAOlJ,GAChB,QAAIkJ,EAAQ,OACRA,GAAS1S,EAAK2S,QAAQxM,UAE1BnG,EAAK0kB,SACD,CACIwrD,iBAAkBlwE,EAAK2S,QAAQD,GAAO7P,GACtCytE,aAActwE,EAAKswE,aAAa59D,GAChC69D,iBAAkBvwE,EAAKuwE,iBAAiB79D,IAE5ClJ,GAGJoJ,YAA0BF,EAAO1S,EAAK2S,UAC/B,KA3oBQ3S,EA8oBnBgxB,gBAAkB,SAACw/C,EAAYC,GAK3B,IALyC,IACjCP,EAAqBlwE,EAAKokB,MAA1B8rD,iBAEFx9D,EAAQ89D,EAAWh/C,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,IAC7C0B,EAAS,EACJ3rE,EAAIyM,EAAQ,EAAGzM,GAAK,EAAGA,IAC5B,GAAIwqE,IAAcA,EAAUxtE,IAAIutE,EAAWvqE,GAAGpD,IAAK,CAC/C+uE,EAASpB,EAAWvqE,GAAGpD,GACvB,MAGR,IAAK+uE,EACD,IAAK,IAAI3rE,EAAIyM,EAAQ,EAAGzM,EAAIuqE,EAAWrqE,OAAQF,IAC3C,GAAIwqE,IAAcA,EAAUxtE,IAAIutE,EAAWvqE,GAAGpD,IAAK,CAC/C+uE,EAASpB,EAAWvqE,GAAGpD,GACvB,MAKZ,GAAK+uE,EAAL,CAEA,IAAMjgD,EAAY3xB,EAAK2S,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAO+uE,IAEvD,OAAO5xE,EAAKyxE,UAAU9/C,EAAW,WACX,IAAdA,EACA3xB,EAAK2xE,WACEhgD,IAAc3xB,EAAK2S,QAAQxM,OAAS,GAC3CnG,EAAK0xE,mBA1qBE1xE,EA+qBnBwxE,iBAAmB,WACfxxE,EAAK0kB,SAAS,CAAEsrD,0BAA0B,KAhrB3BhwE,EAmrBnB6xE,kBAAoB,WAChB7xE,EAAK0kB,SAAS,CAAEsrD,0BAA0B,KAprB3BhwE,EAurBnB8wD,WAAa,WACT9wD,EAAK0kB,SAAS,CAAEsrD,0BAA0B,IAD3B,IAGP7oE,EAAWnH,EAAKwf,MAAhBrY,OAHOy5B,EAI4B5gC,EAAKokB,MAAxC8rD,EAJOtvC,EAIPsvC,iBAAkB4B,EAJXlxC,EAIWkxC,aAEpBrtE,EAAUmJ,KAAaxK,IAAI+D,EAAQ+oE,GACzC,GAAKzrE,EAAL,CAPe,IASPozD,EAA+DpzD,EAA/DozD,6BAA8BrB,EAAiC/xD,EAAjC+xD,8BACjBqB,GAAgCrB,IAGrDx0D,KAAgBgJ,KAAK,CACjB/B,QAAS,iBACT1C,QAASY,EACT4E,YAAa,CAACmkE,GACdlkE,OAAQwqD,GAAgCsb,MAxsB7B9xE,EA4sBnB+xE,yBAA2B,SAAAvmE,GACvBxL,EAAK0kB,SAAS,CAAEotD,aAActmE,EAAMC,OAAOoX,WA7sB5B7iB,EAgtBnBgyE,mBAAqB,WAAM,IAGnBC,EAAiB,uBACrB,OAHuBjyE,EAAKokB,MAApBqT,YAIJ,IAAK,uBACDw6C,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzBjyE,EAAK0kB,SAAS,CACV+S,WAAYw6C,KApuBDjyE,EAwuBnBkyE,kBAAoB,WAChB,GAAKlyE,EAAKmyE,WAAV,CADsB,IAGd3kD,EAAYxtB,EAAKmyE,WAAjB3kD,QACR,GAAKA,EAAL,CAJsB,IAOhB4kD,EADYpyE,EAAKokB,MAAfopD,MACkB,EAAI,EAAI,GAElCxtE,EAAK0kB,SAAS,CAAE8oD,MAAO4E,IAEvB5kD,EAAQ+/C,YAAY6E,MAnvBLpyE,EAsvBnB83D,eAAiB,SAAC3wD,EAAQC,GACtB,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFe,IAI5Bo3C,EAA8Bp3C,EAA9Bo3C,iBAAkBn3C,EAAYD,EAAZC,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOm3C,IA/vBf77C,EAAKmyE,WAAajyD,IAAMie,YACxBn+B,EAAK2S,QAAU,GAJA,IAAAitB,EAMe5/B,EAAKwf,MAA3BrY,EANOy4B,EAMPz4B,OAAQC,EANDw4B,EAMCx4B,UAND,OAQfpH,EAAKokB,MAAQ,CACTopD,MAAO,EACP/1C,WAAY,uBACZyL,WAAY/7B,EACZyhE,cAAexhE,EACf8oE,iBAAkB9oE,EAClBkpE,cAAc,EACdC,kBAAkB,EAClBP,0BAA0B,EAC1B8B,cAAc,GAjBH9xE,qFAqBG+kB,EAAWC,GAAW,IAAAyc,EACVthC,KAAKqf,MAA3BrY,EADgCs6B,EAChCt6B,OAAQC,EADwBq6B,EACxBr6B,UADwBy5B,EAWpC1gC,KAAKikB,MARLqT,EAHoCoJ,EAGpCpJ,WACAy4C,EAJoCrvC,EAIpCqvC,iBACAF,EALoCnvC,EAKpCmvC,yBACAG,EANoCtvC,EAMpCsvC,iBACAG,EAPoCzvC,EAOpCyvC,aACAC,EARoC1vC,EAQpC0vC,iBACA/C,EAToC3sC,EASpC2sC,MACAt7C,EAVoC2O,EAUpC3O,WAGJ,OAAIlN,EAAUyS,aAAeA,IAIzB1S,EAAU5d,SAAWA,IAIrB4d,EAAU3d,YAAcA,IAIxB4d,EAAUkrD,mBAAqBA,IAI/BlrD,EAAUqtD,kBAAoB9B,IAI9BvrD,EAAUsrD,eAAiBA,IAI3BtrD,EAAUmrD,mBAAqBA,IAI/BnrD,EAAUkN,aAAeA,IAIzBlN,EAAUgrD,2BAA6BA,GAIvChrD,EAAUwoD,QAAUA,sDAQxBrtE,KAAK0wE,cAEL5rE,SAASqgC,iBAAiB,UAAWnlC,KAAKmrC,WAAW,GACrD19B,KAAa8T,GAAG,uBAAwBvhB,KAAK4mE,wBAC7Cn5D,KAAa8T,GAAG,mBAAoBvhB,KAAKymE,oBACzCh5D,KAAa8T,GAAG,uBAAwBvhB,KAAK4jE,uEAI7C9+D,SAASugC,oBAAoB,UAAWrlC,KAAKmrC,WAAW,GACxD19B,KAAazL,eAAe,uBAAwBhC,KAAK4mE,wBACzDn5D,KAAazL,eAAe,mBAAoBhC,KAAKymE,oBACrDh5D,KAAazL,eAAe,uBAAwBhC,KAAK4jE,yDA6qBpD,IAAAG,EACiB/jE,KAAKqf,MAAnBrY,EADH+8D,EACG/8D,OAAQqQ,EADX0sD,EACW1sD,EADX86D,EAYDnyE,KAAKikB,MATLqT,EAHC66C,EAGD76C,WACAy4C,EAJCoC,EAIDpC,iBACAF,EALCsC,EAKDtC,yBACA8B,EANCQ,EAMDR,aACA3B,EAPCmC,EAODnC,iBACAG,EARCgC,EAQDhC,aACAC,EATC+B,EASD/B,iBACA/C,EAVC8E,EAUD9E,MACAt7C,EAXCogD,EAWDpgD,WAGAxf,GAAS,EACTwf,GAAci+C,IACdz9D,EAAQvS,KAAKwS,QAAQ6e,UAAU,SAAA5lB,GAAC,OAAIA,EAAE/I,KAAOqtE,KAEjD,IAAMa,EAAWnsD,KAAKkC,IAAI3mB,KAAKwS,QAAQxM,OAAQ+rB,GAEzCztB,EAAUmJ,KAAaxK,IAAI+D,EAAQ+oE,GACjC1Z,EAA+D/xD,EAA/D+xD,6BAA8BqB,EAAiCpzD,EAAjCozD,6BAEhCP,EAAed,GAAgCqB,EAC/CC,EAAiB33D,KAAK23D,eAAe3wD,EAAQ+oE,GAE/CqC,EAA4B,GAE5BA,EADA1kD,aAAe1mB,EAAQ+oE,GACK14D,EAAE,yBACvByW,aAAmB9mB,EAAQ+oE,GACN14D,EAAE,uBAEFA,EAAE,yBAElC,IAAMg7D,EAAqBxC,EACvBlwD,EAAAnf,EAAAkM,cAACwd,EAAA1pB,EAAD,CACI2pB,mBAAoB,EACpBlgB,KAAM4lE,EACNrmD,QAASxpB,KAAK0xE,kBACdtnD,kBAAgB,qBAChBzK,EAAAnf,EAAAkM,cAAC2d,EAAA7pB,EAAD,CAAakC,GAAG,qBAAqB2U,EAAE,YACvCsI,EAAAnf,EAAAkM,cAAC4d,GAAA9pB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC6d,GAAA/pB,EAAD,KAAoB4xE,GACnB/b,GACG12C,EAAAnf,EAAAkM,cAAC4hD,GAAA9tD,EAAD,CACIwmD,MAAO3vC,EAAE,gBACTk3C,QACI5uC,EAAAnf,EAAAkM,cAAC2rD,GAAA73D,EAAD,CAAUwhB,MAAM,UAAU1M,MAAM,YAAY+M,SAAUriB,KAAK4xE,2BAE/DlvD,QAASivD,KAIrBhyD,EAAAnf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACImf,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAK0xE,kBAAmB1vD,MAAM,WAC1C3K,EAAE,WAEPsI,EAAAnf,EAAAkM,cAAC+d,EAAAjqB,EAAD,CAAQsf,QAAS9f,KAAK2wD,WAAY3uC,MAAM,WACnC3K,EAAE,SAIf,KA9DC60D,EAgEyBl6D,YAAahL,EAAQ+oE,EAAkB//D,KAhEhEm8D,EAAArsE,OAAA46C,EAAA,EAAA56C,CAAAosE,EAAA,GAgEiBhrE,GAhEjBirE,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAkECpkE,EAAS7G,EAAOA,EAAKwB,GAAK,EAC5BkY,EAAQvD,EAAE,eASd,OARIqW,aAAe1mB,EAAQ+oE,GACvBn1D,EAAQvD,EAAE,eACHyW,aAAmB9mB,EAAQ+oE,GAClCn1D,EAAQvD,EAAE,aACHsW,aAAgB3mB,EAAQ+oE,KAC/Bn1D,EAAQ,IAIR+E,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAW,eAAgB2W,IACtC+6C,EACD1yD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBAAuBE,QAAS9f,KAAK8vE,gBAChDnwD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,4BACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oCACfD,EAAAnf,EAAAkM,cAAC4lE,GAAD,CAAmBhrC,UAAW8oC,EAAkBrB,MAAI,EAACjvD,QAAS9f,KAAK8vE,gBAC/DnwD,EAAAnf,EAAAkM,cAAC6lE,GAAA/xE,EAAD,CAAoBuhB,SAAS,QAAQpV,MAAOgjE,OAIpDhwD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,+BACXD,EAAAnf,EAAAkM,cAAC8lE,GAAD,CACIn0C,IAAKr+B,KAAKgyE,WACVhrE,OAAQA,EACRC,UAAW8oE,EACX9jE,KAAM+D,IACN8P,QAAS9f,KAAK8vE,kBAItBnwD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,6BACXD,EAAAnf,EAAAkM,cAAC4lE,GAAD,CAAmBxyD,QAAS9f,KAAK8tC,aAC7BnuB,EAAAnf,EAAAkM,cAAC2+B,EAAA7qC,EAAD,CAAWuhB,SAAS,QAAQpV,MAAOgjE,MAEvChwD,EAAAnf,EAAAkM,cAAC4lE,GAAD,CAAmBhrC,UAAW6oC,EAAcpB,MAAI,EAACjvD,QAAS9f,KAAKq+D,YAC3D1+C,EAAAnf,EAAAkM,cAAC+lE,GAAAjyE,EAAD,CAAkBuhB,SAAS,QAAQpV,MAAOgjE,QAItDhwD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBACXD,EAAAnf,EAAAkM,cAACgmE,GAAD,CAAoB1rE,OAAQA,EAAQC,UAAW8oE,IAC/CpwD,EAAAnf,EAAAkM,cAACimE,GAAD,CACI/3D,MAAOA,EACPsmC,SAAU0vB,GAAYr+D,GAAS,EAArB,GAAAvH,OAA4B4lE,EAAWr+D,EAAvC,QAAAvH,OAAmD4lE,GAAa,OAE7EjjD,aAAgB3mB,EAAQ+oE,IACrBpwD,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAC6iE,GAAD,CACI30D,MAAOvD,EAAE,eACTqL,QAAS2qD,EAAQ,EACjBvtD,QAAS9f,KAAK+xE,mBACdpyD,EAAAnf,EAAAkM,cAACkmE,GAAApyE,EAAD,CAAqBmM,MAAOwiE,MAEhCxvD,EAAAnf,EAAAkM,cAAC6iE,GAAD,CACI30D,MAAOvD,EAAE,yBACTyI,QAAS9f,KAAK6xE,oBACdlyD,EAAAnf,EAAAkM,cAACmmE,GAAAryE,EAAD,CAAkBmM,MAAOwiE,OAIrCxvD,EAAAnf,EAAAkM,cAAComE,GAAD,CAA2Bl4D,MAAOvD,EAAE,QAAStP,OAAQA,EAAQ+X,QAAS9f,KAAKoxE,aAC3EzxD,EAAAnf,EAAAkM,cAAC6iE,GAAD,CACI30D,MAAOvD,EAAE,WACTiwB,UAAWqwB,EACX73C,QAAS9f,KAAK02D,eACd/2C,EAAAnf,EAAAkM,cAAC8iC,GAAAhvC,EAAD,CAAWmM,MAAO8iE,MAEtB9vD,EAAAnf,EAAAkM,cAAC6iE,GAAD,CAAyB30D,MAAOvD,EAAE,UAAWiwB,UAAW6vB,EAAcr3C,QAAS9f,KAAKopC,cAChFzpB,EAAAnf,EAAAkM,cAACqmE,GAAAvyE,EAAD,CAAYmM,MAAOwiE,eA/4BjBpvD,IAAMC,WA45BjBqH,iBAAkBuoD,ICz3BlBoD,uBA9FX,SAAAA,EAAY3zD,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAgzE,IACfnzE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAkzE,GAAA7yE,KAAAH,KAAMqf,KA0CV2Y,uBAAyB,SAAAr3B,GAAU,IAAAye,EACLvf,EAAKwf,MAAvBrY,EADuBoY,EACvBpY,OAAQpC,EADewa,EACfxa,MAEhB,GAAIoC,IAAWrG,EAAOqG,QAAUpC,EAAMqO,IAAIvQ,KAAO/B,EAAOoH,OAAQ,CAC5D,IAAM7G,EAAOtB,IAAUqD,IAAItC,EAAOoH,SAAWlI,EAAKokB,MAAM/iB,KACxDrB,EAAK0kB,SAAS,CACVrjB,KAAMA,MAjDCrB,EAsDnBk4B,uBAAyB,SAAAp3B,GAAU,IAAA4f,EACL1gB,EAAKwf,MAAvBrY,EADuBuZ,EACvBvZ,OAAQpC,EADe2b,EACf3b,MAGhB,GAFesO,YAAclM,KAEdrG,EAAOmL,QAAUlH,EAAMqO,IAAIvQ,KAAO/B,EAAOoH,OAAQ,CAC5D,IAAM7G,EAAOtB,IAAUqD,IAAItC,EAAOoH,SAAWlI,EAAKokB,MAAM/iB,KACxDrB,EAAK0kB,SAAS,CACVrjB,KAAMA,MA7DCrB,EAkEnBstE,mBAAqB,SAAA9hE,GACbA,GAAOA,EAAMqa,kBAEjB7lB,EAAKwf,MAAMS,QAAQzU,IArEJ,IAAA+c,EAGWvoB,EAAKwf,MAAvBrY,EAHOohB,EAGPphB,OAAQpC,EAHDwjB,EAGCxjB,MAEL1D,EAAS0D,EAAdqO,IALS,OAMf/R,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAEjCrB,EAAKokB,MAAQ,CACT8e,WAAY/7B,EACZisE,UAAWruE,EACX4K,MAAO0kB,IACPxkB,OAAQwkB,IACRhzB,KAAMA,GAbKrB,mFAkCfD,IAAU2hB,GAAG,uBAAwBvhB,KAAKg4B,wBAC1Cp4B,IAAU2hB,GAAG,uBAAwBvhB,KAAK+3B,uEAI1Cn4B,IAAUoC,eAAe,uBAAwBhC,KAAKg4B,wBACtDp4B,IAAUoC,eAAe,uBAAwBhC,KAAK+3B,yDAgCjD,IAAA/T,EAC2BhkB,KAAKikB,MAAd/iB,GADlB8iB,EACGxU,MADHwU,EACUtU,OADVsU,EACkB9iB,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAMiH,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAC1CqZ,EAAM5hB,IAAU2I,WAAWJ,GAEjC,OACIwX,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,6BAA6B4B,IAAKA,EAAKK,IAAI,GAAG/B,QAAS9f,KAAKmtE,qBAE3ExtD,EAAAnf,EAAAkM,cAAC2oB,GAAA,EAAD,CAAcn0B,KAAMA,wDAlEAme,EAAO4E,GAAO,IAClCjd,EAAkBqY,EAAlBrY,OAAQpC,EAAUya,EAAVza,MAEhB,OAAIoC,IAAWid,EAAM8e,YAAcn+B,IAAUqf,EAAMgvD,UACxC,CACHlwC,WAAY/7B,EACZisE,UAAWruE,EACX4K,MAAO0kB,IACPxkB,OAAQwkB,IACRhzB,KAAM0D,EAAMqO,KAIb,YA/ByB8M,IAAMC,YCsC/BkzD,eAhCX,SAAAA,EAAY7zD,GAAQ,OAAAvf,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAkzE,GAAApzE,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAozE,GAAA/yE,KAAAH,KACVqf,0EAGD,IAAAD,EACoBpf,KAAKqf,MAAtBrY,EADHoY,EACGpY,OAAQwR,EADX4G,EACW5G,KAEhB,OACImH,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,wBACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gCACXD,EAAAnf,EAAAkM,cAACysC,EAAD,CAAiBnyC,OAAQA,EAAQwT,mBAAmB,IACpDmF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gCACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oBACXD,EAAAnf,EAAAkM,cAAC8sB,GAAA,EAAD,CAAexyB,OAAQA,KAE1BwR,GACGmH,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,iCACXD,EAAAnf,EAAAkM,cAAA,QAAMkT,UAAU,gBAAgBpH,cAlBxBuH,IAAMC,WCiBxCyvD,GAAmB,CACrBpsD,QAAS,GACTrB,MAAO,QACP0tD,UAAW,cAGTyD,GAAkB,CACpB9vD,QAAS,GACTrB,MAAO,SAGL2tD,GAAsB,CACxBtsD,QAAS,GACTrB,MAAO,SAGLoxD,eACF,SAAAA,EAAY/zD,GAAO,IAAAxf,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAozE,IACfvzE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAAszE,GAAAjzE,KAAAH,KAAMqf,KA4EV8rB,UAAY,SAAA9/B,GACR,GAAsB,KAAlBA,EAAM09B,QAAgB,CAEtB,GADqClpC,EAAKokB,MAAlC4rD,yBACsB,OAE9BhwE,EAAKiuC,mBACoB,KAAlBziC,EAAM09B,QACblpC,EAAKiwE,iBACoB,KAAlBzkE,EAAM09B,SACblpC,EAAKw+D,cAtFMx+D,EA0FnB6wE,YA1FmB5wE,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KA0FL,SAAAC,IAAA,IAAAsG,EAAAmD,EAAA,OAAA6kB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACFiG,EAAWnH,EAAKwf,MAAhBrY,OAEH0U,YAAc1U,GAHT,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAKWc,KAAgBgJ,KAAK,CACtC/B,QAAS,uBACTgG,QAASoE,YAAclM,GACvBmkB,OAAQ,EACR+G,MAAO,MATD,OAKJ/nB,EALItJ,EAAAkK,KAYVlL,EAAK2S,QAAUrI,EAAO2I,OACtBjT,EAAKmwE,iBAA4C,IAAzB7lE,EAAO2I,OAAO9M,OAExB,EAEdnG,EAAK0kB,SAAS,CACV8uD,aAHU,EAIVlD,aAActwE,EAAKswE,aAJT,GAKVC,iBAAkBvwE,EAAKuwE,iBALb,GAMVr+C,WAAY5nB,EAAO0nB,cAGvBve,YAAiCtM,EATnB,EASkCnH,EAAK2S,SAxB3C,yBAAA3R,EAAAU,SAAAb,MA1FKb,EAqHnBiuC,YAAc,WACV11B,KAAiBosC,6BAA6B,OAtH/B3kD,EAyHnBuxE,WAAa,WAAM,IACPpqE,EAAWnH,EAAKwf,MAAhBrY,OADOgd,EAEsBnkB,EAAKokB,MAAlCovD,EAFOrvD,EAEPqvD,aAActhD,EAFP/N,EAEO+N,WAEhBhuB,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAEA,IAAIwO,GAAS,EACTwf,IACAxf,EAAQ8gE,GAGZ,IAAMzuE,EACF2N,EAAQ,GAAKA,EAAQ1S,EAAK2S,QAAQxM,OAASoN,YAAgBvT,EAAK2S,QAAQD,IAAUoK,YAAiB3V,GACvG,GAAKpC,GACAA,EAAMqO,IAAX,CAEA,IAAM/R,EAAOtB,IAAUqD,IAAI2B,EAAMqO,IAAIvQ,KAAOkC,EAAMqO,IAC7C/R,GAELuQ,YAAevQ,EAAMA,EAAKwB,GAAK,OAAQqB,EAAM,kBAAMnE,IAAUqE,oBAAoB+C,EAAQ9F,EAAKwB,SA7I/E7C,EAgJnB62D,cAAgB,WAAM,IACV1vD,EAAWnH,EAAKwf,MAAhBrY,OACR,GAAK0U,YAAc1U,GAAnB,CAFkB,IAAAm5B,EAImBtgC,EAAKokB,MAAlCovD,EAJUlzC,EAIVkzC,aAEJ9gE,GAAS,EAKb,GAXkB4tB,EAIIpO,aAIlBxf,EAAQ8gE,KAGR9gE,EAAQ,GAAKA,GAAS1S,EAAK2S,QAAQxM,QAAvC,CACA,IAAMpB,EAAQwO,YAAgBvT,EAAK2S,QAAQD,IAC3C,GAAK3N,EAAL,CAbkB,IAeP1D,EAAS0D,EAAdqO,IAEN,GADA/R,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACjC,CAEA,IAAM+E,EAAY,CACd6C,QAAS,YACT8I,KAAM,IACNhN,MAAO1D,EACPsO,MAAO,IACPE,OAAQ,KAGZ7N,KAAgBgH,aAAa,CACzBC,QAAS,sBACTiyC,KAAM,CAAE90C,oBA7KGpG,EAiLnBupC,aAAe,WAAM,IAAAhqB,EACavf,EAAKwf,MAA3BrY,EADSoY,EACTpY,OADSo5B,GAAAhhB,EACDnY,UACqBpH,EAAKokB,OAAlCovD,EAFSjzC,EAETizC,aAEJ9gE,GAAS,EAJI6tB,EAEKrO,aAIlBxf,EAAQ8gE,GAGZ,IAAMzuE,EACF2N,EAAQ,GAAKA,EAAQ1S,EAAK2S,QAAQxM,OAASoN,YAAgBvT,EAAK2S,QAAQD,IAAUoK,YAAiB3V,GAEvG,GAAIpC,EAAO,CACP,IAAI1D,EAAO0D,EAAMqO,IAEjB,GADA/R,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACvB,CACN,IAAMvB,EAAQC,IAAU0zE,oBAExB1zE,IAAUkI,gBAAgBnI,EAAOuB,MAnM1BrB,EAwMnBuwE,iBAAmB,SAAA79D,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP1S,EAAK2S,QAAQxM,QA5MjBnG,EA+MnBiwE,eAAiB,SAAAzkE,GACTA,GACAA,EAAMqa,kBAFY,IAMhB8L,EADmB3xB,EAAKokB,MAAtBovD,aACyB,EAEjC,OAAOxzE,EAAKyxE,UAAU9/C,EAAW,WACzBA,IAAc3xB,EAAK2S,QAAQxM,OAAS,GACpCnG,EAAK0xE,kBAzNE1xE,EA8NnB0xE,aA9NmBzxE,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KA8NJ,SAAAyB,IAAA,OAAA8sB,EAAAxuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAAd,OAAA,kCAAAc,EAAAZ,SAAAW,MA9NIrC,EAkOnBswE,aAAe,SAAA59D,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAtOL1S,EAyOnBw+D,WAAa,SAAAhzD,GACLA,GACAA,EAAMqa,kBAFQ,IAMZ8L,EADmB3xB,EAAKokB,MAAtBovD,aACyB,EAEjC,OAAOxzE,EAAKyxE,UAAU9/C,EAAW,WACX,IAAdA,GACA3xB,EAAK2xE,cAnPE3xE,EAwPnB2xE,SAxPmB1xE,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KAwPR,SAAAgrD,IAAA,OAAAz8B,EAAAxuB,EAAAI,KAAA,SAAA8qD,GAAA,cAAAA,EAAA5qD,KAAA4qD,EAAA3qD,MAAA,cAAA2qD,EAAArqD,OAAA,kCAAAqqD,EAAAnqD,SAAAkqD,MAxPQ5rD,EA4PnByxE,UAAY,SAAC/+D,EAAOlJ,GAChB,GAAIkJ,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS1S,EAAK2S,QAAQxM,OAAQ,OAAO,EAEzCnG,EAAK0kB,SACD,CACI8uD,aAAc9gE,EACd49D,aAActwE,EAAKswE,aAAa59D,GAChC69D,iBAAkBvwE,EAAKuwE,iBAAiB79D,IAE5ClJ,GAVyB,IAarBrC,EAAWnH,EAAKwf,MAAhBrY,OAGR,OADAsM,YAAiCtM,EAAQuL,EAAO1S,EAAK2S,UAC9C,GAzQP3S,EAAK2S,QAAU,GAHA,IAAA+N,EAKY1gB,EAAKwf,MAAxBrY,EALOuZ,EAKPvZ,OAAQe,EALDwY,EAKCxY,OALD,OAOflI,EAAKokB,MAAQ,CACT8e,WAAY/7B,EACZusE,WAAYxrE,EACZsrE,aAAc,EACdlD,cAAc,EACdC,kBAAkB,EAClBP,0BAA0B,GAbfhwE,qFAiBG+kB,EAAWC,GAAW,IAAAuD,EACVpoB,KAAKqf,MAA3BrY,EADgCohB,EAChCphB,OAAQC,EADwBmhB,EACxBnhB,UADwBw5B,EASpCzgC,KAAKikB,MANLuvD,EAHoC/yC,EAGpC+yC,cACApD,EAJoC3vC,EAIpC2vC,iBACAD,EALoC1vC,EAKpC0vC,aACAH,EANoCvvC,EAMpCuvC,iBACAj+C,EAPoC0O,EAOpC1O,WACA89C,EARoCpvC,EAQpCovC,yBAGJ,OAAIjrD,EAAU5d,SAAWA,IAIrB4d,EAAU3d,YAAcA,IAIxB4d,EAAU2uD,gBAAkBA,IAI5B3uD,EAAUqtD,kBAAoB9B,IAI9BvrD,EAAUsrD,eAAiBA,IAI3BtrD,EAAUmrD,mBAAqBA,IAI/BnrD,EAAUkN,aAAeA,GAIzBlN,EAAUgrD,2BAA6BA,oDAO3B,IACR7oE,EAAWhH,KAAKqf,MAAhBrY,OACFpC,EAAQ+X,YAAiB3V,GAC/B6L,YAA8B7L,EAAQ,CAACpC,IAEvC5E,KAAK0wE,cAEL5rE,SAASqgC,iBAAiB,UAAWnlC,KAAKmrC,WAAW,kDAIrDrmC,SAASugC,oBAAoB,UAAWrlC,KAAKmrC,WAAW,oCAqMnD,IAAAviB,EACiB5oB,KAAKqf,MAAnBrY,EADH4hB,EACG5hB,OAAQqQ,EADXuR,EACWvR,EADXqpB,EAUD1gC,KAAKikB,MAPLovD,EAHC3yC,EAGD2yC,aACAlD,EAJCzvC,EAIDyvC,aACAC,EALC1vC,EAKD0vC,iBAEAr+C,GAPC2O,EAMDsvC,iBANCtvC,EAOD3O,YAKAxf,GAZCmuB,EAQDmvC,yBARCnvC,EASDixC,cAGS,GACT5/C,IACAxf,EAAQ8gE,GAGZ,IACMI,EAAYlhE,GAAS,GAAKA,EAAQvS,KAAKwS,QAAQxM,OAC/CpB,EAAQ6uE,EAAYrgE,YAAgBpT,KAAKwS,QAAQD,IAAUoK,YAAiB3V,GAC5E8sB,EAAmB2/C,EAAYzzE,KAAKwS,QAAQD,GAAS,KAC9CrR,EAAS0D,EAAdqO,IAER,OACI0M,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,gBAPQ,KASnBD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBAAuBE,QAAS9f,KAAK8vE,gBAChDnwD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,4BACXD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,oCACfD,EAAAnf,EAAAkM,cAAC4lE,GAAD,CAAmBhrC,UAAW6oC,EAAcpB,MAAI,EAACjvD,QAAS9f,KAAKq+D,YAC3D1+C,EAAAnf,EAAAkM,cAAC6lE,GAAA/xE,EAAD,CAAoBuhB,SAAS,QAAQpV,MAAOgjE,OAIpDhwD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,+BACXD,EAAAnf,EAAAkM,cAACgnE,GAAD,CAA2B1sE,OAAQA,EAAQpC,MAAOA,EAAOkb,QAAS9f,KAAK8vE,kBAG3EnwD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,6BACXD,EAAAnf,EAAAkM,cAAC4lE,GAAD,CAAmBxyD,QAAS9f,KAAK8tC,aAC7BnuB,EAAAnf,EAAAkM,cAAC2+B,EAAA7qC,EAAD,CAAWuhB,SAAS,QAAQpV,MAAOgjE,MAEvChwD,EAAAnf,EAAAkM,cAAC4lE,GAAD,CAAmBhrC,UAAW8oC,EAAkBrB,MAAI,EAACjvD,QAAS9f,KAAK8vE,gBAC/DnwD,EAAAnf,EAAAkM,cAAC+lE,GAAAjyE,EAAD,CAAkBuhB,SAAS,QAAQpV,MAAOgjE,QAItDhwD,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAU,uBACXD,EAAAnf,EAAAkM,cAACinE,GAAD,CAA2B3sE,OAAQA,EAAQwR,KAAMoa,YAAwBkB,KACzEnU,EAAAnf,EAAAkM,cAACimE,GAAD,CACI/3D,MAAOvD,EAAE,eACT6pC,SAAUnvB,GAAcxf,GAAS,EAAvB,GAAAvH,OAA8BuH,EAAQ,EAAtC,QAAAvH,OAA8C+mB,GAAe,OAE3EpS,EAAAnf,EAAAkM,cAAComE,GAAD,CAA2Bl4D,MAAOvD,EAAE,QAAStP,OAAQ7G,EAAKwB,GAAIod,QAAS9f,KAAKoxE,aAC3E11D,YAAc1U,IACX2Y,EAAAnf,EAAAkM,cAAC6iE,GAAD,CACI30D,MAAOvD,EAAE,WACTiwB,UAAWmsC,EACX3zD,QAAS9f,KAAK02D,eACd/2C,EAAAnf,EAAAkM,cAAC8iC,GAAAhvC,EAAD,CAAWmM,MAAO8iE,MAG1B9vD,EAAAnf,EAAAkM,cAAC6iE,GAAD,CAAyB30D,MAAOvD,EAAE,UAAWiwB,UAAQ,EAACxnB,QAAS9f,KAAKopC,cAChEzpB,EAAAnf,EAAAkM,cAACqmE,GAAAvyE,EAAD,CAAYmM,MAAOwmE,eA/UVpzD,IAAMC,WA2VxBqH,iBAAkB+rD,ICtW3BQ,uBACF,SAAAA,EAAYv0D,GAAO,IAAAxf,EAAA,OAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAA4zE,IACf/zE,EAAAC,OAAA0jB,EAAA,EAAA1jB,CAAAE,KAAAF,OAAA2jB,EAAA,EAAA3jB,CAAA8zE,GAAAzzE,KAAAH,KAAMqf,KAyCVw0D,uBAAyB,SAAAlzE,GAAU,IACvBqG,EAA6BrG,EAA7BqG,OAAQC,EAAqBtG,EAArBsG,UAAWutB,EAAU7zB,EAAV6zB,MAE3B30B,EAAK8jD,iBAAiB38C,EAAQC,EAAWutB,IA7C1B30B,EAgDnBi0E,uBAAyB,SAAAnzE,GAAU,IACvBmL,EAAkBnL,EAAlBmL,OAAQ0oB,EAAU7zB,EAAV6zB,MAEhB30B,EAAKwlD,iBAAiBv5C,EAAQ0oB,IAnDf30B,EAsDnBu1D,oCAAsC,SAAAz0D,GAClCd,EAAK0kB,SAAS,CACV8wC,qBAAsBj9C,KAAiBi9C,wBAxD5Bx1D,EA4DnB69B,iCAAmC,SAAA/8B,GAC/Bd,EAAK0kB,SAAS,CAAEoZ,mBAAoBvlB,KAAiBulB,sBA7DtC99B,EAgEnB29B,wCAA0C,SAAA78B,GACtCd,EAAK0kB,SAAS,CACVkZ,0BAA2BrlB,KAAiBqlB,6BAlEjC59B,EAsEnBk0E,sBAAwB,SAAApzE,GAAU,IACtBo6C,EAASp6C,EAATo6C,KAERl7C,EAAK0kB,SAAS,CAAEoI,YAAaouB,KAzEdl7C,EA4EnB8jD,iBAAmB,SAAC38C,GAA4C,IAApCC,EAAoCvF,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAxB,KAAM8yB,EAAkB9yB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GACtDovC,EAAgB14B,KAAiBs8B,YACjCs/B,EAAsB57D,KAAiBwvC,aACvCmoB,EAAmB33D,KAAiB2wC,eAE1C,GAAIv0B,EACIw/C,IAAwBhtE,GACxBnF,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,gBAOZ,GAAI8pC,IAAkB9pC,GAAUC,GAAa8oE,IAAqB9oE,EAC9DpH,EAAKo0E,iBAAiB5mD,QAAQ46C,kBAC1BhhE,GACAotB,aAAiBrtB,EAAQC,QAE1B,GAAI6pC,IAAkB9pC,GAAWC,EAQpCpF,KAAgB+gD,UAAU57C,EAAQC,OARa,CAC/C,IAAMlD,EAAO6O,IAAU3P,IAAI+D,GACvBjD,GAAQA,EAAK6T,aAAe,EAC5B/X,EAAKo0E,iBAAiB5mD,QAAQg7C,gBAE9BxoE,EAAKo0E,iBAAiB5mD,QAAQ26C,mBAtGvBnoE,EA6GnBwlD,iBA7GmB,eAAAhlD,EAAAP,OAAA4zC,EAAA,EAAA5zC,CAAAkvB,EAAAxuB,EAAAC,KA6GA,SAAAC,EAAOoL,EAAQ0oB,GAAf,IAAAzwB,EAAA,OAAAirB,EAAAxuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACV+K,EADU,CAAAjL,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAGIc,KAAgBgJ,KAAK,CACpC/B,QAAS,oBACTgG,QAAShD,EACT2uC,OAAO,IANI,OAGT12C,EAHSlD,EAAAkK,KASflL,EAAK8jD,iBAAiB5/C,EAAKrB,GAAI,KAAM8xB,GATtB,wBAAA3zB,EAAAU,SAAAb,MA7GA,gBAAAc,EAAAc,GAAA,OAAAjC,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKo0E,iBAAmBl0D,IAAMie,YAE9Bn+B,EAAKokB,MAAQ,CACToxC,qBAAsBj9C,KAAiBi9C,qBACvC13B,mBAAoBvlB,KAAiBulB,mBACrCF,0BAA2BrlB,KAAiBqlB,0BAC5C9Q,YAAa,MATF9sB,mFAoBfkP,IAAUwS,GAAG,uBAAwBvhB,KAAK8zE,wBAC1ClhE,IAAU2O,GAAG,uBAAwBvhB,KAAK6zE,wBAE1Cz7D,KAAiBmJ,GAAG,oCAAqCvhB,KAAKo1D,qCAC9Dh9C,KAAiBmJ,GAAG,iCAAkCvhB,KAAK09B,kCAC3DtlB,KAAiBmJ,GAAG,wCAAyCvhB,KAAKw9B,yCAClEplB,KAAiBmJ,GAAG,sBAAuBvhB,KAAK+zE,sEAIhDhlE,IAAU/M,eAAe,uBAAwBhC,KAAK8zE,wBACtDlhE,IAAU5Q,eAAe,uBAAwBhC,KAAK6zE,wBAEtDz7D,KAAiBpW,eAAe,oCAAqChC,KAAKo1D,qCAC1Eh9C,KAAiBpW,eAAe,iCAAkChC,KAAK09B,kCACvEtlB,KAAiBpW,eACb,wCACAhC,KAAKw9B,yCAETplB,KAAiBpW,eAAe,sBAAuBhC,KAAK+zE,wDAkFvD,IACGvzD,EAAYxgB,KAAKqf,MAAjBmB,QADHwD,EAEwFhkB,KAAKikB,MAA1FoxC,EAFHrxC,EAEGqxC,qBAAsB13B,EAFzB3Z,EAEyB2Z,mBAAoBF,EAF7CzZ,EAE6CyZ,0BAA2B9Q,EAFxE3I,EAEwE2I,YAE7E,OACIhN,EAAAnf,EAAAkM,cAAAiT,EAAAnf,EAAA4kB,SAAA,KACIzF,EAAAnf,EAAAkM,cAAA,OAAKkT,UAAWe,IAAWH,EAAQ0zD,KAAM,OAAQ,CAAEC,oBAAqB9e,KACpE11C,EAAAnf,EAAAkM,cAAC0nE,GAAD,CAASze,aAAc31D,KAAK2jD,mBAC5BhkC,EAAAnf,EAAAkM,cAAC2nE,GAAD,CAAeh2C,IAAKr+B,KAAKi0E,mBACxB5e,GAAwB11C,EAAAnf,EAAAkM,cAACq9D,GAAD,OAE7BpqD,EAAAnf,EAAAkM,cAAC4nE,GAAA,EAAD,MACC32C,GAAsBhe,EAAAnf,EAAAkM,cAAC6nE,GAAgB52C,GACvCF,GAA6B9d,EAAAnf,EAAAkM,cAAC8nE,GAAuB/2C,GACrD9Q,GAAehN,EAAAnf,EAAAkM,cAAC+nE,GAAkB9nD,WAxI5B5M,IAAMC,YAgJvB4G,GAAUC,YACZ6tD,IACAttD,IACApG,IA1JW,SAAAC,GAAK,MAAK,CACrBizD,KAAM,CACF58C,WAAmC,SAAvBrW,EAAM2b,QAAQhrB,KAAkBqP,EAAM2b,QAAQtF,WAAW4O,QAAU,UAC/ElkB,MAAOf,EAAM2b,QAAQlf,KAAKmf,YAwJ9B0a,GAGW3wB,aAAQgtD","file":"static/js/3.f29c9b4d.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n                console.log(`readFile file_id=${file.id} result`, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorDark)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport { isBlurredThumbnail, getAudioTitle };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_PREVIEW_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: {\n                '@type': 'inputFileId',\n                id: stickerId\n            }\n        }).then(result => {\n            const { previewStickerId } = this.state;\n            if (previewStickerId === stickerId) {\n                this.setState({\n                    previewStickerEmojis: result.emojis.join(' ')\n                });\n            }\n        });\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, previewStickerEmojis, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && (\n                    <div className='sticker-set-dialog-preview'>\n                        <div className='sticker-set-dialog-preview-emoji'>{previewStickerEmojis}</div>\n                        <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.action.active\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton className={classes.iconButton} aria-label='Send' onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorDark)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus classes={{ root: classes.statusRoot, icon: classes.statusIcon }} chatId={chatId} />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n        if (!onSelect) return;\n\n        onSelect(user);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getChatTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return <div className='dialog-title'>{title}</div>;\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {!isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: '0px'\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    listItemSelected: {\n        backgroundColor: theme.palette.primary.main + '!important'\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.listItemSelected]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    accentBackground: {\n        background: theme.palette.primary.main + '!important'\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.accentBackground]: chatId === selectedChatId && messageId === selectedMessageId },\n                        { 'accent-background': chatId === selectedChatId && messageId === selectedMessageId }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} />\n                            )}\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local,\n                global: null,\n                messages: null\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatMuteFor,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { draft_message } = chat;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n        const muteClassName = isChatMuted(chat) ? 'dialog-badge-muted' : '';\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div className={classNames(muteClassName, 'dialog-badge', classes.dialogBadge)}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMetaControl.css';\n\nclass DialogMetaControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className='dialog-meta-date'>{date}</div>}</>;\n    }\n}\nexport default DialogMetaControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogControl.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{ statusRoot: classes.statusRoot, statusIcon: classes.statusIcon }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DialogControl from '../Tile/DialogControl';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && (\n                        <>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                        </>\n                    )}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id, true);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getText,\n    getMedia,\n    getUnread,\n    getSenderUserId,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { contextMenu, selected, highlighted } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messagePoll': {\n                this.forceUpdate();\n                break;\n            }\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { contextMenu, left, top, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n        const senderUserId = getSenderUserId(message);\n\n        const tile = senderUserId ? (\n            <UserTileControl userId={senderUserId} onSelect={this.handleSelectUser} />\n        ) : (\n            <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n        );\n\n        const messageClassName = classNames(\n            'message',\n            classes.message,\n            { 'message-selected': selected },\n            { [classes.messageSelected]: selected },\n            // { 'message-highlighted': highlighted && !selected },\n            { [classes.messageHighlighted]: highlighted && !selected }\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {!forward_info && <MessageAuthor chatId={chatId} openChat userId={senderUserId} openUser />}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            <div className='message-meta'>\n                                <span>&nbsp;</span>\n                                {views > 0 && (\n                                    <>\n                                        <i className='message-views-icon' />\n                                        <span className='message-views'>\n                                            &nbsp;\n                                            {views}\n                                            &nbsp; &nbsp;\n                                        </span>\n                                    </>\n                                )}\n                                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                                <a className='message-date' onClick={this.handleDateClick}>\n                                    <span title={dateHint}>{date}</span>\n                                </a>\n                            </div>\n                        </div>\n                        {Boolean(reply_to_message_id) && <Reply chatId={chatId} messageId={reply_to_message_id} />}\n                        {media}\n                        <div className='message-text'>{text}</div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { debounce, throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive } = this.state;\n\n        console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) =>\n                  isServiceMessage(x) ? (\n                      <ServiceMessage\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  ) : (\n                      <Message\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showTitle\n                          sendingState={x.sending_state}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  )\n              );\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: 1\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_PREVIEW_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport StickerStore from '../../Stores/StickerStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, emojis, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n        const emoji = stickerIndex !== -1 ? emojis[stickerIndex].emojis.join(' ') : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('Remove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && (\n                    <div className='sticker-set-dialog-preview'>\n                        <div className='sticker-set-dialog-preview-emoji'>{emoji}</div>\n                        <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n                    </div>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            ApplicationStore.setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        ApplicationStore.setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        ApplicationStore.setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Dialog/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.unread_count > 0) {\n                this.dialogDetailsRef.current.scrollToStart();\n            } else {\n                this.dialogDetailsRef.current.scrollToBottom();\n            }\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}