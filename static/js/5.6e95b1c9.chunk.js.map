{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","ForwardTargetChat","chatId","selected","onSelect","t","shortTitle","getChatShortTitle","classNames","onClick","ChatTile","withTranslation","copy","text","element","document","createElement","value","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","select","execCommand","console","error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","a","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","map","x","catch","e","chats","savedMessages","chatIds","chat_ids","store","FileStore","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","link","key","message","handleScheduledAction","action","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton","aria-label","color","removeScheduledAction","Close","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","forEach","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","forceUpdate","innerHTML","innerText","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","searchResultsMap","filteredResults","foundChats","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogStatus","onUpdateUserStatus","update","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","nextProps","nextState","on","SupergroupStore","off","externalSubtitle","Chat","handleClick","onTileSelect","showStatus","showSavedMessages","big","showTitle","isSavedMessages","isMeChat","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","userId","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","users","member","user","items","sort","y","getUserStatusOrder","User","wordWrap","Divider","toUpperCase","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","stopPropagation","contextMenu","left","clientX","clientY","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","transitionDuration","DialogContent","DialogContentText","FormControlLabel","control","Checkbox","label","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","Error","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","SharedDocuments","SharedLink","nextContext","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","tileColor","Math","abs","charCodeAt","charAt","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","getSrc","src","isBlurredThumbnail","backgroundImage","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","file","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","classes","Archive","handleCloseArchive","innerListRef","cacheItems","DialogsList","TopChat","onDelete","dialog","showOnline","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","previousChatId","AppStore","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","children","Search","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","log","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","MainMenuButton","onUpdateAuthorizationState","authorizationState","authorization_state","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","aria-owns","aria-haspopup","SearchInput","target","blur","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","childNodes","range","createRange","setStart","collapse","selection","window","getSelection","removeAllRanges","addRange","ANIMATION_DURATION_100MS","SidebarPage","Slide","direction","mountOnEnter","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","focused","RadioGroup","name","Radio","root","withTheme","Main","handleAppearance","themePickerRef","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Unmute","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","TextField","defaultValue","General","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","transform","fillRule","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","PrivacySecurity","openActiveSessions","handleBlockedUsers","opened","closeActiveSessions","sessionsCount","usersCount","role","undefined","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","setFullInfo","manager","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","reset","cache","contacts","onUpdate","CacheManager","remove","onClientUpdate","addTdLibListener","removeTdLibListener","saveChatsInternal","load","files","parseCache","archiveChats","basicGroups","supergroups","options","setDataUrl","OutputTypingManager","small","chat_list","updateChatChatList","last_message","option","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","EventEmitter","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","renderIds","getListRenderIds","userIds","user_ids","renderItem","getUserFullName","localeCompare","throttle","CacheStore","VirtualizedList","rowHeight","overScanCount","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","getArchiveTitle","archive","chatList","chatsOrder","Dialogs","onUpdateChatOrder","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveTitle","onUpdateChatChatList","prevShowArchive","showArchive","archiveList","listCurrent","onClientUpdateOpenContacts","openContacts","onClientUpdateCloseContacts","onClientUpdateOpenSettings","openSettings","meChatId","onClientUpdateCloseSettings","onClientUpdateOpenArchive","onClientUpdateCloseArchive","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","header","dialogsHeaderRef","setInitQuery","scrollToTop","visible","handleSaveCache","saveCache","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","onSaveCache","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","container","paper","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","disabled","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","is_chosen","now","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","hint","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onDone","handleCancel","onCancel","textRef","urlRef","display","flexDirection","margin","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","getEntities","readImageSize","photoWidth","photoHeight","altKey","ctrlKey","metaKey","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","click","handleEditMediaComplete","Array","from","getMediaFromFile","media","addEventListener","removeEventListener","setFormattedText","focusInput","formattedText","nodes","getNodes","getRangeAt","min","max","floor","random","getRandomInt","setBlob","has_stickers","accept","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","InputBox","selectionChangeListener","newMessageRef","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","item","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","setDraft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","sending_state","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","findLastTextNode","handleCancelEditMedia","closeEditMediaDialog","handleDoneEditMedia","editMessageMedia","StickerStore","performance","match","emojiRegex","exec","timestamp","stickers","isMediaEditing","isTextMessage","Suspense","fallback","multiple","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","is_channel","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","getLeaveChatTitle","handleUnpin","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateChatTitle","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","selectedItems","deleteMessages","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","code","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","searchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","zIndex","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","audio","video_note","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onSendInternal","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","is_outgoing","Status","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","animation","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","copyLink","tagName","handleReply","replyMessage","handlePin","isMessagePinned","pinMessage","handleEdit","editMessage","handleUnvote","cancelPollAnswer","handleConfirmStopPoll","confirmStopPoll","handleStopPoll","stopPoll","handleCloseConfirm","sendingState","showUnreadSeparator","showTail","fitSize","getFitSize","edit_date","forward_info","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","isPinned","canBeSelected","hasSelectedMessage","canBeEdited","canMessageBeEdited","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","autoplay","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","initDB","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","old_message_id","scrollBehavior","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","prevMessageId","scrollDownButtonRef","historyEquals","previousChat","unread","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","Placeholder","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","STICKER_SET","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","onLoad","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","onClientUpdateDocumentThumbnailBlob","onClientUpdateDocumentBlob","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","every","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","getBlobUrl","thumbnailBlob","videoWidth","videoHeight","scale","handleContentClick","onVolumeChange","loop","FileProgress","prevMedia","getViewerFile","getViewerThumbnail","speed","MediaViewerButton","grow","cx","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","hasPreviousMedia","hasNextMedia","handlePrevious","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","behavior","hiddenElement","details","finished","currentElement","scrollIntoView","scrollTo","Provider","alignItems","transition","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","updateAnimationData","isLottieMessage","getAnimationData","animationData","getMediaFile","getMediaPreviewFile","changeSpeed","lottieRef","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaInfo","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/5.6e95b1c9.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function copy(text) {\n    let element;\n\n    try {\n        element = document.createElement('textarea');\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.select();\n\n        const successful = document.execCommand('copy');\n        if (!successful) {\n            console.error('unable to copy using execCommand');\n        }\n    } catch {\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.left !== left) {\n            return true;\n        }\n\n        if (nextState.top !== top) {\n            return true;\n        }\n\n        if (nextState.openDeleteDialog !== openDeleteDialog) {\n            return true;\n        }\n\n        if (nextState.revoke !== revoke) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage, t } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default withTranslation()(SharedPhoto);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage, t } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-video-wrapper'>\n                    <div\n                        className={classNames('shared-video-content', {\n                            'media-blurred': isBlurred,\n                            'media-mini-blurred': !thumbSrc && isBlurred\n                        })}\n                        style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                    />\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default withTranslation()(SharedVideo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (!voiceNote) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className='shared-voice-note' onContextMenu={this.handleContextMenu}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                    <div className='voice-note-meta'>\n                        <AudioAction\n                            chatId={chatId}\n                            messageId={messageId}\n                            duration={duration}\n                            file={file}\n                            title={`${dateString}, `}\n                        />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        // console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        // console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass Archive extends React.Component {\n    handleCloseArchive = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCloseArchive'\n        });\n    };\n\n    render() {\n        const { t, innerListRef, items, cacheItems } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleCloseArchive}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem button className='recently-found-chat' onClick={onClick} onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './SectionHeader.css';\n\nfunction SectionHeader(props) {\n    const { command, onClick, children } = props;\n\n    return (\n        <div className='section-header'>\n            <div className='section-header-title'>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenContacts'\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenSettings',\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    render() {\n        const { t, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    <SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n\n                element.innerText = null;\n                onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                {/*<SearchIcon />*/}\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_100MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch, text } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            const searchInput = this.searchInputRef.current;\n            if (openSearch) {\n                setTimeout(() => {\n                    if (searchInput) {\n                        searchInput.focus();\n                    }\n                }, ANIMATION_DURATION_100MS);\n            } else {\n                searchInput.innerText = null;\n            }\n        }\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n\n        let content = null;\n        let showClose = false;\n        if (openSearch) {\n            showClose = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton showClose={showClose} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport './SidebarPage.css';\n\nfunction SidebarPage({ children, open }) {\n    return (\n        <Slide direction='right' in={open} mountOnEnter unmountOnExit>\n            <div className='sidebar-page'>{children}</div>\n        </Slide>\n    );\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport PhotoIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Appearance')} />\n                    </ListItem>\n                    <ThemePicker ref={this.themePickerRef} />\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport './General.css';\n\nclass General extends React.Component {\n    render() {\n        const { t, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content' />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    handleBlockedUsers = () => {\n        const { users } = this.state;\n        if (!users) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlockedUsersPage',\n            opened: true,\n            users\n        });\n    };\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.handleBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openActiveSessions}>\n                    <ActiveSessions sessions={sessions} onClose={this.closeActiveSessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        console.log('[perf] Settings.componentDidMount');\n        this.loadContent();\n    }\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCloseSettings'\n        });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile}>\n                    <EditProfile chatId={chatId} onClose={this.closeEditProfile} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral}>\n                    <General chatId={chatId} onClose={this.closeGeneral} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications}>\n                    <Notifications chatId={chatId} onClose={this.closeNotifications} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity}>\n                    <PrivacySecurity onClose={this.closePrivacySecurity} />\n                </SidebarPage>\n                <SidebarPage open={openLanguage}>\n                    <Language onClose={this.closeLanguage} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n\n        (files || []).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).forEach(x => {\n            delete x.OutputTypingManager;\n\n            ChatStore.set(x);\n            if (x.photo) {\n                if (x.photo.small) FileStore.set(x.photo.small);\n                if (x.photo.big) FileStore.set(x.photo.big);\n            }\n            if (x.chat_list) {\n                ChatStore.updateChatChatList(x.id, x.chat_list);\n            }\n            if (x.last_message) {\n                MessageStore.set(x.last_message);\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n        chats.concat(archiveChats).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCloseContacts'\n        });\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    render() {\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <SearchInput\n                        inputRef={this.searchInputRef}\n                        onChange={this.handleSearch}\n                        onClose={this.handleClose}\n                    />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        const { isChatDetailsVisible } = AppStore;\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            isChatDetailsVisible,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.isChatDetailsVisible !== isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateOpenSettings', this.onClientUpdateOpenSettings);\n        ChatStore.on('clientUpdateCloseSettings', this.onClientUpdateCloseSettings);\n        ChatStore.on('clientUpdateOpenArchive', this.onClientUpdateOpenArchive);\n        ChatStore.on('clientUpdateCloseArchive', this.onClientUpdateCloseArchive);\n        ChatStore.on('clientUpdateOpenContacts', this.onClientUpdateOpenContacts);\n        ChatStore.on('clientUpdateCloseContacts', this.onClientUpdateCloseContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateOpenSettings', this.onClientUpdateOpenSettings);\n        ChatStore.off('clientUpdateCloseSettings', this.onClientUpdateCloseSettings);\n        ChatStore.off('clientUpdateOpenArchive', this.onClientUpdateOpenArchive);\n        ChatStore.off('clientUpdateCloseArchive', this.onClientUpdateCloseArchive);\n        ChatStore.off('clientUpdateOpenContacts', this.onClientUpdateOpenContacts);\n        ChatStore.off('clientUpdateCloseContacts', this.onClientUpdateCloseContacts);\n    }\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateOpenContacts = async update => {\n        this.setState({ openContacts: true });\n    };\n\n    onClientUpdateCloseContacts = update => {\n        this.setState({ openContacts: false });\n    };\n\n    onClientUpdateOpenSettings = update => {\n        this.setState({ openSettings: true, meChatId: update.chatId });\n    };\n\n    onClientUpdateCloseSettings = update => {\n        this.setState({ openSettings: false });\n    };\n\n    onClientUpdateOpenArchive = update => {\n        this.setState({ openArchive: true });\n    };\n\n    onClientUpdateCloseArchive = update => {\n        this.setState({ openArchive: false });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div\n                    className={classNames('dialogs', {\n                        'dialogs-third-column': isChatDetailsVisible\n                    })}>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={200}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleClose}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => AppStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            const key = 'disallow_multiple_answers';\n            const message = t('PollQuizOneRightAnswer');\n            const action = null;\n\n            this.handleScheduledAction(key, message, action);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={messageId || editMessageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { getEntities, getMedia, getNodes } from '../../Utils/Message';\nimport { readImageSize } from '../../Utils/Common';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, open } = this.props;\n        if (open && open !== prevProps.open) {\n            this.file = null;\n            this.media = null;\n\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return;\n\n            const { content } = message;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (!text && !caption) return;\n\n            setTimeout(() => {\n                const element = this.captionRef.current;\n                if (!element) return;\n\n                if (text) {\n                    this.setFormattedText(text);\n                } else if (caption) {\n                    this.setFormattedText(caption);\n                } else {\n                    element.innerText = null;\n                }\n\n                focusInput(element);\n            }, 0);\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, onDone } = this.props;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        let content = null;\n        if (this.file) {\n            readImageSize(this.file, result => {\n                content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: result.name, data: result },\n                    width: result.photoWidth,\n                    height: result.photoHeight,\n                    caption\n                };\n                onDone(null, content);\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId,\n                    messageId: 0\n                });\n            });\n            this.file = null;\n        } else {\n            onDone(caption, null);\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, onCancel } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.file = file;\n            this.getMediaFromFile(file, result => {\n                this.media = result;\n                this.forceUpdate();\n            });\n        });\n\n        element.value = '';\n    };\n\n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    getMediaFromFile(file, callback) {\n        if (!file) {\n            callback(null);\n        }\n\n        if (file.type.startsWith('image')) {\n            readImageSize(file, result => {\n                const fileId = -this.getRandomInt(1, 1000000);\n                FileStore.setBlob(fileId, result);\n\n                callback({\n                    '@type': 'messagePhoto',\n                    photo: {\n                        '@type': 'photo',\n                        has_stickers: false,\n                        minithumbnail: null,\n                        sizes: [\n                            {\n                                '@type': 'photoSize',\n                                photo: { '@type': 'file', id: fileId },\n                                width: result.photoWidth,\n                                height: result.photoHeight\n                            }\n                        ]\n                    }\n                });\n            });\n        } else {\n            callback(null);\n        }\n    }\n\n    render() {\n        const { classes, chatId, messageId, open, t } = this.props;\n        if (!open) return null;\n\n        const { defaultText, defaultUrl, openEditUrl } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const media = getMedia({ content: this.media }) || getMedia(message, null);\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    <IconButton\n                        disableRipple={true}\n                        aria-label={t('Edit')}\n                        className='edit-media-dialog-edit-button'\n                        size='small'\n                        onClick={this.handleEditMedia}>\n                        <EditIcon fontSize='inherit' />\n                    </IconButton>\n                    <input\n                        ref={this.editMediaRef}\n                        className='inputbox-attach-button'\n                        type='file'\n                        accept='image/*'\n                        onChange={this.handleEditMediaComplete}\n                    />\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Edit')}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    open: PropTypes.bool\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia: messageId !== 0 && isEditedMedia(chatId, messageId)\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    this.focusInput();\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        innerHTML = innerHTML.replace(/<div><br><\\/div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<\\/div>/gi, '');\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText, result => {});\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        const files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        const files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else if (replyToMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.setState({ files });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    async editMessageMedia(content, callback) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        // console.log('[em] editMessageMedia send', content);\n        const result = await TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n\n        callback(result);\n    }\n\n    async editMessageCaption(caption, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        const result = await TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n\n        callback(result);\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleDoneEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content, () => {});\n            return;\n        }\n\n        this.editMessageCaption(caption, () => {});\n    };\n\n    closeEditMediaDialog() {\n        this.setState(\n            {\n                openEditMedia: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    onDone={this.handleDoneEditMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport { clearSelection, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        AppStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = AppStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragParams } = this.state;\n\n        return (\n            <>\n                {dragParams && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport Button from '@material-ui/core/Button';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Popover from '@material-ui/core/Popover';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getMedia,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    canMessageBeEdited,\n    isMessagePinned,\n    isMetaBubble,\n    canMessageBeUnvoted,\n    canMessageBeClosed\n} from '../../Utils/Message';\nimport { canPinMessages, canSendMessages, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    forwardMessages,\n    replyMessage,\n    editMessage,\n    clearSelection,\n    deleteMessages\n} from '../../Actions/Client';\nimport { copy } from '../../Utils/Text';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { getFitSize, getSize } from '../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            confirmStopPoll: false,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches, confirmStopPoll } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('Message.shouldComponentUpdate true theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.confirmStopPoll !== confirmStopPoll) {\n            // console.log('Message.shouldComponentUpdate true confirmStopPoll');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId } = this.props;\n\n        clearSelection();\n        this.handleCloseContextMenu(event);\n\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId } = this.props;\n\n        clearSelection();\n        this.handleCloseContextMenu(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId } = this.props;\n\n        this.handleCloseContextMenu(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId } = this.props;\n\n        clearSelection();\n        this.handleCloseContextMenu(event);\n\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId } = this.props;\n\n        this.handleCloseContextMenu(event);\n\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId } = this.props;\n\n        this.handleCloseContextMenu(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    getMessageStyle(chatId, messageId) {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n                if (!animation) return null;\n\n                const { width, height, thumbnail } = animation;\n\n                const size = { width, height } || thumbnail;\n                if (!size) return null;\n\n                const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n                if (!fitSize) return null;\n\n                return { width: fitSize.width };\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n                if (!photo) return null;\n\n                const size = getSize(photo.sizes, PHOTO_SIZE);\n                if (!size) return null;\n\n                const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n                if (!fitSize) return null;\n\n                return { width: fitSize.width };\n            }\n            case 'messageVideo': {\n                const { video } = content;\n                if (!video) return null;\n\n                const { thumbnail, width, height } = video;\n\n                const size = { width, height } || thumbnail;\n                if (!size) return null;\n\n                const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n                if (!fitSize) return null;\n\n                return { width: fitSize.width };\n            }\n        }\n\n        return null;\n    }\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleCopyLink = event => {\n        const { copyLink } = this.state;\n\n        this.handleCloseContextMenu(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top,\n            confirmStopPoll\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = this.getMessageStyle(chatId, messageId);\n\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeForwarded = message.can_be_forwarded;\n        const canBeDeleted = message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': is_outgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && is_outgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {copyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                            {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                            {canBePinned && (\n                                <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                            )}\n                            {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                            {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                            {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                            {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                            {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                            {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                        </MenuList>\n                    </Popover>\n                    <Dialog\n                        transitionDuration={0}\n                        open={confirmStopPoll}\n                        onClose={this.handleCloseConfirm}\n                        aria-labelledby='form-dialog-title'>\n                        <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleCloseConfirm} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleStopPoll} color='primary'>\n                                {t('Stop')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        // document.addEventListener('keydown', this.onKeyDown, false);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        // document.removeEventListener('keydown', this.onKeyDown, false);\n\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateEditMessage',\n                        chatId: message.chat_id,\n                        messageId: message.id\n                    });\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId: message.chat_id,\n                    messageId: message.id\n                });\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = AppStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, thumbnailWidth, thumbnailHeight, thumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { getViewerFile, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { setInstantViewViewerContent } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    state = {\n        index: -1,\n        hasPreviousMedia: false,\n        hasNextMedia: false,\n        blocks: []\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}