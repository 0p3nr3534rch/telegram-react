{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Utils/Animatior.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onWindowResize","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","player","getElementById","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","event","target","handleLoadedMetadata","video","currentTime","volume","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","handleClick","startStopPlayer","paused","handlePlayerMouseDown","preventDefault","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","stopPropagation","dragging","draggingTime","handleChange","value","handleChangeCommitted","Number","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","handleClose","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","handleMute","prevVolume","handleFullScreen","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","connectPlayer","window","addEventListener","disconnectPlayer","removeEventListener","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","e","onClick","Close","onDoubleClick","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","update","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","on","off","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","text","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","key","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","THUMBNAIL_BLURRED_SIZE_90","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","item","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","remove","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","hasObserver","onClientUpdateLanguageChange","setSelection","onClientUpdateCacheLoaded","cachedFilters","transition","scroll","filtersRef","main","filterRef","scrollWidth","chat_filter_id","filterSelection","filterSelectionRef","transitionStyle","cssText","animator","scrollLeft","offsetWidth","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleFilterClick","handleWheel","deltaY","throttle","observeResize","LocalizationStore","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","replace","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetLeft","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","Lottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","json","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","anim","isPaused","goToAndPlay","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","animationData","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","tabIndex","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","alpha","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","getTimeString","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","reverse","HeaderPlayer","videoRef","fadeOutVolume","pausedForRecord","fadeInVolume","onClientUpdateMediaSeek","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","onClientUpdateMediaBlob","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","mime_type","setFileOptions","moveNext","handleVideoEnded","videoWidth","videoHeight","hasAudio","muted","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","currentVolume","volumeInterval","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","handleTest","chunk","filePart","getArrayBuffer","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","scale","poster","handleContentClick","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","getMediaPreviewFile","loadNextBuffer","isVideo","isVideoMessage","isAnimation","isAnimationMessage","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleWrapperClick","mouseDownTarget","handleWrapperMouseDown","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdatePictureInPicture","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"gMAcMA,G,kNACFC,MAAQ,CACJC,MAAO,KACPC,iBAAkB,M,EAiCtBC,kBAAoB,SAAAC,GAAY,IAEpBC,EADkBD,EAAlBA,QACAC,GAERC,IAAgBC,KAAK,CACjB,QAAS,mBACTH,QAAS,CAAE,QAAS,cAAeC,QACpCG,KAAK,SAAAC,GACA,EAAKC,MAAMN,UAAYA,GACvB,EAAKO,SAAS,CACVV,MAAOQ,EAAOG,OAAOC,KAAK,U,kFA1BvBC,EAAWC,EAAWC,GAAW,IACxCZ,EAAYa,KAAKP,MAAjBN,QAEJA,GAAWA,IAAYU,EAAUV,SACjCa,KAAKd,kBAAkBC,K,0CAIV,IACTA,EAAYa,KAAKP,MAAjBN,QAEJA,GACAa,KAAKd,kBAAkBC,K,+BAoBrB,IACEA,EAAYa,KAAKP,MAAjBN,QACAH,EAAUgB,KAAKjB,MAAfC,MAER,OAAKG,EAGD,yBAAKc,UAAU,mBACX,yBAAKA,UAAU,yBAAyBjB,GACxC,kBAAC,IAAD,CACIG,QAASA,EACTe,YAAaC,KACbC,OAAQC,IAAkBC,WARjB,Q,gDAlDOb,EAAOV,GAAQ,IACnCI,EAAYM,EAAZN,QACAF,EAAqBF,EAArBE,iBAER,OAAIE,GAAWF,EACJ,CACHA,iBAAkBE,EAClBH,MAAO,MAIR,S,GAjBcuB,IAAMC,YA2EpB1B,O,yEClFT2B,E,WACF,WAAYC,GAAyB,IAAD,OAAdC,EAAc,uDAAJ,GAAI,yBASpCC,MAAQ,WACJ,EAAKC,SAAU,EACf,EAAKzB,GAAK0B,sBAAsB,EAAKC,gBAXL,KAcpCA,cAAgB,SAAAC,GAAc,IAClBC,EAAwB,EAAxBA,UAAWP,EAAa,EAAbA,SAEnB,EAAKO,UAAYD,EACjB,EAAKE,QAAUD,EAAYP,EAC3B,EAAKS,KAAKH,IAnBsB,KAsBpCG,KAAO,SAAAC,GAAQ,IACHP,EAA0C,EAA1CA,QAASH,EAAiC,EAAjCA,SAAUO,EAAuB,EAAvBA,UAAWN,EAAY,EAAZA,QAMtC,GAJIS,EAAMH,EAAYP,GAAYC,EAAQU,MAAM,SAAAC,GAAC,OAAIA,EAAEC,KAAOD,EAAEE,SAC5D,EAAKX,SAAU,IAGfA,EAAJ,CAEA,IAAMY,EAAOC,KAAKC,IAAIP,EAAMH,EAAWP,GACjCkB,EAAiB,IAAblB,EAAiB,EAAMe,EAAOf,EAClCmB,EAAMpB,EAASqB,QAAQF,GAE7BjB,EAAQoB,QAAQ,SAAAT,GAAM,IACVU,EAAmBV,EAAnBU,KAAMT,EAAaD,EAAbC,GAAIU,EAASX,EAATW,KAClBX,EAAEE,KAAOQ,GAAQT,EAAKS,GAAQH,EAC9BI,EAAKX,EAAEE,QAGX,EAAKpC,GAAK0B,sBAAsB,EAAKK,QAzCL,KA4CpCe,KAAO,WACH,EAAKrB,SAAU,EACfsB,qBAAqB,EAAK/C,KA7C1BY,KAAKW,QAAUA,EACfX,KAAKU,SAAWA,E,yDAGL0B,GACX,OAAOV,KAAKW,IAAKD,EAAIV,KAAKY,GAAM,O,KA4CzB7B,O,mGC1Df,4BASe8B,gBACX,0BAAMC,EAAE,2nCACR,U,k1FCgBWC,MAff,SAAmCC,GAAmB,IAC5CC,EAD2C,iLAGzC,OACI,kBAAC,mBAAD,CAAkBC,SAAUC,KACxB,kBAACH,EAAqB1C,KAAKP,YALM,GACdc,IAAMC,WAWzC,OAFAmC,EAAqBG,YAArB,oCAAgEC,YAAeL,GAA/E,KAEOC,G,oGCqmBIK,E,2MAnmBXjE,MAAQ,G,EAiCRkE,eAAiB,WAGb,KAD0BC,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,yBAClG,CAEA,IAAMC,EAASJ,SAASK,eAAe,cAEjCC,EAAUC,SAASH,EAAOI,MAAMC,KAAM,IACtCC,EAASH,SAASH,EAAOI,MAAMG,IAAK,IARvB,EAUG,EAAKC,kBAAkBN,EAASI,GAAQ,GAAtDD,EAVW,EAUXA,KAAME,EAVK,EAULA,IAEVL,IAAYG,GAAQC,IAAWC,IAGnCP,EAAOI,MAAMC,KAAOA,EAAO,KAC3BL,EAAOI,MAAMG,IAAMA,EAAM,Q,EAuD7BE,iBAAmB,SAAAC,GACWA,EAAlBC,Q,EAIZC,qBAAuB,SAAAF,GAAU,IACbG,EAAUH,EAAlBC,OACR,GAAKE,EAAL,CAF4B,IAIpBC,EAAgB,EAAKrF,MAArBqF,YACA1D,EAA+ByD,EAA/BzD,SAAU2D,EAAqBF,EAArBE,OAAQC,EAAaH,EAAbG,SAG1B,EAAK5E,SAAS,CACVgB,WAEA2D,SACAE,SAAS,EACTD,YACD,WACMF,IAELD,EAAMC,YAAcA,O,EAI5BI,cAAgB,SAAAR,GAAU,IACNG,EAAUH,EAAlBC,OAER,EAAKvE,SAAS,CACV6E,SAAS,GACV,WACMJ,IAEY,EAAKpF,MAAd0F,KAEJN,EAAMM,OAENN,EAAMO,Y,EAKlBC,WAAa,SAAAX,GAAU,IACXY,EAAW,EAAKnF,MAAhBmF,OAER,EAAKlF,SAAS,CACV+E,MAAM,EACNI,QAAQ,IAGZxF,IAAgByF,aAAa,CAAE,QAAS,gCACxCF,GAAUA,EAAOZ,I,EAGrBe,YAAc,SAAAf,GAAU,IACZgB,EAAY,EAAKvF,MAAjBuF,QAER,EAAKtF,SAAS,CACV+E,MAAM,EACNI,QAAQ,IAGZxF,IAAgByF,aAAa,CAAE,QAAS,iCACxCE,GAAWA,EAAQhB,I,EAGvBiB,YAAc,SAAAjB,GAAU,IACZkB,EAAY,EAAKzF,MAAjByF,QAER7F,IAAgByF,aAAa,CAAE,QAAS,iCACxCI,GAAWA,EAAQlB,GAJA,IAMXG,EAAU,EAAK1E,MAAf0E,MACR,EAAKgB,eAAe,CAACf,YAAa,EAAG1D,SAAUyD,EAAMzD,Y,EAGzD0E,iBAAmB,SAAApB,GAAU,IACTG,EAAUH,EAAlBC,OACR,GAAKE,EAAL,CAFwB,IAIhBkB,EAAW,EAAK5F,MAAhB4F,OACAjB,EAA4CD,EAA5CC,YAAa1D,EAA+ByD,EAA/BzD,SAAU2D,EAAqBF,EAArBE,OAAQC,EAAaH,EAAbG,SAEvC,EAAK5E,SAAS,CACVgB,WACA0D,cACAC,SACAC,aAGJjF,IAAgByF,aAAa,CACzB,QAAS,oCACTO,SACAjB,cACA1D,WACA2D,SACAC,aAGJ,EAAKa,eAAe,CAAEf,cAAa1D,e,EAGvC4E,mBAAqB,SAAAtB,GAAU,IACnBuB,EAAmB,EAAK9F,MAAxB8F,eAEQpB,EAAUH,EAAlBC,OACR,GAAKE,EAAL,CAJ0B,IAMlBE,EAAWF,EAAXE,OAER,EAAK3E,SAAS,CACV2E,WAGJhF,IAAgByF,aAAa,CAAE,QAAU,0BAA2BT,WACpEkB,GAAkBA,EAAevB,K,EAGrCwB,eAAiB,SAAAxB,GAAU,IACPG,EAAUH,EAAlBC,OACR,GAAKE,EAAL,CAFsB,IAIdkB,EAAW,EAAK5F,MAAhB4F,OAEAf,EAAaH,EAAbG,SAER,EAAK5E,SAAS,CACV4E,aAGJjF,IAAgByF,aAAa,CACzB,QAAS,kCACTO,SACAf,e,EAIRmB,cAAgB,WACZ,EAAK/F,SAAS,CAAE6E,SAAS,K,EAG7BmB,YAAc,WACV,EAAKC,mB,EAGTA,gBAAkB,WAAO,IACbxB,EAAU,EAAK1E,MAAf0E,MACHA,IAEe,EAAKpF,MAAjBwF,QAEJ,EAAK7E,SAAS,CACV+E,MAAO,EAAK1F,MAAM0F,KAClBI,QAAQ,IAGRV,EAAMyB,OACNzB,EAAMM,OAENN,EAAMO,U,EAKlBmB,sBAAwB,SAAA7B,GACpBA,EAAM8B,iBAE0B,IAA5B9B,EAAM+B,YAAYC,QAEtB,EAAKC,QAAUjC,EAAM+B,YAAYE,QACjC,EAAKC,QAAUlC,EAAM+B,YAAYG,QAEjChD,SAASiD,YAAc,EAAKC,gBAC5BlD,SAASmD,UAAY,EAAKC,cAE1B,EAAK5G,SAAS,CACV6G,gBAAgB,M,EAIxBD,cAAgB,SAAAtC,GACZA,EAAM8B,iBAEN5C,SAASiD,YAAc,KACvBjD,SAASmD,UAAY,KAErB,EAAK3G,SAAS,CACV6G,gBAAgB,K,EA4CxBH,gBAAkB,SAAApC,GACdA,EAAM8B,iBADiB,MAGD,EAAKhC,kBAAkBE,EAAMwC,QAAU,EAAKP,QAASjC,EAAMyC,QAAU,EAAKP,SAAS,GAAjGvC,EAHe,EAGfA,KAAME,EAHS,EAGTA,IAERP,EAASJ,SAASK,eAAe,cACvCD,EAAOI,MAAMC,KAAOA,EAAO,KAC3BL,EAAOI,MAAMG,IAAMA,EAAM,M,EAG7B6C,gBAAkB,SAAA1C,GACdA,EAAM2C,kBADiB,IAGfxC,EAAU,EAAK1E,MAAf0E,MACHA,GAEL,EAAKzE,SAAS,CACVkH,UAAU,EACVC,aAAc1C,EAAMC,e,EAI5B0C,aAAe,SAAC9C,EAAO+C,GAAW,IACtB5C,EAAU,EAAK1E,MAAf0E,MACHA,GAEL,EAAKzE,SAAS,CACVmH,aAAcE,EAAQ5C,EAAMzD,Y,EAIpCsG,sBAAwB,WAAO,IAAD,EACS,EAAKjI,MAAhC6H,EADkB,EAClBA,SAAUC,EADQ,EACRA,aACbD,GAEL,EAAKlH,SAAS,CACVkH,UAAU,EACVxC,YAAayC,EACbA,aAAc,GACf,WAAO,IACE1C,EAAU,EAAK1E,MAAf0E,MACHA,GAED8C,OAAOC,SAASL,KAChB1C,EAAMC,YAAcyC,M,EAKhCM,iBAAmB,WACf,EAAKC,YAAa,G,EAGtBC,iBAAmB,WACf,EAAKD,YAAa,G,EAGtBE,gBAAkB,SAAAtD,GACK,EAAKjF,MAAhB8F,QAGJ,EAAKnF,SAAS,CACVmF,QAAQ,IAIhB0C,aAAa,EAAKC,kBAClB,EAAKA,iBAAmBC,WAAW,WAC3B,EAAKL,YACJ,EAAKrI,MAAM0F,MAEhB,EAAK/E,SAAS,CACVmF,QAAQ,KAEb,M,EAGP6C,YAAc,WACVrI,IAAgByF,aAAa,CACzB,QAAS,+BACT6C,UAAW,Q,EAInBC,yBAA2B,SAAC5D,EAAOK,GAC3BA,IAAW,EAAKtF,MAAMsF,QAE1B,EAAK3E,SAAS,CACV2E,UACD,WAAO,IACEF,EAAU,EAAK1E,MAAf0E,MACHA,IAELA,EAAME,OAASA,M,EAIvBwD,kCAAoC,SAAA7D,GACd,EAAKvE,MAAf0E,OAGRjB,SAAS4E,cAAcC,Q,EAG3BC,WAAa,WAAO,IACR7D,EAAU,EAAK1E,MAAf0E,MACHA,IAEgB,IAAjBA,EAAME,OACNF,EAAME,OAAS,EAAK4D,YAAc,IAElC,EAAKA,WAAa9D,EAAME,OACxBF,EAAME,OAAS,K,EAIvB6D,iBAAmB,SAAAlE,GACfA,GAASA,EAAM2C,kBAEf,IAAMwB,EAAOjF,SAASK,eAAe,cAChC4E,IAEqBjF,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,wBAE9F,EAAK+E,iBAIT,EAAKC,kBAAkBF,K,EAe3BG,eAAiB,WAAO,IACZjD,EAAW,EAAK5F,MAAhB4F,OAEFkD,EAAOC,IAAUC,IAAIpD,GAC3B,GAAKkD,EAAL,CAJmB,IAMXG,EAAWH,EAAXG,OACR,GAAKA,EAAL,CAPmB,IASXC,EAAcD,EAAdC,UACR,GAAKA,EAEL,OAAOC,IAAYN,eAAeK,M,EAGtCxD,eAAiB,SAAAf,GAAgB,IACrBiB,EAAW,EAAK5F,MAAhB4F,OAEFkD,EAAOC,IAAUC,IAAIpD,GAC3B,GAAKkD,EAAL,CAJ4B,IAMpBG,EAAWH,EAAXG,OACR,GAAKA,EAAL,CAP4B,IASpBC,EAAcD,EAAdC,UACHA,IAEAvE,EAGDwE,IAAYzD,eAAewD,EAAWvE,GAFtCwE,IAAYC,iBAAiBF,O,mFAtehB,IACTxE,EAAUnE,KAAKP,MAAf0E,MACRnE,KAAK8I,cAAc3E,GACnB4E,OAAOC,iBAAiB,SAAUhJ,KAAKiD,kB,6CAGnB,IACZkB,EAAUnE,KAAKP,MAAf0E,MACRnE,KAAKiJ,iBAAiB9E,GACtB4E,OAAOG,oBAAoB,SAAUlJ,KAAKiD,kB,yCAsB3BpD,EAAWC,EAAWC,GAAW,IACxCoE,EAAUnE,KAAKP,MAAf0E,MAEJtE,EAAUsE,QAAUA,IACpBnE,KAAKiJ,iBAAiBpJ,EAAUsE,OAChCnE,KAAK8I,cAAc3E,M,oCAIbA,GACV,GAAKA,EAAL,CAEA,IAAMgF,EAAYjG,SAASK,eAAe,cAHzB,EAIKvD,KAAK8D,kBAAkB8E,IAAYQ,UAAUzF,KAAMiF,IAAYQ,UAAUvF,KAAK,GAA5FF,EAJS,EAITA,KAAME,EAJG,EAIHA,IACdsF,EAAUzF,MAAMC,KAAOA,EAAO,KAC9BwF,EAAUzF,MAAMG,IAAMA,EAAM,KAI5B,IAAMwF,EAAYnG,SAASK,eAAe,wBACrC8F,IAELlF,EAAMmF,iBAAmBtJ,KAAKkE,qBAC9BC,EAAMoF,aAAevJ,KAAK+D,iBAC1BI,EAAMqF,UAAYxJ,KAAKwE,cACvBL,EAAMsF,OAASzJ,KAAK2E,WACpBR,EAAMuF,QAAU1J,KAAK+E,YACrBZ,EAAMwF,QAAU3J,KAAKiF,YACrBd,EAAMyF,aAAe5J,KAAKoF,iBAC1BjB,EAAM0F,eAAiB7J,KAAKsF,mBAC5BnB,EAAM2F,WAAa9J,KAAKwF,eACxBrB,EAAM4F,UAAY/J,KAAKyF,cAEvB4D,EAAUW,UAAY,GACtBX,EAAUY,YAAY9F,O,uCAGTA,GACRA,IAELA,EAAMmF,iBAAmB,KACzBnF,EAAMoF,aAAe,KACrBpF,EAAMqF,UAAY,KAClBrF,EAAMsF,OAAS,KACftF,EAAMuF,QAAU,KAChBvF,EAAMwF,QAAU,KAChBxF,EAAMyF,aAAe,KACrBzF,EAAM0F,eAAiB,KACvB1F,EAAM2F,WAAa,KACnB3F,EAAM4F,UAAY,Q,wCAmMJpG,EAAME,GAAwB,IAAnBqG,IAAkB,yDACrC5G,EAASJ,SAASK,eAAe,cACjC4G,EAAc7G,EAASA,EAAO8G,YAAc,IAC5CC,EAAe/G,EAASA,EAAOgH,aAAe,IAE/BC,EAAkBrH,SAASsH,gBAAxCJ,YACcK,EAAmBvH,SAASsH,gBAA1CF,aA+BR,OA7BIJ,GAAalK,KAAK0K,SAClB/G,EAAO,EACAuG,GAAalK,KAAK2K,UACzBhH,EAAO4G,EAAgBJ,GAKvBxG,GADAA,EAAOA,EAAOiH,IAA8B,EAAIjH,GAClC4G,EAAgBJ,EAAcS,IAA8BL,EAAgBJ,EAAcxG,EACxGA,EAAOkH,YAAMlH,EAAM,EAAG4G,EAAgBJ,IAGtCD,GAAalK,KAAK8K,QAClBjH,EAAM,EACCqG,GAAalK,KAAK+K,WACzBlH,EAAM4G,EAAiBJ,GAGvBxG,GADAA,EAAMA,EAAM+G,IAA8B,EAAI/G,GAClC4G,EAAiBJ,EAAeO,IAA8BH,EAAiBJ,EAAexG,EAC1GA,EAAMgH,YAAMhH,EAAK,EAAG4G,EAAiBJ,IAGzCrK,KAAK0K,SAAoB,IAAT/G,EAChB3D,KAAK2K,UAAYhH,IAAS4G,EAAgBJ,EAC1CnK,KAAK8K,QAAkB,IAARjH,EACf7D,KAAK+K,WAAalH,IAAQ4G,EAAiBJ,EAE3CzB,IAAYQ,UAAY,CAAEzF,OAAME,OAEzB,CAAEF,OAAME,S,wCAsIDmH,GACd,IAAMC,EAASD,EAAQ3C,mBAAqB2C,EAAQE,sBAAwBF,EAAQG,wBAEpFF,GAAUA,EAAOG,KAAKJ,K,uCAItB,IAAMC,EAAS/H,SAASkF,gBAAkBlF,SAASmI,qBAAuBnI,SAASoI,qBAEnFL,GAAUA,EAAOG,KAAKlI,Y,+BAqChB,IAAD,EAC8GlD,KAAKjB,MAAhHwH,EADH,EACGA,eAAgBK,EADnB,EACmBA,SAAUC,EAD7B,EAC6BA,aAAczC,EAD3C,EAC2CA,YAAa1D,EADxD,EACwDA,SAAU+D,EADlE,EACkEA,KAAMF,EADxE,EACwEA,QAASD,EADjF,EACiFA,SAAUO,EAD3F,EAC2FA,OAAQR,EADnG,EACmGA,OAElG5C,EAAOmF,EAAWC,EAAezC,EACjC2C,EAAQrG,EAAW,EAAIe,EAAOf,EAAW,EACzC6K,EAAeC,IAAOC,gBAAgBhK,EAAM6C,GAC5CoH,EAAgBhL,EAAW,EAAI6K,EAAe7K,EAAW,EAEzDiL,EAAaC,YAAkBlK,KAAKmK,MAAMpK,IAAS,GAInDqK,GAHiBF,YAAkBlK,KAAKmK,MAAMnL,IAAa,GAGvCwC,SAAS4I,mBAAqB5I,SAAS6I,sBAAwB7I,SAAS8I,yBAElG,OACI,yBACI5M,GAAG,aACHa,UAAWgM,IAAW,aAAc,CAAE,sBAAuB1F,IAC7D2F,YAAalM,KAAK6F,sBAClBsG,YAAanM,KAAKsH,iBAClB,yBAAKrH,UAAU,sBACX,yBAAKb,GAAG,yBAER,4BAAQ8M,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,mBAAmB1G,UAAWgM,IAAW,gBAAiB,sBAAuB,CAAE,sBAAuBpH,IAAWwH,QAASrM,KAAK0H,aAC3J,kBAAC4E,EAAA,EAAD,OAEJ,yBACIrM,UAAWgM,IAAW,eAAgB,CAAE,sBAAuBpH,IAC/DwH,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,mBAChBuF,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,mBACpB4F,cAAe,SAAAH,GAAC,OAAIA,EAAEzF,mBACtB6F,aAAcxM,KAAKmH,iBACnBsF,aAAczM,KAAKqH,kBACnB,yBAAKpH,UAAU,iBACX,0BAAMA,UAAU,6BAA6ByD,MAAO,CAAEgJ,MAAuB,IAAhBhB,EAAsB,OACnF,kBAACiB,EAAA,EAAD,CACI5F,MAAOA,EACPpF,IAAK,EACLiL,IAAK,EACLC,KAAM,KACNC,QAAS,CACL3E,KAAM,qBACN4E,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZC,SAAUnN,KAAK8G,aACfsG,kBAAmBpN,KAAKgH,sBACxBkF,YAAalM,KAAK0G,mBAG1B,yBAAKzG,UAAU,mBACX,4BAAQA,UAAU,gBAAgBoM,QAASrM,KAAK0F,aAC3CjB,EAAO,kBAAC4I,EAAA,EAAD,MAAe,kBAAC,IAAD,OAE3B,yBAAKpN,UAAU,eAAf,UACQ0L,IAER,yBAAK1L,UAAU,iBACX,kBAAC0M,EAAA,EAAD,CACI5F,MAAO1C,EACP1C,IAAK,EACLiL,IAAK,EACLC,KAAM,KACNC,QAAS,CACL3E,KAAM,qBACN4E,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZC,SAAUnN,KAAK4H,yBACfwF,kBAAmBpN,KAAK6H,qCAGhC,4BAAQ5H,UAAU,gBAAgBoM,QAASrM,KAAKgI,YAC3CwD,IAAO8B,cAAcjJ,IAE1B,4BAAQpE,UAAU,gBAAgBsN,UAAWzB,EAAmBO,QAASrM,KAAKkI,kBAC1E,kBAACsF,EAAA,EAAD,SAOZ,kBAACC,EAAA,EAAD,CAAUlJ,QAASA,S,gDAtlBH9E,EAAOV,GAAQ,IACnCoF,EAAkE1E,EAAlE0E,MAAOzD,EAA2DjB,EAA3DiB,SAAU0D,EAAiD3E,EAAjD2E,YAAaC,EAAoC5E,EAApC4E,OAAQI,EAA4BhF,EAA5BgF,KAAMH,EAAsB7E,EAAtB6E,SAAUC,EAAY9E,EAAZ8E,QAC9D,OAAIxF,EAAM2O,YAAcvJ,EACb,CACHuJ,UAAWvJ,EACXzD,WACA0D,cACAC,SACAI,OACAH,WACAC,UACAqC,UAAU,EACV/B,QAAQ,GAIT,S,GAnBStE,IAAMC,W,6EChBf+B,cACX,0BAAMC,EAAE,kjBACR,S,iCCGEmL,G,mBACF,WAAYlO,GAAQ,IAAD,uBACf,4CAAMA,KAmBVmO,mBAAqB,SAAAC,GAAW,IACpBC,EAAW,EAAK/O,MAAhB+O,OAER,GADoBD,EAAZE,UACQD,EAAhB,CAEA,IAAME,EAAOC,IAAUxF,IAAIqF,GACtBE,GAEL,EAAKtO,SAAS,CAAEwO,OAAQC,YAAaH,OAzBrC,IAAMF,EAASM,YAAc3O,EAAM4O,QAC7BL,EAAOC,IAAUxF,IAAIqF,GAJZ,OAMf,EAAK/O,MAAQ,CACT+O,SACAI,OAAQC,YAAaH,IARV,E,iFAafC,IAAUK,GAAG,mBAAoBtO,KAAK4N,sB,6CAItCK,IAAUM,IAAI,mBAAoBvO,KAAK4N,sB,+BAcjC,IAAD,EACwB5N,KAAKP,MAA1B+O,EADH,EACGA,KAAMC,EADT,EACSA,WAEd,OADmBzO,KAAKjB,MAAhBmP,OAIJ,yBAAKjO,UAAU,gBAAgByD,MAAO,CAAEgJ,MAAO8B,EAAME,OAAQF,IACzD,yBAAKvO,UAAU,qBAAqByD,MAAO,CAAEiL,QAASF,IAClD,yBAAKxO,UAAU,8BALP,S,GAnCDM,IAAMC,YAqDjCmN,EAAaiB,aAAe,CACxBJ,KAAM,GACNC,WAAY,GAGDd,Q,gBCpDTkB,G,kNACF9P,MAAQ,G,EAoER+P,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTC,uBAAyB,SAAAnB,GAAW,IACxBQ,EAAW,EAAK5O,MAAhB4O,OADuB,EAEJ,EAAKtP,MAAxBsG,EAFuB,EAEvBA,OAAQ4J,EAFe,EAEfA,OAEhB,GAAIZ,IAAWR,EAAOQ,QAClBhJ,IAAWwI,EAAOxI,SAEjB4J,EAAQ,CACT,IAAMC,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,KAFT,IAIDE,EAAUF,EAAVE,MACFC,EAAMC,YAAOF,EAAQA,EAAMG,MAAQ,MAEzC,EAAK7P,SAAS,CACV2P,U,EAKZG,kBAAoB,SAAA3B,GAAW,IACnBQ,EAAW,EAAK5O,MAAhB4O,OACAoB,EAAmB5B,EAAnB4B,QAASL,EAAUvB,EAAVuB,MAEjB,GAAIK,IAAYpB,EAAhB,CAEA,IAAMa,EAAOC,IAAU1G,IAAI4F,GACrB9F,EAAO2G,GAAQA,EAAKE,MAAOF,EAAKE,MAAMG,MAAQ,KAE9ClK,EAASkD,EAAOA,EAAKnJ,IAAM,EAC3BiQ,EAAMC,YAAO/G,GACb0G,EAAS,EAAKlQ,MAAMsQ,MAAQA,GAAe,KAARA,IAA0B,IAAZhK,EAQvD,GANA,EAAK3F,SAAS,CACV2F,SACAgK,MACAJ,WAGAG,EAAO,CACP,IAAMM,EAAQlH,IAAUmH,WACxBC,YAAgBF,EAAOrB,M,EAI/BwB,kBAAoB,SAAAhC,GAAW,IAAD,EACJ,EAAKpO,MAAnB4O,EADkB,EAClBA,OAAQyB,EADU,EACVA,EAGhB,GAFoBjC,EAAZ4B,UAEQpB,EAAhB,CAEA,IAAM0B,EAAUC,YAAe3B,EAAQyB,GAEvC,EAAKpQ,SAAS,CAAEqQ,c,EAGpBE,aAAe,SAAAjM,GAAU,IAAD,EACS,EAAKvE,MAA1B4O,EADY,EACZA,OAAQ6B,EADI,EACJA,SACXA,IAELlM,EAAM2C,kBACNuJ,EAAS7B,K,EAGb8B,WAAa,WACT,EAAKzQ,SAAS,CAAEuP,QAAQ,K,qFA9GNmB,EAAWC,GAAY,IACjChC,EAAWrO,KAAKP,MAAhB4O,OADgC,EAECrO,KAAKjB,MAAtCsG,EAFgC,EAEhCA,OAAQgK,EAFwB,EAExBA,IAAKJ,EAFmB,EAEnBA,OAAQc,EAFW,EAEXA,QAE7B,OAAIK,EAAU/B,SAAWA,IAIrBgC,EAAUhL,SAAWA,IAIrBgL,EAAUhB,MAAQA,IAIlBgB,EAAUpB,SAAWA,GAIrBoB,EAAUN,UAAYA,O,0CAQ1BZ,IAAUb,GAAG,mCAAoCtO,KAAK8O,wBACtDK,IAAUb,GAAG,kBAAmBtO,KAAKwP,mBACrCL,IAAUb,GAAG,kBAAmBtO,KAAK6P,mBACrCrH,IAAU8F,GAAG,uBAAwBtO,KAAKgP,0B,6CAI1CG,IAAUZ,IAAI,mCAAoCvO,KAAK8O,wBACvDK,IAAUZ,IAAI,kBAAmBvO,KAAKwP,mBACtCL,IAAUZ,IAAI,kBAAmBvO,KAAK6P,mBACtCrH,IAAU+F,IAAI,uBAAwBvO,KAAKgP,0B,+BA2ErC,IAAD,EACiFhP,KAAKP,MAAnF4O,EADH,EACGA,OAAQiC,EADX,EACWA,WAAYC,EADvB,EACuBA,kBAAmBL,EAD1C,EAC0CA,SAAUX,EADpD,EACoDA,MAAOiB,EAD3D,EAC2DA,OAAQC,EADnE,EACmEA,IAAKjC,EADxE,EACwEA,KADxE,EAE4BxO,KAAKjB,MAA9BsQ,EAFH,EAEGA,IAAKJ,EAFR,EAEQA,OAAQc,EAFhB,EAEgBA,QAEjBrM,EAAQ,KAQZ,GAPI8K,IACA9K,EAAQ,CACJgJ,MAAO8B,EACPE,OAAQF,IAIZkC,YAAqBrC,GACrB,OACI,yBACIpO,UAAWgM,IACP,YACA,CAAE,aAAcsD,GAChB,CAAE,cAAeiB,GACjB,CAAE,WAAYC,IAElB/M,MAAOA,EACP2I,QAASrM,KAAKiQ,cACd,yBAAKhQ,UAAWgM,IAAW,aAAc,eAAgB,CAAE0E,QAAST,KAChE,yBAAKjQ,UAAU,uBACX,kBAAC2Q,EAAA,EAAD,CAAoBC,SAAUJ,EAAM,QAAU,eAOlE,GAAIK,YAASzC,IAAWkC,EACpB,OACI,yBACItQ,UAAWgM,IACP,YACA,CAAE,aAAcsD,GAChB,CAAE,cAAeiB,GACjB,CAAE,WAAYC,IAElB/M,MAAOA,EACP2I,QAASrM,KAAKiQ,cACd,yBAAKhQ,UAAWgM,IAAW,aAAc,eAAgB,CAAE0E,QAAST,KAChE,yBAAKjQ,UAAU,uBACX,kBAAC,EAAD,CAAoB4Q,SAAUJ,EAAM,QAAU,eAQlE,IADatB,IAAU1G,IAAI4F,GAChB,OAAO,KAElB,IAAM0C,EAAa1B,GAAOJ,EACpB+B,EAASC,YAAc5C,GACvB6C,EAAS,qBAAkBxP,KAAKyP,IAAIH,GAAU,EAAK,GAEzD,OACI,yBACI/Q,UAAWgM,IACP,YADiB,eAEdiF,GAAaH,GAChB,CAAEJ,QAAST,GACX,CAAE,cAAeM,GACjB,CAAE,aAAcjB,GAChB,CAAE,WAAYkB,IAElB/M,MAAOA,EACP2I,QAASrM,KAAKiQ,eACZc,GACE,yBAAK9Q,UAAU,cACX,0BAAMA,UAAU,aAAa8P,IAGpCV,GAAO,yBAAKpP,UAAU,aAAaoP,IAAKA,EAAK+B,OAAQpR,KAAKmQ,WAAYkB,WAAW,EAAOC,IAAI,KAC5FhB,GAAciB,aAAclD,IAAW,kBAAC,EAAD,CAAcA,OAAQA,Q,gDAvN1C5O,EAAOV,GAAQ,IACnCsP,EAAc5O,EAAd4O,OAAQyB,EAAMrQ,EAANqQ,EAEhB,GAAI/Q,EAAMyS,aAAenD,EAAQ,CAC7B,IAAMa,EAAOC,IAAU1G,IAAI4F,GACrB9F,EAAO2G,GAAQA,EAAKE,MAAOF,EAAKE,MAAMG,MAAQ,KAE9ClK,EAASkD,EAAOA,EAAKnJ,IAAM,EAC3BiQ,EAAMC,YAAO/G,GAInB,MAAO,CACHiJ,WAAYnD,EAEZhJ,SACAgK,MACAJ,OARWlQ,EAAMsQ,MAAQA,GAAe,KAARA,IAA0B,IAAZhK,EAS9C0K,QARYC,YAAe3B,EAAQyB,IAY3C,OAAO,S,GAzBQtP,cAwOvBqO,EAASD,aAAe,CACpB2B,mBAAmB,EACnBD,YAAY,GAGDmB,oBAAkB5C,GClP3B6C,G,wLACQ,IAAD,EACqC1R,KAAKP,MAAvC4O,EADH,EACGA,OAAQsD,EADX,EACWA,SAAUzB,EADrB,EACqBA,SAAUJ,EAD/B,EAC+BA,EAE9B8B,EAAaC,YAAkBxD,GAAQ,EAAMyB,GAEnD,OACI,yBACI7P,UAAWgM,IAAW,sBAAuB,CAAE,+BAAgC0F,IAC/EtF,QAAS6D,GACT,yBAAKjQ,UAAU,4BACX,yBAAKA,UAAU,oCACX,kBAAC,EAAD,CAAUoO,OAAQA,KAErBsD,GAAY,yBAAK1R,UAAU,kCAC5B,yBACIA,UAAWgM,IACP,2BACA0F,EAAW,oCAAsC,yCAGzD,yBAAK1R,UAAU,mCAEnB,yBAAKA,UAAU,6BAA6B2R,Q,GAvB5BrR,IAAMC,YAmCvBiR,gBAAkBC,GC3C1B,SAAeI,GAAtB,mC,6CAAO,WAAoBC,GAApB,SAAAC,EAAA,kEAEKC,UAAUC,UAFf,gCAGWD,UAAUC,UAAUC,UAAUJ,GAHzC,iCAIY,GAJZ,uDAOCK,QAAQC,MAAM,sDAAd,MAPD,iCAUIC,GAAQP,IAVZ,wD,sBAaP,SAASO,GAAQP,GACb,IAAI/G,EACAuH,EACJ,IAqBI,IApBAvH,EAAU9H,SAASsP,cAAc,aACzBC,iBAAkB,EAC1BzH,EAAQ0H,UAAW,EACnB1H,EAAQjE,MAAQgL,EAChB/G,EAAQtH,MAAMiP,IAAM,QACpB3H,EAAQtH,MAAMkP,SAAW,QACzB5H,EAAQtH,MAAMG,IAAM,EACpBmH,EAAQtH,MAAMmP,KAAO,mBACrB7H,EAAQtH,MAAMoP,WAAa,MAC3B9H,EAAQtH,MAAMqP,iBAAmB,OACjC/H,EAAQtH,MAAMsP,cAAgB,OAC9BhI,EAAQtH,MAAMuP,aAAe,OAC7BjI,EAAQtH,MAAMwP,WAAa,OAE3BhQ,SAASiQ,KAAKlJ,YAAYe,GAE1BA,EAAQoI,QACRpI,EAAQqI,WAERd,EAAarP,SAASoQ,YAAY,SAE9B,MAAM,IAAIC,MAEd,OAAO,EACT,SACEnB,QAAQC,MAAM,uDAAwDE,GA1B1E,QA4BQvH,GACA9H,SAASiQ,KAAKK,YAAYxI,GAIlC,OAAO,E,aC/CPyI,GAAgB,KAwCpB,SAASC,GAAiBC,GACtB,IAAKA,EAAQ,OAAO,EADU,IAGtB5M,EAAU4M,EAAV5M,MACR,QAAKA,GAEkB,OAAhBA,EAAMA,MAGjB,SAAS6M,GAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAMC,EAAgBC,KAAYvL,IAAI,oBAChCwL,EAAkBD,KAAYvL,IAAI,8BAExC,KAD0BiL,GAAiBK,IAAkBL,GAAiBO,IACtD,OAAO,KAE/BR,GAAgBA,IAvyBV,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIP,EAAMC,OAAQM,IAAK,CACnC,IAAIX,GAAcY,IAAIR,EAAMO,IAGxB,OAAO,KAFPD,GAAUV,GAAchL,IAAIoL,EAAMO,IAM1C,MAAkB,KAAXD,EAAgB,KAAOA,EAGlC,IAAIG,GAAa,KAwCjB,SAASC,GAAcV,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BQ,GAAaA,IAznC,IAAIE,GAAWD,IAAIR,EAAMO,IAGrB,OAAO,KAFPD,GAAUG,GAAW7L,IAAIoL,EAAMO,IAMvC,MAAkB,KAAXD,EAAgB,KAAOA,E,+BCxG5BK,I,mBACF,WAAY/U,GAAQ,IAAD,8BACf,4CAAMA,KAmBVgV,YApBmB,qBAoBL,0CAAAzC,EAAA,4DACV,EAAK0C,uBAECC,EAAW,GACXC,EAAkBvV,IAAgBC,KAAK,CACzC,QAAS,WACTuV,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MAEXJ,EAASK,KAAKJ,GAERK,EAAuB5V,IAAgBC,KAAK,CAC9C,QAAS,oBACTyO,QAASE,IAAUiH,UACnBC,OAAO,IAEXR,EAASK,KAAKC,GAjBJ,SAmB2BG,QAAQzC,IAAIgC,EAASU,IAAI,SAAA/T,GAAC,OAAIA,EAAEgU,MAAM,SAAAlJ,GAAC,OAAI,UAnBtE,mCAmBHmJ,EAnBG,KAmBIC,EAnBJ,KAqBV,EAAK9V,SAAS,CACV+V,QAASF,EAAMG,SACfF,cAAeA,IAGb9F,EAAQlH,IAAUmH,WACxBgG,YAAiBjG,EAAO6F,EAAMG,UA3BpB,0CApBK,EAkDnBhB,qBAlDmB,qBAkDI,kCAAA1C,EAAA,0DACY,EAAKvS,MAA5B4O,EADW,EACXA,OAAQuH,EADG,EACHA,WACXvH,EAFc,oDAGduH,EAHc,sDAIfA,EAAW9B,OAAS,GAJL,oDAKd+B,aAAaxH,GALC,oDAMdyH,YAAgBzH,GANF,oEAQEhP,IAAgBC,KAAK,CACtC,QAAS,uBACTmQ,QAASpB,EACT0H,WAAYH,EAAW,GACvBI,WAAW,IAZI,QAQbxW,EARa,OAenB,EAAKE,SAAS,CACVuW,kBAAmBzW,IAhBJ,0CAlDJ,EAsEnBkI,YAAc,WACVwO,aAAQ,OAvEO,EA0EnBC,eAAiB,WAAO,IACZrG,EAAM,EAAKrQ,MAAXqQ,EACAmG,EAAsB,EAAKlX,MAA3BkX,kBAEHA,GACAA,EAAkBG,OAEvBtE,GAAKmE,EAAkBG,MAEvB,EAAKC,sBAAsBvG,EAAE,iBAnFd,EAsFnBuG,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK7W,MAAxC8W,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNhX,UAAU,4BACVoM,QAAS,kBAAMmK,EAAcC,KAC7B,kBAACnK,EAAA,EAAD,WAnGG,EAyGnB4K,oBAAsB,SAAC7I,EAAQuH,GAC3B,GAA0B,IAAtBA,EAAW9B,OAAc,OAAO,KAEpC,IAAMwC,EAAUa,KAAa1O,IAAI4F,EAAQuH,EAAW,IACpD,IAAKU,EAAS,OAAO,KAJqB,IAMlCc,EAA8Bd,EAA9Bc,iBAAkBC,EAAYf,EAAZe,QAC1B,IAAKD,GAAyC,2BAArBC,EAAQ,SAAuC,CAAC,IAC7DjI,EAAUiI,EAAVjI,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DkI,EAAUlI,EAAVkI,MACR,GAAIA,GAASA,EAAMxD,OACf,OAAOwD,EAAMA,EAAMxD,OAAS,GAIpC,OAAO,MA1HQ,EA6HnByD,WAAa,WACT,EAAK7P,cACL8P,eAFe,MAIqC,EAAK/X,MAAjD4O,EAJO,EAIPA,OAAQuH,EAJD,EAICA,WAAY6B,EAJb,EAIaA,oBAC5B,GAAKpJ,GAAWuH,GAAe6B,EAA/B,CAEA,IAAM1F,EAAO,EAAK2F,aAAa,EAAKC,WAAWC,SAE/C,EAAKC,YAAY9V,QAAQ,SAAA+V,GACrB,GAAIL,EAwCA,OAvCI1F,IACI,YAAa0F,EACbA,EAAoBM,QAAU,CAC1B,QAAS,gBACThG,OACAiG,SAAU,MAGd3Y,IAAgBC,KAAK,CACjB,QAAS,cACTmQ,QAASqI,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTtG,KAAM,CACF,QAAS,gBACTA,OACAiG,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,WAM7BlZ,IAAgBC,KAAK,CACjB,QAAS,cACTmQ,QAASqI,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuBZ,IAM/B,IAAMjJ,EAAO,EAAK0I,oBAAoB7I,EAAQuH,GAC9C,GAAIpH,EAAJ,CAAW,IACC9B,EAAyB8B,EAAzB9B,MAAOgC,EAAkBF,EAAlBE,OAAQU,EAAUZ,EAAVY,MAEvB/P,IAAgBC,KAAK,CACjB,QAAS,cACTmQ,QAASqI,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,oBACTjJ,MAAO,CACH,QAAS,cACThQ,GAAIgQ,EAAMhQ,IAEdoZ,UAAW,KACXC,uBAAwB,GACxB/L,MAAOA,EACPgC,OAAQA,EACRqJ,QAAS,CACL,QAAS,gBACThG,OACAiG,SAAU,MAEdU,IAAK,UAOb3G,GACA1S,IAAgBC,KAAK,CACjB,QAAS,cACTmQ,QAASqI,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTtG,KAAM,CACF,QAAS,gBACTA,OACAiG,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,KAKzBlZ,IAAgBC,KAAK,CACjB,QAAS,kBACTmQ,QAASqI,EACTa,aAActK,EACduK,YAAahD,EACbsC,uBAAuB,EACvBC,iBAAiB,EACjBU,UAAU,QA/OH,EAoPnBC,sBAAwB,SAAAzK,GAChB,EAAKwJ,YAAYxD,IAAIhG,GACrB,EAAKwJ,YAAYkB,OAAO1K,GAExB,EAAKwJ,YAAYmB,IAAI3K,EAAQA,GAKjC,EAAKU,eA7PU,EAgQnB2I,aAAe,SAAA1M,GAAY,IACfhB,EAAcgB,EAAdhB,UAMR,MALkB,SAAdA,GAAsC,oBAAdA,IACxBgB,EAAQhB,UAAY,MAEFgB,EAAdiO,WArQO,EA0QnBC,oBAAsB,SAAAlV,GACI,KAAlBA,EAAMmV,SACNnV,EAAM8B,kBA5QK,EAgRnBsT,kBAhRmB,qBAgRC,gDAAApH,EAAA,0DACmB,EAAKjT,MAAhC0W,EADQ,EACRA,QAASD,EADD,EACCA,cAEXxK,EAAU,EAAKqO,UAAUzB,QAHf,oDAOE,UADV5N,EAAcgB,EAAdhB,YACkC,oBAAdA,IACxBgB,EAAQhB,UAAY,MAGlBiP,EAAY,EAAKvB,aAAa1M,GAASsO,OAX7B,wBAaZ,EAAK5Z,SAAS,CAAE6Z,WAAY,KAAMC,cAAe,GAAIC,oBAAqB,KAb9D,kCAiBVC,EAAYnF,GAAc0E,GAC1BU,EAAe/F,GAAiBqF,GAEhCW,EAAcpE,EACd,CAACA,EAAcpW,IAAIya,OAAOpE,EAAQqE,OAAO,SAAAxY,GAAC,OAAIA,IAAMkU,EAAcpW,IAAM2a,YAAgBzY,MACxFmU,EAEA+D,EAAgBI,EAAYE,OAC9B,SAAAxY,GAAC,OACG,EAAK0Y,cAAc1Y,EAAG2X,IACrBS,GAAa,EAAKM,cAAc1Y,EAAGoY,IACnCC,GAAgB,EAAKK,cAAc1Y,EAAGqY,KAG/C,EAAKja,SAAS,CAAE6Z,WAAYN,EAAWO,kBA/BvB,UAiCKna,IAAgBC,KAAK,CACtC,QAAS,sBACT2a,MAAOhB,EACPlE,MAAO,MApCK,WAiCVvV,EAjCU,OAuCZ,EAAKT,MAAMwa,aAAeN,EAvCd,mDA2ChB,EAAKvZ,SAAS,CACV+Z,oBAAqBja,EAAOkW,WA5ChB,0CAhRD,EAgUnBwE,kBAAoB,SAAAlW,GAChB,IAAMmW,EAAYnW,EAAMoW,cAAcC,QAAQ,cAC1CF,IACAnW,EAAM8B,iBACN5C,SAASoQ,YAAY,cAAc,EAAO6G,KApU/B,EAwUnBG,mBAAqB,WACjB,IAAMtP,EAAU,EAAK2M,WAAWC,QAChC,GAAK5M,EAAL,CAFuB,IAIfhB,EAAcgB,EAAdhB,UACU,SAAdA,GAAsC,oBAAdA,IACxBgB,EAAQhB,UAAY,QA9UT,EAkVnBuQ,mBAAqB,SAAAvW,GACjB,IAAMmW,EAAYnW,EAAMoW,cAAcC,QAAQ,cAC1CF,IACAnW,EAAM8B,iBACN5C,SAASoQ,YAAY,cAAc,EAAO6G,KAtV/B,EA0VnBH,cAAgB,SAAC3L,EAAQkL,GAAgB,IAC7BzJ,EAAM,EAAKrQ,MAAXqQ,EACA0F,EAAkB,EAAKzW,MAAvByW,cAER,GAAIA,GAAiBnH,IAAWmH,EAAcpW,KAE2B,KADvDob,YAAanM,GAAQ,EAAMyB,IAAM,IACrC2K,oBAAoBC,QAAQnB,EAAWoB,eAC7C,OAAO,EAKf,OAAsE,KADvDH,YAAanM,GAAQ,EAAOyB,IAAM,IACtC2K,oBAAoBC,QAAQnB,EAAWoB,iBAKsB,KADvD7E,YAAgBzH,IAAW,IAC/BoM,oBAAoBC,QAAQnB,EAAWoB,gBA3WrC,EAkXnBC,eAAiB,WACbnT,WAAW,WACH,EAAK4R,UAAUzB,SACC,EAAKyB,UAAUzB,QAEvBxE,SAEb,MAtXH,EAAKrU,MAAQ,CACT0W,QAAS,GACTD,cAAe,MAGnB,EAAK6D,UAAY9Y,IAAMsa,YACvB,EAAKlD,WAAapX,IAAMsa,YAExB,EAAKhD,YAAc,IAAI3D,IAXR,E,iFAeflU,KAAKyU,cAELzU,KAAK4a,mB,+BA2WC,IAAD,OACG9K,EAAM9P,KAAKP,MAAXqQ,EADH,EASD9P,KAAKjB,MANL0W,EAHC,EAGDA,QACA8D,EAJC,EAIDA,WACAC,EALC,EAKDA,cACAC,EANC,EAMDA,oBACAjE,EAPC,EAODA,cACAS,EARC,EAQDA,kBAOEV,GAJcC,EACd,CAACA,EAAcpW,IAAIya,OAAOpE,EAAQqE,OAAO,SAAAxY,GAAC,OAAIA,IAAMkU,EAAcpW,IAAM2a,YAAgBzY,MACxFmU,GAEoBJ,IAAI,SAAA/T,GAAC,OAC3B,kBAAC,EAAD,CACIyV,IAAKzV,EACL+M,OAAQ/M,EACRqQ,SAAU,EAAKkG,YAAYxD,IAAI/S,GAC/B4O,SAAU,kBAAM,EAAK4I,sBAAsBxX,QAI7CwZ,EAAmB,IAAI5G,KAAKsF,GAAiB,IAAInE,IAAI,SAAA/T,GAAC,MAAI,CAACA,EAAGA,MAC9DyZ,GAAmBtB,GAAuB,IAAIK,OAChD,SAAAxY,GAAC,OAAIA,IAAMkU,EAAcpW,IAAM2a,YAAgBzY,KAAOwZ,EAAiBzG,IAAI/S,KAGzE0Z,GAAcxB,GAAiB,IAChCK,OAAOkB,GACP1F,IAAI,SAAA/T,GAAC,OACF,kBAAC,EAAD,CACIyV,IAAKzV,EACL+M,OAAQ/M,EACRqQ,SAAU,EAAKkG,YAAYxD,IAAI/S,GAC/B4O,SAAU,kBAAM,EAAK4I,sBAAsBxX,QAIvD,OACI,kBAAC,IAAD,CACI2Z,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAASrb,KAAK0H,YACd4T,kBAAgB,uBAChBC,mBAAiB,6BACjBtb,UAAU,kBACV,kBAAC,IAAD,CAAab,GAAG,wBAAwB0Q,EAAE,gBAC1C,yBACI0L,IAAKxb,KAAKqZ,UACVja,GAAG,wBACHqT,iBAAe,EACfgJ,gCAA8B,EAC9BC,YAAa5L,EAAE,UACf6L,UAAW3b,KAAKkZ,oBAChB0C,QAAS5b,KAAKoZ,kBACdyC,QAAS7b,KAAKka,oBAElB,yBAAKja,UAAU,0BACX,yBAAKA,UAAU,uBAAuBsV,GACrCgE,GAAc,yBAAKtZ,UAAU,8BAA8B+a,IAE/Dhb,KAAK6X,YAAYrJ,KAAO,GACrB,yBACIgN,IAAKxb,KAAK2X,WACVvY,GAAG,yBACHqT,iBAAe,EACfgJ,gCAA8B,EAC9BC,YAAa5L,EAAE,gBACf8L,QAAS5b,KAAKsa,mBACduB,QAAS7b,KAAKua,qBAGtB,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAK0H,YAAauP,MAAM,WACpCnH,EAAE,WAEN9P,KAAK6X,YAAYrJ,KAAO,GACrB,kBAACuN,EAAA,EAAD,CAAQ1P,QAASrM,KAAKuX,WAAYN,MAAM,UAAU+E,WAAS,GACtDlM,EAAE,UAGT9P,KAAK6X,YAAYrJ,MAAQyH,GACvB,kBAAC8F,EAAA,EAAD,CAAQ1P,QAASrM,KAAKmW,eAAgBc,MAAM,WACvCnH,EAAE,mB,GAndHvP,IAAMC,YAuenByb,GALCC,YACZzK,cACA0K,eAGWF,CAAQzH,I,mHC9fRjS,eACX,0BAAMC,EAAE,ulBACR,a,kFCFWD,eACX,0BAAMC,EAAE,2zCACR,e,yCCFWD,eACX,0BAAMC,EAAE,+PACR,YCIE4Z,I,kNAyBFtN,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTc,kBAAoB,SAAAhC,GAAW,IACnBQ,EAAW,EAAK5O,MAAhB4O,OAEJR,EAAO4B,UAAYpB,GAEvB,EAAKU,e,qFAjCaqB,EAAWC,GAAY,IAAD,EAClBrQ,KAAKP,MAAnB4O,EADgC,EAChCA,OAAQyB,EADwB,EACxBA,EAEhB,OAAIM,EAAU/B,SAAWA,GAIrB+B,EAAUN,IAAMA,I,0CAQpBX,IAAUb,GAAG,mCAAoCtO,KAAK8O,wBACtDK,IAAUb,GAAG,kBAAmBtO,KAAK6P,qB,6CAIrCV,IAAUZ,IAAI,mCAAoCvO,KAAK8O,wBACvDK,IAAUZ,IAAI,kBAAmBvO,KAAK6P,qB,+BAehC,IAAD,EACoC7P,KAAKP,MAAtCqQ,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQkC,EADd,EACcA,kBAEb8L,EAAaC,YAAejO,GAC5BkO,EAAQ/B,YAAanM,EAAQkC,EAAmBT,GAEtD,OACI,yBAAK7P,UAAU,gBACX,0BAAMA,UAAU,qBAAqBsc,GACpCF,GAAc,kBAAC,GAAD,CAAmBpc,UAAU,2B,GA9ClCM,IAAMC,YAyDhC4b,GAAYxN,aAAe,CACvB2B,mBAAmB,GAGRkB,qBAAkB2K,I,kBCqIlBI,I,mBAhMX,WAAY/c,GAAQ,IAAD,uBACf,4CAAMA,KA8DVmO,mBAAqB,SAAAC,GAAW,IACpBQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,GACAA,EAAKuN,KAAV,CAEA,IAAIC,GAAiB,EACrB,OAAQxN,EAAKuN,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAY3N,EAAKuN,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA1b,GAAC,OAAIA,EAAEyM,UAAYF,EAAOE,YAE3D2O,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGxN,EAAKuN,KAAK1O,UAAYF,EAAOE,UAC7B2O,GAAiB,GASzBA,GACA,EAAKA,eAAerO,KAnGT,EAuGnBqO,eAAiB,SAAArO,GACb,EAAK3O,SAAS,CACVud,SAAUC,YAA6B7O,GACvC8O,SAAUC,YAAkC/O,MA1GjC,EA8GnBgP,qBAAuB,SAAAxP,GAAW,IACtBQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAAL,CAH6B,IAKrBuN,EAASvN,EAATuN,KACHA,KAGDA,GACmB,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,UAC7CA,EAAK1O,UAAYF,EAAOE,SAExB,EAAK2O,eAAerO,MA3HT,EA+HnBiP,2BAA6B,SAAAzP,GAAW,IAC5BQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAAL,CAHmC,IAK3BuN,EAASvN,EAATuN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKK,iBAAmBjP,EAAOiP,gBACjF,EAAKJ,eAAerO,KAxIT,EA4InBkP,2BAA6B,SAAA1P,GAAW,IAC5BQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAAL,CAHmC,IAK3BuN,EAASvN,EAATuN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKe,gBAAkB3P,EAAO2P,eAChF,EAAKd,eAAerO,KArJT,EAyJnBoP,mBAAqB,SAAA5P,GAAW,IACpBQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAAL,CAH2B,IAKnBuN,EAASvN,EAATuN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKK,iBAAmBjP,EAAO6P,YAAYte,IAC7F,EAAKsd,eAAerO,KAlKT,EAsKnBsP,mBAAqB,SAAA9P,GAAW,IACpBQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAAL,CAH2B,IAKnBuN,EAASvN,EAATuN,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKe,gBAAkB3P,EAAO+P,WAAWxe,IAC3F,EAAKsd,eAAerO,KA/KT,IAGPA,EAAW,EAAK5O,MAAhB4O,OAHO,OAKf,EAAKtP,MAAQ,CACTyS,WAAYnD,EACZ4O,SAAUC,YAA6B7O,GACvC8O,SAAUC,YAAkC/O,IARjC,E,mFA0BG+B,EAAWC,GAAY,IACjChC,EAAWrO,KAAKP,MAAhB4O,OADgC,EAETrO,KAAKjB,MAA5Bke,EAFgC,EAEhCA,SAAUE,EAFsB,EAEtBA,SAElB,OAAI/M,EAAU/B,SAAWA,IAIrBgC,EAAU4M,WAAaA,GAIvB5M,EAAU8M,WAAaA,K,0CAQ3BlP,IAAUK,GAAG,mBAAoBtO,KAAK4N,oBACtCgP,KAAgBtO,GAAG,mBAAoBtO,KAAKyd,oBAC5CI,KAAgBvP,GAAG,mBAAoBtO,KAAK2d,oBAC5C1P,IAAUK,GAAG,qBAAsBtO,KAAKqd,sBACxCT,KAAgBtO,GAAG,2BAA4BtO,KAAKsd,4BACpDO,KAAgBvP,GAAG,2BAA4BtO,KAAKud,8B,6CAIpDtP,IAAUM,IAAI,mBAAoBvO,KAAK4N,oBACvCgP,KAAgBrO,IAAI,mBAAoBvO,KAAKyd,oBAC7CI,KAAgBtP,IAAI,mBAAoBvO,KAAK2d,oBAC7C1P,IAAUM,IAAI,qBAAsBvO,KAAKqd,sBACzCT,KAAgBrO,IAAI,2BAA4BvO,KAAKsd,4BACrDO,KAAgBtP,IAAI,2BAA4BvO,KAAKud,8B,+BAuH/C,IACYO,EAAqB9d,KAAKP,MAApCwd,SADH,EAE0Bjd,KAAKjB,MAA5Bke,EAFH,EAEGA,SAAUE,EAFb,EAEaA,SAElB,OACI,yBAAKld,UAAWgM,IAAW,gBAAiB,CAAE,uBAAwBkR,KACjEW,EAAmBA,EAAmB,KAAO,KAC7Cb,M,gDA9KmBxd,EAAOV,GACnC,GAAIU,EAAM4O,SAAWtP,EAAMyS,WAAY,CAAC,IAC5BnD,EAAW5O,EAAX4O,OAER,MAAO,CACHmD,WAAYnD,EACZ4O,SAAUC,YAA6B7O,GACvC8O,SAAUC,YAAkC/O,IAIpD,OAAO,S,GAxBY9N,IAAMC,YCC3Bud,I,mBACF,WAAYte,GAAQ,IAAD,uBACf,4CAAMA,KAYViG,YAAc,WAAO,IAAD,EACa,EAAKjG,MAA1B4O,EADQ,EACRA,OAAQ6B,EADA,EACAA,SACXA,GAELA,EAAS7B,IAjBM,IAGPA,EAAW,EAAK5O,MAAhB4O,OAHO,OAIf,EAAKtP,MAAQ,CACTmQ,KAAMC,IAAU1G,IAAI4F,IALT,E,mFASG+B,EAAWC,GAC7B,OAAOD,EAAU/B,SAAWrO,KAAKP,MAAM4O,S,+BAUjC,IAAD,EACqFrO,KAAKP,MAAvF4O,EADH,EACGA,OAAQ4O,EADX,EACWA,SAAUe,EADrB,EACqBA,aAAcC,EADnC,EACmCA,WAAY1N,EAD/C,EAC+CA,kBAAmBE,EADlE,EACkEA,IAAKyN,EADvE,EACuEA,UAEtEC,EAAkBrN,YAASzC,GAEjC,OACI,yBAAKpO,UAAWgM,IAAW,OAAQ,CAAE,WAAYwE,IAAQpE,QAASrM,KAAK0F,aACnE,yBAAKzF,UAAU,gBACX,kBAAC,EAAD,CAAUwQ,IAAKA,EAAKpC,OAAQA,EAAQ6B,SAAU8N,EAAczN,kBAAmBA,IAC9E2N,GACG,yBAAKje,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAaoO,OAAQA,EAAQkC,kBAAmBA,KAEnD0N,KAAgBE,IAAoB5N,IACjC,yBAAKtQ,UAAU,mBACX,kBAAC,GAAD,CAAcoO,OAAQA,EAAQ4O,SAAUA,Y,GArCzD1c,IAAMC,YA0DzBud,GAAKnP,aAAe,CAChB2B,mBAAmB,EACnB0N,YAAY,EACZC,WAAW,GAGAH,UCxEAxb,eACX,0BAAMC,EAAE,0tBACR,QCIE4b,I,mBACF,WAAY3e,GAAQ,qEACVA,I,sEAGA,IAAD,EAC+CO,KAAKP,MAAjD4O,EADH,EACGA,OAAQyB,EADX,EACWA,EAAGuO,EADd,EACcA,WAAYhS,EAD1B,EAC0BA,QAASgP,EADnC,EACmCA,QAEpCiD,EAAOxO,EAAE,YAOb,OANIyB,aAAclD,GACdiQ,EAAOxO,EAAE,QACFyO,YAAclQ,KACrBiQ,EAAOxO,EAAE,gBAIT,yBAAK7P,UAAU,iBACVoe,GACG,kBAACvH,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAGR,yBAAKpb,UAAU,oCAAoCoM,QAASA,GACxD,0BAAMpM,UAAU,yBAAyBqe,KAE3CD,GACE,kBAACvH,EAAA,EAAD,CAAY7W,UAAU,sBAAsBoM,QAASgP,GACjD,kBAAC/O,EAAA,EAAD,Y,GA3BQ/L,IAAMC,YAmCvBiR,iBAAkB2M,I,iFC+ClBI,G,YAjFX,WAAY/e,GAAQ,IAAD,uBACf,4CAAMA,KAqCVgf,iCAAmC,SAAA5Q,GAAW,IAClC4B,EAAY5B,EAAZ4B,QACApB,EAAW,EAAK5O,MAAhB4O,OAEHoB,GACDA,IAAYpB,GAEhB,EAAK3O,SAAS,CAAEgf,QAASC,YAAYtQ,MA7CtB,EAgDnBuQ,kCAAoC,SAAA/Q,GAAW,IACnCQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GAE3B,OAAQR,EAAOgR,MAAM,UACjB,IAAK,sCAC0B,uBAAvB3P,EAAKuN,KAAK,UAA4D,uBAAvBvN,EAAKuN,KAAK,UACzD,EAAK/c,SAAS,CAAEgf,QAASC,YAAYtQ,KAEzC,MAEJ,IAAK,wCAC0B,oBAAvBa,EAAKuN,KAAK,UAAyD,mBAAvBvN,EAAKuN,KAAK,UACtD,EAAK/c,SAAS,CAAEgf,QAASC,YAAYtQ,OA7DlC,EAoEnByQ,2BAA6B,WACzB,EAAKpf,SAAS,CAAEgf,SAAU,EAAK3f,MAAM2f,UACrC,EAAKK,wCAtEU,EAyEnBC,4BAA8B,WAAO,IACzB3Q,EAAW,EAAK5O,MAAhB4O,OACAqQ,EAAY,EAAK3f,MAAjB2f,QAERO,aAA+B5Q,EAAQqQ,IA7ExB,IAGPrQ,EAAW5O,EAAX4O,OAHO,OAKf,EAAKtP,MAAQ,CACTyS,WAAYnD,EACZqQ,QAASC,YAAYtQ,IAGzB,EAAK0Q,qCAAuCG,YACxC,EAAKF,4BACLG,KAZW,E,iFA6BfhQ,IAAUb,GAAG,iCAAkCtO,KAAKye,kCACpDW,KAAkB9Q,GAAG,kCAAmCtO,KAAK4e,qC,6CAI7DzP,IAAUZ,IAAI,iCAAkCvO,KAAKye,kCACrDW,KAAkB7Q,IAAI,kCAAmCvO,KAAK4e,sC,gDAnBlCnf,EAAOV,GACnC,GAAIU,EAAM4O,SAAWtP,EAAMyS,WAAY,CAAC,IAC5BnD,EAAW5O,EAAX4O,OAER,MAAO,CACHmD,WAAYnD,EACZqQ,QAASC,YAAYtQ,IAG7B,OAAO,S,GA1Ba9N,IAAMC,WCI5B6e,G,iLACQ,IACEvP,EAAM9P,KAAKP,MAAXqQ,EACA4O,EAAY1e,KAAKjB,MAAjB2f,QAER,OACI,kBAACY,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAASrM,KAAK8e,4BACjD,kBAACU,GAAA,EAAD,KAAgBd,EAAwC,kBAAC,KAAD,MAA9B,kBAAC,KAAD,OAC1B,kBAACe,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/B/P,EAAE,oBAIf,kBAACgQ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ9I,MAAM,UAAU9J,SAAUnN,KAAK8e,2BAA4BkB,SAAUtB,U,GAhB7DF,IAuBrB/M,iBAAkB4N,I,kBCoB3BY,I,mBACF,WAAYxgB,GAAQ,IAAD,uBACf,4CAAMA,KA6FV6d,2BAA6B,SAAAzP,GACzB,IAAMqB,EAAOC,IAAU1G,IAAI,EAAKhJ,MAAM4O,QACjCa,GAGDA,EAAKuN,MACkB,uBAAvBvN,EAAKuN,KAAK,UACVvN,EAAKuN,KAAKK,iBAAmBjP,EAAOiP,gBAEpC,EAAK/N,eAvGM,EA2GnBwO,2BAA6B,SAAA1P,GACzB,IAAMqB,EAAOC,IAAU1G,IAAI,EAAKhJ,MAAM4O,QACjCa,GAGDA,EAAKuN,MACkB,uBAAvBvN,EAAKuN,KAAK,UACVvN,EAAKuN,KAAKe,gBAAkB3P,EAAO2P,eAEnC,EAAKzO,eApHM,EAwHnBsO,qBAAuB,SAAAxP,GACnB,IAAMqB,EAAOC,IAAU1G,IAAI,EAAKhJ,MAAM4O,QACjCa,KAGDA,EAAKuN,MACmB,oBAAvBvN,EAAKuN,KAAK,UAAyD,mBAAvBvN,EAAKuN,KAAK,UACvDvN,EAAKuN,KAAK1O,UAAYF,EAAOE,SAE7B,EAAKgB,gBAjIM,EAqInBnB,mBAAqB,SAAAC,GACb,EAAKkP,QAAQ1I,IAAIxG,EAAOE,UACxB,EAAKgB,eAvIM,EA2InB0F,YAAc,WACV,EAAKyL,oBA5IU,EA+InBA,iBAAmB,WAAO,IAAD,EACK,EAAKzgB,MAAvB4O,EADa,EACbA,OAAQ8R,EADK,EACLA,MAEVzQ,EAAQlH,IAAUmH,WAExBgG,YAAiBjG,EAAO,CAACrB,IACzB,IAAM0O,EAAUqD,YAAoB/R,GAAQgH,IAAI,SAAA/T,GAAC,OAAIA,EAAEyM,UACvDsS,YAAiB3Q,EAAOqN,GAEpBoD,GACAG,YAAgBjS,IAzJL,EA6JnBkS,mBAAqB,WAAO,IAAD,EACD,EAAK9gB,MAAnBqQ,EADe,EACfA,EAAGzB,EADY,EACZA,OACLmS,EAAW1K,YAAgBzH,GACjC,GAAKmS,EAAL,CAEA,IAAMC,EAAoBzM,KAAYvL,IAAI,YAG1CqJ,IAFqB2O,EAAoBA,EAAkB1Z,MAAQ,yBAE/CyZ,GAEpB,EAAKnK,sBAAsBvG,EAAE,iBAvKd,EA0KnBuG,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK7W,MAAxC8W,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNhX,UAAU,4BACVoM,QAAS,WACLmK,EAAcC,KAElB,kBAACnK,EAAA,EAAD,WAzLG,EA+LnBoU,gBAAkB,WAAO,IAAD,EACE,EAAKjhB,MAAnBqQ,EADY,EACZA,EAAGzB,EADS,EACTA,OACLsS,EAAcC,YAAmBvS,GAClCsS,IAEL7O,GAAK+O,aAAkBF,IAEvB,EAAKtK,sBAAsBvG,EAAE,kBAtMd,EAyMnBgR,kBAAoB,WAChB,EAAKC,mBAAmBnJ,QAAQoJ,UAAY,GA1M7B,EA6MnBC,iBAAmB,WAAO,IAAD,EACK,EAAKxhB,MAAvB4O,EADa,EACbA,OAAQ8R,EADK,EACLA,MACVjR,EAAOC,IAAU1G,IAAI4F,GACtBa,GACAA,EAAKE,QAEV8R,aAA6B,CAAE7S,WAE3B8R,GACA9gB,IAAgByF,aAAa,CACzB,QAAS,2BACTuJ,OAAQ,MAxND,EA6NnB8S,eAAiB,WAAO,IAAD,EACO,EAAK1hB,MAAvB4O,EADW,EACXA,OAAQ8R,EADG,EACHA,MAEhBiB,aAAS/S,EAAQ,MAAM,GAEnB8R,GACA9gB,IAAgByF,aAAa,CACzB,QAAS,2BACTuJ,OAAQ,KArOD,EA0OnBgT,eAAiB,SAAAvT,GACbwT,aAASxT,GAAQ,IA3OF,EA8OnByT,iBAAmB,WACf,OAAK,EAAKR,mBAEH,EAAKA,mBAAmBnJ,QAAQtN,aAFF,GA5OrC,EAAKyW,mBAAqBxgB,IAAMsa,YAHjB,IAKPxM,EAAW,EAAK5O,MAAhB4O,OALO,OAOf,EAAK0O,QAAU,IAAI7I,IACnB,EAAKnV,MAAQ,CACTyS,WAAYnD,GATD,E,qFAuBKxO,EAAWC,GACZE,KAAKP,MAAhB4O,OADmC,IAGrCmT,EAAOxhB,KAAK+gB,mBAAmBnJ,QAYrC,MAViB,CACboJ,UAF8CQ,EAA1CR,UAGJS,aAH8CD,EAA/BC,aAIfC,aAJ8CF,EAAjBE,gB,4CAcftR,EAAWC,GAAY,IAAD,EACcrQ,KAAKP,MAAnD4O,EADgC,EAChCA,OAAQsT,EADwB,EACxBA,MAAOC,EADiB,EACjBA,SAAUC,EADO,EACPA,iBAEjC,OAAIzR,EAAU/B,SAAWA,IAIrB+B,EAAUwR,WAAaA,IAIvBxR,EAAUyR,mBAAqBA,GAI/BzR,EAAUuR,QAAUA,M,yCAOT9hB,EAAWC,EAAWC,GAAW,IACxCsO,EAAWrO,KAAKP,MAAhB4O,OACJxO,EAAUwO,SAAWA,GACrBrO,KAAKyU,cAGT,IAAM+M,EAAOxhB,KAAK+gB,mBAAmBnJ,QAC7BoJ,EAA0CjhB,EAA1CihB,UAA0CjhB,EAA/B0hB,aAA+B1hB,EAAjB2hB,aAC7B7hB,EAAUwO,SAAWA,EACrBmT,EAAKR,UAAYA,EAEjBQ,EAAKR,UAAY,I,0CAKrBhhB,KAAKyU,cAELxG,IAAUK,GAAG,mBAAoBtO,KAAK4N,oBACtCK,IAAUK,GAAG,qBAAsBtO,KAAKqd,sBACxCT,KAAgBtO,GAAG,2BAA4BtO,KAAKsd,4BACpDO,KAAgBvP,GAAG,2BAA4BtO,KAAKud,8B,6CAIpDtP,IAAUM,IAAI,mBAAoBvO,KAAK4N,oBACvCK,IAAUM,IAAI,qBAAsBvO,KAAKqd,sBACzCT,KAAgBrO,IAAI,2BAA4BvO,KAAKsd,4BACrDO,KAAgBtP,IAAI,2BAA4BvO,KAAKud,8B,+BAyJ/C,IAAD,SAgBDvd,KAAKP,MAdL4e,EAFC,EAEDA,WACApe,EAHC,EAGDA,UACAoO,EAJC,EAIDA,OACAgN,EALC,EAKDA,QACAyG,EANC,EAMDA,oBACAC,EAPC,EAODA,mBACAC,EARC,EAQDA,sBACAC,EATC,EASDA,kBAEAC,GAXC,EAUDC,kBAVC,EAWDD,oBACAE,EAZC,EAYDA,mBACAC,EAbC,EAaDA,uBACAlC,EAdC,EAcDA,MACArQ,EAfC,EAeDA,EAfC,EAkBgC9P,KAAKP,MAApCmiB,EAlBD,EAkBCA,SAAUC,EAlBX,EAkBWA,iBAEhBA,EAAmBA,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GApBlD,OAmBLD,EAAWA,GAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAGgEvM,IACnG,SAACiN,EAAIlO,GAAL,OAAWkO,EAAKT,EAAiBzN,KAvBhC,mBAsBEmO,EAtBF,KAsBcC,EAtBd,KAsB0BC,EAtB1B,KAsByCC,EAtBzC,KAsBqDC,EAtBrD,KAsB+DC,EAtB/D,KA0BC1T,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EACD,OACI,yBAAKjP,UAAU,gBACX,kBAAC,GAAD,CAAmBob,QAASA,IAC5B,yBAAKG,IAAKxb,KAAK+gB,mBAAoB9gB,UAAU,uBAKzD,IAAI4iB,EAAqB,EACzB,GAAItR,aAAclD,GAAS,CACvB,IAAMsO,EAAW1O,IAAU4O,YAAY3N,EAAKuN,KAAK1O,SACjD8U,EAAqBlG,EAAWA,EAASmG,sBAAwBD,EAGrE,IAAMrC,EAAW1K,YAAgBzH,GAC3BsS,EAAcC,YAAmBvS,GACnC0U,EAAMC,YAAW3U,GACf4U,EAAUC,YAAY7U,GACtB8U,EAAOrS,YAASzC,GAEhB0O,EAAUqD,YAAoB/R,GAC9B+U,EAAQ,GACdpjB,KAAK+c,QAAU,IAAI7I,IACnB6I,EAAQhb,QAAQ,SAAAshB,GACZ,IAAMrV,EAAOC,IAAUxF,IAAI4a,EAAOtV,SAC9BC,IACA,EAAK+O,QAAQ/D,IAAIhL,EAAK5O,GAAI4O,EAAK5O,IAC/BgkB,EAAMpO,KAAKhH,MAInB,IAGMsV,EAHcF,EAAMG,KAAK,SAACjiB,EAAGkiB,GAC/B,OAAOC,YAAmBD,GAAKC,YAAmBniB,KAE5B+T,IAAI,SAAArH,GAAI,OAC9B,kBAACsR,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAY8W,IAAK/I,EAAK5O,IAC7C,kBAAC,KAAD,CAAM0O,OAAQE,EAAK5O,GAAI8Q,SAAU,EAAKmR,oBAItCjS,EAAUF,EAAVE,MAER,GAAI8T,YAAY7U,IAAWkQ,YAAclQ,GAAS,CAAC,IAAD,EACGqV,aAA6BX,EAAK,IAArEY,EADgC,EACtC5R,KAAyB6R,EADa,EACvB5L,SACnB4L,EAAY9P,OAAS,IACrBiP,EAAMc,aAAiB,CAAE,QAAS,gBAAiB9R,KAAM4R,EAAS3L,SAAU4L,KAIpF,IAAMvM,EACF,oCACI,kBAAC,GAAD,CACIhJ,OAAQA,EACRgQ,WAAYA,EACZhD,QAASA,EACThP,QAASrM,KAAK8gB,oBAElB,yBAAKtF,IAAKxb,KAAK+gB,mBAAoB9gB,UAAU,qBACzC,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACIoO,OAAQA,EACRoC,KAAK,EACLwN,YAAY,EACZ1N,mBAAoB4P,EACpBnC,aAAc5O,EAAQpP,KAAKihB,iBAAmB,SAGpDT,GAAYG,GAAeoC,IACzB,oCACI,kBAACe,GAAA,EAAD,KACKtD,GACG,kBAAClB,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAASrM,KAAKugB,oBACjD,kBAACf,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/BW,MAMpBG,GACG,oCACI,kBAACrB,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAASrM,KAAK0gB,iBACjD,kBAAClB,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/BgB,aAAkBF,QAO1CoC,GACG,kBAACzD,GAAA,EAAD,CAAUrf,UAAU,YAAY8jB,WAAW,cACvC,kBAACvE,GAAA,EAAD,KACI,kBAAC,KAAD,CAAkBvf,UAAU,4BAEhC,kBAACwf,GAAA,EAAD,CACIC,QAASqD,EACTrf,MAAO,CAAEoP,WAAY,WAAYkR,SAAU,qBAOhEb,GAAQF,GAAY9C,IAAU8C,IAC7B,oCACI,kBAACgB,GAAA,EAAD,MACA,kBAACH,GAAA,EAAD,MACMX,GAAQ,kBAAC,GAAD,CAAuB9U,OAAQA,IAExC8R,IAAU8C,GACP,kBAAC3D,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAASrM,KAAKmhB,gBACjD,kBAAC1B,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAY1I,MAAM,UAAU2I,QAAQ,UAAUC,QAAM,GAC/C/P,EAAE,eAAeoU,eAG1BxgB,MAAO,CAAEygB,YAAa,UAO5C5B,EAAa,GACXC,EAAa,GACbC,EAAgB,GAChBC,EAAa,GACbC,EAAW,GACXC,EAAyB,GACzBC,EAAqB,IACrB,oCACI,kBAACoB,GAAA,EAAD,MACA,kBAACH,GAAA,EAAD,KACKvB,EAAa,GACV,kBAACjD,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAAS6V,GAC5C,kBAAC1C,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAChB,IAAf0C,EAAmB,UAAnB,UAAkCA,EAAlC,eAMpBC,EAAa,GACV,kBAAClD,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAAS+V,GAC5C,kBAAC5C,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAChB,IAAf2C,EAAmB,UAAnB,UAAkCA,EAAlC,eAMpBC,EAAgB,GACb,kBAACnD,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAAS2V,GAC5C,kBAACxC,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GACb,IAAlB4C,EAAsB,SAAtB,UAAoCA,EAApC,cAMpBC,EAAa,GACV,kBAACpD,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAAS0V,GAC5C,kBAACvC,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAChB,IAAf6C,EAAmB,eAAnB,UAAuCA,EAAvC,oBAMpBC,EAAW,GACR,kBAACrD,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAAS4V,GAC5C,kBAACzC,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAClB,IAAb8C,EAAiB,gBAAjB,UAAsCA,EAAtC,qBAMpBC,EAAyB,GACtB,kBAACtD,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAASgW,GAC5C,kBAAC7C,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GACJ,IAA3B+C,EACK,kBADL,UAEQA,EAFR,uBAQpBC,EAAqB,GAClB,kBAACvD,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,YAAYoM,QAASyV,GAC5C,kBAACtC,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GACR,IAAvBgD,EACK,oBADL,UAEQA,EAFR,2BAWhCS,EAAMxP,OAAS,GACZ,oCACI,kBAACmQ,GAAA,EAAD,MACA,kBAACH,GAAA,EAAD,KAAOR,MAO3B,OAAOnD,EAAQ,oCAAG9I,GAAc,yBAAKpX,UAAWgM,IAAW,eAAgBhM,IAAaoX,M,gDAvgB5D5X,EAAOV,GACnC,OAAIU,EAAM4O,SAAWtP,EAAMyS,WAChB,CACHA,WAAY/R,EAAM4O,QAInB,S,GArBW9N,IAAMC,YA6iBjByb,GAPCC,YACZkI,cACA3S,cACA0K,eACAkI,cAGWpI,CAAQgE,ICzkBRqE,I,wLApBD,IACEjJ,EAAYrb,KAAKP,MAAjB4b,QAER,OACI,yBAAKpb,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,0B,GAVeM,IAAMC,YCMnC+jB,I,mBACF,WAAY9kB,GAAQ,IAAD,8BACf,4CAAMA,KA0BVwQ,aAAe,SAAA5B,GAAW,IACd8R,EAAU,EAAK1gB,MAAf0gB,MAERiB,aAAS/S,GAEL8R,GACA9gB,IAAgByF,aAAa,CACzB,QAAS,2BACTuJ,OAAQ,KAhChB,EAAKtP,MAAQ,CACT0W,QAAS,IAJE,E,iFAQE,IAAD,OACRpH,EAAWrO,KAAKP,MAAhB4O,OAEFP,EAASM,YAAcC,GACxBP,GAELzO,IAAgBC,KAAK,CACjB,QAAS,oBACTyO,QAASD,EACTgH,eAAgB,EAChBC,MAAO,MACRxV,KAAK,SAAAC,GACJ,IAAMkQ,EAAQlH,IAAUmH,WACxBgG,YAAiBjG,EAAOlQ,EAAOkW,UAE/B,EAAKhW,SAAS,CAAE+V,QAASjW,EAAOkW,e,+BAiB9B,IAAD,SACiC1V,KAAKP,MAAnC+kB,EADH,EACGA,UAAWnJ,EADd,EACcA,QAAS8E,EADvB,EACuBA,MAGtB5K,EAFcvV,KAAKjB,MAAjB0W,QAEcJ,IAAI,SAAA/T,GAAC,OACvB,kBAACge,GAAA,EAAD,CAAUC,QAAM,EAACxI,IAAKzV,GAClB,kBAAC,GAAD,CAAM+M,OAAQ/M,EAAG4O,SAAU,EAAKD,kBAIlCoH,EACF,oCACI,kBAAC,GAAD,CAAsBgE,QAASA,IAC/B,yBAAKpb,UAAU,wBAAwByD,MAAO,CAAE8gB,cAC3CjP,IAKb,OAAO4K,EAAQ,oCAAG9I,GAAc,yBAAKpX,UAAU,oBAAoBoX,O,GA5D9C9W,IAAMC,YAuEnC+jB,GAAe3V,aAAe,CAC1BuR,OAAO,EACPqE,UAAW,GAGAD,U,oEC9ETE,I,kNACFC,kBAAoB,SAAA1gB,GAAU,IAAD,EACc,EAAKvE,MAApC4O,EADiB,EACjBA,OAAQsW,EADS,EACTA,WAEhBtJ,EAHyB,EACEA,SAEnBrX,GAERod,aAAS/S,EAAQsW,I,EAGrBC,cAAgB,SAAA5gB,GAAU,IAAD,EACkB,EAAKvE,MAApC4O,EADa,EACbA,OAAQsW,EADK,EACLA,WAEhBtJ,EAHqB,EACMA,SAEnBrX,GAER6gB,aAAgBxW,EAAQ,CAACsW,K,EAG7BG,aAAe,SAAA9gB,GAAU,IAAD,EACmB,EAAKvE,MAApC4O,EADY,EACZA,OAAQsW,EADI,EACJA,WAEhBtJ,EAHoB,EACOA,SAEnBrX,GAER+gB,aAAe1W,EAAQ,CAACsW,K,wEAGlB,IAAD,EAC4E3kB,KAAKP,MAA9EqQ,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQsW,EADd,EACcA,UAAW1J,EADzB,EACyBA,KAAMI,EAD/B,EAC+BA,QAAS2J,EADxC,EACwCA,eAAgBC,EADxD,EACwDA,gBAEvD3O,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KAJhB,IAMGc,EAAiFd,EAAjFc,iBAAkB8N,EAA+D5O,EAA/D4O,6BAA8BC,EAAiC7O,EAAjC6O,6BAExD,OACI,kBAACC,GAAA,EAAD,CACInK,KAAMA,EACNI,QAASA,EACTgK,gBAAgB,iBAChBL,eAAgBA,EAChBM,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,mBACpB0F,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBAChB,kBAAC+e,GAAA,EAAD,KACKT,GAAmB,kBAACU,GAAA,EAAD,CAAUtZ,QAASrM,KAAK0kB,mBAAoB5U,EAAE,gBACjEsH,GAAoB,kBAACuO,GAAA,EAAD,CAAUtZ,QAASrM,KAAK4kB,eAAgB9U,EAAE,aAC7DoV,GAAgCC,IAC9B,kBAACQ,GAAA,EAAD,CAAUtZ,QAASrM,KAAK8kB,cAAehV,EAAE,iB,GArDvCvP,IAAMC,YAuEjBiR,iBAAkBgT,I,SCNlBmB,I,kNAlEX7mB,MAAQ,CACJ8mB,aAAa,EACbliB,KAAM,EACNE,IAAK,G,EAGTiiB,sB,sCAAwB,WAAM9hB,GAAN,iBAAAgO,EAAA,qDAChBhO,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAEc,EAAK5H,MAArB8mB,YAGJ,EAAKnmB,SAAS,CAAEmmB,aAAa,KAEvBliB,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QAElB,EAAK/G,SAAS,CACVmmB,aAAa,EACbliB,OACAE,SAhBY,yC,wDAqBxBkiB,uBAAyB,SAAA/hB,GACjBA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAEmmB,aAAa,K,wEAGvB,IAAD,EAC0C7lB,KAAKP,MAA5C4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAAWM,EADtB,EACsBA,gBADtB,EAE8BjlB,KAAKjB,MAAhC8mB,EAFH,EAEGA,YAAaliB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErByS,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,OAAKrO,EAGD,oCACI,yBAAKrW,UAAU,kBAAkB+lB,cAAehmB,KAAK8lB,uBAChDG,aAAS3P,EAAS,kBAAM4P,aAAU7X,EAAQsW,GAAW,MAE1D,kBAAC,GAAD,CACItW,OAAQA,EACRsW,UAAWA,EACXK,eAAgB,CAAEnhB,MAAKF,QACvBsX,KAAM4K,EACNZ,gBAAiBA,EACjB5J,QAASrb,KAAK+lB,0BAbL,S,GAzCAxlB,IAAMC,YCNpB+B,eACX,0BAAMC,EAAE,wjBACR,U,UCOE2jB,I,mBACF,WAAY1mB,GAAQ,IAAD,8BACf,4CAAMA,KAqBV2mB,aAAe,WACX,GAAI,EAAKC,eAAezO,SACF,EAAKyO,eAAezO,QAAQqB,UAC/B,CACX,EAAKoN,eAAezO,QAAQqB,UAAY,GAD7B,IAGHqN,EAAa,EAAK7mB,MAAlB6mB,SACR,IAAKA,EAAU,OAGf,YADAA,EAAS,IATA,IAcTC,EAAkB,EAAK9mB,MAAvB8mB,cACAC,EAAe,EAAKznB,MAApBynB,WAER,EAAK9mB,SAAS,CAAE8mB,YAAaA,IAEzBD,GACAA,KA1CW,EA8CnBE,cAAgB,SAAAziB,GACU,KAAlBA,EAAMmV,SACNnV,EAAM8B,kBAhDK,EAoDnB4gB,YAAc,WACV,IAAM1b,EAAU,EAAKqb,eAAezO,QACpC,GAAK5M,EAAL,CAFgB,IAIRhB,EAAcgB,EAAdhB,UACU,SAAdA,GAAsC,oBAAdA,IACxBgB,EAAQhB,UAAY,MANR,IAQRiP,EAAcjO,EAAdiO,UAEAqN,EAAa,EAAK7mB,MAAlB6mB,SACHA,GAELA,EAASrN,KAjEM,EAoEnB0N,YAAc,SAAA3iB,GACV,IAAMmW,EAAYnW,EAAMoW,cAAcC,QAAQ,cAC1CF,IACAnW,EAAM8B,iBACN5C,SAASoQ,YAAY,cAAc,EAAO6G,KArE9C,EAAKkM,eAAiB9lB,IAAMsa,YAE5B,EAAK9b,MAAQ,CACTynB,YAAY,GAND,E,gFAUA3mB,EAAWC,EAAWC,GAAW,IAAD,OACvCymB,EAAexmB,KAAKjB,MAApBynB,WAEJA,GAAcA,IAAe3mB,EAAU2mB,YACvC/e,WAAW,WACH,EAAK4e,eAAezO,SACpB,EAAKyO,eAAezO,QAAQxE,SAEjCwT,O,+BA0DD,IAAD,EAC4C5mB,KAAKP,MAA9CqQ,EADH,EACGA,EAAGyM,EADN,EACMA,MAAOlQ,EADb,EACaA,QAASgP,EADtB,EACsBA,QAASiL,EAD/B,EAC+BA,SAC5BE,EAAexmB,KAAKjB,MAApBynB,WAER,OACI,yBAAKvmB,UAAU,iBACTumB,EAUE,oCACI,yBAAKvmB,UAAU,4BACX,yBACIb,GAAG,yBACHoc,IAAKxb,KAAKqmB,eACV3K,YAAa5L,EAAE,UACf2C,iBAAe,EACfgJ,gCAA8B,EAC9BE,UAAW3b,KAAKymB,cAChB7K,QAAS5b,KAAK0mB,YACd7K,QAAS7b,KAAK2mB,gBAnB1B,oCACI,kBAAC7P,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,oCAAoCoM,QAASA,GACxD,0BAAMpM,UAAU,yBAAyBsc,KAmBpDsK,QAAQP,IACL,kBAACxP,EAAA,EAAD,CAAY7W,UAAU,sBAAsBiM,YAAalM,KAAKomB,cAC1D,kBAACU,GAAA,EAAD,CAAe7L,KAAMuL,EAAYO,KAAM,kBAAC,GAAD,MAAgBC,SAAU,kBAAC1a,EAAA,EAAD,c,GA9GzD/L,IAAMC,YA8HvBiR,iBAAkB0U,IC8VlBc,I,mBAjdX,WAAYxnB,GAAQ,IAAD,EACf,GADe,qBACX,6CAAewnB,EACf,MAAM,IAAIC,UAAU,uDAFT,OAOf,4CAAMznB,KAyDV0nB,uBAAyB,SAAAtZ,GAAW,IAAD,EACI,EAAKpO,MAAhC4O,EADuB,EACvBA,OAAQ+Y,EADe,EACfA,eADe,EAEE,EAAKroB,MAA9BukB,EAFuB,EAEvBA,MAAO+D,EAFgB,EAEhBA,cAEP5X,EAAkD5B,EAAlD4B,QAASsG,EAAyClI,EAAzCkI,WAAyBuR,GAAgBzZ,EAA7B0Z,YAA6B1Z,EAAhByZ,aAEpChR,EAAUa,KAAa1O,IAAIgH,EAASsG,GAG1C,GAAItG,IAAYpB,EAAQ,CACpB,IAAKiV,EAAMxP,OAAQ,OACnB,IAAK0T,YAAQzR,EAAYuN,EAAM,GAAGlkB,GAAIkkB,EAAMA,EAAMxP,OAAS,GAAG1U,IAAI,GAAO,OAEzE,IAAMqoB,EAAQnE,EAAMoE,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAO2W,IACxC,EAAK4R,eAAeL,IACL,IAAXG,EAEA,EAAK/nB,SAAS,CAAE4jB,MAAOsE,YAActE,EAAOhN,EAASuR,QAGrD,EAAKnoB,SAAS,CAAE4jB,MAAM,GAAD,oBAAMA,EAAMwE,MAAM,EAAGL,IAArB,CAA6BnR,GAA7B,aAAyCgN,EAAMwE,MAAML,EAAQ,QAGvE,IAAXA,GAGA,EAAK/nB,SAAS,CAAE4jB,MAAOA,EAAMxJ,OAAO,SAAAxY,GAAC,OAAIA,EAAElC,KAAO2W,WAGvD,GAAItG,IAAY2X,EAAgB,CACnC,IAAKC,EAAcvT,OAAQ,OAC3B,IAAK0T,YAAQzR,EAAYsR,EAAc,GAAGjoB,GAAIioB,EAAcA,EAAcvT,OAAS,GAAG1U,IAAI,GAAO,OAEjG,IAAMqoB,EAAQJ,EAAcK,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAO2W,IAChD,EAAK4R,eAAeL,IACL,IAAXG,EAEA,EAAK/nB,SAAS,CACV2nB,cAAeO,YAAcP,EAAe/Q,EAASuR,QAIzD,EAAKnoB,SAAS,CACV2nB,cAAc,GAAD,oBAAMA,EAAcS,MAAM,EAAGL,IAA7B,CAAqCnR,GAArC,aAAiD+Q,EAAcS,MAAML,EAAQ,QAInF,IAAXA,GAGA,EAAK/nB,SAAS,CAAE2nB,cAAeA,EAAcvN,OAAO,SAAAxY,GAAC,OAAIA,EAAElC,KAAO2W,QAlH/D,EAwHnBgS,mBAAqB,SAAAla,GAAW,IAAD,EACQ,EAAKpO,MAAhC4O,EADmB,EACnBA,OAAQ+Y,EADW,EACXA,eADW,EAEM,EAAKroB,MAA9BukB,EAFmB,EAEnBA,MAAO+D,EAFY,EAEZA,cAEP/Q,EAAYzI,EAAZyI,QACA7G,EAAY6G,EAAZ7G,QAER,GAAIA,IAAYpB,GACX,EAAK2Z,eAAe1R,GAAzB,CAEA,IAAM5G,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAO,CAAC4G,IAExB7G,IAAYpB,EACZ,EAAK3O,SAAS,CAAE4jB,MAAO,CAAChN,GAASuD,OAAOyJ,KACjC7T,IAAY2X,GACnB,EAAK1nB,SAAS,CAAE2nB,cAAe,CAAC/Q,GAASuD,OAAOwN,OAxIrC,EA4InBa,uBAAyB,SAAAra,GAAW,IAAD,EACI,EAAKpO,MAAhC4O,EADuB,EACvBA,OAAQ+Y,EADe,EACfA,eADe,EAEE,EAAKroB,MAA9BukB,EAFuB,EAEvBA,MAAO+D,EAFgB,EAEhBA,cAEP5X,EAAyB5B,EAAzB4B,QAASmJ,EAAgB/K,EAAhB+K,YAEXvD,EAAM,IAAInB,IAAI0E,EAAYvD,IAAI,SAAA/T,GAAC,MAAI,CAACA,EAAGA,MACvC6mB,EAAW,WACT,EAAKppB,MAAMukB,MAAMxP,OAAS,EAAK/U,MAAMsoB,cAAcvT,OAASsU,MAC5D,EAAKC,WAAW,EAAKC,SAIzB7Y,IAAYpB,EACZ,EAAK3O,SAAS,CAAE4jB,MAAOA,EAAMxJ,OAAO,SAAAxY,GAAC,OAAK+T,EAAIhB,IAAI/S,EAAElC,OAAQ+oB,GACrD1Y,IAAY2X,GACnB,EAAK1nB,SAAS,CAAE2nB,cAAeA,EAAcvN,OAAO,SAAAxY,GAAC,OAAK+T,EAAIhB,IAAI/S,EAAElC,OAAQ+oB,IA5JjE,EAgKnB1T,YAAc,WACV,EAAK6T,OAAS,CACVC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClBnF,MAAO,GACP+D,cAAe,GACfvN,OAAQ,EAAK4O,mBAEjB,EAAKL,WAAW,EAAKC,SAzKN,EA4KnBD,WA5KmB,sCA4KN,WAAOC,GAAP,6CAAAtW,EAAA,wDAAe2W,IAAf,iCACDta,EAAW,EAAK5O,MAAhB4O,OACAma,EAAsCF,EAAtCE,UAAW1O,EAA2BwO,EAA3BxO,OAAQwJ,EAAmBgF,EAAnBhF,OAAmBgF,EAAZC,QAFzB,qDAOLC,EAPK,wDASHI,EAAgBtF,EAAMxP,OAAS,EAAIwP,EAAMA,EAAMxP,OAAS,GAAG1U,GAAK,EACtEkpB,EAAOC,SAAU,EAVR,UAWYlpB,IAAgBC,KAAK,CACtC,QAAS,qBACTmQ,QAASpB,EACT4L,MAAO,GACP4O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACRhU,MAAOqT,KACPtO,WACDkP,QAAQ,WACPV,EAAOC,SAAU,IArBZ,QAWH/oB,EAXG,OAwBTH,IAAgBC,KAAK,CACjB,QAAS,qBACTmQ,QAASpB,EACT4L,MAAO,GACP4O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACRhU,MAAoC,EAA7BqT,KACPtO,WAGImP,EAAazpB,EAAbypB,SACRX,EAAOE,UAAgC,IAApBS,EAASnV,QAAyC,IAAzBmV,EAASC,YACrDZ,EAAOhF,MAAQA,EAAMzJ,OAAOoP,EAASnP,OAAO,EAAKkO,iBAC3CmB,EAAoBR,GAAkBM,EAASnV,OAAS,GAAKmV,EAASnV,OAASsU,KAErFjR,KAAaiS,SAAS5pB,EAAOypB,UACvBvZ,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOlQ,EAAOypB,UAElC,EAAKvpB,SAAS,CAAE4jB,MAAOgF,EAAOhF,QAE1BgF,EAAOE,UACP,EAAKa,mBAAmBf,GAAQ,GACzBa,GACP,EAAKd,WAAWC,GAAQ,GAjDnB,0CA5KM,wDAiOnBe,mBAjOmB,sCAiOE,WAAOf,GAAP,+CAAAtW,EAAA,wDAAe2W,IAAf,iCACTvB,EAAmB,EAAK3nB,MAAxB2nB,eACAtN,EAA4DwO,EAA5DxO,OAAQyO,EAAoDD,EAApDC,QAASE,EAA2CH,EAA3CG,iBAAiCnF,EAAUgF,EAAzBjB,cAItCD,EANY,qDAObmB,EAPa,qDAQbE,EARa,wDAUXG,EAAgBtF,EAAMxP,OAAS,EAAIwP,EAAMA,EAAMxP,OAAS,GAAG1U,GAAK,EACtEkpB,EAAOC,SAAU,EAXA,UAYIlpB,IAAgBC,KAAK,CACtC,QAAS,qBACTmQ,QAAS2X,EACTnN,MAAO,GACP4O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACRhU,MAAOqT,KACPtO,WACDkP,QAAQ,WACPV,EAAOC,SAAU,IAtBJ,WAYX/oB,EAZW,OAyBTypB,EAAazpB,EAAbypB,SACRX,EAAOjB,cAAgB/D,EAAMzJ,OAAOoP,EAASnP,OAAO,EAAKkO,iBACzDM,EAAOG,iBAAuC,IAApBQ,EAASnV,QAAyC,IAAzBmV,EAASC,YACtDC,EAAoBR,GAAkBM,EAASnV,OAAS,GAAKmV,EAASnV,OAASsU,MAEjFE,EAAOG,iBA9BM,mDAgCjBtR,KAAaiS,SAASH,GAChBvZ,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOuZ,GAE3B,EAAKvpB,SAAS,CAAE2nB,cAAeiB,EAAOjB,gBAElC8B,GACA,EAAKE,mBAAmBf,GAAQ,GAvCnB,0CAjOF,wDA4QnBgB,aAAe,WACX,GAAK,EAAKC,QAAV,CAEA,IAAM/H,EAAO,EAAK+H,QAAQ3R,QAC1B,GAAK4J,EAAL,CAJiB,IAMT8G,EANS,gBAMTA,OAEJ9G,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,OACtDlB,IAAWA,EAAOE,UAClB,EAAKH,WAAWC,GAEhB,EAAKe,mBAAmBf,OAxRjB,EA6RnBxH,kBAAoB,WAChB,IAAMU,EAAO,EAAK+H,QAAQ3R,QACrB4J,IAELA,EAAKR,UAAY,IAjSF,EAoSnByI,mBAAqB,WACjB,GAAK,EAAKC,cAAV,CAEA,IAAMlI,EAAO,EAAKkI,cAAc9R,QAChC,GAAK4J,EAAL,CAJuB,IAMfmI,EANe,gBAMfA,aACHA,GAEDnI,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,OACrDG,EAAanB,UAGd,EAAKoB,qBAAqBD,GAF1B,EAAKE,aAAaF,OA/SX,EAsTnBE,aAtTmB,sCAsTJ,WAAOvB,GAAP,iDAAAtW,EAAA,wDAAe2W,IAAf,iCACHta,EAAW,EAAK5O,MAAhB4O,OACAma,EAA6CF,EAA7CE,UAAW1O,EAAkCwO,EAAlCxO,OAAQwJ,EAA0BgF,EAA1BhF,MAAOiF,EAAmBD,EAAnBC,QAAStO,EAAUqO,EAAVrO,OAIvCuO,EANO,qDAOPD,EAPO,wDASLK,EAAgBtF,EAAMxP,OAAS,EAAIwP,EAAMA,EAAMxP,OAAS,GAAG1U,GAAK,EACtEkpB,EAAOC,SAAU,EAVN,UAWUlpB,IAAgBC,KAAK,CACtC,QAAS,qBACTmQ,QAASpB,EACT4L,QACA4O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACRhU,MAAOqT,KACPtO,WACDkP,QAAQ,WACPV,EAAOC,SAAU,IArBV,WAWL/oB,EAXK,OAwBHypB,EAAazpB,EAAbypB,SACRX,EAAOhF,MAAQA,EAAMzJ,OAAOoP,EAASnP,OAAO,EAAKkO,iBACjDM,EAAOE,UAAgC,IAApBS,EAASnV,QAAyC,IAAzBmV,EAASC,YAC/CC,EAAoBR,GAAkBM,EAASnV,OAAS,GAAKmV,EAASnV,OAASsU,KAEjF,EAAKuB,eAAiBrB,EA7Bf,mDA+BXnR,KAAaiS,SAASH,GAChBvZ,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOuZ,GAE3B,EAAKvpB,SAAS,CAAEoqB,YAAaxB,EAAOhF,MAAOyG,oBAAqBzB,EAAOjB,gBAEnEiB,EAAOE,UACP,EAAKoB,qBAAqBtB,GAAQ,GAC3Ba,GACP,EAAKU,aAAavB,GAAQ,GAxCnB,0CAtTI,wDAkWnBsB,qBAlWmB,sCAkWI,WAAOtB,GAAP,iDAAAtW,EAAA,wDAAe2W,IAAf,iCACXvB,EAAmB,EAAK3nB,MAAxB2nB,eACAtN,EAAmEwO,EAAnExO,OAAQyO,EAA2DD,EAA3DC,QAAwBjF,EAAmCgF,EAAlDjB,cAAsBoB,EAA4BH,EAA5BG,iBAAkBxO,EAAUqO,EAAVrO,MAI5DmN,EANc,qDAOfmB,EAPe,qDAQfE,EARe,wDAUbG,EAAgBtF,EAAMxP,OAAS,EAAIwP,EAAMA,EAAMxP,OAAS,GAAG1U,GAAK,EACtEkpB,EAAOC,SAAU,EAXE,UAYElpB,IAAgBC,KAAK,CACtC,QAAS,qBACTmQ,QAAS2X,EACTnN,QACA4O,eAAgB,EAChBC,gBAAiBF,EACjBG,OAAQ,EACRhU,MAAOqT,KACPtO,WACDkP,QAAQ,WACPV,EAAOC,SAAU,IAtBF,WAYb/oB,EAZa,OAyBXypB,EAAazpB,EAAbypB,SACRX,EAAOjB,cAAgB/D,EAAMzJ,OAAOoP,EAASnP,OAAO,EAAKkO,iBACzDM,EAAOG,iBAAuC,IAApBQ,EAASnV,QAAyC,IAAzBmV,EAASC,YACtDC,EAAoBR,GAAkBM,EAASnV,OAAS,GAAKmV,EAASnV,OAASsU,KAEjF,EAAKuB,eAAiBrB,EA9BP,mDAgCnBnR,KAAaiS,SAASH,GAChBvZ,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOuZ,GAE3B,EAAKvpB,SAAS,CAAEoqB,YAAaxB,EAAOhF,MAAOyG,oBAAqBzB,EAAOjB,gBAEnE8B,GACA,EAAKS,qBAAqBtB,GAAQ,GAvCnB,0CAlWJ,wDA6YnBlC,aA7YmB,sCA6YJ,WAAMrU,GAAN,eAAAC,EAAA,wDACLiI,EAAQlI,EAAOA,EAAKuH,OAAS,GADxB,uBAGP,EAAK0Q,oBAHE,0BAOX,EAAKL,aAAe,CAChB1P,QACAuO,WAAW,EACXC,kBAAkB,EAClBnF,MAAO,GACP+D,cAAe,GACfvN,OAAQ,EAAK4O,mBAEjB,EAAKmB,aAAa,EAAKF,cAAc,GAf1B,yCA7YI,wDA+ZnBK,kBAAoB,WAChB,EAAKL,aAAe,KACpB,EAAKjqB,SAAS,CAAEoqB,YAAa,GAAIC,oBAAqB,MAjavC,EAoanB/B,eAAiB,SAAA1R,GACb,QAAKA,GAEE,EAAKqR,eAAerR,EAAQe,UA9ZnC,EAAKkS,QAAUhpB,IAAMsa,YACrB,EAAK6O,cAAgBnpB,IAAMsa,YAE3B,EAAK9b,MAAQ,CACTukB,MAAO,GACP+D,cAAe,GACfyC,YAAa,GACbC,oBAAqB,IAhBV,E,gFAPf,OAAO,O,+CAIP,OAAO,S,iDAwBP,OAAO,I,qCAGI1S,GACX,MAAM,IAAI9D,MAAM,sD,sCAGJ+C,GAAU,IACd8Q,EAAmBpnB,KAAKP,MAAxB2nB,eACA3X,EAAgB6G,EAAhB7G,QAASrQ,EAAOkX,EAAPlX,GAEjB,OACI,kBAAC,GAAD,CACI2X,IAAG,kBAAatH,EAAb,uBAAmCrQ,GACtCiP,OAAQoB,EACRkV,UAAWvlB,EACX6lB,gBAAiBxV,IAAY2X,M,wCAMrC,MAAM,IAAI7T,MAAM,uD,kCAIhB,MAAM,IAAIA,MAAM,iD,0CAIhBvT,KAAKyU,cAEL0C,KAAa7I,GAAG,uBAAwBtO,KAAKkoB,wBAC7C/Q,KAAa7I,GAAG,uBAAwBtO,KAAKmnB,wBAC7ChQ,KAAa7I,GAAG,mBAAoBtO,KAAK+nB,sB,6CAIzC5Q,KAAa5I,IAAI,uBAAwBvO,KAAKkoB,wBAC9C/Q,KAAa5I,IAAI,uBAAwBvO,KAAKmnB,wBAC9ChQ,KAAa5I,IAAI,mBAAoBvO,KAAK+nB,sB,+BA6WpC,IAAD,SACiC/nB,KAAKP,MAAnC+kB,EADH,EACGA,UAAWnJ,EADd,EACcA,QAAS8E,EADvB,EACuBA,MADvB,EAE8DngB,KAAKjB,MAAhEukB,EAFH,EAEGA,MAAO+D,EAFV,EAEUA,cAAeyC,EAFzB,EAEyBA,YAAaC,EAFtC,EAEsCA,oBACnCJ,EAAiB3pB,KAAjB2pB,aAEFV,EAAW3F,EAAMzJ,OAAOwN,GAAehS,IAAI,SAAA/T,GAAC,OAAI,EAAK2oB,gBAAgB3oB,KACrE4oB,EAAiBJ,EAAYjQ,OAAOkQ,GAAqB1U,IAAI,SAAA/T,GAAC,OAAI,EAAK2oB,gBAAgB3oB,KAE7F,OACI,oCACI,kBAAC,GAAD,CACIib,MAAOvc,KAAKmqB,YACZ9d,QAASrM,KAAK8gB,kBACdzF,QAASA,EACTiL,SAAUtmB,KAAKoqB,YAAcpqB,KAAKomB,aAAe,KACjDG,cAAevmB,KAAKgqB,oBAExB,yBACIxO,IAAKxb,KAAKupB,QACVtpB,UAAWgM,IAAW,oBAAqBjM,KAAKqqB,oBAChDC,SAAUtqB,KAAKspB,aACf5lB,MAAO,CAAE8gB,UAAWrE,EAAQqE,EAAY,OACvCyE,GAEJpC,QAAQ8C,IACL,yBACInO,IAAKxb,KAAK0pB,cACVzpB,UAAWgM,IAAW,2BAA4BjM,KAAKuqB,0BACvDD,SAAUtqB,KAAKypB,oBACdS,Q,GAhdK3pB,IAAMC,YCP9BgqB,I,8LACanT,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOvH,EAFO9P,KAAKP,MAAXqQ,GAEC,kB,GAZUmX,KAgB3BuD,GAAaC,UAAY,CACrBpc,OAAQqc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BtP,QAASqP,KAAUzoB,KAAK2oB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzBH,GAAa5b,aAAe,CACxBuR,OAAO,EACPqE,UAAW,GAGA/S,qBAAkB+Y,IC7B3BM,I,8LACazT,GACX,OAAOA,GAAgC,oBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,kC,kCAMlB,OAAOvH,EAFO9P,KAAKP,MAAXqQ,GAEC,sB,GAZamX,KAgB9B6D,GAAgBL,UAAY,CACxBpc,OAAQqc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BtP,QAASqP,KAAUzoB,KAAK2oB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzBG,GAAgBlc,aAAe,CAC3BuR,OAAO,EACPqE,UAAW,GAGA/S,qBAAkBqZ,I,8BCiJlBC,I,kNAvKXhsB,MAAQ,CACJ8mB,aAAa,EACbliB,KAAM,EACNE,IAAK,G,EAGTiiB,sB,sCAAwB,WAAM9hB,GAAN,iBAAAgO,EAAA,qDAChBhO,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAEc,EAAK5H,MAArB8mB,YAGJ,EAAKnmB,SAAS,CAAEmmB,aAAa,KAEvBliB,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QAElB,EAAK/G,SAAS,CACVmmB,aAAa,EACbliB,OACAE,SAhBY,yC,wDAqBxBkiB,uBAAyB,SAAA/hB,GACjBA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAEmmB,aAAa,K,iFAGfpJ,GACd,QAAKA,IAGsB,sBAAvBA,EAAKA,KAAK,UACa,0BAAvBA,EAAKA,KAAK,UACa,+BAAvBA,EAAKA,KAAK,Y,sCAIFuO,GACZ,IACIA,EAAMA,EAAIC,WAAW,QAAUD,EAAM,UAAYA,EACjD,IAAME,EAAaC,UAAUH,GAEvBI,EAAW,IAAIC,IAAIH,GAAYE,SAASE,MAAM,KAC9CC,EAASH,EAAStX,QAAU,EAAIsX,EAASA,EAAStX,OAAS,GAAK,IAAIuX,IAAIH,GAAYE,SAE1F,OAAOI,KAASC,UAAUF,GAC5B,MAAOlZ,GACLD,QAAQC,MAAM,QAAU2Y,EAAM,KAAO3Y,GAGzC,OAAO,O,+BAGD,IAAD,SACmDrS,KAAKP,MAArD4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAAW+G,EADtB,EACsBA,QAASzG,EAD/B,EAC+BA,gBAD/B,EAE8BjlB,KAAKjB,MAAhC8mB,EAFH,EAEGA,YAAaliB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErByS,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KAErB,IAAIe,EAAU,KAPT,EAQiDqU,GAAW,CAC7DnP,MAAO,GACPoP,YAAa,GACbvc,MAAO,KACP4b,IAAK,IAJHY,EARD,EAQCA,YAAaD,EARd,EAQcA,YAAavc,EAR3B,EAQ2BA,MAAOmN,EARlC,EAQkCA,MAAOyO,EARzC,EAQyCA,IAM9C,GAAIU,EACAnP,EAAQA,GAASvc,KAAK6rB,gBAAgBb,GAEtC3T,EACI,kBAACyU,GAAA,EAAD,CAAU7rB,UAAU,kBAAkB+qB,IAAKA,GACtCY,OAGN,CAAC,IACI7Z,EAASuE,EAAQe,QAAjBtF,KACR,GAAIA,EAAM,CAAC,IACCiG,EAAajG,EAAbiG,SACJA,GAAYA,EAASlE,OAAS,IAC9BuD,EAAUW,EAAS8B,OAAO9Z,KAAK+rB,mBAAmB1W,IAAI,SAAA/T,GAClD,IAAM0qB,EAAaC,aAAUla,EAAKA,KAAMzQ,EAAEynB,OAAQznB,EAAEynB,OAASznB,EAAEwS,QAC3DkX,EAAMgB,EACNE,GAAO,EAEX,OAAQ5qB,EAAEmb,KAAK,UACX,IAAK,wBAA0B,IACd0P,EAAY7qB,EAAEmb,KAAnBuO,IACJmB,IACAnB,EAAMmB,GAEV,MAEJ,IAAK,oBACD,MAEJ,IAAK,6BACDD,GAAO,EAMf,OAFA3P,EAAQA,GAAS,EAAKsP,gBAAgBb,IAAQ,IAG1C,kBAACc,GAAA,EAAD,CAAU7rB,UAAU,kBAAkB+qB,IAAKA,EAAKkB,KAAMA,GACjDF,OAQzB,IAAM9a,EAAS,qBAAkBxP,KAAKyP,IAAIoL,EAAM6P,WAAW,IAAM,EAAK,GAEtE,OACI,oCACI,yBAAKnsB,UAAU,cAAc+lB,cAAehmB,KAAK8lB,uBAC7C,yBAAK7lB,UAAWgM,IAAW,oBAAqBiF,IAC3Cmb,YAAe9P,GACfnN,GACG,kBAACkd,GAAA,EAAD,CACIpsB,YAAa,GACbmO,OAAQA,EACRsW,UAAWA,EACXvV,MAAOA,EACP8W,UAAWA,KACXqG,cAAc,EACd7oB,MAAO,CAAEgJ,MAAO,GAAIgC,OAAQ,GAAIkE,SAAU,WAAY/O,IAAK,EAAGF,KAAM,MAIhF,yBAAK1D,UAAU,uBACVsc,GAAS,yBAAKtc,UAAU,kBAAkBsc,GAC1CoP,GAAe,yBAAK1rB,UAAU,wBAAwB0rB,EAAY5Z,MAClEsF,IAGT,kBAAC,GAAD,CACIhJ,OAAQA,EACRsW,UAAWA,EACXK,eAAgB,CAAEnhB,MAAKF,QACvBsX,KAAM4K,EACNZ,gBAAiBA,EACjB5J,QAASrb,KAAK+lB,8B,GAzJTxlB,IAAMC,YCJzBgsB,I,8LACanV,GACX,IAAKA,EAAS,OAAO,EADD,IAGZoV,EAAmBpV,EAAnBoV,SAAU1a,EAASsF,EAATtF,KAClB,GAAI0a,EAAU,OAAO,EACrB,IAAK1a,EAAM,OAAO,EALE,IAOZiG,EAAajG,EAAbiG,SACR,QAAKA,GAEEA,EAASgF,KACZ,SAAA1b,GAAC,MACuB,sBAApBA,EAAEmb,KAAK,UACa,0BAApBnb,EAAEmb,KAAK,UACa,+BAApBnb,EAAEmb,KAAK,a,wCAKf,MAAO,CAAE,QAAS,6B,kCAMlB,OAAO3M,EAFO9P,KAAKP,MAAXqQ,GAEC,gB,sCAGGwG,GAAU,IACd8Q,EAAmBpnB,KAAKP,MAAxB2nB,eACA3X,EAAyB6G,EAAzB7G,QAAS4H,EAAgBf,EAAhBe,QAASjY,EAAOkX,EAAPlX,GAE1B,OACI,kBAAC,GAAD,CACI2X,IAAG,kBAAatH,EAAb,uBAAmCrQ,GACtCiP,OAAQoB,EACRkV,UAAWvlB,EACXssB,QAASrU,EAAQoV,SACjBvG,UAAW,kBAAMA,aAAUzW,EAASrQ,GAAI,IACxC6lB,gBAAiBxV,IAAY2X,Q,GAxCnBH,KA8C1BuF,GAAY/B,UAAY,CACpBpc,OAAQqc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BtP,QAASqP,KAAUzoB,KAAK2oB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzB6B,GAAY5d,aAAe,CACvBuR,OAAO,EACPqE,UAAW,GAGA/S,qBAAkB+a,I,oBCzClBrG,I,mBApBX,WAAY1mB,GAAQ,qEACVA,I,sEAGA,IACEitB,EAAU1sB,KAAKP,MAAfitB,MAER,OACI,yBAAKzsB,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASqgB,GAChD,kBAAC,GAAD,OAEJ,yBAAKzsB,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,sB,GAdYM,IAAMC,YCEhCmsB,I,kNACF5tB,MAAQ,CACJgI,MAAO,G,EAGXD,aAAe,SAAC9C,EAAO+C,GACnB,EAAKrH,SAAS,CAAEqH,W,wEAGV,IAAD,EACsB/G,KAAKP,MAAxB4b,EADH,EACGA,QAAS8E,EADZ,EACYA,MACTpZ,EAAU/G,KAAKjB,MAAfgI,MAEFsQ,EACF,oCACI,kBAAC,GAAD,CAAmBqV,MAAOrR,IAC1B,kBAACuR,GAAA,EAAD,CACI7lB,MAAOA,EACPoG,SAAUnN,KAAK8G,aACf+lB,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACT,kBAACC,GAAA,EAAD,CAAKC,MAAM,QAAQzpB,MAAO,CAAE0pB,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,OAAOzpB,MAAO,CAAE0pB,SAAU,UACrC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQzpB,MAAO,CAAE0pB,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQzpB,MAAO,CAAE0pB,SAAU,YAKlD,OAAOjN,EAAQ,oCAAG9I,GAAc,yBAAKpX,UAAU,gBAAgBoX,O,GAhC7C9W,IAAMC,YA2ChCmsB,GAAY/d,aAAe,CACvBuR,OAAO,EACPqE,UAAW,GAGAmI,UC7CTU,I,mBACF,WAAY5tB,GAAQ,IAAD,uBACf,4CAAMA,KAuBV6tB,wBAA0B,SAAAzf,GAAW,IAAD,EACC,EAAK9O,MAA9BwuB,EADwB,EACxBA,UAAWC,EADa,EACbA,UACXnoB,EAAWwI,EAAXxI,OAEJkoB,GAAaA,EAAUne,OAASme,EAAUne,MAAMhQ,KAAOiG,EACvD,EAAK0J,cACEye,GAAaA,EAAUpe,OAASoe,EAAUpe,MAAMhQ,KAAOiG,GAC9D,EAAK0J,eA/BM,EAmCnB+W,sBAnCmB,sCAmCK,WAAM9hB,GAAN,iBAAAgO,EAAA,qDAChBhO,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAEc,EAAK5H,MAArB8mB,YAGJ,EAAKnmB,SAAS,CAAEmmB,aAAa,KAEvBliB,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QAElB,EAAK/G,SAAS,CACVmmB,aAAa,EACbliB,OACAE,SAhBY,yCAnCL,wDAwDnBkiB,uBAAyB,SAAA/hB,GACjBA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAEmmB,aAAa,KA7Dd,IAGPzW,EAA+B3P,EAA/B2P,MAAOZ,EAAwB/O,EAAxB+O,KAAMif,EAAkBhuB,EAAlBguB,cAHN,OAKf,EAAK1uB,MAAQ,CACT8mB,aAAa,EACbliB,KAAM,EACNE,IAAK,EAEL0pB,UAAWG,YAAQte,EAAMkI,MAAO9I,GAChCgf,UAAWE,YAAQte,EAAMkI,MAAOmW,GAChCE,cAAeve,EAAMue,eAZV,E,iFAiBfnlB,IAAU8F,GAAG,wBAAyBtO,KAAKstB,2B,6CAI3C9kB,IAAU+F,IAAI,wBAAyBvO,KAAKstB,2B,+BA2CtC,IAAD,EAC4DttB,KAAKP,MAA9D4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAAWuB,EADtB,EACsBA,UAAWjB,EADjC,EACiCA,gBAAiBvhB,EADlD,EACkDA,MADlD,EAEmE1D,KAAKjB,MAArE4uB,EAFH,EAEGA,cAAeH,EAFlB,EAEkBA,UAAWD,EAF7B,EAE6BA,UAAW1H,EAFxC,EAEwCA,YAAaliB,EAFrD,EAEqDA,KAAME,EAF3D,EAE2DA,IAEhE,IAAK0pB,EAAW,OAAO,KAEvB,IAAMK,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWxe,YAAOke,EAAYA,EAAUpe,MAAQ,MAChDC,EAAMC,YAAOie,EAAUne,OACXwe,GAAWG,aAAmBP,GAEhD,OACI,oCACI,yBAAKvtB,UAAU,eAAeyD,MAAOA,EAAO2I,QAAS6Z,EAAWF,cAAehmB,KAAK8lB,uBAChF,yBAAK7lB,UAAU,uBAAuByD,MAAO,CAAEsqB,gBAAgB,OAAD,OAASF,GAAYF,EAArB,KAAiCK,eAAgB,UAC1G5e,IAAQye,GACL,yBAAK7tB,UAAU,4BAA4ByD,MAAO,CAAEsqB,gBAAgB,OAAD,OAAS3e,EAAT,UAI/E,kBAAC,GAAD,CACIhB,OAAQA,EACRsW,UAAWA,EACXK,eAAgB,CAAEnhB,MAAKF,QACvBsX,KAAM4K,EACNZ,gBAAiBA,EACjB5J,QAASrb,KAAK+lB,8B,GA3FRxlB,IAAMC,YA8GhC6sB,GAAYze,aAAe,CACvBJ,KAAM0f,IACNT,cAAeU,KAGJd,UCrHTe,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGI/W,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOvH,EAFO9P,KAAKP,MAAXqQ,GAEC,iB,sCAGGwG,GAAU,IACd8Q,EAAmBpnB,KAAKP,MAAxB2nB,eACA3X,EAAyB6G,EAAzB7G,QAAS4H,EAAgBf,EAAhBe,QAASjY,EAAOkX,EAAPlX,GAE1B,OACI,kBAAC,GAAD,CACI2X,IAAG,kBAAatH,EAAb,uBAAmCrQ,GACtCiP,OAAQoB,EACRkV,UAAWvlB,EACXgQ,MAAOiI,EAAQjI,MACf8W,UAAW,kBAAMA,aAAUzW,EAASrQ,GAAI,IACxC6lB,gBAAiBxV,IAAY2X,Q,GAlClBH,KAwC3BmH,GAAa3D,UAAY,CACrBpc,OAAQqc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BtP,QAASqP,KAAUzoB,KAAK2oB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzByD,GAAaxf,aAAe,CACxBuR,OAAO,EACPqE,UAAW,GAGA/S,qBAAkB2c,IClD3BC,I,kNACFtvB,MAAQ,CACJ8mB,aAAa,EACbliB,KAAM,EACNE,IAAK,G,EAWTyqB,iCAAmC,SAAAzgB,GAAW,IAClC2K,EAAc,EAAK/Y,MAAM0E,MAAzBqU,UACAnT,EAAWwI,EAAXxI,OAER,GAAKmT,EAAL,CAJyC,IAMjCjQ,EAASiQ,EAATjQ,KACJA,GAAQA,EAAKnJ,KAAOiG,GACpB,EAAK0J,gB,EAIb+W,sB,sCAAwB,WAAM9hB,GAAN,iBAAAgO,EAAA,qDAChBhO,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAEc,EAAK5H,MAArB8mB,YAGJ,EAAKnmB,SAAS,CAAEmmB,aAAa,KAEvBliB,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QAElB,EAAK/G,SAAS,CACVmmB,aAAa,EACbliB,OACAE,SAhBY,yC,wDAqBxBkiB,uBAAyB,SAAA/hB,GACjBA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAEmmB,aAAa,K,mFA7C7Brd,IAAU8F,GAAG,iCAAkCtO,KAAKsuB,oC,6CAIpD9lB,IAAU+F,IAAI,iCAAkCvO,KAAKsuB,oC,+BA4C/C,IAAD,EAC4DtuB,KAAKP,MAA9D4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAAWuB,EADtB,EACsBA,UAAWxiB,EADjC,EACiCA,MAAOuhB,EADxC,EACwCA,gBADxC,EAE0CjlB,KAAKP,MAAM0E,MAAlDwpB,EAFH,EAEGA,cAAenV,EAFlB,EAEkBA,UAAW9X,EAF7B,EAE6BA,SAF7B,EAG8BV,KAAKjB,MAAhC8mB,EAHH,EAGGA,YAAaliB,EAHhB,EAGgBA,KAAME,EAHtB,EAGsBA,IAErB+pB,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWxe,YAAOkJ,EAAYA,EAAUjQ,KAAO,MAC/CgmB,EAAYT,EAAWC,aAAmBvV,EAAWgW,MAA6B3H,QAAQ+G,GAEhG,OACI,oCACI,yBAAK3tB,UAAU,eAAeyD,MAAOA,EAAO2I,QAAS6Z,EAAWF,cAAehmB,KAAK8lB,uBAChF,yBAAK7lB,UAAU,wBACX,yBACIA,UAAWgM,IAAW,uBAAwB,CAC1C,gBAAiBsiB,EACjB,sBAAuBT,GAAYS,IAEvC7qB,MAAO,CAAEsqB,gBAAgB,OAAD,OAASF,GAAYF,EAArB,QAE5B,yBAAK3tB,UAAU,qBAAqB2L,YAAkBlL,MAG9D,kBAAC,GAAD,CACI2N,OAAQA,EACRsW,UAAWA,EACXK,eAAgB,CAAEnhB,MAAKF,QACvBsX,KAAM4K,EACNZ,gBAAiBA,EACjB5J,QAASrb,KAAK+lB,8B,GArFRxlB,IAAMC,YAwGhC6tB,GAAYzf,aAAe,CACvBJ,KAAM0f,IACNT,cAAeU,KAGJE,UChHTI,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGIpX,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOvH,EAFO9P,KAAKP,MAAXqQ,GAEC,iB,sCAGGwG,GAAU,IACd8Q,EAAmBpnB,KAAKP,MAAxB2nB,eACA3X,EAAyB6G,EAAzB7G,QAAS4H,EAAgBf,EAAhBe,QAASjY,EAAOkX,EAAPlX,GAE1B,OACI,kBAAC,GAAD,CACI2X,IAAG,kBAAatH,EAAb,uBAAmCrQ,GACtCiP,OAAQoB,EACRkV,UAAWvlB,EACX+E,MAAOkT,EAAQlT,MACf+hB,UAAW,kBAAMA,aAAUzW,EAASrQ,GAAI,IACxC6lB,gBAAiBxV,IAAY2X,Q,GAlClBH,KAwC3BwH,GAAahE,UAAY,CACrBpc,OAAQqc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BtP,QAASqP,KAAUzoB,KAAK2oB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzB8D,GAAa7f,aAAe,CACxBuR,OAAO,EACPqE,UAAW,GAGA/S,qBAAkBgd,I,uCClD3BC,I,mBACF,WAAYjvB,GAAQ,IAAD,8BACf,4CAAMA,KASVqmB,sBAVmB,sCAUK,WAAM9hB,GAAN,iBAAAgO,EAAA,qDAChBhO,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAEc,EAAK5H,MAArB8mB,YAGJ,EAAKnmB,SAAS,CAAEmmB,aAAa,KAEvBliB,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QAElB,EAAK/G,SAAS,CACVmmB,aAAa,EACbliB,OACAE,SAhBY,yCAVL,wDA+BnBkiB,uBAAyB,SAAA/hB,GACjBA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAEmmB,aAAa,KAjC7B,EAAK9mB,MAAQ,CACT8mB,aAAa,EACbliB,KAAM,EACNE,IAAK,GANM,E,sEAuCT,IAAD,EACsE7D,KAAKP,MAAxE4O,EADH,EACGA,OAAQsgB,EADX,EACWA,KAAMhK,EADjB,EACiBA,UAAWiK,EAD5B,EAC4BA,UAAW1I,EADvC,EACuCA,UAAWjB,EADlD,EACkDA,gBADlD,EAE8BjlB,KAAKjB,MAAhC8mB,EAFH,EAEGA,YAAaliB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErByS,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KAErB,IAAKsY,EAAW,OAAO,KAPlB,IASGC,EAAyBvY,EAAzBuY,KAAMhG,EAAmBvS,EAAnBuS,eACRiG,EAAa,IAAIC,KAAY,IAAPF,GAAaG,mBAAmB,CAACL,EAAKM,UAAW,CACzEC,IAAK,UACLC,MAAO,QACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGJ7uB,EAA0BkuB,EAA1BluB,SAAiB6H,EAASqmB,EAAhBY,MAElB,OACI,oCACI,yBAAKvvB,UAAU,oBAAoB+lB,cAAehmB,KAAK8lB,uBACnD,kBAAC2J,GAAA,EAAD,CAAephB,OAAQA,EAAQsW,UAAWA,EAAWpc,KAAMA,EAAM2d,UAAWA,IAC5E,yBAAKjmB,UAAU,sBACX,kBAACyvB,GAAA,EAAD,CAAerhB,OAAQA,EAAQsW,UAAWA,EAAW7W,OAAQ+a,IAC7D,yBAAK5oB,UAAU,mBACX,kBAAC0vB,GAAA,EAAD,CACIthB,OAAQA,EACRsW,UAAWA,EACXjkB,SAAUA,EACV6H,KAAMA,EACNgU,MAAK,UAAKuS,EAAL,QAET,kBAACc,GAAA,EAAD,CAAavhB,OAAQA,EAAQsW,UAAWA,EAAWoC,KAAM,kBAIrE,kBAAC,GAAD,CACI1Y,OAAQA,EACRsW,UAAWA,EACXK,eAAgB,CAAEnhB,MAAKF,QACvBsX,KAAM4K,EACNZ,gBAAiBA,EACjB5J,QAASrb,KAAK+lB,8B,GArFJxlB,IAAMC,YAqGrBiR,iBAAkBid,ICxG3BmB,I,8LACaxY,GACX,OAAOA,GAAgC,qBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,mC,kCAMlB,OAAOvH,EAFO9P,KAAKP,MAAXqQ,GAEC,gB,kCAIT,OAAO,I,sCAGKwG,GAAU,IACd8Q,EAAmBpnB,KAAKP,MAAxB2nB,eACA3X,EAAyB6G,EAAzB7G,QAAS4H,EAAgBf,EAAhBe,QAASjY,EAAOkX,EAAPlX,GAE1B,OACI,kBAAC,GAAD,CACI2X,IAAG,kBAAatH,EAAb,uBAAmCrQ,GACtCiP,OAAQoB,EACRkV,UAAWvlB,EACXwvB,UAAWvX,EAAQyY,WACnB5J,UAAW,kBAAMA,aAAUzW,EAASrQ,GAAI,IACxC6lB,gBAAiBxV,IAAY2X,Q,GA9BdH,KAoC/B4I,GAAiBpF,UAAY,CACzBpc,OAAQqc,KAAUC,OAAOC,WACzBxD,eAAgBsD,KAAUC,OAC1BtP,QAASqP,KAAUzoB,KAAK2oB,WACxBzK,MAAOuK,KAAUG,KACjBrG,UAAWkG,KAAUC,QAGzBkF,GAAiBjhB,aAAe,CAC5BuR,OAAO,EACPqE,UAAW,GAGA/S,qBAAkBoe,I,SCpC3BE,I,mBACF,WAAYtwB,GAAQ,IAAD,uBACf,4CAAMA,KA2CVuwB,wBAA0B,SAAAniB,GACGA,EAAjBoiB,eAGU,EAAKxwB,MAAf0gB,OAGR,EAAK+P,2BAnDU,EAsDnBC,qBAAuB,SAAAtiB,GAAW,IACtBsS,EAAU,EAAK1gB,MAAf0gB,MACA9R,EAAW,EAAKtP,MAAhBsP,OAEJ8R,GACA9R,IAAWR,EAAOuiB,aAEtB,EAAKC,aAAe,KACpB,EAAKC,gBAAkB,KACvB,EAAKC,YAAc,KACnB,EAAKC,aAAe,KACpB,EAAKC,aAAe,KACpB,EAAKC,iBAAmB,KAExB,EAAKhxB,SAAS,CACV2O,OAAQR,EAAOuiB,WACfhJ,eAAgB,EAChBuJ,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtBvP,SAAUzS,IAAUiiB,YAAYvjB,EAAOuiB,YACvCvO,iBAAkB,OAGjBhU,EAAOuiB,YACR,EAAKF,2BArFM,EAyFnBzb,YAAc,SAAApG,GACV,EAAKgjB,iBAAiBhjB,GACtB,EAAKijB,qBAAqBjjB,GAE1B,IAAMe,EAAQmiB,YAAiBljB,GAC1Be,GACLoiB,YAA8BnjB,EAAQ,CAACe,KA/FxB,EAkGnBiiB,iBAlGmB,sCAkGA,WAAMhjB,GAAN,eAAA2D,EAAA,qEACQyf,aAAgBpjB,GADxB,UACTuT,EADS,OAEfzS,IAAUuiB,YAAYrjB,EAAQuT,GAE1BvT,IAAW,EAAKtP,MAAMsP,OAJX,iDAMf,EAAK3O,SAAS,CAAEkiB,aAND,yCAlGA,wDA2GnB0P,qBA3GmB,sCA2GI,WAAMjjB,GAAN,qBAAA2D,EAAA,wDACd6D,aAAaxH,GADC,oDAGbsO,EAAWkB,KAAgBhB,YAAY8U,YAAgBtjB,IAH1C,oDAMmByO,EAAmBH,EAAjDiV,6BANW,kEASAvyB,IAAgBC,KAAK,CACpC,QAAS,uBACTwd,iBACA3H,OAAO,IAZQ,WASbjG,EATa,2EAiBIuiB,aAAgBviB,EAAK9P,IAjBzB,WAiBbwiB,EAjBa,OAkBnBzS,IAAUuiB,YAAYxiB,EAAK9P,GAAIwiB,GAE3B,EAAK7iB,MAAMsP,SAAWA,EApBP,mDAsBnB,EAAK3O,SAAS,CAAE0nB,eAAgBlY,EAAK9P,GAAIyiB,iBAAkB1S,IAAUiiB,YAAYliB,EAAK9P,MAtBnE,0CA3GJ,wDAoInByyB,sBAAwB,WACpB,EAAKnyB,SAAS,CAAEsxB,iBAAiB,KArIlB,EAwInBc,uBAAyB,WACrB,EAAKpyB,SAAS,CAAEsxB,iBAAiB,KAzIlB,EA4InBe,wBAA0B,WACtB,EAAKryB,SAAS,CAAEkxB,mBAAmB,KA7IpB,EAgJnBoB,0BAA4B,WACxB,EAAKtyB,SAAS,CAAEkxB,mBAAmB,KAjJpB,EAoJnBV,uBAAyB,WAAO,IACpB/P,EAAU,EAAK1gB,MAAf0gB,MACe,EAAKphB,MAApB4xB,WAGJ,EAAKjxB,SAAS,CAAEixB,WAAY,OACrBxQ,EACP9gB,IAAgByF,aAAa,CACzB,QAAS,2BACTuJ,OAAQ,IAGZ4jB,cAA4B,IAhKjB,EAoKnBC,0BAA4B,WACxB,EAAKxyB,SAAS,CAAEoxB,qBAAqB,KArKtB,EAwKnBqB,2BAA6B,WACzB,EAAKzyB,SAAS,CAAEoxB,qBAAqB,KAzKtB,EA4KnBsB,uBAAyB,WACrB,EAAK1yB,SAAS,CAAEmxB,kBAAkB,KA7KnB,EAgLnBwB,wBAA0B,WACtB,EAAK3yB,SAAS,CAAEmxB,kBAAkB,KAjLnB,EAoLnByB,2BAA6B,WACzB,EAAK5yB,SAAS,CAAEyxB,sBAAsB,KArLvB,EAwLnBoB,4BAA8B,WAC1B,EAAK7yB,SAAS,CAAEyxB,sBAAsB,KAzLvB,EA4LnBqB,sBAAwB,WACpB,EAAK9yB,SAAS,CAAEqxB,iBAAiB,KA7LlB,EAgMnB0B,uBAAyB,WACrB,EAAK/yB,SAAS,CAAEqxB,iBAAiB,KAjMlB,EAoMnB2B,uBAAyB,WACrB,EAAKhzB,SAAS,CAAEuxB,kBAAkB,KArMnB,EAwMnB0B,wBAA0B,WACtB,EAAKjzB,SAAS,CAAEuxB,kBAAkB,KAzMnB,EA4MnB2B,uBAAyB,WACrB,EAAKlzB,SAAS,CAAEwxB,kBAAkB,KA7MnB,EAgNnB2B,wBAA0B,WACtB,EAAKnzB,SAAS,CAAEwxB,kBAAkB,KA9MlC,EAAK4B,WAAavyB,IAAMsa,YAHT,IAKPsF,EAAU1gB,EAAV0gB,MACA9R,EAAyB0kB,KAAzB1kB,OAAQ2kB,EAAiBD,KAAjBC,aAND,OAQf,EAAKj0B,MAAQ,CACTsP,OAAQ8R,EAAQ6S,EAAe3kB,EAC/B+Y,eAAgB,EAChBuJ,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtBvP,SAAU,KACVC,iBAAkB,MArBP,E,iFA0Bf7hB,KAAKyU,YAAYzU,KAAKjB,MAAMsP,QAE5B0kB,KAASzkB,GAAG,qBAAsBtO,KAAKmwB,sBACvC4C,KAASzkB,GAAG,wBAAyBtO,KAAKgwB,2B,6CAI1C+C,KAASxkB,IAAI,qBAAsBvO,KAAKmwB,sBACxC4C,KAASxkB,IAAI,wBAAyBvO,KAAKgwB,2B,yCAG5BnwB,EAAWC,EAAWC,GAAW,IACxCsO,EAAWrO,KAAKjB,MAAhBsP,OACJA,IAAWvO,EAAUuO,QACrBrO,KAAKyU,YAAYpG,K,+BA4Kf,IAAD,EACwBrO,KAAKP,MAA1BQ,EADH,EACGA,UAAWkgB,EADd,EACcA,MADd,EAgBDngB,KAAKjB,MAbLsP,EAHC,EAGDA,OACAuT,EAJC,EAIDA,SACAwF,EALC,EAKDA,eACAvF,EANC,EAMDA,iBACA8O,EAPC,EAODA,WACAE,EARC,EAQDA,iBACAC,EATC,EASDA,oBACAC,EAVC,EAUDA,gBACAC,EAXC,EAWDA,gBACAC,EAZC,EAYDA,iBACAC,EAbC,EAaDA,iBACAC,EAdC,EAcDA,qBACAP,EAfC,EAeDA,kBAGEqC,EAAgB5kB,GAAUsiB,EAC1BnM,EAAYxkB,KAAK8yB,YAAc9yB,KAAK8yB,WAAWlb,QAAU5X,KAAK8yB,WAAWlb,QAAQ2J,mBAAqB,EAExGlK,EAAU,KAiHd,OAhHI2Z,EACA3Z,EACI,kBAAC,GAAD,CACIhJ,OAAQ4kB,EACR9S,MAAOA,EACPqE,UAAWA,EACXnJ,QAASrb,KAAK8xB,yBAGfjB,GACP7wB,KAAKqwB,aAAerwB,KAAKqwB,cACrB,kBAAC,GAAD,CACIhiB,OAAQ4kB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXnJ,QAASrb,KAAKqyB,0BAItBhb,EAAUrX,KAAKqwB,cACRS,GACP9wB,KAAKswB,gBAAkBtwB,KAAKswB,iBACxB,kBAAC,GAAD,CACIjiB,OAAQ4kB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXnJ,QAASrb,KAAKmyB,6BAItB9a,EAAUrX,KAAKswB,iBACRS,GACP/wB,KAAKuwB,YAAcvwB,KAAKuwB,aACpB,kBAAC,GAAD,CACIliB,OAAQ4kB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXnJ,QAASrb,KAAKyyB,yBAItBpb,EAAUrX,KAAKuwB,aACRU,GACPjxB,KAAKwwB,aAAexwB,KAAKwwB,cACrB,kBAAC,GAAD,CACIniB,OAAQ4kB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXnJ,QAASrb,KAAK2yB,0BAItBtb,EAAUrX,KAAKwwB,cACRU,GACPlxB,KAAKywB,aAAezwB,KAAKywB,cACrB,kBAAC,GAAD,CACIpiB,OAAQ4kB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXnJ,QAASrb,KAAK6yB,0BAItBxb,EAAUrX,KAAKywB,cACRU,GACPnxB,KAAK0wB,iBAAmB1wB,KAAK0wB,kBACzB,kBAAC,GAAD,CACIriB,OAAQ4kB,EACR7L,eAAgBA,EAChBjH,MAAOA,EACPqE,UAAWA,EACXnJ,QAASrb,KAAKuyB,8BAItBlb,EAAUrX,KAAK0wB,kBAEfrZ,EADOuZ,EAEH,kBAAC,GAAD,CACIviB,OAAQ4kB,EACR9S,MAAOA,EACPqE,UAAWA,EACXnJ,QAASrb,KAAKgyB,4BAKlB,kBAAC,GAAD,CACIxW,IAAKxb,KAAK8yB,WACVzkB,OAAQ4kB,EACR9S,MAAOA,EACP9B,WAAYsS,IAAetiB,EAC3BuT,SAAUA,EACVC,iBAAkBA,EAClBC,oBAAqB9hB,KAAK+xB,wBAC1BhQ,mBAAoB/hB,KAAKoyB,uBACzBpQ,sBAAuBhiB,KAAKkyB,0BAC5B/P,kBAAmBniB,KAAK6xB,sBACxB5P,kBAAmBjiB,KAAKwyB,sBACxBtQ,mBAAoBliB,KAAK0yB,uBACzBtQ,mBAAoBpiB,KAAK4yB,uBACzBvQ,uBAAwBriB,KAAKsyB,2BAC7BjX,QAASrb,KAAKkwB,yBAKnB/P,EACH,oCAAG9I,GAEH,yBAAKpX,UAAWgM,IAAW,YAAa,CAAE,gBAAiBkU,GAASlgB,IAAaoX,O,GA9VtE9W,IAAMC,YAyW7BuvB,GAASnhB,aAAe,CACpB3O,UAAW,KACX6M,QAAS,KACTqT,OAAO,GAGI4P,U,UCvXTmD,I,kNAkCFC,2BAA6B,SAAAtlB,GACN,EAAKpO,MAAhB4O,SAEOR,EAAOQ,SAClB,EAAK+kB,aAAevlB,EAAOwlB,WAC3B,EAAKtkB,gB,EAIbD,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTukB,aAAe,SAAAzlB,GAAW,IACdQ,EAAW,EAAK5O,MAAhB4O,OACAL,EAASH,EAATG,KAEFkB,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,IACDqC,aAAclD,GAAlB,CANqB,IAQbklB,EAAiBrkB,EAAjBqkB,aACR,GAAKA,EAEsBA,EAAnB1K,iBACe7a,EAAK5O,IAE5B,EAAK2P,gB,EAGTykB,SAAW,SAAA3lB,GACY,EAAKpO,MAAhB4O,SAEOR,EAAO4B,SAEtB,EAAKV,e,qFApEaqB,EAAWC,GAAY,IAAD,EAClBrQ,KAAKP,MAAnB4O,EADgC,EAChCA,OAAQyB,EADwB,EACxBA,EAEhB,OAAIM,EAAU/B,SAAWA,GAIrB+B,EAAUN,IAAMA,I,0CAQpBX,IAAUb,GAAG,mCAAoCtO,KAAK8O,wBACtDK,IAAUb,GAAG,2BAA4BtO,KAAKmzB,4BAC9ChkB,IAAUb,GAAG,yBAA0BtO,KAAKwzB,UAC5CrkB,IAAUb,GAAG,wBAAyBtO,KAAKwzB,UAC3CrkB,IAAUb,GAAG,sBAAuBtO,KAAKwzB,UACzCrkB,IAAUb,GAAG,uBAAwBtO,KAAKwzB,UAC1CvlB,IAAUK,GAAG,aAActO,KAAKszB,gB,6CAIhCnkB,IAAUZ,IAAI,mCAAoCvO,KAAK8O,wBACvDK,IAAUZ,IAAI,2BAA4BvO,KAAKmzB,4BAC/ChkB,IAAUZ,IAAI,yBAA0BvO,KAAKwzB,UAC7CrkB,IAAUZ,IAAI,wBAAyBvO,KAAKwzB,UAC5CrkB,IAAUZ,IAAI,sBAAuBvO,KAAKwzB,UAC1CrkB,IAAUZ,IAAI,uBAAwBvO,KAAKwzB,Y,+BAyCrC,IAAD,EACiBxzB,KAAKP,MAAnB4O,EADH,EACGA,OAAQyB,EADX,EACWA,EAEhB,GAAI9P,KAAKozB,aAAc,OAAO,yBAAKnzB,UAAU,kBAAkB,QAE/D,IAAMiP,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,yBAAKjP,UAAU,kBAAkB,QAEnD,IAAIwzB,EAAiB,KACfC,EAAeC,YAAoBtlB,GAKzC,GAJIqlB,IACAD,EAAiB,0BAAMxzB,UAAU,yBAAyByzB,KAGzDD,EAAgB,CACjB,IAAMG,EAAQC,YAAaxlB,GAC3B,GAAIylB,aAAczlB,GAAS,CACvB,IAAM0D,EAAO6hB,EAAM7hB,MAAQ,OAE3B0hB,EACI,oCACI,0BAAMxzB,UAAU,wBAAwB6P,EAAE,SAAW,MACpDiC,IAMjB,IAAK0hB,EAAgB,CACjB,IAAMpc,EAAU0c,YAAsB7kB,EAAMY,IAAM,OAC5CkkB,EAAaC,YAAyB/kB,EAAMY,GAClD2jB,EACI,oCACKO,GAAc,0BAAM/zB,UAAU,yBAAyB+zB,EAAzC,MACd3c,GAKb,OAAO,yBAAKpX,UAAU,kBAAkBwzB,O,GA/GpBlzB,IAAMC,YAmHnBiR,iBAAkByhB,IC9HlB3wB,eACX,uBAAG2xB,YAAY,IAAIC,KAAK,OAAOC,SAAS,WACpC,0BAAMC,GAAG,OAAOC,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKp1B,GAAG,UAAU80B,YAAY,OAAOO,cAAc,UACvF,0BACIjyB,EAAE,yfACF0xB,YAAY,OACZO,cAAc,QACdC,eAAe,WAGvB,O,mBC0DEhlB,GAAQ,I,YAlEV,aAAe,IAAD,8BACV,+CAOJilB,MAAQ,WACJ,EAAKC,SAAW,CAAE,QAAS,gBAC3B,EAAKC,QAAU,MAVL,EAadrB,SAAW,SAAA3lB,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBinB,EAAwBjnB,EAAxBinB,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAKH,QAKb,MAEJ,IAAK,oBAAsB,IACfI,EAAiBlnB,EAAjBknB,aAER,EAAKF,QAAUE,EACf,EAAKC,KAAK,oBAAqBnnB,KAhC7B,EAwCdonB,eAAiB,SAAApnB,GACb,OAAQA,EAAO,UACX,IAAK,uBAAyB,IAClB+mB,EAAa/mB,EAAb+mB,SAER,EAAKA,SAAWA,EAEhB,EAAKI,KAAK,uBAAwBnnB,KA/ChC,EAuDdqnB,iBAAmB,WACf71B,IAAgBiP,GAAG,SAAU,EAAKklB,UAClCn0B,IAAgBiP,GAAG,eAAgB,EAAK2mB,iBAzD9B,EA4DdE,oBAAsB,WAClB91B,IAAgBkP,IAAI,SAAU,EAAKilB,UACnCn0B,IAAgBkP,IAAI,eAAgB,EAAK0mB,iBA3DzC,EAAKN,QAEL,EAAKO,mBALK,E,2BADQE,OAoE1BrsB,OAAO+Q,OAASpK,GACDA,UCmEA2lB,I,kNAhFXlC,2BAA6B,SAAAtlB,GACN,EAAKpO,MAAhB4O,SAEOR,EAAOQ,SAClB,EAAK+kB,aAAevlB,EAAOwlB,WAC3B,EAAKtkB,gB,EAIbD,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTykB,SAAW,SAAA3lB,GAAW,IACVQ,EAAW,EAAK5O,MAAhB4O,OAEJR,EAAO4B,UAAYpB,GAEvB,EAAKU,e,EAGT6P,kCAAoC,SAAA/Q,GAAW,IACnCQ,EAAW,EAAK5O,MAAhB4O,OAEFa,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAEL,OAAQrB,EAAOgR,MAAM,UACjB,IAAK,sCAC0B,uBAAvB3P,EAAKuN,KAAK,UAA4D,uBAAvBvN,EAAKuN,KAAK,UACzD,EAAK1N,cAET,MAEJ,IAAK,wCAC0B,oBAAvBG,EAAKuN,KAAK,UAAyD,mBAAvBvN,EAAKuN,KAAK,UACtD,EAAK1N,gB,qFAhFCqB,EAAWC,GAAY,IAAD,EACXrQ,KAAKP,MAA1B4O,EADgC,EAChCA,OAAQumB,EADwB,EACxBA,SAEhB,OAAIxkB,EAAU/B,SAAWA,GAIrB+B,EAAUwkB,WAAaA,I,0CAQ3BzlB,IAAUb,GAAG,mCAAoCtO,KAAK8O,wBACtDK,IAAUb,GAAG,2BAA4BtO,KAAKmzB,4BAC9ChkB,IAAUb,GAAG,yBAA0BtO,KAAKwzB,UAC5CrkB,IAAUb,GAAG,6BAA8BtO,KAAKwzB,UAChDrkB,IAAUb,GAAG,qBAAsBtO,KAAKwzB,UACxCrkB,IAAUb,GAAG,iCAAkCtO,KAAKwzB,UACpDrkB,IAAUb,GAAG,sBAAuBtO,KAAKwzB,UACzCrkB,IAAUb,GAAG,wBAAyBtO,KAAKwzB,UAC3CrkB,IAAUb,GAAG,uBAAwBtO,KAAKwzB,UAC1CrkB,IAAUb,GAAG,+BAAgCtO,KAAKwzB,UAClDrkB,IAAUb,GAAG,2BAA4BtO,KAAKwzB,UAC9CpU,KAAkB9Q,GAAG,kCAAmCtO,KAAK4e,qC,6CAI7DzP,IAAUZ,IAAI,mCAAoCvO,KAAK8O,wBACvDK,IAAUZ,IAAI,2BAA4BvO,KAAKmzB,4BAC/ChkB,IAAUZ,IAAI,yBAA0BvO,KAAKwzB,UAC7CrkB,IAAUZ,IAAI,6BAA8BvO,KAAKwzB,UACjDrkB,IAAUZ,IAAI,qBAAsBvO,KAAKwzB,UACzCrkB,IAAUZ,IAAI,iCAAkCvO,KAAKwzB,UACrDrkB,IAAUZ,IAAI,sBAAuBvO,KAAKwzB,UAC1CrkB,IAAUZ,IAAI,wBAAyBvO,KAAKwzB,UAC5CrkB,IAAUZ,IAAI,uBAAwBvO,KAAKwzB,UAC3CrkB,IAAUZ,IAAI,+BAAgCvO,KAAKwzB,UACnDrkB,IAAUZ,IAAI,2BAA4BvO,KAAKwzB,UAC/CpU,KAAkB7Q,IAAI,kCAAmCvO,KAAK4e,qC,+BA+C9D,GAAI5e,KAAKozB,aAAc,OAAO,KADzB,MAGwBpzB,KAAKP,MAA1B4O,EAHH,EAGGA,OAAQumB,EAHX,EAGWA,SAEV1lB,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,KANb,IAQGomB,EAAiBpmB,EAAjBomB,aACFC,EAAWC,YAAannB,EAAQumB,GAEhCa,EAAyBC,aAA2BrnB,GACpDsnB,EAAkBC,aAAoBvnB,GACtCqQ,EAAUC,YAAYtQ,GAE5B,OACI,oCACKonB,GACG,yBAAKx1B,UAAU,gBACX,yBAAKA,UAAU,wBAAf,MAGP01B,GACG,yBAAK11B,UAAWgM,IAAW,CAAE,qBAAsByS,GAAW,iBAC1D,0BAAMze,UAAU,qBAAqBq1B,EAAe,EAAIA,EAAe,KAG9EC,IAAaI,IAAoBF,GAC9B,yBAAKx1B,UAAU,uBACX,kBAAC41B,GAAD,CAAS51B,UAAU,mC,GArHjBM,IAAMC,YCZjB+B,eACX,uBAAGuzB,OAAO,OAAO5B,YAAY,IAAIC,KAAK,OAAOC,SAAS,WAClD,uBAAG2B,UAAU,iCAAiC5B,KAAK,UAAUC,SAAS,WAClE,0BAAM5xB,EAAE,0iBAGhB,SCLWD,eACX,uBAAG2xB,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAUK,cAAc,QAAQC,eAAe,SACnF,uBAAGqB,UAAU,kCACT,4BAAQ7B,YAAY,MAAM8B,GAAG,KAAKC,GAAG,IAAIC,EAAE,MAC3C,0BAAM7B,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,IAAIN,YAAY,QAClD,0BAAMG,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIN,YAAY,UAGxD,WCTW3xB,eACX,0BACIwzB,UAAU,kCACVvzB,EAAE,8iBAEN,QCLWD,eACX,0BACIwzB,UAAU,kCACVvzB,EAAE,ylCAEN,aCgGW2zB,I,kNA3FXp3B,MAAQ,G,EAkCRq3B,oBAAsB,SAAAvoB,GAAW,IAAD,EACE,EAAKpO,MAA3B4O,EADoB,EACpBA,OAAQsW,EADY,EACZA,UACR0R,EAA4BxoB,EAA5BwoB,eAAgB/f,EAAYzI,EAAZyI,QAExB,GAAIqO,IAAc0R,GACb/f,EAAL,CAL4B,IAOpB7G,EAA+B6G,EAA/B7G,QAASrQ,EAAsBkX,EAAtBlX,GAAIk3B,EAAkBhgB,EAAlBggB,cACjBjoB,IAAWoB,IAEf,EAAK8mB,aAAen3B,EACpB,EAAKM,SAAS,CAAE82B,aAAcF,O,EAGlCG,uBAAyB,SAAA5oB,GAAW,IAAD,EACD,EAAKpO,MAA3B4O,EADuB,EACvBA,OAAQsW,EADe,EACfA,UACRlV,EAAyC5B,EAAzC4B,QAASinB,EAAgC7oB,EAAhC6oB,4BACTH,EAHuB,gBAGvBA,aAEJloB,IAAWoB,IAEV8mB,GAAgBA,GAAgBG,GAAgC/R,GAAa+R,IAC9E,EAAKh3B,SAAS,CAAE82B,aAAc,KAAMG,QAAQ,K,mFAnChDxnB,IAAUb,GAAG,uBAAwBtO,KAAKy2B,wBAE1Ctf,KAAa7I,GAAG,0BAA2BtO,KAAKo2B,qBAChDjf,KAAa7I,GAAG,6BAA8BtO,KAAKo2B,uB,6CAInDjnB,IAAUZ,IAAI,uBAAwBvO,KAAKy2B,wBAE3Ctf,KAAa5I,IAAI,0BAA2BvO,KAAKo2B,qBACjDjf,KAAa5I,IAAI,6BAA8BvO,KAAKo2B,uB,+BA6B9C,IAAD,EAC4Bp2B,KAAKjB,MAA9By3B,EADH,EACGA,aACR,OAFK,EACiBG,OAKlBH,EACiC,8BAA1BA,EAAa,SAChB,kBAAC,GAAD,CACIv2B,UAAU,SACV22B,QAAQ,YACRlzB,MAAO,CAAEgJ,MAAO,GAAIgC,OAAQ,GAAIqnB,UAAW,uBAG/C,kBAACc,GAAD,CACI52B,UAAU,SACV22B,QAAQ,YACRlzB,MAAO,CAAEgJ,MAAO,GAAIgC,OAAQ,GAAIqnB,UAAW,oBAAqBD,OAAQ,kBAK7E,kBAACgB,GAAD,CAAU72B,UAAU,SAAS22B,QAAQ,YAAYlzB,MAAO,CAAEgJ,MAAO,GAAIgC,OAAQ,KAnBzE,kBAACqoB,GAAD,CAAe92B,UAAU,SAAS22B,QAAQ,YAAYlzB,MAAO,CAAEgJ,MAAO,GAAIgC,OAAQ,Q,gDA7DjEjP,EAAOV,GAAQ,IACnCsP,EAAsB5O,EAAtB4O,OAAQsW,EAAcllB,EAAdklB,UAEVrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACnC6R,EAAelgB,EAAUA,EAAQggB,cAAgB,KAEvD,OAAIjoB,IAAWtP,EAAMyS,YAAcmT,IAAc5lB,EAAMi4B,cAC5C,CACHxlB,WAAYnD,EACZ2oB,cAAerS,EACf6R,eACAG,OAAQM,aAAgB5oB,EAAQsW,IAIjC,S,GAlBMpkB,IAAMC,YC+EZ02B,I,kNArDX/D,2BAA6B,SAAAtlB,GACN,EAAKpO,MAAhB4O,SAEOR,EAAOQ,SAClB,EAAK+kB,aAAevlB,EAAOwlB,WAC3B,EAAKtkB,gB,EAIbD,uBAAyB,SAAAjB,GACrB,EAAKkB,e,EAGTykB,SAAW,SAAA3lB,GACY,EAAKpO,MAAhB4O,SAEOR,EAAO4B,SAEtB,EAAKV,e,qFAhDaqB,EAAWC,GAAY,IACjChC,EAAWrO,KAAKP,MAAhB4O,OAER,OAAI+B,EAAU/B,SAAWA,I,0CAQzBc,IAAUb,GAAG,mCAAoCtO,KAAK8O,wBACtDK,IAAUb,GAAG,2BAA4BtO,KAAKmzB,4BAC9ChkB,IAAUb,GAAG,yBAA0BtO,KAAKwzB,UAC5CrkB,IAAUb,GAAG,wBAAyBtO,KAAKwzB,UAC3CrkB,IAAUb,GAAG,sBAAuBtO,KAAKwzB,UACzCrkB,IAAUb,GAAG,+BAAgCtO,KAAKwzB,UAClDrkB,IAAUb,GAAG,2BAA4BtO,KAAKwzB,Y,6CAI9CrkB,IAAUZ,IAAI,mCAAoCvO,KAAK8O,wBACvDK,IAAUZ,IAAI,2BAA4BvO,KAAKmzB,4BAC/ChkB,IAAUZ,IAAI,yBAA0BvO,KAAKwzB,UAC7CrkB,IAAUZ,IAAI,wBAAyBvO,KAAKwzB,UAC5CrkB,IAAUZ,IAAI,sBAAuBvO,KAAKwzB,UAC1CrkB,IAAUZ,IAAI,+BAAgCvO,KAAKwzB,UACnDrkB,IAAUZ,IAAI,2BAA4BvO,KAAKwzB,Y,+BAyB/C,GAAIxzB,KAAKozB,aAAc,OAAO,KADzB,IAGG/kB,EAAWrO,KAAKP,MAAhB4O,OAEFa,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,KAElB,IAAMiU,EAAOrS,YAASzC,GAEdklB,EAAiBrkB,EAAjBqkB,aACR,IAAKA,EAAc,OAAO,KAE1B,IAAM1E,EAAOsI,YAAmBjoB,GAChC,IAAK2f,EAAM,OAAO,KAdb,IAgBGzvB,EAAoBm0B,EAApBn0B,GAAIg4B,EAAgB7D,EAAhB6D,YAEZ,OACI,yBAAKn3B,UAAU,eACVm3B,IAAgBjU,GACb,oCACI,kBAAC,GAAD,CAAQ9U,OAAQA,EAAQsW,UAAWvlB,IACnC,oCAGPyvB,O,GA9EQtuB,IAAMC,YCJhB+B,eACX,0BAAMC,EAAE,s7CACR,WCFWD,eACX,0BAAMC,EAAE,i3CACR,aCFWD,eACX,0BAAMC,EAAE,2uCACR,QCFWD,eACX,0BAAMC,EAAE,0+CACR,QCFWD,eACX,0BAAMC,EAAE,0pBACR,UCFWD,eACX,0BAAMC,EAAE,27BACR,QCFWD,eACX,0BAAMC,EAAE,k7DACR,SCFWD,eACX,0BAAMC,EAAE,qfACR,WCFWD,eACX,0BAAMC,EAAE,klCACR,U,WC2CE60B,G,YAGF,WAAY53B,GAAQ,IAAD,uBACf,4CAAMA,KAgEV0wB,qBAAuB,SAAAtiB,GAAW,IACtBQ,EAAW,EAAK5O,MAAhB4O,OAEJA,IAAWR,EAAOypB,gBAAkBjpB,IAAWR,EAAOuiB,YACtD,EAAKrhB,eArEM,EAyEnBkB,aAAe,SAAAjM,GACU,IAAjBA,EAAMub,QACN6B,aAAS,EAAK3hB,MAAM4O,SA3ET,EA+EnBkpB,kBA/EmB,sCA+EC,WAAMvzB,GAAN,+BAAAgO,EAAA,wDACZhO,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAHM,EAKa,EAAKlH,MAA1B4O,EALQ,EAKRA,OAAQumB,EALA,EAKAA,UACQ,EAAK71B,MAArB8mB,YANQ,gBASZ,EAAKnmB,SAAS,CAAEmmB,aAAa,IATjB,8BAWN2R,EAAgB,IAAIzI,KAC1BsI,EAAOG,cAAgBA,EAEjB7zB,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QACZ8uB,EAAWC,YAAannB,EAAQumB,GAhB1B,UAiBgB,EAAK6C,YAAYppB,GAjBjC,kDAiB6CknB,EAjB7C,WAiBNmC,EAjBM,KAkBNC,EAAmBC,YAAiBvpB,GAEtCgpB,EAAOG,gBAAkBA,EApBjB,mDAwBZ,EAAK93B,SAAS,CACVmmB,aAAa,EACb6R,eACAC,mBACAh0B,OACAE,QA7BQ,0CA/ED,wDAiHnBkiB,uBAAyB,SAAA/hB,GACjBA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAEmmB,aAAa,KAtHd,EAyHnB7d,WAAa,SAAAhE,GACT,EAAK+hB,uBAAuB/hB,GADV,IAGVqK,EAAW,EAAK5O,MAAhB4O,OAER4Q,aAA+B5Q,GAASsQ,YAAYtQ,KA9HrC,EAiInBopB,YAjImB,sCAiIL,WAAMppB,GAAN,uBAAA2D,EAAA,wDACF4iB,EAAa,EAAKn1B,MAAlBm1B,SAEFiD,EAAqBC,YAAezpB,GACpC2F,KAAYvL,IAAI,kCAChBuL,KAAYvL,IAAI,yBALZ,0CAMsB,GANtB,cAQJsvB,EAAWC,YAAa3pB,GARpB,SASUhP,IAAgBC,KAAK,CACrC,QAAS,WACT24B,UAAWrD,EACX/f,aAAc,sBACdC,eAAgB,EAChBC,MAAO8iB,EAAmB9wB,MAAQ,KAd5B,cASJwO,EATI,OAiBJ2iB,EAAY3iB,EAAMG,SAASyiB,OAAO,SAAC72B,EAAGlC,GACxC,GAAI44B,YAAa54B,KAAQ24B,EAAU,OAAOz2B,EAE1C,IAAM4N,EAAOC,IAAU1G,IAAIrJ,GAE3B,OAAOkC,GAAK4N,GAAQsmB,YAAatmB,EAAK9P,GAAIw1B,GAAY,EAAI,IAC3D,GAvBO,kBAyBHsD,EAAYL,EAAmB9wB,OAzB5B,0CAjIK,wDA6JnBqxB,UA7JmB,sCA6JP,WAAMp0B,GAAN,qBAAAgO,EAAA,wDACR,EAAK+T,uBAAuB/hB,GADpB,EAGqB,EAAKvE,MAA1B4O,EAHA,EAGAA,OAAQumB,EAHR,EAGQA,UACVW,EAAWC,YAAannB,EAAQumB,KAEpB,EAAK6C,YAAYppB,GAN3B,iDAQRgqB,aAAmBhqB,EAAQumB,GAAWW,GAR9B,yCA7JO,wDAwKnB+C,cAxKmB,sCAwKH,WAAMt0B,GAAN,eAAAgO,EAAA,wDACZ,EAAK+T,uBAAuB/hB,GAEpBqK,EAAW,EAAK5O,MAAhB4O,OACHupB,YAAiBvpB,GAJV,iDAMZkqB,aAAclqB,EAAQ,CAAE,QAASypB,YAAezpB,GAAU,eAAiB,oBAN/D,yCAxKG,wDAiLnBmqB,iBAAmB,WAAO,IAAD,EACC,EAAK/4B,MAAnB4O,EADa,EACbA,OAAQyB,EADK,EACLA,EACVZ,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAAL,CAHqB,IAKbuN,EAASvN,EAATuN,KACR,OAAQA,EAAK,UACT,IAAK,qBACD,OAAO3M,EAAE,iBAEb,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,eAEb,IAAK,qBACD,OAAI2M,EAAKgc,WACE3oB,EAAE,mBAGNA,EAAE,oBApMF,EAyMnB4oB,eAAiB,SAAA10B,GACb,EAAK+hB,uBAAuB/hB,GADN,IAGdqK,EAAW,EAAK5O,MAAhB4O,OAER+S,aAAS/S,EAAQ,MAAM,IA9MR,EAiNnBsqB,WAAa,SAAA30B,GACT,EAAK+hB,uBAAuB/hB,GADV,IAGVqK,EAAW,EAAK5O,MAAhB4O,OAGR,GADiBuqB,YAAavqB,GAChB,CACV,IAAMa,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAFD,IAIF2pB,EAAoD3pB,EAApD2pB,oBAAqBtF,EAA+BrkB,EAA/BqkB,aAA+BrkB,EAAjBomB,aACxB,GAAK/B,EC5Q7B,SAAsBllB,EAAQuH,EAAYkjB,GAC7Cz5B,IAAgBC,KAAK,CACjB,QAAS,eACTmQ,QAASpB,EACTuK,YAAahD,EACbmjB,WAAYD,IDwQJE,CAAa3qB,EAAQ,CAACklB,EAAan0B,KAAK,GACjCy5B,GACPI,aAA2B5qB,GAAQ,QAGvC4qB,aAA2B5qB,GAAQ,IA/NvC,EAAKmC,OAASjQ,IAAMsa,YAEpB,IAAM3L,EAAOC,IAAU1G,IAAI,EAAKhJ,MAAM4O,QALvB,OAMf,EAAKtP,MAAQ,CACTmQ,OACA2W,aAAa,EACbliB,KAAM,EACNE,IAAK,GAVM,E,mFAcGuM,EAAWC,GAAY,IAAD,EACqBrQ,KAAKP,MAA1D4O,EADgC,EAChCA,OAAQyB,EADwB,EACxBA,EAAGjL,EADqB,EACrBA,OAAQq0B,EADa,EACbA,aAActE,EADD,EACCA,SAAUlxB,EADX,EACWA,MAC3CmiB,EAAgB7lB,KAAKjB,MAArB8mB,YAER,OAAIzV,EAAU/B,SAAWA,IAKrB+B,EAAUN,IAAMA,IAKhBM,EAAUvL,SAAWA,IAKrBuL,EAAU8oB,eAAiBA,IAK3B7oB,EAAUwV,cAAgBA,IAK1BxV,EAAUukB,WAAaA,MAKvBxkB,EAAU1M,QAASA,GAASA,EAAMG,MAAQuM,EAAU1M,MAAMG,Y,0CAU9Ds1B,KAAiB7qB,GAAG,qBAAsBtO,KAAKmwB,wB,6CAI/CgJ,KAAiB5qB,IAAI,qBAAsBvO,KAAKmwB,wB,+BAwK1C,IAAD,EAC2EnwB,KAAKP,MAA7E4O,EADH,EACGA,OAAQumB,EADX,EACWA,SAAUrkB,EADrB,EACqBA,kBAAmB1L,EADxC,EACwCA,OAAQiL,EADhD,EACgDA,EAAiBpM,GADjE,EACmDw1B,aADnD,EACiEx1B,OADjE,EAE8D1D,KAAKjB,MAAhE8mB,EAFH,EAEGA,YAAaliB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAAK8zB,EAF3B,EAE2BA,iBAAkBD,EAF7C,EAE6CA,aAG5CnC,GADOpmB,IAAU1G,IAAI4F,GACVmnB,YAAannB,EAAQumB,IAEhCwE,EADgBD,KAAiBE,cACFhrB,EAC/BqQ,EAAUC,YAAYtQ,GACtBirB,EAAWV,YAAavqB,GACxBkrB,EAAazB,YAAezpB,GAClC,OACI,yBACImN,IAAKxb,KAAKwQ,OACVvQ,UAAWgM,IAAW,SAAU,CAAE,gBAAiBmtB,GAAc,CAAE,gBAAiBv0B,IACpFqH,YAAalM,KAAKiQ,aAClB+V,cAAehmB,KAAKu3B,kBACpB7zB,MAAOA,GACP,yBAAKzD,UAAU,kBACX,kBAAC,EAAD,CAAUoO,OAAQA,EAAQmC,QAAM,EAACD,kBAAmBA,EAAmBD,YAAU,IACjF,yBAAKrQ,UAAU,wBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAaoO,OAAQA,IACrB,kBAAC,GAAD,CAAYA,OAAQA,KAExB,yBAAKpO,UAAU,mBACX,kBAAC,GAAD,CAAeoO,OAAQA,IACvB,kBAAC,GAAD,CAAaA,OAAQA,EAAQumB,SAAUA,OAInD,kBAACxP,GAAA,EAAD,CACInK,KAAM4K,EACNxK,QAASrb,KAAK+lB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAEnhB,MAAKF,QACvB2hB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,oBACpB,kBAAC+e,GAAA,EAAD,CAAUrZ,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBACrBgxB,GACG,kBAAChS,GAAA,EAAD,CAAUtZ,QAASrM,KAAKs4B,eACnBiB,EACG,oCACI,kBAAC/Z,GAAA,EAAD,KACI,kBAACga,GAAD,OAEJ,kBAAC/Z,GAAA,EAAD,CAAcC,QAAS5P,EAAE,gBAG7B,oCACI,kBAAC0P,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAKxC4nB,GACG,kBAAC/R,GAAA,EAAD,CAAUtZ,QAASrM,KAAKo4B,WACnB7C,EACG,oCACI,kBAAC/V,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,mBAG7B,oCACI,kBAAC0P,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,gBAKzC,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAK04B,gBACnBnnB,aAAclD,GACX,oCACI,kBAACmR,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS1f,KAAKw4B,sBAGhC,oCACI,kBAAChZ,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS1f,KAAKw4B,uBAIxC,kBAAC7S,GAAA,EAAD,CAAUtZ,QAASrM,KAAKgI,YACnB0W,EACG,oCACI,kBAACc,GAAA,EAAD,KACI,kBAACia,GAAD,OAEJ,kBAACha,GAAA,EAAD,CAAcC,QAAS5P,EAAE,kBAG7B,oCACI,kBAAC0P,GAAA,EAAD,KACI,kBAACka,GAAD,OAEJ,kBAACja,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iBAIrC,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAK24B,YACnBW,EACG,oCACI,kBAAC9Z,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iBAG7B,oCACI,kBAAC0P,GAAA,EAAD,KACI,kBAACma,GAAD,OAEJ,kBAACla,GAAA,EAAD,CAAcC,QAAS5P,EAAE,2B,GA5WxCtP,aAgYrB62B,GAAOzoB,aAAe,CAClB/J,QAAQ,EACR0L,mBAAmB,GAGRkB,qBAAkB4lB,IEvYlBuC,I,wLAtCD,IAAD,EACgC55B,KAAKP,MAAlC4O,EADH,EACGA,OAAQoZ,EADX,EACWA,MAAOvJ,EADlB,EACkBA,UAEnB3B,EAAQ,KACR2B,IACA3B,EAAQ/B,YAAanM,GAAQ,IAGjC,IAAMwrB,EAAU,UAAM,GAAuB,GAAlBn4B,KAAKW,IAAIolB,GAApB,KACVqS,EAAY,UAAM,GAAuB,GAAlBp4B,KAAKq4B,IAAItS,GAApB,KAElB,OACI,yBAAKxnB,UAAU,sBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,kBACVie,EACG3B,EAEA,yBAAKtc,UAAU,2BAA2ByD,MAAO,CAAEgJ,MAAOmtB,MAGlE,yBAAK55B,UAAU,mBACX,yBAAKA,UAAU,6BAA6ByD,MAAO,CAAEgJ,MAAOotB,a,GAzBxDv5B,IAAMC,Y,8jBCFtC,IAAMkD,GACW,SAAAgL,GAAM,MAAK,CACpBA,SACAkE,SAAU,aAHZlP,GAKI,SAAC+jB,EAAO/Y,GAAR,MAAoB,CACtBA,SACA/K,KAAM,EACNq2B,MAAO,EACPn2B,IAAK6K,EAAS+Y,EACd7U,SAAU,aAILqnB,GAAb,YACI,WAAYx6B,GAAQ,IAAD,8BACf,4CAAMA,KA+CVy6B,kBAAoB,WAAO,IACf95B,EAAW,EAAKX,MAAhBW,OACA4gB,EAAc,EAAKjiB,MAAnBiiB,UACApJ,EAAY,EAAK2R,QAAjB3R,QACR,GAAKA,EAAL,CAEA,IAAMuiB,EAAiBC,WAAWrxB,OAAOsxB,iBAAiBziB,EAAS,MAAM0iB,iBAAiB,WACpFC,EAAY,EAAKC,aAAap6B,EAAQ+5B,EAAgBnZ,GAG5D,EAAKthB,SAAL,IAAgBy6B,kBAAmBI,MA1DpB,EAwFnBE,kBAAoB,SAAAz2B,GAAU,IAAD,EACe,EAAKvE,MAArCW,EADiB,EACjBA,OAAQs6B,EADS,EACTA,UAAWpQ,EADF,EACEA,SADF,EAEa,EAAKvrB,MAAnCo7B,EAFiB,EAEjBA,eAAgBnZ,EAFC,EAEDA,UAExB,GAAItf,KAAKyP,IAAInN,EAAMC,OAAO+c,UAAYA,IAAc0Z,EAAW,CAC3D,IAAMH,EAAY,EAAKC,aAAap6B,EAAQ+5B,EAAgBn2B,EAAMC,OAAO+c,WAEzE,EAAKthB,SAAL,IACIshB,UAAWhd,EAAMC,OAAO+c,WACrBuZ,IAIPjQ,GACAA,EAAStmB,IAtGE,EA8GnB22B,cAAgB,SAAClT,EAAO0S,EAAgBnZ,GAAe,IAAD,EACb,EAAKvhB,MAAlCm7B,EAD0C,EAC1CA,cAAeF,EAD2B,EAC3BA,UAKvB,OAHgBjT,EAAQiT,EAIV1Z,EAAY4Z,EAAgBF,IAHtBjT,EAAQ,GAAKiT,EAIhB1Z,EAAYmZ,EAAiBS,EAAgBF,GAnH9D,EAAKnR,QAAUhpB,IAAMsa,YAErB,EAAK9b,MAAQ,CACTiiB,UAAW,EACXuZ,UAAW,IAAIrmB,IACf2mB,cAAe,GACfV,eAAgB,GATL,EADvB,gFAcuBt6B,EAAWC,EAAWC,GACjCF,EAAUO,SAAWJ,KAAKP,MAAMW,QAChCJ,KAAKk6B,sBAhBjB,4CAoB0B9pB,EAAWC,EAAWyqB,GACxC,OAAO,IArBf,0CAwCQ/xB,OAAOC,iBAAiB,SAAUhJ,KAAKk6B,mBAAmB,GAD1C,IAGRtiB,EAAY5X,KAAKupB,QAAjB3R,QACHA,IACLA,EAAQ5O,iBAAiB,SAAUhJ,KAAKy6B,mBAAmB,GAE3Dz6B,KAAKk6B,uBA9Cb,mCA8DiB95B,EAAQ+5B,EAAgBnZ,GAAY,IAAD,OACtCuZ,EAAY,IAAIrmB,IAChB2mB,EAAgB,GAQtB,OAPAz6B,EAAO2B,QAAQ,SAACg5B,EAAMtT,GACd,EAAKkT,cAAclT,EAAO0S,EAAgBnZ,KAC1CuZ,EAAUvhB,IAAIyO,EAAOA,GACrBoT,EAAc7lB,KAAKyS,MAIpB,CAAE8S,YAAWM,mBAxE5B,6CA4EQ9xB,OAAOG,oBAAoB,SAAUlJ,KAAKk6B,mBADvB,IAGXtiB,EAAY5X,KAAKupB,QAAjB3R,QACHA,GACLA,EAAQ1O,oBAAoB,SAAUlJ,KAAKy6B,qBAhFnD,yCAsFQ,OAFsBz6B,KAAKjB,MAAnBw7B,YApFhB,mCA4GQ,OAAOv6B,KAAKupB,UA5GpB,+BA2Hc,IAAD,EACgDvpB,KAAKP,MAAlDQ,EADH,EACGA,UAAWG,EADd,EACcA,OAAQ46B,EADtB,EACsBA,WAAYN,EADlC,EACkCA,UAC/BH,EAAcv6B,KAAKjB,MAAnBw7B,UAEFjX,GAASljB,GAAU,IAAIiV,IAAI,SAAC0lB,EAAMtT,GACpC,OAAO8S,EAAUlmB,IAAIoT,IAAUuT,EAAW,CAAEvT,QAAO/jB,MAAOA,GAAW+jB,EAAOiT,OAKhF,OACI,yBAAKlf,IAAKxb,KAAKupB,QAAStpB,UAAWgM,IAAW,QAAShM,IACnD,yBAAKyD,MAAOA,IAAmBtD,GAAU,IAAI0T,OAAS4mB,IAAapX,QAvInF,GAAqC/iB,IAAMC,WA8I3Cy5B,GAAgBrrB,aAAe,CAC3BxO,OAAQ,GACRs6B,UAAW,GACXE,cAAe,GAYJX,UC/KR,SAASgB,GAAiBjwB,GAC7B,GAAIA,EAAQkwB,WAAaC,KAAKC,UAC1B,OAAOpwB,EAGX,IAAK,IAAIoJ,EAAIpJ,EAAQqwB,WAAWvnB,OAAS,EAAGM,GAAK,EAAGA,IAAK,CACrD,IAAMknB,EAAWL,GAAiBjwB,EAAQqwB,WAAWjnB,IACrD,GAAIknB,EACA,OAAOA,EAIf,OAAO,KAGJ,SAASC,GAAWvwB,GACvB,GAAKA,EAAL,CAEA,IAAMswB,EAAWL,GAAiBjwB,GAClC,GAAIswB,EAAU,CACV,IAAME,EAAQt4B,SAASu4B,cACvBD,EAAME,SAASJ,EAAUA,EAASxnB,QAClC0nB,EAAMG,UAAS,GAEf,IAAMC,EAAY7yB,OAAO8yB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAGvBxwB,EAAQoI,SAGL,SAAS4N,GAAUhW,GAA+B,IAAtBgxB,EAAqB,uDAAV,SACrChxB,IAELA,EAAQgW,UAAYtf,KAAKC,IAAIqJ,EAAQgW,UAAW,KAChDvZ,WAAW,WACPuD,EAAQixB,SAAS,CACbp4B,IAAK,EACLm4B,cAEL,K,qBCvCQz5B,eACX,0BAAMC,EAAE,2oCACR,WCFWD,eACX,0BAAMC,EAAE,ypBACR,QCFWD,eACX,0BAAMC,EAAE,oiDACR,QCFWD,eACX,0BAAMC,EAAE,0uIACR,YCsBW0Y,GADC,I,qIAxBDnE,G,yEACDhQ,EAAQm1B,aAAaC,QAAQplB,G,yCAChB,M,yCAGRqlB,KAAKC,MAAMt1B,I,yDAEX,M,iLAIJgQ,EAAKhQ,G,gEACZm1B,aAAaI,QAAQvlB,EAAKqlB,KAAKG,UAAUx1B,I,uKAGhCgQ,G,gEACTmlB,aAAaM,WAAWzlB,G,sOAIxBmlB,aAAaO,Q,uGC+Rf/sB,GAAQ,I,YAvSV,aAAe,IAAD,8BACV,+CAWJilB,MAAQ,WACJ,EAAKE,QAAU,KACf,EAAKpf,QAAU,GACf,EAAKinB,eAAiB,GACtB,EAAKC,OAAS,KACV,EAAKC,gBACL,EAAKC,SAAW,MAGpB,EAAKC,MAAQ,MArBH,EAwBdtJ,SAAW,SAAA3lB,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBinB,EAAwBjnB,EAAxBinB,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAKH,QACL,MAEJ,IAAK,+BACL,IAAK,6BACL,IAAK,oCACL,IAAK,iCACL,IAAK,qCACDoI,GAAaC,OAAO,SACpBD,GAAaC,OAAO,SAChB,EAAKJ,eACLG,GAAaC,OAAO,eA3C9B,EAwDd/H,eAAiB,SAAApnB,GACb,OAAQA,EAAO,UACX,IAAK,2BACD,EAAK4uB,UA3DH,EAkEdvH,iBAAmB,WACf71B,IAAgBiP,GAAG,SAAU,EAAKklB,UAClCn0B,IAAgBiP,GAAG,eAAgB,EAAK2mB,iBApE9B,EAuEdE,oBAAsB,WAClB91B,IAAgBkP,IAAI,SAAU,EAAKilB,UACnCn0B,IAAgBkP,IAAI,eAAgB,EAAK0mB,iBAtEzC,EAAK2H,eAAgB,EAErB,EAAKjI,QAEL,EAAKO,mBAEL,EAAK+H,aAAe/d,YAAS,EAAK+d,aAAc,KATtC,E,qMA8EJtoB,EAAW,IACRK,KAAK+nB,GAAaG,KAAK,SAAS5nB,MAAM,SAAAjD,GAAK,OAAI,QACxDsC,EAASK,KAAK+nB,GAAaG,KAAK,SAAS5nB,MAAM,SAAAjD,GAAK,OAAI,QACxDsC,EAASK,KAAK+nB,GAAaG,KAAK,WAAW5nB,MAAM,SAAAjD,GAAK,OAAI,QACtDrS,KAAK48B,eACLjoB,EAASK,KAAK+nB,GAAaG,KAAK,YAAY5nB,MAAM,SAAAjD,GAAK,OAAI,Q,SAEf+C,QAAQzC,IAAIgC,G,0CAArDmoB,E,KAAOK,E,KAAOtI,E,KAASgI,E,KAC9B78B,KAAK88B,MAAQA,EACT98B,KAAK88B,QACL98B,KAAK88B,MAAMK,MAAQA,GAAS,IAG5Bn9B,KAAK48B,eACDC,KACCA,GAAY,IAAI96B,QAAQ,SAAAT,GACrB2M,IAAU+K,IAAI1X,KAGlBtB,KAAK68B,SAAW,CACZ,QAAS,QACTO,SAAUP,EAASxnB,IAAI,SAAA/T,GAAC,OAAIA,EAAElC,KAC9B8pB,YAAa2T,EAAS/oB,SAKlC9T,KAAK60B,QAAUA,EAEX70B,KAAK88B,OACL98B,KAAKq9B,WAAWr9B,KAAK88B,O,kBAIlB98B,KAAK88B,O,sIAGLA,GACP,GAAKA,EAAL,CADc,IAGNH,EAAiFG,EAAjFH,OAAQpnB,EAAyEunB,EAAzEvnB,MAAO+nB,EAAkER,EAAlEQ,aAAcla,EAAoD0Z,EAApD1Z,MAAOma,EAA6CT,EAA7CS,YAAaC,EAAgCV,EAAhCU,YAAaL,EAAmBL,EAAnBK,MAAOx8B,EAAYm8B,EAAZn8B,SAG5Ew8B,GAAS,IAAIrjB,OAAO,SAAAxY,GAAC,OAAIulB,QAAQvlB,KAAIS,QAAQ,YAAkB,IAAf3C,EAAc,EAAdA,GAAI4rB,EAAU,EAAVA,IACjDxiB,IAAUi1B,WAAWr+B,EAAI4rB,MAG5B5H,GAAS,IAAIrhB,QAAQ,SAAAT,GAClB2M,IAAU+K,IAAI1X,MAGjBi8B,GAAe,IAAIx7B,QAAQ,SAAAT,GACxBsb,KAAgB5D,IAAI1X,MAGvBk8B,GAAe,IAAIz7B,QAAQ,SAAAT,GACxBuc,KAAgB7E,IAAI1X,MAGvBiU,GAAS,IAAIsE,OAAOyjB,GAAgB,IAAIzjB,OAAO,CAAC8iB,IAAS56B,QAAQ,SAAAT,GAC1DA,WACOA,EAAEo8B,oBAETvuB,IAAU6J,IAAI1X,GACVA,EAAE8N,QACE9N,EAAE8N,MAAMG,OAAO/G,IAAUwQ,IAAI1X,EAAE8N,MAAMG,OACrCjO,EAAE8N,MAAMqB,KAAKjI,IAAUwQ,IAAI1X,EAAE8N,MAAMqB,MAEvCnP,EAAEsR,UACFzD,IAAUwuB,oBAAoBr8B,EAAElC,IAEhCkC,EAAEiyB,cACFpc,KAAa6B,IAAI1X,EAAEiyB,kBAK9B5yB,GAAW,IAAIoB,QAAQ,YAAmB,IAAD,mBAAhB3C,EAAgB,KAAZw+B,EAAY,KACtC5pB,KAAYgF,IAAI5Z,EAAIw+B,Q,uEAIbnoB,EAASinB,G,yFACdmB,EAAU,IAAI3pB,IACd4pB,EAAU,IAAI5pB,IACd6pB,EAAgB,IAAI7pB,IACpB8pB,EAAgB,IAAI9pB,IACpByoB,EAAS38B,KAAK28B,OACdpnB,EAAQE,EAAQJ,IAAI,SAAA/T,GAAC,OAAI6N,IAAU1G,IAAInH,KACvCg8B,EAAeZ,EAAernB,IAAI,SAAA/T,GAAC,OAAI6N,IAAU1G,IAAInH,KAG3DiU,EAAMsE,OAAOyjB,GAAczjB,OAAO,CAAC8iB,IAAS56B,QAAQ,SAAAT,GAAM,IAC9C8N,EAA8B9N,EAA9B8N,MAAOqN,EAAuBnb,EAAvBmb,KAAM8W,EAAiBjyB,EAAjBiyB,aACrB,GAAInkB,GAASA,EAAMG,MAAO,CAAC,IACfnQ,EAAOgQ,EAAMG,MAAbnQ,GACR,GAAIA,EAAI,CACJ,IAAM6+B,EAAOz1B,IAAU01B,QAAQ9+B,GAC3B6+B,GACAJ,EAAQ7kB,IAAI5Z,EAAI6+B,IAK5B,OAAQxhB,EAAK,UACT,IAAK,qBACD,IAAM0hB,EAAavhB,KAAgBnU,IAAIgU,EAAKK,gBACxCqhB,GACAJ,EAAc/kB,IAAImlB,EAAW/+B,GAAI++B,GAGzC,IAAK,kBACL,IAAK,iBACD,IAAMnwB,EAAOC,IAAUxF,IAAIgU,EAAK1O,SAC5BC,GACA8vB,EAAQ9kB,IAAIhL,EAAK5O,GAAI4O,GAG7B,IAAK,qBACD,IAAM4P,EAAaC,KAAgBpV,IAAIgU,EAAKe,eACxCI,GACAogB,EAAchlB,IAAI4E,EAAWxe,GAAIwe,GAK7C,GAAI2V,EAAc,CAAC,IACP1K,EAAmB0K,EAAnB1K,eACR,GAAIA,EAAgB,CAChB,IAAM7a,EAAOC,IAAUxF,IAAIogB,GACvB7a,GACA8vB,EAAQ9kB,IAAIhL,EAAK5O,GAAI4O,O,kBAM9B,CACH2uB,SACApnB,QACA+nB,eACAla,MAAM,aAAK0a,EAAQM,UACnBb,YAAY,aAAKQ,EAAcK,UAC/BZ,YAAY,aAAKQ,EAAcI,UAC/BjB,MAAM,aAAKU,EAAQQ,WACnB19B,QAAQ,aAAKqT,KAAYsP,MAAM+a,a,0KAI5BxJ,EAASpf,EAASinB,G,mEACzB18B,KAAKyV,QAAUA,EACfzV,KAAK08B,eAAiBA,E,KACR18B,KAAK28B,O,qCAAgBt9B,IAAgBC,KAAK,CACpD,QAAS,oBACTyO,QAASE,IAAUiH,UACnBC,OAAO,I,6BAHXnV,KAAK28B,O,MAKD38B,KAAK48B,c,yBACW58B,KAAK68B,S,uCAAkBx9B,IAAgBC,KAAK,CACxD,QAAS,gB,4BADbU,KAAK68B,S,aAIT78B,KAAK60B,QAAUA,EAEf70B,KAAKi9B,e,qRAKej9B,KAAKs+B,SAASt+B,KAAKyV,QAASzV,KAAK08B,gB,cAA/CI,E,OACAK,EAAQL,EAAMK,MACpBL,EAAMK,MAAQ,G,SAERJ,GAAawB,KAAK,QAASzB,G,cAE3BnoB,EAAW,GACjBwoB,EAAMp7B,QAAQ,SAAAT,GAAM,IAAD,cACIA,EADJ,GACRlC,EADQ,KACJ6+B,EADI,KAEftpB,EAASK,KACL,IAAII,QAAQ,SAACopB,EAASC,GAClB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcX,GACzBS,EAAWG,OAAS,SAAAzyB,GAChBoyB,EAAQ,CAAEp/B,KAAI4rB,IAAK5e,EAAEnI,OAAOzE,UAEhCk/B,EAAWI,QAAU,SAAA1yB,GACjBoyB,EAAQ,Y,UAMFppB,QAAQzC,IAAIgC,G,eAA5BoqB,E,iBAEAhC,GAAawB,KAAK,QAASQ,G,YAE7B/+B,KAAK48B,c,wBACCC,EAAW78B,KAAK68B,SAASO,SAAS/nB,IAAI,SAAA/T,GAAC,OAAI2M,IAAUxF,IAAInH,K,UACzDy7B,GAAawB,KAAK,WAAY1B,G,YAGpC78B,KAAK60B,Q,kCACCkI,GAAawB,KAAK,UAAWv+B,KAAK60B,S,mIAKxC70B,KAAK88B,OACa98B,KAAK88B,MAAfK,MAEFrjB,OAAO,SAAAxY,GAAC,OAAIulB,QAAQvlB,KAAIS,QAAQ,YAAkB,IAAf3C,EAAc,EAAdA,GAAc,EAAV4rB,IACzCxiB,IAAUw2B,cAAc5/B,S,GAlSfg2B,OAySzBrsB,OAAO+zB,MAAQptB,GACAA,UC3RTuvB,I,mBACF,WAAYx/B,GAAQ,IAAD,8BACf,4CAAMA,KAmBVuwB,wBAA0B,SAAAniB,GAAW,IACzBoiB,EAAiBpiB,EAAjBoiB,aAER,EAAKvwB,SAAS,CAAEuwB,kBAvBD,EA0BnBiP,2BAA6B,SAAArxB,GACzB,EAAKnO,SAAS,CAAEy/B,mBAAoBtxB,EAAOinB,uBA3B5B,EA8BnBsK,eAAiB,SAAAp7B,GAAU,IACfm7B,EAAuB,EAAKpgC,MAA5BogC,mBACHE,YAAqBF,IAE1B,EAAKz/B,SAAS,CAAE4/B,SAAUt7B,EAAMu7B,iBAlCjB,EAqCnBC,gBAAkB,WACd,EAAK9/B,SAAS,CAAE4/B,SAAU,QAtCX,EAyCnBG,mBAzCmB,qBAyCE,sBAAAztB,EAAA,qDACjB,EAAKwtB,kBADY,yCAzCF,EA+CnBE,iBAAmB,SAAA17B,GACf,EAAKw7B,kBAELngC,IAAgByF,aAAa,CACzB,QAAS,yBACTmW,MAAM,KApDK,EAwDnB0kB,eAAiB,SAAA37B,GACb,EAAKw7B,kBAELngC,IAAgByF,aAAa,CACzB,QAAS,uBACTmW,MAAM,KA7DK,EAiEnB2kB,eAAiB,SAAA57B,GACb,EAAKw7B,kBAELngC,IAAgByF,aAAa,CACzB,QAAS,uBACTmW,MAAM,KAtEK,EA0EnB4kB,eAAiB,SAAA77B,GACb,EAAKw7B,kBAELM,gBA7Ee,EAgFnBC,YAhFmB,sCAgFL,WAAM/7B,GAAN,eAAAgO,EAAA,wDACV,EAAKwtB,kBAEDtwB,EAAO8wB,GAAWlD,MAAQkD,GAAWlD,MAAMH,OAAS,KAH9C,gCAKOt9B,IAAgBC,KAAK,CAC9B,QAAS,oBACTyO,QAASE,IAAUiH,UACnBC,OAAO,IARL,OAKNjG,EALM,iBAYLA,EAZK,iDAcVkS,aAASlS,EAAK9P,IAdJ,yCAhFK,wDAiGnB6gC,eAjGmB,sCAiGF,WAAMj8B,GAAN,eAAAgO,EAAA,wDACb,EAAKwtB,kBAEDtwB,EAAO8wB,GAAWlD,MAAQkD,GAAWlD,MAAMH,OAAS,KAH3C,gCAKIt9B,IAAgBC,KAAK,CAC9B,QAAS,oBACTyO,QAASE,IAAUiH,UACnBC,OAAO,IARF,OAKTjG,EALS,iBAYRA,EAZQ,iDAcb7P,IAAgByF,aAAa,CACzB,QAAS,uBACTmW,MAAM,EACN5M,OAAQa,EAAK9P,KAjBJ,yCAjGE,wDAsHnB8gC,WAAa,SAAAl8B,GACT,EAAKw7B,mBAvHU,EA0HnBpZ,aAAe,WACX,EAAKoZ,kBAELW,aAAW,IA1HX,EAAKphC,MAAQ,CACTogC,mBAAoBpM,KAASqN,wBAC7Bd,SAAU,KACVrP,aAAc8C,KAAS9C,cANZ,E,iFAWf8C,KAASzkB,GAAG,2BAA4BtO,KAAKk/B,4BAC7CnM,KAASzkB,GAAG,wBAAyBtO,KAAKgwB,2B,6CAI1C+C,KAASxkB,IAAI,2BAA4BvO,KAAKk/B,4BAC9CnM,KAASxkB,IAAI,wBAAyBvO,KAAKgwB,2B,+BA+GrC,IAAD,EAC6ChwB,KAAKP,MAA/CqQ,EADH,EACGA,EAAGuwB,EADN,EACMA,QAASlgB,EADf,EACeA,MAAOmgB,EADtB,EACsBA,UAAWjlB,EADjC,EACiCA,QADjC,EAEkDrb,KAAKjB,MAApDugC,EAFH,EAEGA,SAAUH,EAFb,EAEaA,mBAAoBlP,EAFjC,EAEiCA,aAEhCsQ,GACDD,GAAajB,YAAqBF,GAC/B,kBAACqB,GAAA,EAAD,CACIphC,GAAG,YACHkgC,SAAUA,EACVrkB,KAAM4L,QAAQyY,GACdjkB,QAASrb,KAAKw/B,gBACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhB,kBAACG,GAAA,EAAD,CAAUtZ,QAASrM,KAAK0/B,kBACpB,kBAAClgB,GAAA,EAAD,KACI,kBAACohB,GAAD,OAEJ,kBAACnhB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iBAE7B,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAK2/B,gBACpB,kBAACngB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE3BmgB,GACE,kBAACtK,GAAA,EAAD,CAAUtZ,QAASrM,KAAKomB,cACpB,kBAAC5G,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,aAGjC,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAK4/B,gBACpB,kBAACpgB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE7B,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAK6/B,gBACpB,kBAACrgB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE7B,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAK+/B,aACpB,kBAACvgB,GAAA,EAAD,KACI,kBAACqhB,EAAD,OAEJ,kBAACphB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,YAE7B,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAKigC,gBACpB,kBAACzgB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE7B,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAKkgC,YACpB,kBAAC1gB,GAAA,EAAD,KACI,kBAACshB,GAAD,OAEJ,kBAACrhB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oBAGjC,KAEFixB,EAAY5gB,EACZ,kBAAC7T,EAAA,EAAD,MACA,kBAAC,GAAD,MAEN,OACI,oCACI,kBAACwK,EAAA,EAAD,CACIkqB,YAAW1B,EAAW,cAAgB,KACtC2B,gBAAc,OACdhhC,UAAU,sCACV+W,aAAW,OACX3K,QAASi0B,EAAYjlB,EAAUrb,KAAKo/B,gBAClCiB,EACK,kBAACvZ,GAAA,EAAD,CAAe7L,KAAMqlB,EAAWtZ,SAAU,kBAAC,GAAD,MAAmBD,KAAM,kBAAC,GAAD,QACnE,oCAAGuZ,EAAYS,EAAY,kBAAC,GAAD,QAIrCR,O,GA1NYhgC,IAAMC,YAgOpBiR,iBAAkBwtB,ICrP3BiC,I,kNACFza,cAAgB,SAAAziB,GACZ,GAAsB,KAAlBA,EAAMmV,QACNnV,EAAM8B,sBACH,GAAsB,KAAlB9B,EAAMmV,QAAgB,CAAC,IAAD,EACC,EAAK1Z,MAA3B0N,EADqB,EACrBA,SAAUkO,EADW,EACXA,QAEZrQ,EAAUhH,EAAMC,OACtB,IAAK+G,EAAS,OAEd,GAAIA,EAAQiO,UAMR,OALAjV,EAAM2C,kBACN3C,EAAM+B,YAAYo7B,2BAElBn2B,EAAQiO,UAAY,UAChB9L,GAAUA,EAASnC,EAAQiO,YAI/BoC,GACAA,EAAQrX,QAET,GAAsB,IAAlBA,EAAMmV,QAAe,CAAC,IACrBioB,EAAgB,EAAK3hC,MAArB2hC,YAEFp2B,EAAUhH,EAAMC,OACtB,IAAK+G,EAAS,OACd,GAAIA,EAAQiO,UAAW,OAEnBmoB,IACAp9B,EAAM2C,kBACNy6B,O,EAKZ1a,YAAc,SAAA1iB,GACV,IAAMgH,EAAUhH,EAAMC,OACtB,GAAK+G,EAAL,CAFmB,IAIXhB,EAAcgB,EAAdhB,UACU,SAAdA,GAAsC,oBAAdA,IACxBgB,EAAQhB,UAAY,Q,EAI5B2c,YAAc,SAAA3iB,GACV,IAAMmW,EAAYnW,EAAMoW,cAAcC,QAAQ,cAC1CF,IACAnW,EAAM8B,iBACN5C,SAASoQ,YAAY,cAAc,EAAO6G,K,EAIlDknB,YAAc,SAAAr9B,GAAU,IACZmJ,EAAa,EAAK1N,MAAlB0N,SAEFnC,EAAUhH,EAAMC,OACjB+G,GAEDmC,GACAA,EAASnC,EAAQiO,Y,wEAIf,IAAD,EAC4CjZ,KAAKP,MAA9C6hC,EADH,EACGA,SAAUxxB,EADb,EACaA,EAAGyxB,EADhB,EACgBA,QAASC,EADzB,EACyBA,KAAMC,EAD/B,EAC+BA,SAEpC,OACI,yBAAKxhC,UAAU,gBACX,yBACIb,GAAG,kBACHoc,IAAK8lB,EACL5lB,YAAa8lB,GAAQ1xB,EAAE,UACvB2C,iBAAe,EACfgJ,gCAA8B,EAC9BE,UAAW3b,KAAKymB,cAChB7K,QAAS5b,KAAK0mB,YACd7K,QAAS7b,KAAK2mB,YACd+a,QAAS1hC,KAAKqhC,YACdE,QAASA,IAEZE,GAAY,kBAAC,GAAD,CAAYxhC,UAAU,2B,GAlFzBM,IAAMC,YAkGhC0gC,GAAYtyB,aAAe,CACvB6yB,UAAU,GAGChwB,qBAAkByvB,ICqClBS,I,mBAxIX,WAAYliC,GAAQ,IAAD,8BACf,4CAAMA,KAgEVy/B,2BAA6B,SAAArxB,GACzB,EAAKnO,SAAS,CAAEy/B,mBAAoBtxB,EAAOinB,uBAlE5B,EAqEnB1O,aAAe,WAAO,IAAD,EACgB,EAAK3mB,MAA9B6mB,EADS,EACTA,SAAUE,EADD,EACCA,WACV2Y,EAAuB,EAAKpgC,MAA5BogC,mBACHE,YAAqBF,IAE1B7Y,GAAUE,IA1EK,EA6EnBob,uBAAyB,WAAO,IACpBC,EAAuB,EAAKpiC,MAA5BoiC,mBAEF72B,EAAU,EAAKqb,eAAezO,QACpC,GAAK5M,EAAL,CAJ2B,IAMnBhB,EAAcgB,EAAdhB,UACU,SAAdA,GAAsC,oBAAdA,IACxBgB,EAAQhB,UAAY,MAIxB63B,EAFsB72B,EAAdiO,aAvFO,EA4FnB+Q,kBAAoB,WAChB,EAAK5D,gBA7FU,EAgGnB0b,YAAc,WACV,EAAK1b,gBA9FL,EAAKC,eAAiB9lB,IAAMsa,YAE5B,EAAK9b,MAAQ,CACTogC,mBAAoBpM,KAASqN,wBAC7BnlB,MAAM,GAPK,E,0EAWNhB,GAAQ,IACT4nB,EAAuB7hC,KAAKP,MAA5BoiC,mBAEFE,EAAc/hC,KAAKqmB,eAAezO,QACxC,GAAImqB,EAAa,CAEb,GADAA,EAAY9oB,UAAYgB,EACpB8nB,EAAY1G,WAAWvnB,OAAS,EAAG,CACnC,IAAM0nB,EAAQt4B,SAASu4B,cACvBD,EAAME,SAASqG,EAAY1G,WAAW,GAAI0G,EAAY1G,WAAW,GAAGvnB,QACpE0nB,EAAMG,UAAS,GAEf,IAAMC,EAAY7yB,OAAO8yB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvBuG,EAAY3uB,QACZyuB,EAAmB5nB,M,yCAIRpa,EAAWC,EAAWC,GAAW,IACxCymB,EAAexmB,KAAKP,MAApB+mB,WAER,GAAIA,IAAe3mB,EAAU2mB,WACzB,GAAIA,EACAxmB,KAAKu7B,iBACF,CACH,IAAMwG,EAAc/hC,KAAKqmB,eAAezO,QACpCmqB,IACAA,EAAY9oB,UAAY,S,mCAOpC,IAAM8oB,EAAc/hC,KAAKqmB,eAAezO,QACpCmqB,GACAA,EAAY3uB,U,0CAKZpT,KAAKP,MAAM0gB,OACXngB,KAAKu7B,aAGTxI,KAASzkB,GAAG,2BAA4BtO,KAAKk/B,8B,6CAI7CnM,KAASxkB,IAAI,2BAA4BvO,KAAKk/B,8B,+BAsCxC,IAAD,EACkCl/B,KAAKP,MAApC+mB,EADH,EACGA,WAAY6Z,EADf,EACeA,QAASlgB,EADxB,EACwBA,MAEzB9I,EAAU,KACV2qB,GAAW,EAcf,OAbIxb,GACAwb,GAAW,EACX3qB,EACI,kBAAC,GAAD,CACIiqB,SAAUthC,KAAKqmB,eACflZ,SAAUnN,KAAK4hC,uBACfvmB,QAASrb,KAAKgqB,qBAItB3S,EAAU,kBAAC,GAAD,CAAaiqB,SAAUthC,KAAKqmB,eAAgBkb,QAASvhC,KAAK8hC,cAIpE,yBAAK7hC,UAAU,iBACX,kBAAC,GAAD,CAAgBogC,QAASA,EAASC,UAAW0B,EAAU7hB,MAAOA,EAAO9E,QAASrb,KAAKgqB,oBAClF3S,O,GA1HW9W,IAAMC,Y,4BCK5ByhC,G,YACF,WAAYxiC,GAAQ,IAAD,uBACf,4CAAMA,KA2CVyiC,YAAc,WACV,MAAO,mBAAoBn5B,QA7CZ,EAsEnBo5B,6BAA+B,SAAAt0B,GACtB,EAAKq0B,eAAe,EAAKE,cAAa,IAvE5B,EA0EnBC,0BAA4B,SAAAx0B,GAExB,IADoB,EAAK9O,MAAjB81B,QACR,CAFkC,IAIjByN,EAAkBtC,GAA3BnL,QACHyN,GAEL,EAAK5iC,SAAS,CACVm1B,QAASyN,GACV,WACM,EAAKJ,eAAe,EAAKE,cAAa,OApFhC,EAwFnBn/B,eAAiB,WACb,EAAKm/B,cAAa,IAzFH,EA4FnBpS,wBAA0B,SAAAniB,GAAW,IACzBoiB,EAAiB8C,KAAjB9C,aACR,EAAKvwB,SAAS,CACVuwB,gBACD,WACM,EAAKiS,eAAe,EAAKE,cAAa,MAjGhC,EAqGnBA,aAAe,WAAwB,IAAvBG,IAAsB,2DACU,EAAKxjC,MAAzC61B,EAD0B,EAC1BA,SAAUC,EADgB,EAChBA,QAAS5E,EADO,EACPA,aAErBuS,EAAS,EAAKC,WAAW7qB,QAE3BmjB,EAAO,KACPp3B,EAAO,EACX,GAA0B,iBAAtBixB,EAAS,SAA6B,CACtC,IAAM8N,EAAO,EAAKC,UAAUl6B,IAAI,gBAC5Bi6B,IACA3H,EAAO2H,EACP/+B,GAAQssB,EAAe,EAAI,QAE5B,GAA0B,mBAAtB2E,EAAS,SAA+B,CAC/C,IAAM8N,EAAO,EAAKC,UAAUl6B,IAAI,gBAC5Bi6B,IACA/+B,GAAQ++B,EAAKE,aAEjB,IAAK,IAAIxuB,EAAI,EAAGA,EAAIygB,EAAQ/gB,OAAQM,IAAK,CACrC,IAAM0F,EAAS,EAAK6oB,UAAUl6B,IAAI,qBAAuBosB,EAAQzgB,GAAGhV,IACpE,GAAIy1B,EAAQzgB,GAAGhV,KAAOw1B,EAASiO,eAAgB,CAC3C9H,EAAOjhB,EACPnW,GAAQssB,EAAe,EAAI,EAC3B,MAEAtsB,GAAQmW,EAAO8oB,aAI3B,GAAK7H,EAAL,CAEA,IAAM+H,EAAkB,EAAKC,mBAAmBnrB,QAChD,GAAIkrB,EAAiB,CACjB,IAAME,EAAkBT,EAAa,gDAAkD,KACvFO,EAAgBp/B,MAAMu/B,QAAtB,gBAAyCt/B,EAAzC,sBAA2Do3B,EAAK6H,YAAc,GAA9E,eAAuFI,GAG3F,GAAIjI,GAAQwH,EAAW,CAAC,IAAD,kBACXW,EADW,EACXA,SAEJA,GACAA,EAAShhC,OAGb,EAAKghC,SAAW,IAAIziC,KAAS,IAAK,CAC9B,CACIuB,KAAMwgC,EAAOW,WACb5hC,GAAIsJ,YAAMlH,EAAO6+B,EAAOY,YAAc,EAAIrI,EAAKqI,YAAc,EAAG,EAAGZ,EAAOI,YAAcJ,EAAOY,aAC/FnhC,KAAM,SAAA0B,GAAI,OAAK6+B,EAAOW,WAAax/B,MAI3C8D,WAAW,WACF,EAAKy7B,UAEV,EAAKA,SAAStiC,SACf,MA7JQ,EAoKnByiC,oBAAsB,SAAAx1B,GAAW,IACrB+mB,EAAa,EAAK71B,MAAlB61B,SACAC,EAAYyO,GAAZzO,QAER,EAAKn1B,SAAS,CACVm1B,WACD,WAC2B,mBAAtBD,EAAS,WAA+F,IAA9DC,EAAQnN,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOw1B,EAASiO,iBACnF,EAAKU,kBAEA,EAAKrB,eAAe,EAAKE,kBA9KvB,EAmLnBoB,uBAAyB,SAAA31B,GAAW,IACxB+mB,EAAa0O,GAAb1O,SAER,EAAKl1B,SAAS,CACVk1B,YACD,WACM,EAAKsN,eAAe,EAAKE,kBAzLnB,EA6LnBmB,gBAAkB,SAAAv/B,GACVA,GAA0B,IAAjBA,EAAMub,QAEnBlgB,IAAgByF,aAAa,CACzB,QAAS,uBACT8vB,SAAU,CACN,QAAS,mBAnMF,EAwMnB6O,kBAAoB,SAACz/B,EAAO5E,GACpB4E,GAA0B,IAAjBA,EAAMub,QAEnBlgB,IAAgByF,aAAa,CACzB,QAAS,uBACT8vB,SAAU,CACN,QAAS,iBACTiO,eAAgBzjC,MA/MT,EAoNnBskC,YAAc,SAAA1/B,GACLA,EAAM2/B,SAIX3/B,EAAMu7B,cAAc4D,YAAcn/B,EAAM2/B,OACxC3/B,EAAM2C,oBAvNN,EAAKg8B,UAAY,IAAIzuB,IACrB,EAAKuuB,WAAaliC,IAAMsa,YACxB,EAAKkoB,mBAAqBxiC,IAAMsa,YALjB,IAOPoV,EAAiB8C,KAAjB9C,aACA4E,EAAsByO,GAAtBzO,QAASD,EAAa0O,GAAb1O,SARF,OAUf,EAAK71B,MAAQ,CACTkxB,eACA4E,UACAD,YAGJ,EAAK3xB,eAAiB2gC,YAAS,EAAK3gC,eAAgB,KAhBrC,E,iFAoBfjD,KAAK6jC,gBACL9Q,KAASzkB,GAAG,0BAA2BtO,KAAKqiC,2BAC5CtP,KAASzkB,GAAG,wBAAyBtO,KAAKgwB,yBAC1CsT,GAAYh1B,GAAG,uBAAwBtO,KAAKwjC,wBAC5CF,GAAYh1B,GAAG,oBAAqBtO,KAAKqjC,qBACzCS,KAAkBx1B,GAAG,6BAA8BtO,KAAKmiC,8BAExDniC,KAAKoiC,iB,yCAGUviC,EAAWC,EAAWC,GACrCC,KAAK+jC,kBACL/jC,KAAK6jC,kB,6CAIL7jC,KAAK+jC,kBACLhR,KAASxkB,IAAI,0BAA2BvO,KAAKqiC,2BAC7CtP,KAASxkB,IAAI,wBAAyBvO,KAAKgwB,yBAC3CsT,GAAY/0B,IAAI,uBAAwBvO,KAAKwjC,wBAC7CF,GAAY/0B,IAAI,oBAAqBvO,KAAKqjC,qBAC1CS,KAAkBv1B,IAAI,6BAA8BvO,KAAKmiC,gC,sCAQzD,GAAKniC,KAAKkiC,cAAV,CACA,IAAMrN,EAAU70B,KAAKyiC,WAAW7qB,QAChC,GAAKid,EAAL,CAEA,IAAMmP,EAAW,IAAIC,eAAejkC,KAAKiD,gBACzC+gC,EAASE,QAAQrP,GAEjB70B,KAAKmkC,eAAiB,CAAEH,WAAUnP,e,wCAIlC,GAAK70B,KAAKkiC,eACLliC,KAAKmkC,eAAV,CAFc,MAIgBnkC,KAAKmkC,eAA3BH,EAJM,EAINA,SAAUnP,EAJJ,EAIIA,QACbmP,GACAnP,GAELmP,EAASI,UAAUvP,M,+BA0Jb,IAAD,OACG/kB,EAAM9P,KAAKP,MAAXqQ,EADH,EAEuC9P,KAAKjB,MAAzC81B,EAFH,EAEGA,QAASD,EAFZ,EAEYA,SAAU3E,EAFtB,EAEsBA,aAE3B,OAAK4E,GACAA,EAAQ/gB,QAEb9T,KAAK2iC,UAAY,IAAIzuB,IAEjB,yBAAKsH,IAAKxb,KAAKyiC,WAAYxiC,UAAU,UAAUokC,QAASrkC,KAAK0jC,aACzD,yBACIloB,IAAK,SAAA0a,GAAC,OAAI,EAAKyM,UAAU3pB,IAAI,eAAgBkd,IAC7Cj2B,UAAWgM,IAAW,SAAU,CAAE,gBAAuC,iBAAtB2oB,EAAS,WAC5D1oB,YAAalM,KAAKujC,gBAClBhnB,MAAO0T,EAAengB,EAAE,kBAAoB,MAC3CmgB,EAAe5D,YAAevc,EAAE,mBAAqBA,EAAE,mBAE3D+kB,EAAQxf,IAAI,SAAA/T,GAAC,OACV,yBACIyV,IAAKzV,EAAElC,GACPoc,IAAK,SAAA0a,GAAC,OAAI,EAAKyM,UAAU3pB,IAAI,qBAAuB1X,EAAElC,GAAI82B,IAC1Dj2B,UAAWgM,IAAW,SAAU,CAAE,gBAAiB2oB,EAASiO,iBAAmBvhC,EAAElC,KACjF8M,YAAa,SAAAE,GAAC,OAAI,EAAKq3B,kBAAkBr3B,EAAG9K,EAAElC,KAC9Cmd,MAAO0T,EAAe3uB,EAAEib,MAAQ,MAC/B0T,EAAe5D,YAAe/qB,EAAEib,OAASjb,EAAEib,SAEpD,yBAAKf,IAAKxb,KAAK+iC,mBAAoB9iC,UAAU,uBAtBhC,S,GAlOPM,IAAMC,WAkQbiR,iBAAkBwwB,IC1P3BqC,G,8LACoBl0B,EAAWC,EAAWyqB,GAAc,IAAD,EACT96B,KAAKP,MAAzC4O,EAD6C,EAC7CA,OAAQumB,EADqC,EACrCA,SAAUlxB,EAD2B,EAC3BA,MAAOmB,EADoB,EACpBA,OACjC,OAAIuL,EAAU/B,SAAWA,IAKrB+B,EAAUwkB,WAAaA,IAKvBxkB,EAAUvL,SAAWA,GAKrBuL,EAAU1M,MAAMG,MAAQH,EAAMG,Q,+BAS5B,IAAD,EACuC7D,KAAKP,MAAzC4O,EADH,EACGA,OAAQumB,EADX,EACWA,SAAU/vB,EADrB,EACqBA,OAAQnB,EAD7B,EAC6BA,MAElC,OACI,yBAAKzD,UAAU,mBAAmByD,MAAOA,GACrC,kBAAC,GAAD,CAAQ2K,OAAQA,EAAQumB,SAAUA,EAAU/vB,OAAQA,S,GAhCvCtE,IAAMC,WAqepB+jC,G,YA9bX,WAAY9kC,GAAQ,IAAD,uBACf,4CAAMA,KA6GV+jC,uBAAyB,SAAA31B,GAAW,IACxB+mB,EAAa/mB,EAAb+mB,SAER,EAAKl1B,SAAS,CACVk1B,YACD,WACC,EAAK4P,oBApHM,EAwHnB7mB,mBAAqB,SAAA9P,KAxHF,EAkInB42B,wBAA0B,SAAA52B,GAAW,IACzBwlB,EAAuBxlB,EAAvBwlB,WAAYhlB,EAAWR,EAAXQ,OAEhBglB,EACA,EAAKqR,YAAY1rB,IAAI3K,EAAQA,GAE7B,EAAKq2B,YAAY3rB,OAAO1K,GAG5B,EAAKU,eA3IU,EA8InBmwB,2BAA6B,SAAArxB,GAAW,IACPsxB,EAAuBtxB,EAA5CinB,oBAER,EAAKp1B,SAAS,CAAEy/B,sBAAsB,kBAAM,EAAKqF,oBAjJlC,EAoJnB11B,uBAAyB,SAAAjB,GACrB,EAAKwa,YAAW,IArJD,EAyJnBmc,eAzJmB,qBAyJF,4BAAAxyB,EAAA,wDACLmtB,EAAuB,EAAKpgC,MAA5BogC,mBACHE,YAAqBF,GAFb,iEAIP32B,IAAUm8B,OAAO,kBAAM,EAAKtc,YAAW,KAJhC,yCAzJE,EAgKnBuc,UAAY,WAAO,IAAD,EACgB,EAAKnlC,MAA3BolC,EADM,EACNA,YAAapoB,EADP,EACOA,KACbmY,EAAa,EAAK71B,MAAlB61B,SACK,iBAATnY,GACsB,iBAAtBmY,EAAS,UAETiQ,GAAaA,KAtKF,EAyKnBC,qBAAuB,SAAAj3B,GAAW,IACtB+mB,EAAa,EAAK71B,MAAlB61B,SACAhiB,EAAa/E,EAAb+E,SAEHmyB,YAAenQ,EAAUhiB,EAAS4O,OAIvC,EAAKwjB,kBAAkBn3B,IAjLR,EAoLnBm3B,kBAAoB,SAAAn3B,GAAW,IAAD,EACE,EAAK9O,MAAzBwW,EADkB,EAClBA,MAAOqf,EADW,EACXA,SACf,GAAKrf,IAFqB,gBAIlBgT,QACR,CAL0B,IAOlB9Y,EAAY5B,EAAZ4B,QAEFP,EAAOC,IAAU1G,IAAIgH,GAC3B,GAAKP,GAIA+1B,YAAYx1B,EAASmlB,GAA1B,CAIA,IAAMsQ,EAAQC,YAAa11B,EAASmlB,GAC9BwQ,EAAe7vB,EAAMmS,UAAU,SAAApmB,GAAC,OAAIA,IAAMmO,IAChD,IAAsB,IAAlB21B,GAAiC,MAAVF,EAA3B,CAKA,IADA,IAAMzvB,EAAU,GACPrB,EAAI,EAAGA,EAAImB,EAAMzB,OAAQM,IAAK,CACnC,IAAMlF,EAAOC,IAAU1G,IAAI8M,EAAMnB,IAC3BixB,EAAYF,YAAa5vB,EAAMnB,GAAIwgB,GACrC1lB,GAAsB,MAAdm2B,GACR5vB,EAAQT,KAAK9F,EAAK9P,IAI1B,IAAMkmC,EAAa,GACL,MAAVJ,EAEIz1B,IAAYsjB,KAASsG,aAAgBnqB,EAAKqkB,eAC1Cl0B,IAAgBkmC,UAAU,GAC1BtT,cAA4B,KAGV,IAAlBmT,GACAE,EAAWtwB,KAAKvF,GAIxB,EAAK+1B,aAAa/vB,EAAS6vB,EAAY,WACnC,EAAKplB,iBAAiBolB,GACtB,EAAKV,kBApOM,EAmQnBtb,aAAe,WAEX,IAAM9H,EAAO,EAAK+H,QAAQ3R,QAAQ6tB,aAAa7tB,QAC1C4J,IAGDA,EAAKR,WAAa0kB,KAClB,EAAKC,aACEnkB,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAeD,EAAKE,cAEtE,EAAK2G,eA7QM,EAqXnB2S,WAAa,WAAmB56B,GAAY,IAA5BqnB,EAA2B,EAA3BA,MAAO/jB,EAAoB,EAApBA,MACXkxB,EAAa,EAAK71B,MAAlB61B,SACFtzB,EAAIlB,EAAOqnB,GAEjB,OAAO,kBAAC,GAAD,CAAgB1Q,IAAKzV,EAAG+M,OAAQ/M,EAAGszB,SAAUA,EAAU/vB,OAAQ,EAAK6/B,YAAYrwB,IAAI/S,GAAIoC,MAAOA,KAtXtG,EAAKghC,YAAc,IAAIxwB,IAEvB,EAAKqV,QAAUhpB,IAAMsa,YALN,IAOPskB,EAAuBpM,KAAvBoM,mBAPO,OASf,EAAKpgC,MAAQ,CACTogC,qBACApW,OAAQ,EACRxT,MAAO,KACPqwB,iBAAiB,EACjBhR,SAAyB,iBAAfn1B,EAAMgd,KAA0B,CAAE,QAAS,gBAAmB,CAAE,QAAS,oBAdxE,E,mFAkBGrM,EAAWC,GAAY,IAAD,EAC8BrQ,KAAKP,MAAnEkiB,EADgC,EAChCA,MAAO1G,EADyB,EACzBA,KAAM4qB,EADmB,EACnBA,YAAaC,EADM,EACNA,aAAcxiB,EADR,EACQA,MAAOyiB,EADf,EACeA,WADf,EAEJ/lC,KAAKjB,MAAjCwW,EAFgC,EAEhCA,MAAOwT,EAFyB,EAEzBA,OAFyB,EAEjB6L,SAEvB,OAAIxkB,EAAUuR,QAAUA,IAIpBvR,EAAU6K,OAASA,IAInB7K,EAAUkT,QAAUA,IAIpBlT,EAAU21B,aAAeA,IAIzB31B,EAAUy1B,cAAgBA,IAI1Bz1B,EAAU01B,eAAiBA,IAI3Bz1B,EAAU0Y,SAAWA,GAIrB1Y,EAAUkF,QAAUA,U,8CAWJ1V,EAAWC,GAAY,IAC1B0hB,EAASxhB,KAAKupB,QAAvB3R,QACR,OAAK4J,EAEE,CAAER,UAAWQ,EAAKR,WAFP,CAAEA,UAAW,K,yCAKhBnhB,EAAWC,EAAWC,GAErC,GAD0BC,KAAKupB,QAAvB3R,QAGc7X,EAAdihB,Y,0CASRhhB,KAAKwkC,iBAELzR,KAASzkB,GAAG,2BAA4BtO,KAAKk/B,4BAE7C/vB,IAAUb,GAAG,mCAAoCtO,KAAK8O,wBACtDK,IAAUb,GAAG,wBAAyBtO,KAAKykC,yBAC3Ct1B,IAAUb,GAAG,yBAA0BtO,KAAKglC,mBAC5C71B,IAAUb,GAAG,wBAAyBtO,KAAKglC,mBAC3C71B,IAAUb,GAAG,qBAAsBtO,KAAK8kC,sBAExCxB,GAAYh1B,GAAG,uBAAwBtO,KAAKwjC,wBAE5C3lB,KAAgBvP,GAAG,kBAAmBtO,KAAK2d,sB,6CAI3CoV,KAASxkB,IAAI,2BAA4BvO,KAAKk/B,4BAE9C/vB,IAAUZ,IAAI,mCAAoCvO,KAAK8O,wBACvDK,IAAUZ,IAAI,wBAAyBvO,KAAKykC,yBAC5Ct1B,IAAUZ,IAAI,yBAA0BvO,KAAKglC,mBAC7C71B,IAAUZ,IAAI,wBAAyBvO,KAAKglC,mBAC5C71B,IAAUZ,IAAI,qBAAsBvO,KAAK8kC,sBAEzCxB,GAAY/0B,IAAI,uBAAwBvO,KAAKwjC,wBAE7C3lB,KAAgBtP,IAAI,kBAAmBvO,KAAK2d,sB,mCA6HnClI,GAAqC,IAA5B6vB,EAA2B,uDAAd,GAAInd,EAAU,uCACrCyM,EAAa50B,KAAKjB,MAAlB61B,SAEFoR,EAAiBvwB,EAAQoE,OAAOyrB,GAAY/hB,KAAK,SAACvR,EAAGi0B,GACvD,OAAOC,YAAaf,YAAac,EAAGrR,GAAWuQ,YAAanzB,EAAG4iB,MAG9D2P,EAAY4B,iBAAiBnmC,KAAKjB,MAAMwW,MAAOywB,GAKpDhmC,KAAKN,SAAS,CAAE6V,MAAOywB,GAAkB7d,GAJjCA,GAAUA,M,mCAkClBnoB,KAAKN,SAAS,CACVqpB,OAAQrnB,KAAKkL,IAAI5M,KAAKjB,MAAMgqB,OAASqd,IAAkB,O,yLAI9CC,E,gCACL5pB,EAASzc,KAAKP,MAAdgd,K,EAC4Bzc,KAAKjB,MAAjCgqB,E,EAAAA,OAAQxT,E,EAAAA,MAAOqf,E,EAAAA,WAEnBrf,GAASwT,EAAS,EAAIqd,IAAmB7wB,EAAMzB,Q,uBAC/C9T,KAAKN,SAAS,CACVqpB,OAAQA,EAASqd,M,8BAKrBpmC,KAAKuoB,Q,wDAIL+d,EAAc,sBACdC,EAAe,GACdF,GAAW9wB,GAASA,EAAMzB,OAAS,IAC9B5E,EAAOC,IAAU1G,IAAI8M,EAAMA,EAAMzB,OAAS,OAE5CwyB,EAAcnB,YAAaj2B,EAAK9P,GAAIw1B,GACpC2R,EAAer3B,EAAK9P,IAIf,iBAATqd,GAAyBrK,QAAQo0B,IAAI,qBAAsBF,EAAaC,GAC5EvmC,KAAKuoB,SAAU,E,UACMlpB,IAAgBC,KAAK,CACtC,QAAS,WACT24B,UAAWrD,EACX9f,eAAgByxB,EAChB1xB,aAAcyxB,EACdvxB,MAAOqxB,MACRpd,QAAQ,WACP,EAAKT,SAAU,EACF,iBAAT9L,GAAyBrK,QAAQo0B,IAAI,qBACrCH,GACAhnC,IAAgByF,aAAa,CAAE,QAAS,2BAA4B0c,KAAMoT,M,SAV5Ep1B,E,QAcKkW,SAAS5B,OAAS,GAAKtU,EAAOkW,SAAS,KAAO6wB,GACrD/mC,EAAOkW,SAAS+wB,QAGhBJ,EACArmC,KAAK0mC,aAAalnC,EAAOkW,SAAU,WAC/B,EAAKwK,iBAAiB1gB,EAAOkW,UAC7B,EAAKkvB,YAEDplC,EAAOkW,SAAS5B,OAASsyB,KACzB,EAAK/d,aAGT,IAAM7G,EAAO,EAAK+H,QAAQ3R,QAAQ6tB,aAAa7tB,QAC1C4J,IACLA,EAAKR,UAAY,KAIrBhhB,KAAK2mC,YAAYnnC,EAAOkW,SAAU,WAE9B,EAAKwK,iBAAiB1gB,EAAOkW,Y,4IAKxBD,GACb,IAAM/F,EAAQlH,IAAUmH,WACxBgG,YAAiBjG,EAAO+F,K,kCAGhBA,EAAS0S,GACjB,GAAuB,IAAnB1S,EAAQ3B,OAAZ,CAD2B,IAQrB8yB,GAFY5mC,KAAKjB,MAAfwW,OAEmB,IAAIsE,OAAOpE,GACtCzV,KAAKN,SAAS,CAAE6V,MAAOqxB,EAAU7d,OAAQ6d,EAAS9yB,OAAS,EAAIsyB,KAAoBje,QAP3EA,GAAUA,M,mCAUT5S,EAAO4S,GAChBnoB,KAAKN,SAAS,CAAE6V,QAAOwT,OAAQ,GAAKZ,K,oCAMpCnH,GAFahhB,KAAKupB,QAAQ3R,QAAQ6tB,aAAa7tB,W,+BAczC,IAAD,SACmD5X,KAAKP,MAArDwb,EADH,EACGA,KAAM8qB,EADT,EACSA,WADT,KACqBF,YADrB,EACkCC,aACH9lC,KAAKjB,OAAjCwW,EAFH,EAEGA,MAAeqf,GAFlB,EAEU7L,OAFV,EAEkB6L,UAGvB,IAAK3Z,EAAM,OAAO,KAElBjb,KAAKI,OAAS,GAEd,GAAImV,EAAO,CAEPA,EAAMxT,QAAQ,SAAAT,GACNk0B,YAAal0B,EAAGszB,IACDtzB,IAGvBtB,KAAKI,OAASmV,OAIX,GAAIwwB,EAAY,CAEnBA,EAAWhkC,QAAQ,SAAAT,GACXk0B,YAAal0B,EAAGszB,IACDtzB,IAGvBtB,KAAKI,OAAS2lC,EAAW1wB,IAAI,SAAA/T,GAAC,OAAIA,EAAElC,SAUV,iBAAtBw1B,EAAS,UACCiS,MAAM7kC,KAAK6kC,MAAM,KAAKxxB,IAAI,SAAC/T,EAAGmmB,GAAJ,OAAc,kBAAC,GAAD,CAAmB1Q,IAAK0Q,EAAOA,MAAOA,MAIhG,OACI,kBAAC,GAAD,CACIjM,IAAKxb,KAAKupB,QACVtpB,UAAU,eACVG,OAAQJ,KAAKI,OACbs6B,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA15B,GAAC,OAAI,EAAK05B,WAAW15B,EAAG,EAAKlB,SACzCkqB,SAAUtqB,KAAKspB,kB,wCAzLHwd,EAAYxB,GAChC,GAAIwB,EAAWhzB,SAAWwxB,EAAWxxB,OAAQ,CACzC,IAAK,IAAIM,EAAI,EAAGA,EAAI0yB,EAAWhzB,OAAQM,IACnC,GAAI0yB,EAAW1yB,KAAOkxB,EAAWlxB,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,M,GAjQW7T,IAAMC,WCpD1BumC,G,iLACQ,IAAD,EACmD/mC,KAAKP,MAArDqQ,EADH,EACGA,EAAGk3B,EADN,EACMA,aAAc1jB,EADpB,EACoBA,MAAOyiB,EAD3B,EAC2BA,WAAY1qB,EADvC,EACuCA,QAE5C,OACI,oCACI,yBAAKpb,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,sCAAsCoM,QAASgP,GACjE,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,oBAGnD,yBAAK7P,UAAU,mBACX,kBAAC,GAAD,CACIwc,KAAK,kBACLjB,IAAKwrB,EACLjB,WAAYA,EACZ9qB,MAAM,EACNqI,MAAOA,U,GApBT/iB,IAAMC,WA8BbiR,iBAAkBs1B,I,UClClBxkC,eACX,0BAAMC,EAAE,suBACR,UCSEykC,I,kNACFloC,MAAQ,CACJ8mB,aAAa,EACbhiB,IAAK,EACLF,KAAM,G,EAGV4zB,kB,sCAAoB,WAAMvzB,GAAN,iBAAAgO,EAAA,qDACZhO,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAEc,EAAK5H,MAArB8mB,YAGJ,EAAKnmB,SAAS,CAAEmmB,aAAa,KAEvBliB,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QAElB,EAAK/G,SAAS,CACVmmB,aAAa,EACbliB,OACAE,SAhBQ,yC,wDAqBpBkiB,uBAAyB,SAAA/hB,GACjBA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAEmmB,aAAa,K,EAGjCf,aAAe,SAAA9gB,GACX,EAAK+hB,0BAILmhB,EAFqB,EAAKznC,MAAlBynC,a,wEAKF,IAAD,EAC8ClnC,KAAKP,MAAhD4O,EADH,EACGA,OAAQ6B,EADX,EACWA,SAAUK,EADrB,EACqBA,kBAAmBT,EADxC,EACwCA,EADxC,EAE8B9P,KAAKjB,MAAhC8mB,EAFH,EAEGA,YAAahiB,EAFhB,EAEgBA,IAAKF,EAFrB,EAEqBA,KAEpBiO,EAAaC,YAAkBxD,EAAQkC,EAAmBT,GAEhE,OACI,oCACI,kBAACwP,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAU,WAAWoM,QAAS6D,EAAU8V,cAAehmB,KAAKu3B,mBACzE,kBAAC,EAAD,CAAU/mB,QAAM,EAACnC,OAAQA,EAAQkC,kBAAmBA,EAAmBD,YAAU,IACjF,yBAAKrQ,UAAU,kBAAkB2R,IAErC,kBAACwT,GAAA,EAAD,CACInK,KAAM4K,EACNxK,QAASrb,KAAK+lB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAEnhB,MAAKF,QACvB2hB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,oBACpB,kBAAC+e,GAAA,EAAD,CAAUrZ,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBACtB,kBAACgf,GAAA,EAAD,CAAUtZ,QAASrM,KAAK8kB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC2nB,GAAD,OAEJ,kBAAC1nB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oB,GA3E/BvP,IAAM6mC,gBA2F5BH,GAAQr4B,aAAe,CACnB2B,mBAAmB,GAGRkB,qBAAkBw1B,IChG3BI,I,kNACFtoC,MAAQ,CACJ8mB,aAAa,EACbhiB,IAAK,EACLF,KAAM,G,EAGV4zB,kB,sCAAoB,WAAMvzB,GAAN,iBAAAgO,EAAA,qDACZhO,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAEc,EAAK5H,MAArB8mB,YAGJ,EAAKnmB,SAAS,CAAEmmB,aAAa,KAEvBliB,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QAElB,EAAK/G,SAAS,CACVmmB,aAAa,EACbliB,OACAE,SAhBQ,yC,wDAqBpBkiB,uBAAyB,SAAA/hB,GACjBA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAEmmB,aAAa,K,EAGjCf,aAAe,SAAA9gB,GACX,EAAK+hB,0BAILmhB,EAFqB,EAAKznC,MAAlBynC,a,wEAKF,IAAD,EAC0BlnC,KAAKP,MAA5BqQ,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQhC,EADd,EACcA,QADd,EAE8BrM,KAAKjB,MAAhC8mB,EAFH,EAEGA,YAAahiB,EAFhB,EAEgBA,IAAKF,EAFrB,EAEqBA,KAE1B,OACI,oCACI,kBAAC2b,GAAA,EAAD,CACIC,QAAM,EACNtf,UAAU,sBACVoM,QAASA,EACT2Z,cAAehmB,KAAKu3B,mBACpB,kBAAC,GAAD,CAAMlpB,OAAQA,KAElB,kBAAC+W,GAAA,EAAD,CACInK,KAAM4K,EACNxK,QAASrb,KAAK+lB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAEnhB,MAAKF,QACvB2hB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,oBACpB,kBAAC+e,GAAA,EAAD,CAAUrZ,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBACtB,kBAACgf,GAAA,EAAD,CAAUtZ,QAASrM,KAAK8kB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC2nB,GAAD,OAEJ,kBAAC1nB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oB,GA5ErBvP,IAAM6mC,gBA2FvB31B,iBAAkB41B,IC9BlBC,I,mBAhEX,WAAY7nC,GAAQ,IAAD,8BACf,4CAAMA,KA8BV0wB,qBAAuB,SAAAtiB,GAAW,IACtBuiB,EAA+BviB,EAA/BuiB,WAAYkH,EAAmBzpB,EAAnBypB,eAEpB,EAAK53B,SAAS,CACV0wB,WAAYA,EACZkH,eAAgBA,KAjCpB,EAAKv4B,MAAQ,CACTqxB,WAAY2C,KAASsG,YACrB/B,eAAgB,MALL,E,mFASGlnB,EAAWC,GAAY,IACjChC,EAAWrO,KAAKP,MAAhB4O,OAER,OAAIgC,EAAU+f,aAAe/hB,GAIzBgC,EAAUinB,iBAAmBjpB,I,0CAQjC0kB,KAASzkB,GAAG,qBAAsBtO,KAAKmwB,wB,6CAIvC4C,KAASxkB,IAAI,qBAAsBvO,KAAKmwB,wB,+BAYlC,IAAD,EACuBnwB,KAAKP,MAAzB4O,EADH,EACGA,OAAQhC,EADX,EACWA,QACIk7B,EAAmBvnC,KAAKjB,MAApCqxB,WAEF5P,EAAW1K,YAAgBzH,GAEjC,OACI,kBAACiR,GAAA,EAAD,CACIC,QAAM,EACNtf,UAAWgM,IAAW,oBAAqB,CAAE,gBAAiBoC,IAAWk5B,IACzEl7B,QAASA,GACT,yBAAKpM,UAAU,6BACX,kBAAC,GAAD,CAAMoO,OAAQA,EAAQ4O,SAAUuD,EAAW,IAAMA,EAAW,a,GArDlDjgB,IAAMC,Y,iPCK9BgnC,G,YACF,WAAY/nC,GAAQ,IAAD,8BACf,4CAAMA,KA8BV0wB,qBAAuB,SAAAtiB,GACnB,EAAKnO,S,uVAAL,IACOmO,KA9BP,EAAK9O,MAAQ,CACTqxB,WAAY2C,KAASsG,YACrBoO,cAAe1U,KAAS2U,gBALb,E,mFASGt3B,EAAWC,GAAY,IAAD,EACVrQ,KAAKP,MAA3B4O,EADgC,EAChCA,OAAQsW,EADwB,EACxBA,UAEhB,OAAItU,EAAU+f,aAAe/hB,GAAUgC,EAAUo3B,gBAAkB9iB,GAI/DtU,EAAUinB,iBAAmBjpB,GAAUgC,EAAUs3B,oBAAsBhjB,I,0CAQ3EoO,KAASzkB,GAAG,qBAAsBtO,KAAKmwB,wB,6CAIvC4C,KAASxkB,IAAI,qBAAsBvO,KAAKmwB,wB,+BASlC,IAAD,EACiDnwB,KAAKP,MAAnD4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAAWijB,EADtB,EACsBA,WAAYv7B,EADlC,EACkCA,QAASyD,EAD3C,EAC2CA,EAC1Cy3B,EAAiBvnC,KAAKjB,MAAMqxB,WAC5ByX,EAAoB7nC,KAAKjB,MAAM0oC,cAC/BnxB,EAAUa,KAAa1O,IAAI4F,EAAQsW,GAEjCkE,EAAmBvS,EAAnBuS,eAEFgG,EAAOiZ,YAAexxB,GACtB0d,EAAa+T,YAAqBzxB,EAASxG,GAC3Ck4B,EAAiBC,YAAyB3xB,EAASxG,GACnDuH,EAAU6wB,aAAW5xB,EAASxG,IAAM,OACpC6B,EAAWtD,IAAWk5B,GAAkB5iB,IAAckjB,EAEtDM,EACFtf,GAAkB+e,EACd,kBAACQ,GAAA,EAAD,CAAUt6B,OAAQ+a,EAAgBrY,QAAM,IAExC,kBAAC,EAAD,CAAUnC,OAAQA,EAAQmC,QAAM,IAGxC,OACI,kBAAC8O,GAAA,EAAD,CAAUC,QAAM,EAACtf,UAAWgM,IAAW,gBAAiB,CAAE,gBAAiB0F,IAAatF,QAASA,GAC7F,yBAAKpM,UAAU,kBACVkoC,EACD,yBAAKloC,UAAU,wBACX,yBAAKA,UAAU,kBACV2nC,GAAcI,EACX,yBAAK/nC,UAAU,gBAAgB+nC,GAE/B,kBAAC,GAAD,CAAa35B,OAAQA,IAEzB,yBAAKpO,UAAU,eAAe4uB,IAElC,yBAAK5uB,UAAU,mBACX,yBAAKA,UAAU,kBAEP,qCACM2nC,GAAc5T,GACZ,0BAAM/zB,UAAU,yBAAyB+zB,EAAzC,MAEH3c,Y,GA/Ed9W,IAAMC,WAkGlBiR,iBAAkB+1B,I,OC5FlBa,OAff,YAAmE,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,UAAWl8B,EAAqB,EAArBA,QAASm8B,EAAY,EAAZA,SAClD,OACI,yBAAKvoC,UAAU,kBACX,yBAAKA,UAAWgM,IAAW,uBAAwB,CAAE,iCAAkCs8B,KAAeC,GACrG3hB,QAAQyhB,IAAY,uBAAGj8B,QAASA,GAAUi8B,K,kkBCiBjDG,G,YACF,WAAYhpC,GAAQ,IAAD,8BACf,4CAAMA,KAmBVgnB,cAAgB,SAAAziB,GACZ,KAAImX,KAAautB,OAAO50B,OAAS,KAI7B9P,EAAM2kC,YAIV,OAAQ3kC,EAAM+S,KACV,IAAK,SACD/S,EAAM8B,iBACN9B,EAAM2C,kBACN3C,EAAMC,OAAO8D,OAEb,EAAKL,gBAnCE,EA4DnBkhC,oBAAsB,SAAA7J,GAId,IAHJ,IAAM8J,EAAM,GACNxzB,EAAM,IAAInB,IAEHE,EAAI,EAAGA,EAAI2qB,EAAQjrB,OAAQM,IAAK,CACzC,IAAI5U,EAASu/B,EAAQ3qB,IAAM2qB,EAAQ3qB,GAAGsB,SACtC,GAAIlW,EACA,IAAK,IAAIspC,EAAI,EAAGA,EAAItpC,EAAOsU,OAAQg1B,IAC1BzzB,EAAIhB,IAAI7U,EAAOspC,MAChBzzB,EAAI2D,IAAIxZ,EAAOspC,GAAItpC,EAAOspC,IAC1BD,EAAI7zB,KAAKxV,EAAOspC,KAUhC,OAJAD,EAAItlB,KAAK,SAACvR,EAAGi0B,GACT,OAAOC,YAAaf,YAAac,GAAId,YAAanzB,MAG/C62B,GAhFQ,EAmFnBtvB,WAnFmB,sCAmFN,WAAMxH,GAAN,2EAAAC,EAAA,wDACT,EAAK+2B,UAAY,IAAIha,KACrB,EAAKhd,KAAOA,EACNg3B,EAAY,EAAKA,UACnBr5B,EAAQ,KAIJrB,EAAW,EAAK5O,MAAhB4O,OACAmH,EAAkB,EAAKzW,MAAvByW,cAEHnH,EAXI,wBAYCsG,EAAW,GACXq0B,EAAe3pC,IAAgBC,KAAK,CACtC,QAAS,cACT2a,MAAOlI,EACPgD,MAAO,MAEXJ,EAASK,KAAKg0B,IAERtvB,EAAYnF,GAAcxC,KACf2H,IAAc3H,IACrBk3B,EAAoB5pC,IAAgBC,KAAK,CAC3C,QAAS,cACT2a,MAAOP,EACP3E,MAAO,MAEXJ,EAASK,KAAKi0B,KAGZtvB,EAAe/F,GAAiB7B,KAClB4H,IAAiB5H,IAC3Bm3B,EAAuB7pC,IAAgBC,KAAK,CAC9C,QAAS,cACT2a,MAAON,EACP5E,MAAO,MAEXJ,EAASK,KAAKk0B,IArCb,UAwCiB9zB,QAAQzC,IAAIgC,EAASU,IAAI,SAAA/T,GAAC,OAAIA,EAAEgU,MAAM,SAAAlJ,GAAC,OAAI,UAxC5D,WAwCC2yB,EAxCD,OAyCCoK,EAAQ,EAAKP,oBAAoB7J,GAEnCgK,IAAc,EAAKA,UA3ClB,sDA+CDvzB,IACQ1F,EAAM,EAAKrQ,MAAXqQ,EAEFyJ,EAAaxH,EAAKmS,gBAClBklB,EAAuB,CAAC,iBAAkBt5B,EAAE,iBAAiBoU,gBAG1CmlB,KAAK,SAAA/mB,GAAE,OAAIA,EAAGgnB,SAAS/vB,MAC3CG,GAAa0vB,EAAqBC,KAAK,SAAA/mB,GAAE,OAAIA,EAAGgnB,SAAS5vB,EAAUwK,mBAEpEilB,EAAMI,OAAO,EAAG,EAAG/zB,EAAcpW,KAIzC,EAAKM,SAAS,CACVmE,IAAK,KACL2lC,cAAe,KACfL,MAAOA,IAGXz5B,EAAQlH,IAAUmH,WAClBgG,YAAiBjG,EAAOy5B,MAGxBM,GADIA,EAAc13B,EAAKuH,QACG2R,WAAW,KAAOwe,EAAYC,OAAO,GAAKD,GACpD31B,QAAU61B,MAxErB,wBAyEKC,EAAiB,GAEjBC,EAAgBxqC,IAAgBC,KAAK,CACvC,QAAS,oBACT2a,MAAOwvB,IAEXG,EAAe50B,KAAK60B,GAEhBnwB,IAEAowB,GADIA,EAAmBpwB,EAAUJ,QACG2R,WAAW,KAAO6e,EAAiBJ,OAAO,GAAKI,GAC9Dh2B,QAAU61B,MAAuBG,IAAqBL,IACjEM,EAAqB1qC,IAAgBC,KAAK,CAC5C,QAAS,oBACT2a,MAAO6vB,IAEXF,EAAe50B,KAAK+0B,IAzF3B,UA6F2B30B,QAAQzC,IAAIi3B,EAAev0B,IAAI,SAAA/T,GAAC,OAAIA,EAAEgU,MAAM,SAAAlJ,GAAC,OAAI,UA7F5E,WA6FK49B,EA7FL,OA8FKC,EAAS,EAAKrB,oBAAoBoB,GAEpCjB,IAAc,EAAKA,UAhGtB,mDAoGD,EAAKrpC,SAAS,CACVuqC,WAGJv6B,EAAQlH,IAAUmH,WAClBgG,YAAiBjG,EAAOu6B,GAzGvB,wBA2GD,EAAKvqC,SAAS,CACVuqC,OAAQ,OA5GX,WAiHLhhB,EAAW,IACX5a,EAlHK,kCAmHYhP,IAAgBC,KAAK,CAClC,QAAS,qBACTmQ,QAASpB,EACT4L,MAAOlI,EACP8W,eAAgB,EAChBC,gBAAiB,EACjBC,OAAQ,EACRhU,MAAO,GACP+E,OAAQ,OA3HP,QAmHLmP,EAnHK,gDA8HY5pB,IAAgBC,KAAK,CAClC,QAAS,iBACT24B,UAAW,CAAE,QAAS,gBACtBhe,MAAOlI,EACPm4B,YAAa,EACbp1B,eAAgB,EAChBq1B,kBAAmB,EACnBp1B,MAAO,KArIN,QA8HLkU,EA9HK,kBAyIT9R,KAAaiS,SAASH,EAASA,UAE3BmhB,EAAc,KACb/7B,EA5II,4CA8I6BhP,IAAgBC,KAAK,CAC/C,QAAS,qBACT0rB,IAAKjZ,IAhJR,QA8IKs4B,EA9IL,OAoJDlzB,KAAaiS,SAAS,CAACihB,EAAgB/zB,UAEvC8zB,EAAcC,EAtJb,mDAwJDj4B,QAAQo0B,IAAI,mBAAqBz0B,EAAO,yBAAxC,MAxJC,WA8JLg3B,IAAc,EAAKA,UA9Jd,mDA2KT,IAPA,EAAKrpC,SAAS,CACVupB,WACAmhB,gBAGE70B,EAAQ,IAAIrB,IACZkP,EAAQ,IAAIlP,IACTE,EAAI,EAAGA,EAAI6U,EAASA,SAASnV,OAAQM,IAC1CmB,EAAMyD,IAAIiQ,EAASA,SAAS7U,GAAG3E,QAASwZ,EAASA,SAAS7U,GAAG3E,SACzDwZ,EAASA,SAAS7U,GAAGyU,gBACrBzF,EAAMpK,IAAIiQ,EAASA,SAAS7U,GAAGyU,eAAgBI,EAASA,SAAS7U,GAAGyU,gBAIxEuhB,IACQ36B,GADM,EACsB26B,GAA5B36B,QAASoZ,EADJ,EACIA,eAEjBtT,EAAMyD,IAAIvJ,EAASA,GACfoZ,GACAzF,EAAMpK,IAAI6P,EAAgBA,IAIlCnZ,EAAQlH,IAAUmH,WAClBgG,YAAiBjG,EAAD,aAAY6F,EAAM+0B,SAClCjqB,YAAiB3Q,EAAD,aAAY0T,EAAMknB,SA7LzB,yDAnFM,wDAmRnB71B,YAnRmB,qBAmRL,4CAAAzC,EAAA,yDACS,EAAKvS,MAAhB4O,OADE,uBAGN,EAAK3O,SAAS,CACVmE,IAAK,KACL2lC,cAAe,KACfL,MAAO,KACPc,OAAQ,KACRhhB,SAAU,KACVmhB,YAAa,OATX,iCAeJG,EAAalrC,IAAgBC,KAAK,CACpC,QAAS,cACTkrC,SAAU,CAAE,QAAS,wBACrBz1B,MAAO,KACRO,MAAM,WACL,MAAO,CAAE,QAAS,QAASI,SAAU,MAGnC+0B,EAAuBprC,IAAgBC,KAAK,CAC9C,QAAS,cACT2a,MAAO,GACPlF,MAAO,MACRO,MAAM,WACL,MAAO,CAAE,QAAS,QAASI,SAAU,MAGnCT,EAAuB5V,IAAgBC,KAAK,CAC9C,QAAS,oBACTyO,QAASE,IAAUiH,UACnBC,OAAO,IACRG,MAAM,SAAAjD,MAnCC,SAqCwC+C,QAAQzC,IAAI,CAC1D43B,EACAE,EACAx1B,IAxCM,mCAqCHpR,EArCG,KAqCE2lC,EArCF,KAqCiBh0B,EArCjB,KA2CV,EAAK9V,SAAS,CACVmE,MACA2lC,gBACAh0B,gBACA2zB,MAAO,KACPc,OAAQ,KACRhhB,SAAU,KACVmhB,YAAa,OAGX16B,EAAQlH,IAAUmH,WACxBgG,YAAiBjG,EAAO7L,EAAI6R,UAC5BC,YAAiBjG,EAAO85B,EAAc9zB,UAvD5B,0CAnRK,EA6UnBg1B,yBAA2B,SAAA1mC,GACvBA,EAAM2C,kBAENtH,IAAgBC,KAAK,CACjB,QAAS,4BAGb,EAAKI,SAAS,CAAE8pC,cAAe,QApVhB,EAuVnBmB,oBAAsB,SAACt8B,EAAQsW,EAAWimB,EAAaC,GAAc,IACzDC,EAAoB,EAAKrrC,MAAzBqrC,gBAEJF,GACAvrC,IAAgBC,KAAK,CACjB,QAAS,uBACTmQ,QAASpB,IAIjBy8B,EAAgBz8B,EAAQsW,EAAWkmB,IAjWpB,EAoWnBvhB,aAAe,WACX,IAAM9H,EAAO,EAAK+H,QAAQ3R,QAEtB4J,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,MAC1D,EAAKuhB,kBAxWM,EA4WnBC,UAAY,SAAA/hB,GACR,IAAMnV,EAASmV,EAAWA,EAASA,SAASnV,OAAS,EAMrD,MAAO,CACHo2B,YALep2B,EAAS,EAAImV,EAASA,SAASnV,EAAS,GAAG+a,KAAO,EAMjE/Z,eALiBhB,EAAS,EAAImV,EAASA,SAASnV,EAAS,GAAGrE,QAAU,EAMtE06B,kBALoBr2B,EAAS,EAAImV,EAASA,SAASnV,EAAS,GAAG1U,GAAK,IAjXzD,EA0XnB6rC,eAAiB,SAAChiB,EAAUzpB,GACxB,OAAKA,GACAA,EAAOypB,SAASnV,OAEhBmV,GACAA,EAASA,SAASnV,OAEhB,CACHoV,YAAa1pB,EAAO0pB,YACpBD,SAAUA,EAASA,SAASpP,OAAOra,EAAOypB,WALxBzpB,EAHFypB,GA3XL,EAuYnB8hB,eAvYmB,qBAuYF,4CAAA/4B,EAAA,yDACT,EAAKuW,QADI,oDAGLla,EAAW,EAAK5O,MAAhB4O,OAEF06B,EAAY,EAAKA,UAEf9f,EAAa,EAAKlqB,MAAlBkqB,SAEFF,EAAS,EAAKiiB,UAAU/hB,GAE9B,EAAKV,SAAU,EACX/oB,EAAS,IACT6O,EAbS,kCAcMhP,IAAgBC,KAAK,CAChC,QAAS,qBACTmQ,QAASpB,EACT4L,MAAO,EAAKlI,KACZ8W,eAAgB,EAChBC,gBAAiBC,EAAOohB,kBACxBp1B,MAAO,GACP+E,OAAQ,OArBH,QAcTta,EAdS,gDAwBMH,IAAgBC,KAAhB,IACX,QAAS,iBACT24B,UAAW,CAAE,QAAS,gBACtBhe,MAAO,EAAKlI,MACTgX,EAJQ,CAKXhU,MAAO,MA7BF,QAwBTvV,EAxBS,kBAgCb,EAAK+oB,SAAU,EAEf2iB,aAAwB1rC,EAAQypB,EAAWA,EAASA,SAAW,IAC/D9R,KAAaiS,SAAS5pB,EAAOypB,UAEzB8f,IAAc,EAAKA,UArCV,mDA+Cb,IANA,EAAKrpC,SAAS,CACVupB,SAAU,EAAKgiB,eAAehiB,EAAUzpB,KAGtC+V,EAAQ,IAAIrB,IACZkP,EAAQ,IAAIlP,IACTE,EAAI,EAAGA,EAAI5U,EAAOypB,SAASnV,OAAQM,IACxCmB,EAAMyD,IAAIxZ,EAAOypB,SAAS7U,GAAG3E,QAASjQ,EAAOypB,SAAS7U,GAAG3E,SACrDjQ,EAAOypB,SAAS7U,GAAGyU,gBACnBzF,EAAMpK,IAAIxZ,EAAOypB,SAAS7U,GAAGyU,eAAgBrpB,EAAOypB,SAAS7U,GAAGyU,gBAIlEnZ,EAAQlH,IAAUmH,WACxBgG,YAAiBjG,EAAD,aAAY6F,EAAM+0B,SAClCjqB,YAAiB3Q,EAAD,aAAY0T,EAAMknB,SAxDrB,0CAvYE,EAkcnBa,qBAAuB,SAAAnnC,GACnBA,EAAM2C,mBAncS,EAscnBe,YAAc,YAGV2T,EAFoB,EAAK5b,MAAjB4b,YAvcO,EA4cnB+vB,8BA5cmB,sCA4ca,WAAM/8B,GAAN,eAAA2D,EAAA,wDACvB3D,EADuB,iEAGtBhP,IAAgBC,KAAK,CACvB,QAAS,0BACTmQ,QAASpB,IALe,UAQpBm7B,EAAkB,EAAKzqC,MAAvByqC,cARoB,iDAW5B,EAAK9pC,SAAS,CACV8pC,cAAc,MAAMA,EAAP,CAAsB9zB,SAAU8zB,EAAc9zB,SAASoE,OAAO,SAAAxY,GAAC,OAAIA,IAAM+M,QAZ9D,yCA5cb,wDA4dnBg9B,oBA5dmB,sCA4dG,WAAMh9B,GAAN,eAAA2D,EAAA,wDACb3D,EADa,iEAGZhP,IAAgBC,KAAK,CACvB,QAAS,gBACTmQ,QAASpB,EACTm8B,SAAU,CACN,QAAS,0BAPC,UAWV3mC,EAAQ,EAAK9E,MAAb8E,IAXU,iDAclB,EAAKnE,SAAS,CACVmE,IAAI,MAAMA,EAAP,CAAY6R,SAAU7R,EAAI6R,SAASoE,OAAO,SAAAxY,GAAC,OAAIA,IAAM+M,QAf1C,yCA5dH,sDAGf,EAAKi9B,gBAAkB,IAAIC,KAAgB,EAAK9kB,eAChD,EAAK8C,QAAUhpB,IAAMsa,YACrB,EAAK9b,MAAQ,GALE,E,iFAQE,IACTgT,EAAS/R,KAAKP,MAAdsS,KAER/R,KAAKwrC,oBAAoBz5B,GAEzB05B,KAAgBC,IAAI1rC,KAAKsrC,mB,6CAIzBG,KAAgBzO,OAAOh9B,KAAKsrC,mB,yCAuBbzrC,EAAWC,EAAWC,GAAW,IAAD,EACtBC,KAAKP,MAAtB4O,EADuC,EACvCA,OAAQ0D,EAD+B,EAC/BA,KAEZlS,EAAUkS,OAASA,EACnB/R,KAAKwrC,oBAAoBz5B,GAClBlS,EAAUwO,SAAWA,GAC5BrO,KAAKwrC,oBAAoBz5B,K,0CAIbA,GAChB,IAAM03B,EAAc13B,EAAOA,EAAKuH,OAAS,GAEpCmwB,EAGDzpC,KAAKuZ,WAAWkwB,GAFhBzpC,KAAKyU,gB,+BAybH,IAAD,SACiBzU,KAAKP,MAAnB4O,EADH,EACGA,OAAQyB,EADX,EACWA,EADX,EAEgE9P,KAAKjB,MAAlE8E,EAFH,EAEGA,IAAK2lC,EAFR,EAEQA,cAAeL,EAFvB,EAEuBA,MAAOc,EAF9B,EAE8BA,OAAQhhB,EAFtC,EAEsCA,SAAUmhB,EAFhD,EAEgDA,YAE/Cl7B,EAAOC,IAAU1G,IAAI4F,GAErBs9B,EACF9nC,GAAOA,EAAI6R,SACL7R,EAAI6R,SAASL,IAAI,SAAA/T,GAAC,OACd,kBAAC,GAAD,CACIyV,IAAKzV,EACL+M,OAAQ/M,EACR4O,SAAU,kBAAM,EAAKy6B,oBAAoBrpC,EAAG,MAAM,GAAO,IACzD4lC,SAAU,kBAAM,EAAKmE,oBAAoB/pC,QAGjD,GAEJsqC,EACFpC,GAAiBA,EAAc9zB,SACzB8zB,EAAc9zB,SAASL,IAAI,SAAA/T,GAAC,OACxB,kBAAC,GAAD,CACIyV,IAAKzV,EACL+M,OAAQ/M,EACR+K,QAAS,kBAAM,EAAKs+B,oBAAoBrpC,EAAG,MAAM,GAAM,IACvD4lC,SAAU,kBAAM,EAAKkE,8BAA8B9pC,QAG3D,GAEJuqC,EAAa1C,EACbA,EAAM9zB,IAAI,SAAA/T,GAAC,OACP,kBAAC,GAAD,CACIyV,IAAKzV,EACL+M,OAAQ/M,EACR+K,QAAS,kBAAM,EAAKs+B,oBAAoBrpC,EAAG,MAAM,GAAM,QAG/D,GAEAwqC,EAAiB,IAAI53B,IACrB63B,EAAc9B,EACdA,EAAO50B,IAAI,SAAA/T,GAGP,OAFAwqC,EAAe9yB,IAAI1X,EAAGA,GAGlB,kBAAC,GAAD,CACIyV,IAAKzV,EACL+M,OAAQ/M,EACR+K,QAAS,kBAAM,EAAKs+B,oBAAoBrpC,EAAG,MAAM,GAAM,QAInE,GAEA0qC,EACF5B,GAAeA,EAAY36B,UAAY26B,EAAY9zB,UAAYw1B,EAAez3B,IAAI+1B,EAAY36B,SAC1F,kBAAC,GAAD,CACIsH,IAAKqzB,EAAY36B,QACjBpB,OAAQ+7B,EAAY36B,QACpBpD,QAAS,kBAAM,EAAKs+B,oBAAoBP,EAAY36B,QAAS,MAAM,GAAM,MAE7E,KAEFw8B,EAAoB,IAAI/3B,IACxBg4B,EACFjjB,GAAYA,EAASA,SACfA,EAASA,SAAS5T,IAAI,SAAA/T,GAClB,IAAMyV,EAAG,UAAMzV,EAAEmO,QAAR,YAAmBnO,EAAElC,IAG9B,OAFA6sC,EAAkBjzB,IAAIjC,EAAKA,GAGvB,kBAAC,GAAD,CACIA,IAAKA,EACL1I,OAAQ/M,EAAEmO,QACVkV,UAAWrjB,EAAElC,GACbwoC,WAAY/gB,QAAQxY,GACpBhC,QAAS,kBAAM,EAAKs+B,oBAAoBrpC,EAAEmO,QAASnO,EAAElC,IAAI,GAAO,QAI5E,GAEJ+sC,EACF/B,GACAA,EAAY9zB,UACX21B,EAAkB53B,IAAlB,UAAyB+1B,EAAY9zB,QAAQ7G,QAA7C,YAAwD26B,EAAY9zB,QAAQlX,KACzE,kBAAC,GAAD,CACI2X,IAAG,UAAKqzB,EAAY9zB,QAAQ7G,QAAzB,YAAoC26B,EAAY9zB,QAAQlX,IAC3DiP,OAAQ+7B,EAAY9zB,QAAQ7G,QAC5BkV,UAAWylB,EAAY9zB,QAAQlX,GAC/BwoC,YAAY,EACZv7B,QAAS,kBACL,EAAKs+B,oBAAoBP,EAAY9zB,QAAQ7G,QAAS26B,EAAY9zB,QAAQlX,IAAI,GAAO,MAG7F,KAEJgtC,EAAQnjB,EAAWA,EAASC,YAAc,EAE1CkhB,GACAA,EAAY9zB,UACX21B,EAAkB53B,IAAlB,UAAyB+1B,EAAY9zB,QAAQ7G,QAA7C,YAAwD26B,EAAY9zB,QAAQlX,MAE7EgtC,IAGJ,IAAIC,EAAkBv8B,EAAE,cAKxB,OAJIs8B,IACAC,EAA4B,IAAVD,EAAc,kBAAd,gBAA2CA,EAA3C,cAIlB,yBAAK5wB,IAAKxb,KAAKupB,QAAStpB,UAAU,SAASqqB,SAAUtqB,KAAKspB,cACrDpa,GACG,oCACI,yBAAKjP,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,qBAClB,yBAAK7P,UAAU,uBACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAMoO,OAAQA,EAAQ4P,YAAY,KAEtC,kBAACnH,EAAA,EAAD,CACI7W,UAAU,sBACV+W,aAAW,SACX9K,YAAalM,KAAK0H,aAClB,kBAAC4E,EAAA,EAAD,SAIZ,yBAAKrM,UAAU,kCAGtB0rC,EAAS73B,OAAS,GACf,oCACI,yBAAK7T,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,cAClB,yBAAK7P,UAAU,wBAAwBqqB,SAAUtqB,KAAKmrC,sBAClD,yBAAKlrC,UAAU,iCACd0rC,EACD,yBAAK1rC,UAAU,mCAGvB,yBAAKA,UAAU,kCAGtB2rC,EAAmB93B,OAAS,GACzB,yBAAK7T,UAAU,wBACX,kBAAC,GAAD,CAAeqoC,QAASx4B,EAAE,eAAgBzD,QAASrM,KAAK0qC,0BACnD56B,EAAE,WAEN87B,GAGRC,EAAW/3B,OAAS,GACjB,oCACI,yBAAK7T,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,qBACjB+7B,GAEL,yBAAK5rC,UAAU,kCAGtB8rC,EAAYj4B,OAAS,GAClB,oCACI,yBAAK7T,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,iBACjBk8B,EACAD,GAEL,yBAAK9rC,UAAU,mCAGrBgpB,GAAamhB,GAAeA,EAAY9zB,UACtC,yBAAKrW,UAAU,wBACX,kBAAC,GAAD,KAAgBosC,GACfF,EACAD,Q,GAjqBJ3rC,IAAMC,WAgrBZiR,iBAAkBg3B,I,UCxoBlB6D,I,mBA1DX,WAAY7sC,GAAQ,IAAD,8BACf,4CAAMA,KAKVgnB,cAAgB,SAAAziB,GACZ,KAAImX,KAAautB,OAAO50B,OAAS,KAI7B9P,EAAM2kC,YAIV,OAAQ3kC,EAAM+S,KACV,IAAK,SAAL,IACYsE,EAAY,EAAK5b,MAAjB4b,QACJA,IACArX,EAAM8B,iBACN9B,EAAM2C,kBACN3C,EAAMC,OAAO8D,OAEbsT,OApBZ,EAAKiwB,gBAAkB,IAAIC,KAAgB,EAAK9kB,eAHjC,E,gFA6BA5mB,EAAWC,EAAWC,GAAW,IACxCkb,EAASjb,KAAKP,MAAdwb,KAEJpb,EAAUob,OAASA,IACfA,EACAwwB,KAAgBC,IAAI1rC,KAAKsrC,iBAEzBG,KAAgBzO,OAAOh9B,KAAKsrC,oB,+BAK9B,IAAD,EACwCtrC,KAAKP,MAA1C+oC,EADH,EACGA,SAAUvtB,EADb,EACaA,KAAMolB,EADnB,EACmBA,QAAShlB,EAD5B,EAC4BA,QAEjC,OACI,kBAACkxB,GAAA,EAAD,CAAOC,UAAU,QAAQC,GAAIxxB,EAAMolB,QAASA,EAASqM,cAAY,EAACC,eAAa,GAC3E,yBAAK1sC,UAAU,gBAAgBob,EAAU9a,IAAMqsC,aAAapE,EAAU,CAAEntB,YAAamtB,Q,GA/C3EjoC,IAAMC,YCLjB+B,eACX,0BAAMC,EAAE,yrCACR,UCFWD,eACX,0BAAMC,EAAE,kiBACR,QCFWD,eACX,0BAAMC,EAAE,ssFACR,UCFWD,eACX,0BAAMC,EAAE,sbACR,Q,oBCSEqqC,G,2MACF9tC,MAAQ,CACJugC,SAAU,KACVrkB,MAAM,G,EAGVmkB,eAAiB,SAAAp7B,GACb,EAAKtE,SAAS,CAAE4/B,SAAUt7B,EAAMu7B,iB,EAGpCC,gBAAkB,WACd,EAAK9/B,SAAS,CAAE4/B,SAAU,Q,EAG9BwN,aAAe,WACX,EAAKtN,kBAEL,EAAK9/B,SAAS,CAAEub,MAAM,K,EAG1B8xB,WAAa,WACT,EAAKrlC,cACLrI,IAAgB2tC,U,EAGpBtlC,YAAc,WACV,EAAKhI,SAAS,CAAEub,MAAM,K,wEAGhB,IACEnL,EAAM9P,KAAKP,MAAXqQ,EADH,EAEsB9P,KAAKjB,MAAxBugC,EAFH,EAEGA,SAAUrkB,EAFb,EAEaA,KAElB,OACI,oCACI,kBAACnE,EAAA,EAAD,CACIkqB,YAAW1B,EAAW,cAAgB,KACtC2B,gBAAc,OACdhhC,UAAU,sBACV+W,aAAW,OACX3K,QAASrM,KAAKo/B,gBACd,kBAAC6N,GAAD,OAEJ,kBAACzM,GAAA,EAAD,CACIphC,GAAG,YACHkgC,SAAUA,EACVrkB,KAAM4L,QAAQyY,GACdjkB,QAASrb,KAAKw/B,gBACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAUtZ,QAASrM,KAAK8sC,cACpB,kBAACttB,GAAA,EAAD,KACI,kBAAC0tB,GAAD,OAEJ,kBAACztB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,cAGjC,kBAAC,IAAD,CACIoL,QAASC,KACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAASrb,KAAK0H,YACd4T,kBAAgB,qBAChB,kBAAC,IAAD,CAAalc,GAAG,qBAAqB0Q,EAAE,YACvC,kBAAC,KAAD,KACI,kBAACq9B,GAAA,EAAD,CAAmBzpC,MAAO,CAAEoP,WAAY,aACnChD,EAAE,sBAGX,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAK0H,YAAauP,MAAM,WACpCnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAK+sC,WAAY91B,MAAM,WACnCnH,EAAE,c,GAnFEvP,IAAMC,WA8FxBiR,iBAAkBo7B,ICzGlBtqC,eACX,0BAAMC,EAAE,8yBACR,QCFWD,eACX,0BAAMC,EAAE,q7DACR,YCiBE4qC,I,kNAEFnsB,iBAAmB,WAAO,IACd5S,EAAW,EAAK5O,MAAhB4O,OAEFa,EAAOC,IAAU1G,IAAI4F,GACtBa,GACAA,EAAKE,OAEV8R,aAA6B,CAAE7S,Y,wEAGzB,IAAD,EAYDrO,KAAKP,MAVL4O,EAFC,EAEDA,OACA8R,EAHC,EAGDA,MACArQ,EAJC,EAIDA,EACAuL,EALC,EAKDA,QACAgyB,EANC,EAMDA,cACAC,EAPC,EAODA,UACAC,EARC,EAQDA,gBACAC,EATC,EASDA,kBACAC,EAVC,EAUDA,WACAC,EAXC,EAWDA,UAEEx+B,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,KAdb,IAgBGE,EAAUF,EAAVE,MAER,OACI,oCACI,yBAAKnP,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAC9C8E,EAAQ,kBAAC7T,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAKrM,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,cAE/C,kBAAC,GAAD,OAEJ,yBAAK7P,UAAU,wBACX,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACIoO,OAAQA,EACRoC,KAAK,EACLwN,YAAY,EACZ1N,mBAAmB,EACnByN,aAAc5O,EAAQpP,KAAKihB,iBAAmB,QAGtD,kBAAC3B,GAAA,EAAD,CAAUrf,UAAU,qBAAqBsf,QAAM,EAAClT,QAASghC,GACrD,kBAAC7tB,GAAA,EAAD,KACI,kBAACmuB,GAAD,OAEJ,kBAACluB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,kBAE7B,kBAACwP,GAAA,EAAD,CAAUrf,UAAU,qBAAqBsf,QAAM,EAAClT,QAASihC,GACrD,kBAAC9tB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,sBAE7B,kBAACwP,GAAA,EAAD,CAAUrf,UAAU,qBAAqBsf,QAAM,EAAClT,QAASkhC,GACrD,kBAAC/tB,GAAA,EAAD,KACI,kBAACia,GAAD,OAEJ,kBAACha,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oBAE7B,kBAACwP,GAAA,EAAD,CAAUrf,UAAU,qBAAqBsf,QAAM,EAAClT,QAASmhC,GACrD,kBAAChuB,GAAA,EAAD,KACI,kBAACouB,GAAD,OAEJ,kBAACnuB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,sBAE7B,kBAACwP,GAAA,EAAD,CAAUtD,WAAW,EAAO/b,UAAU,qBAAqBsf,QAAM,EAAClT,QAASqhC,GACvE,kBAACluB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,cAE7B,kBAACwP,GAAA,EAAD,CAAUtD,WAAW,EAAO/b,UAAU,qBAAqBsf,QAAM,EAAClT,QAASohC,GACvE,kBAACjuB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,qB,GArF9BvP,IAAMC,YAyGViR,iBAAkB27B,I,yCC5HlB7qC,eACX,0BAAMC,EAAE,u+DACR,Y,UCUEqrC,I,0BACF,WAAYpuC,GAAQ,IAAD,uBACf,4CAAMA,KAaVquC,aAAe,WACX,EAAKpuC,SAAS,CACVub,MAAM,KAhBK,EAoBnB8xB,WAAa,WACT,IAAMgB,EAAU,EAAKC,WAAWp2B,QAC3Bm2B,IAELA,EAAQE,mBAAmBC,OAAO,SAAAjQ,GAC9B,IAAMkQ,EAAU9iB,IAAI+iB,gBAAgBnQ,GAEpC,EAAKv+B,SAAS,CACVu+B,OACAkQ,YALkC,IAQ9BE,EAAa,EAAK5uC,MAAlB4uC,SACHA,GAELA,EAASpQ,EAAMkQ,IAChB,cAEH,EAAKL,iBAtCU,EAyCnBQ,aAAe,WACX,EAAKC,eAAe32B,QAAQ42B,SA1Cb,EA6CnBC,qBA7CmB,qBA6CI,0CAAAz8B,EAAA,wDAEE,KADbmrB,EAAU,EAAKoR,eAAe32B,QAA9BulB,OACErpB,OAFS,oDAIE,IAAjBqpB,EAAMrpB,OAJS,sBAKW+yB,MAAM7kC,KAAKm7B,GALtB,kBAKP50B,EALO,gBAMVA,EANU,iEAQemmC,YAAcnmC,GAR7B,mCAQRmE,EARQ,KAQDgC,EARC,KAUf,EAAKhP,SAAS,CACVub,MAAM,EACN1S,OACAomC,QAAStjB,IAAI+iB,gBAAgB7lC,GAC7BmE,QACAgC,WAfW,QAmBnB,EAAK6/B,eAAe32B,QAAQ7Q,MAAQ,GAnBjB,0CA1CnB,EAAKwnC,eAAiBhuC,IAAMsa,YAC5B,EAAKmzB,WAAaztC,IAAMsa,YAJT,IAMP+zB,EAAe,EAAKnvC,MAApBmvC,WANO,OAQf,EAAK7vC,MAAQ,CACTovC,QAASS,EACT3zB,MAAM,GAVK,E,sEAmET,IACEnL,EAAM9P,KAAKP,MAAXqQ,EADH,EAE6C9P,KAAKjB,MAA/Ckc,EAFH,EAEGA,KAAMvO,EAFT,EAESA,MAAOgC,EAFhB,EAEgBA,OAAQigC,EAFxB,EAEwBA,QAASR,EAFjC,EAEiCA,QAFjC,EAI0CU,YAAW,CAAEniC,QAAOgC,UAAU,KAAK,GAAnEogC,EAJV,EAIGpiC,MAAyBqiC,EAJ5B,EAIoBrgC,OAEzB,OACI,oCACI,yBAAKzO,UAAU,kBACTkuC,EACE,yBAAKluC,UAAU,8BAA8BqR,IAAI,GAAGjC,IAAK8+B,EAAS9hC,QAASrM,KAAKsuC,eAEhF,yBAAKruC,UAAU,oDAAoDoM,QAASrM,KAAKsuC,cAC7E,kBAACU,GAAD,CAAc/uC,UAAU,0BAIpC,2BACIub,IAAKxb,KAAKuuC,eACVtuC,UAAU,yBACVwc,KAAK,OACLwyB,UAAU,EACVC,OAAO,UACP/hC,SAAUnN,KAAKyuC,uBAEjBxzB,GACE,kBAAC,IAAD,CACIG,mBAAoB,EACpBH,MAAM,EACNI,QAASrb,KAAK8tC,aACdxyB,kBAAgB,gBAChB,yBAAKrb,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASrM,KAAK8tC,cACrD,kBAACxhC,EAAA,EAAD,OAEJ,yBAAKrM,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,uBAGnD,kBAAC,KAAD,KACI,kBAAC,KAAD,CACI0L,IAAKxb,KAAKguC,WACV3+B,IAAKs/B,EACLjrC,MAAO,CAAEgL,OAAQqgC,EAAWriC,MAAOoiC,EAAUK,OAAQ,eAErDC,YAAa,EACbC,SAAU,EACVC,QAAQ,KAEhB,yBAAKrvC,UAAU,8BAA8BoM,QAASrM,KAAK+sC,YACvD,kBAACwC,GAAA,EAAD,a,GAtHDhvC,IAAMC,YAqIlBiR,iBAAkBo8B,ICnI3B2B,I,mBACF,WAAY/vC,GAAQ,IAAD,uBACf,4CAAMA,KAuEVgwC,qBAxEmB,qBAwEI,oCAAAz9B,EAAA,wDACX3D,EAAW,EAAK5O,MAAhB4O,OACAmS,EAAa,EAAKzhB,MAAlByhB,UACJkvB,EAAc,EAAKC,YAAY/3B,QAAQ7Q,OAC3BkkB,WAAW,MAAQykB,EAAY57B,OAAS,IACpD47B,EAAcA,EAAYhG,OAAO,IAEjClpB,IAAakvB,GAA+B,KAAhBA,EAPb,gBAQf,EAAKhwC,SAAS,CACVkwC,cAAe,OATJ,wCAeMvwC,IAAgBC,KAAK,CACtC,QAAS,oBACTmQ,QAASpB,EACTmS,SAAUkvB,IAlBC,QAeTlwC,EAfS,QAuBXqwC,EAAe,EAAKF,YAAY/3B,QAAQ7Q,OAC3BkkB,WAAW,MAAQ4kB,EAAa/7B,OAAS,IACtD+7B,EAAeA,EAAanG,OAAO,IAEnCmG,IAAiBH,GACjB,EAAKhwC,SAAS,CACVkwC,cAAepwC,IA7BR,0CAxEJ,EA2GnBswC,kBA3GmB,sCA2GC,WAAMjiB,GAAN,iBAAA7b,EAAA,4DACR3D,EAAW,EAAK5O,MAAhB4O,OADQ,SAGVhP,IAAgBC,KAAK,CACvB,QAAS,kBACT8P,MAAO,CAAE,QAAS,gBAAiB2gC,KAAM,oBAAqBliB,UALlD,OAQVne,EAAQlH,IAAUmH,WACxBC,YAAgBF,EAAOrB,GAAQ,GATf,yCA3GD,sDAGf,EAAK2hC,aAAezvC,IAAMsa,YAC1B,EAAKo1B,YAAc1vC,IAAMsa,YACzB,EAAKq1B,OAAS3vC,IAAMsa,YACpB,EAAK80B,YAAcpvC,IAAMsa,YAEzB,IAAM7M,EAAOC,IAAUxF,IAAIwF,IAAUiH,WAC/Bi7B,EAAeliC,IAAU4O,YAAY5O,IAAUiH,WATtC,OAWf,EAAKnW,MAAQ,CACTqxC,UAAWpiC,EAAOA,EAAKqiC,WAAa,GACpCC,SAAUtiC,EAAOA,EAAKuiC,UAAY,GAClCxtB,IAAKotB,EAAeA,EAAaptB,IAAM,GACvCvC,SAAUxS,EAAOA,EAAKwS,SAAW,GACjCovB,cAAe,MAhBJ,E,oFAqBf5vC,KAAKwwC,UACLxwC,KAAKywC,SACLzwC,KAAK0wC,gB,oCAGM,IAAD,EAC0B1wC,KAAKjB,MAAjCyhB,EADE,EACFA,SAAUovB,EADR,EACQA,cACdF,EAAc1vC,KAAK2vC,YAAY/3B,QAAQ7Q,MACvC2oC,EAAYzkB,WAAW,MAAQykB,EAAY57B,OAAS,IACpD47B,EAAcA,EAAYhG,OAAO,IAGjClpB,IAAakvB,GACZE,GAC0B,8BAA3BA,EAAc,UAElBvwC,IAAgBC,KAAK,CACjB,QAAS,cACTkhB,SAAUkvB,M,gCAIP,IAAD,EAC0B1vC,KAAKjB,MAA7BqxC,EADF,EACEA,UAAWE,EADb,EACaA,SACbK,EAAe3wC,KAAKgwC,aAAap4B,QAAQ7Q,MACzC6pC,EAAc5wC,KAAKiwC,YAAYr4B,QAAQ7Q,MAEzC4pC,IAAiBP,GAAaQ,IAAgBN,GAIlDjxC,IAAgBC,KAAK,CACjB,QAAS,UACT+wC,WAAYM,EACZJ,UAAWK,M,+BAIT,IACE7tB,EAAQ/iB,KAAKjB,MAAbgkB,IACF8tB,EAAS7wC,KAAKkwC,OAAOt4B,QAAQ7Q,MAC/B8pC,IAAW9tB,GAIf1jB,IAAgBC,KAAK,CACjB,QAAS,SACTyjB,IAAK8tB,M,+BAmDH,IAAD,EACwB7wC,KAAKP,MAA5B4O,EADD,EACCA,OAAQyB,EADT,EACSA,EAAGuL,EADZ,EACYA,QADZ,EAEyDrb,KAAKjB,MAA3DqxC,EAFH,EAEGA,UAAWE,EAFd,EAEcA,SAAUvtB,EAFxB,EAEwBA,IAAKvC,EAF7B,EAE6BA,SAAUovB,EAFvC,EAEuCA,cAExCkB,GAAW,EACXC,EAAgBjhC,EAAE,YACtB,GAAI8/B,EACA,OAAQA,EAAc,UAClB,IAAK,4BACDkB,GAAW,EACXC,EAAgB,wBAChB,MAEJ,IAAK,4CACL,IAAK,iDACL,IAAK,yCACDD,GAAW,EACXC,EAAgB,mBAChB,MAEJ,IAAK,0CACDD,GAAW,EACXC,EAAgB,4BAM5B,IAAM7hC,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,KA7Bb,IA+BGE,EAAUF,EAAVE,MAEFC,EAAMC,YAAOF,EAAQA,EAAMG,MAAQ,MACnCyI,EAAW,GACXjG,EAAOi/B,aAAsBlhC,EAAE,gBAAiBkI,GAChDi5B,EAAgBptB,aAAiB,CAAE,QAAS,gBAAiB9R,OAAMiG,aAEzE,OACI,oCACI,yBAAK/X,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,kBAGnD,yBAAK7P,UAAU,wBACX,kBAAC,GAAD,CAAc2uC,WAAYv/B,EAAKg/B,SAAUruC,KAAK8vC,oBAC9C,yBAAK7vC,UAAU,qBACX,kBAACixC,GAAA,EAAD,CACI5P,SAAUthC,KAAKgwC,aACf/vC,UAAU,qBACV2f,QAAQ,WACRqN,WAAS,EACTE,MAAOrd,EAAE,aACTqhC,aAAcf,IAElB,kBAACc,GAAA,EAAD,CACI5P,SAAUthC,KAAKiwC,YACfhwC,UAAU,qBACV2f,QAAQ,WACRqN,WAAS,EACTE,MAAOrd,EAAE,YACTqhC,aAAcb,IAElB,kBAACY,GAAA,EAAD,CACI5P,SAAUthC,KAAKkwC,OACfjwC,UAAU,qBACV2f,QAAQ,WACRqN,WAAS,EACTE,MAAOrd,EAAE,OACTqhC,aAAcpuB,IAElB,yBAAK9iB,UAAU,qBAAqB6P,EAAE,cAE1C,yBAAK7P,UAAU,iCACf,yBAAKA,UAAU,yBACX,kBAACixC,GAAA,EAAD,CACI5P,SAAUthC,KAAK2vC,YACft9B,MAAOy+B,EACP7wC,UAAU,qBACV2f,QAAQ,WACRqN,WAAS,EACTE,MAAO4jB,EACPI,aAAc3wB,EACdrT,SAAUnN,KAAKyvC,uBAEnB,yBAAKxvC,UAAU,qBACVgxC,U,GAlNH1wC,IAAMC,YAqOjByb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQuzB,ICnPRjtC,eACX,0BAAM4xB,KAAK,eAAeC,SAAS,UAAU5xB,EAAE,0nBAC/C,OCFWD,eACX,0BAAM6xB,SAAS,UAAU5xB,EAAE,qgCAC3B,cCFWD,eACX,0BAAM6xB,SAAS,UAAU5xB,EAAE,otDAC3B,eCFWD,eACX,0BAAM6xB,SAAS,UAAU5xB,EAAE,wmEAC3B,YCFWD,eACX,0BAAM6xB,SAAS,UAAU5xB,EAAE,0zCAC3B,cCFWD,eACX,0BAAM6xB,SAAS,UAAU5xB,EAAE,q0CAC3B,aCFWD,eACX,0BAAM6xB,SAAS,UAAU5xB,EAAE,kgEAC3B,Q,qBCDWD,eACX,0BAAMC,EAAE,+bACR,Q,UCUE4uC,I,kNAEFryC,MAAQ,CACJ8mB,aAAa,EACbliB,KAAM,EACNE,IAAK,EACLmc,SAAS,G,EAGb8F,sBAAwB,SAAA9hB,GACC,EAAKvE,MAAlBynC,WAGJljC,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAGV,EAAKjH,SAAS,CACVmmB,aAAa,EACbliB,KAAMK,EAAMwC,QACZ3C,IAAKG,EAAMyC,Y,EAInBsf,uBAAyB,WACrB,EAAKrmB,SAAS,CACVmmB,aAAa,EACbliB,KAAM,EACNE,IAAK,K,EAIbihB,aAAe,WACX,EAAKiB,yBADY,MAGY,EAAKtmB,MAA1B4O,EAHS,EAGTA,OAAQ64B,EAHC,EAGDA,SAEhBA,GAAYA,EAAS74B,I,wEAGf,IAAD,EACyCrO,KAAKP,MAA3C4O,EADH,EACGA,OAAQyB,EADX,EACWA,EAAG2M,EADd,EACcA,KAAMuD,EADpB,EACoBA,QAAS3T,EAD7B,EAC6BA,QAD7B,EAE8BrM,KAAKjB,MAAhC8mB,EAFH,EAEGA,YAAaliB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErB0Y,EAAQ/B,YAAanM,GAAQ,EAAMyB,GAEzC,OACI,oCACI,kBAACwP,GAAA,EAAD,CAAUrf,UAAU,sBAAsBoxC,UAAMC,EAAW/xB,QAAM,EAAClT,QAASA,EAAS2Z,cAAehmB,KAAK8lB,uBACpG,yBAAK7lB,UAAU,oBACX,kBAAC,EAAD,CAAUoO,OAAQA,EAAQkB,OAAO,EAAMgB,mBAAmB,KAE9D,yBAAKtQ,UAAU,uBACX,yBAAKA,UAAU,qBACVsc,GAEHE,GACE,yBAAKxc,UAAU,wBACVsxC,YAAYljC,EAAQyB,UAInBwhC,IAAZtxB,GACE,kBAACwxB,GAAA,EAAD,CAAOvxC,UAAU,uBAAuBgX,MAAM,UAAU+I,QAASA,KAGzE,kBAACoF,GAAA,EAAD,CACInK,KAAM4K,EACNxK,QAASrb,KAAK+lB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAEnhB,MAAKF,QACvB2hB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,oBACpB,kBAAC+e,GAAA,EAAD,CAAUrZ,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBACtB,kBAACgf,GAAA,EAAD,CAAUtZ,QAASrM,KAAK8kB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC2nB,GAAD,OAEJ,kBAAC1nB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oB,GAtF5BvP,IAAMC,YAuGhBiR,iBAAkB2/B,ICvG3BK,I,kNAEF1yC,MAAQ,CACJ8mB,aAAa,EACbliB,KAAM,EACNE,IAAK,G,EAGTiiB,sBAAwB,SAAA9hB,GACC,EAAKvE,MAAlBynC,WAGJljC,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAGV,EAAKjH,SAAS,CACVmmB,aAAa,EACbliB,KAAMK,EAAMwC,QACZ3C,IAAKG,EAAMyC,Y,EAInBsf,uBAAyB,WACrB,EAAKrmB,SAAS,CACVmmB,aAAa,EACbliB,KAAM,EACNE,IAAK,K,EAIbihB,aAAe,WACX,EAAKiB,yBADY,IAGTmhB,EAAa,EAAKznC,MAAlBynC,SAERA,GAAYA,K,wEAGN,IAAD,EACkDlnC,KAAKP,MAApDqQ,EADH,EACGA,EAAG7P,EADN,EACMA,UAAW8mB,EADjB,EACiBA,KAAMhV,EADvB,EACuBA,KAAMiO,EAD7B,EAC6BA,QAAS3T,EADtC,EACsCA,QADtC,EAE8BrM,KAAKjB,MAAhC8mB,EAFH,EAEGA,YAAaliB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAE3B,OACI,oCACI,kBAACyb,GAAA,EAAD,CAAUrf,UAAWgM,IAAWhM,EAAW,sBAAuB,oBAAqBoxC,UAAMC,EAAW/xB,QAAM,EAACrT,YAAaG,EAAS2Z,cAAehmB,KAAK8lB,uBACrJ,yBAAK7lB,UAAU,oBACV8mB,GAEL,yBAAK9mB,UAAU,uBACV8R,QAESu/B,IAAZtxB,GACE,kBAACwxB,GAAA,EAAD,CAAOvxC,UAAU,uBAAuBgX,MAAM,UAAU+I,QAASA,KAGzE,kBAACoF,GAAA,EAAD,CACInK,KAAM4K,EACNxK,QAASrb,KAAK+lB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAEnhB,MAAKF,QACvB2hB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,oBACpB,kBAAC+e,GAAA,EAAD,CAAUrZ,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBACtB,kBAACgf,GAAA,EAAD,CAAUtZ,QAASrM,KAAK8kB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC2nB,GAAD,OAEJ,kBAAC1nB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oB,GA5E5BvP,IAAMC,YA8FhBiR,iBAAkBggC,ICtDlBC,I,mBAhDX,WAAYjyC,GAAQ,IAAD,8BACf,4CAAMA,KAEDkyC,OAASpxC,IAAMsa,YAHL,E,yEAMN,IAAD,EAMJ7a,KAAK2xC,OAAO/5B,QAEhB,MAAO,CAAEjU,KARD,EAEJiuC,WAMW/tC,IARP,EAGJguC,UAKgBnlC,MARZ,EAIJ02B,YAIuB10B,OARnB,EAKJgT,gB,sCAMQ3P,GACZ,IAAM+/B,EAAM9xC,KAAK2xC,OAAO/5B,QACnBk6B,IAELA,EAAIpuC,MAAMu/B,QAAUlxB,K,+BAGd,IAAD,EACqC/R,KAAKP,MAAvCsnB,EADH,EACGA,KAAMhV,EADT,EACSA,KAAMJ,EADf,EACeA,SAAUtF,EADzB,EACyBA,QAE9B,OACI,yBAAKmP,IAAKxb,KAAK2xC,OAAQ1xC,UAAWgM,IAAW,OAAQ,CAAE,gBAAiB0F,IAAatF,QAASA,GAC1F,yBAAKpM,UAAU,aACV8mB,GAEL,yBAAK9mB,UAAU,eACX,kBAACqM,EAAA,EAAD,CAAWrM,UAAU,sBAEzB,yBAAKA,UAAU,aAAa8R,Q,GApCzBxR,IAAMC,YCgDVuxC,I,mBA7CX,WAAYtyC,GAAQ,IAAD,8BACf,4CAAMA,KAEDkyC,OAASpxC,IAAMsa,YAHL,E,yEAMN,IAAD,EAMJ7a,KAAK2xC,OAAO/5B,QAEhB,MAAO,CAAEjU,KARD,EAEJiuC,WAMW/tC,IARP,EAGJguC,UAKgBnlC,MARZ,EAIJ02B,YAIuB10B,OARnB,EAKJgT,gB,sCAMQ3P,GACZ,IAAM+/B,EAAM9xC,KAAK2xC,OAAO/5B,QACnBk6B,IAELA,EAAIpuC,MAAMu/B,QAAUlxB,K,+BAGd,IAAD,EACiC/R,KAAKP,MAAnC4O,EADH,EACGA,OAAQsD,EADX,EACWA,SAAUtF,EADrB,EACqBA,QAE1B,OACI,yBAAKmP,IAAKxb,KAAK2xC,OAAQ1xC,UAAWgM,IAAW,OAAQ,CAAE,gBAAiB0F,IAAatF,QAASA,GAC1F,kBAAC,EAAD,CAAUgC,OAAQA,EAAQkB,OAAO,IACjC,yBAAKtP,UAAU,eACX,kBAACqM,EAAA,EAAD,CAAWrM,UAAU,sBAEzB,yBAAKA,UAAU,aAAa4R,YAAkBxD,S,GAlCvC9N,IAAMC,YCgBvBwxC,I,mBAEF,WAAYvyC,GAAQ,IAAD,8BACf,4CAAMA,KAaVwyC,iBAAmB,SAAC5jC,EAAQ6jC,GAAY,IAC5BC,EAAS,EAAK1yC,MAAd0yC,KAER,GAAID,EAAQ,CACR,IAAMr+B,EAAQ,EAAKwS,eAAezO,QAClC/D,EAAMT,QACNS,EAAMoF,UAAY,GAClB,EAAKmN,aAAa,IAGtB,EAAKtf,aAAsB,YAATqrC,EAAqB,oBAAsB,oBAAqB9jC,IAxBnE,EA0LnB+jC,gBAAkB,WAAO,IAAD,EACK,EAAK3yC,MAAtBqa,EADY,EACZA,OAAQq4B,EADI,EACJA,KACRE,EAAgB,EAAKtzC,MAArBszC,YACR,GAAKv4B,EAEL,GAAIu4B,EACA,OAAQA,GACJ,IAAK,mBACL,IAAK,uBACL,IAAK,eACL,IAAK,iBACL,IAAK,mBACL,IAAK,gBACL,IAAK,eACL,IAAK,mBACD,EAAKvrC,aAAaurC,GAElB,EAAK3yC,SAAS,CACV2yC,YAAa,OAEjB,MAEJ,QACI,EAAKJ,iBAAiBI,GAEtB,EAAK3yC,SAAS,CACV2yC,YAAa,YAS7B,GADyB,YAATF,EACH,CAAC,IAENG,EAMAx4B,EANAw4B,iBACAC,EAKAz4B,EALAy4B,qBACAC,EAIA14B,EAJA04B,aACAC,EAGA34B,EAHA24B,eACAC,EAEA54B,EAFA44B,iBACAC,EACA74B,EADA64B,kBAGJ,GAAIA,EAAkB7+B,OAAS,EAAG,CAC9B,IAAM8+B,EAAWD,EAAkBA,EAAkB7+B,OAAS,GAC9D,IAAK8+B,EAAU,OAEf,EAAKlzC,SAAS,CACV2yC,YAAaO,SAEVJ,EACP,EAAK9yC,SAAS,CACV2yC,YAAa,iBAEVK,EACP,EAAKhzC,SAAS,CACV2yC,YAAa,qBAEVI,EACP,EAAK/yC,SAAS,CACV2yC,YAAa,mBAEVE,EACP,EAAK7yC,SAAS,CACV2yC,YAAa,yBAEVC,GACP,EAAK5yC,SAAS,CACV2yC,YAAa,yBAGlB,CAAC,IAEAQ,EAIA/4B,EAJA+4B,cACAC,EAGAh5B,EAHAg5B,aACAC,EAEAj5B,EAFAi5B,iBACAC,EACAl5B,EADAk5B,kBAGJ,GAAIA,EAAkBl/B,OAAS,EAAG,CAC9B,IAAM8+B,EAAWI,EAAkBA,EAAkBl/B,OAAS,GAC9D,IAAK8+B,EAAU,OAEf,EAAKlzC,SAAS,CACV2yC,YAAaO,SAEVG,EACP,EAAKrzC,SAAS,CACV2yC,YAAa,qBAEVS,EACP,EAAKpzC,SAAS,CACV2yC,YAAa,iBAEVQ,GACP,EAAKnzC,SAAS,CACV2yC,YAAa,oBA5RV,EAkSnBvrC,aAAe,SAAC2V,EAAM1V,IAGlBoG,EAFqB,EAAK1N,MAAlB0N,UAECsP,EAAM1V,GAEf,EAAKrH,SAAS,CACV2yC,YAAa,QAxSF,EA4SnBjsB,aA5SmB,sCA4SJ,WAAMrU,GAAN,yBAAAC,EAAA,wDACLiI,EAAQlI,EAAKuH,OADR,uBAGP,EAAK5Z,SAAS,CACVoqB,YAAa,KACbuoB,YAAa,OALV,iCAUL19B,EAAW,IACRK,KACL3V,IAAgBC,KAAK,CACjB,QAAS,cACT2a,QACAlF,MAAO,OAfJ,SAkBiBK,QAAQzC,IAAIgC,GAlB7B,mCAkBJmV,EAlBI,KAoBLpa,EAAQlH,IAAUmH,WACxBgG,YAAiBjG,EAAOoa,EAAYpU,UAEpC,EAAKhW,SAAS,CAAEoqB,cAAauoB,YAAa,OAvB/B,0CA5SI,sDAGf,EAAKhsB,eAAiB9lB,IAAMsa,YAC5B,EAAKo4B,aAAe1yC,IAAMsa,YAC1B,EAAKq4B,SAAW,IAAIh/B,IAEpB,EAAKnV,MAAQ,CACTszC,YAAa,KACbvoB,YAAa,KACbzX,OAAO,GAVI,E,qFA2BKxS,EAAWC,GAAY,IAAD,EACjBE,KAAKP,MAAtBqa,EADkC,EAClCA,OAAQq4B,EAD0B,EAC1BA,KACCgB,EAAetzC,EAAxBia,OAER,GAAIja,EAAUia,SAAWA,EACrB,OAAO,KAGX,IAAMs5B,EAAmB,YAATjB,EACVkB,EAAYD,EAAUvzC,EAAUia,OAAO64B,kBAAoB9yC,EAAUia,OAAOk5B,kBAC5E1vB,EAAQ8vB,EAAUt5B,EAAO64B,kBAAoB74B,EAAOk5B,kBAEpDM,EACFD,EAAUv/B,OAASwP,EAAMxP,QACtBq/B,EAAWb,mBAAqBx4B,EAAOw4B,kBACvCa,EAAWZ,uBAAyBz4B,EAAOy4B,sBAC3CY,EAAWV,iBAAmB34B,EAAO24B,gBACrCU,EAAWT,mBAAqB54B,EAAO44B,kBACvCS,EAAWX,eAAiB14B,EAAO04B,cACnCW,EAAWL,eAAiBh5B,EAAOg5B,cACnCK,EAAWN,gBAAkB/4B,EAAO+4B,eACpCM,EAAWJ,mBAAqBj5B,EAAOi5B,iBAExCQ,EAAYvzC,KAAKizC,aAAar7B,QAC9B47B,EAAaD,EAAU9xB,aACvBgyB,EAAmBF,EAAU7xB,aAE7BgyB,EAAcH,EAAU7vC,MAAMu/B,QAC9B0Q,EAAgBJ,EAAUvyB,UAC5BsyB,IACAC,EAAU7vC,MAAMu/B,QAAU,MAG9B,IAAM2Q,EAAU,IAAI1/B,IAjCsB,uBAkC1C,YAAgBlU,KAAKkzC,SAAS5I,OAA9B,+CAAsC,CAAC,IAA9BvzB,EAA6B,QAC5BuL,EAAKtiB,KAAKkzC,SAASzqC,IAAIsO,GAC7B,GAAIuL,EAAI,CACJ,IAAMyG,EAASzG,EAAG0oB,YAClB4I,EAAQ56B,IAAIjC,EAAKgS,KAtCiB,kFA0C1C,MAAO,CAAEzF,MAAOswB,EAASC,MAAO,CAAEP,aAAYE,aAAYC,mBAAkBE,gBAAeD,kB,yCAG5E7zC,EAAWC,EAAWC,GACjCF,EAAUia,SAAW9Z,KAAKP,MAAMqa,QAIpC9Z,KAAK8zC,aAAa/zC,EAAS8zC,S,mCAIlB9zC,GAAW,IAAD,OACnB,GAAKA,EAAL,CADmB,IAGXuzC,EAAyEvzC,EAAzEuzC,WAAYE,EAA6DzzC,EAA7DyzC,WAAYC,EAAiD1zC,EAAjD0zC,iBAAkBE,EAA+B5zC,EAA/B4zC,cAAeD,EAAgB3zC,EAAhB2zC,YAE3DH,EAAYvzC,KAAKizC,aAAar7B,QAE9Bm8B,EAAgBR,EAAU9xB,aAI1BuyB,GAHsBT,EAAU7xB,aAGpBqyB,EAAgBP,GADjBO,EAAgBP,EAKzBA,EAFU,KAGVD,EAAU7vC,MAAMu/B,QAAhB,sBAAyCvhC,KAAKC,IAAI6xC,EAHxC,KAGV,OACA1yC,sBAAsB,WAClByyC,EAAU7vC,MAAMu/B,QAAhB,sBAAyCvhC,KAAKC,IAAIoyC,EAL5C,KAKN,OACAtsC,WAAW,WACP,EAAK4e,eAAezO,QAAQq8B,eAAe,CAAEjY,SAAU,UACxD,SAGPuX,EAAU7vC,MAAMu/B,QAAhB,sBAXU,IAWV,OACAjjC,KAAKqmB,eAAezO,QAAQq8B,eAAe,CAAEjY,SAAU,YAEpDgY,EACHD,EAfU,KAgBVR,EAAU7vC,MAAMu/B,QAAhB,sBAAyCvhC,KAAKC,IAAI8xC,EAhBxC,KAgBV,OACA3yC,sBAAsB,WAClByyC,EAAU7vC,MAAMu/B,QAAhB,sBAAyCvhC,KAAKC,IAAIoyC,EAlB5C,KAkBN,WAGJR,EAAU7vC,MAAMu/B,QAAhB,sBArBU,IAqBV,OACAsQ,EAAUvyB,UAAY2yB,GAGtBL,GACAC,EAAU7vC,MAAMu/B,QAAUyQ,EAC1BH,EAAUvyB,UAAY2yB,GAEtB3zC,KAAKqmB,eAAezO,QAAQq8B,eAAe,CAAEjY,SAAU,c,mCAKtDkY,GAAc,IAAD,OACtB,GAAKA,EAAL,CAEA,IAAMC,EAAkB,IAAIjgC,IAHN,uBAItB,YAAgBlU,KAAKkzC,SAAS5I,OAA9B,+CAAsC,CAAC,IAA9BvzB,EAA6B,QAC5BuL,EAAKtiB,KAAKkzC,SAASzqC,IAAIsO,GAC7B,GAAIuL,EAAI,CACJ,IAAM8xB,EAAgB9xB,EAAG0oB,YACnBqJ,EAAaH,EAAY7/B,IAAI0C,GAAOm9B,EAAYzrC,IAAIsO,GAAO,KACjE,GAAIs9B,EAAY,CACRA,EAAW1wC,KAAOywC,EAAczwC,MAChCwwC,EAAgBn7B,IAAIsJ,EAAI,CAAE+xB,aAAYD,kBAG1C,IAAMre,EAAS,+BAA2Bse,EAAW1wC,KAAOywC,EAAczwC,KAA3D,eAAsE0wC,EAAWxwC,IAAMuwC,EAAcvwC,IAArG,OACfye,EAAGgyB,gBAAgBve,MAfT,kFAoBtBj1B,sBAAsB,WAAO,IAAD,uBACxB,YAAgB,EAAKoyC,SAAS5I,OAA9B,+CAAsC,CAAC,IAA9BvzB,EAA6B,QAC5BuL,EAAK,EAAK4wB,SAASzqC,IAAIsO,GAC7B,GAAIuL,EAAI,CACJ,IAAIigB,EAAU,mCACd,GAAI4R,EAAgB9/B,IAAIiO,GAAK,CAAC,IAAD,EACa6xB,EAAgB1rC,IAAI6Z,GAAlD+xB,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpB7R,EAAa,+BAAwB8R,EAAW1wC,KAAOywC,EAAczwC,KAAO0wC,EAAW3nC,MAA1E,eAAsF2nC,EAAWxwC,IAAMuwC,EAAcvwC,IAArH,QACP,mCAGVye,EAAGgyB,gBAAgB/R,KAXH,kFAenB4R,EAAgB3lC,MAErB/G,WAAW,WAAO,IAAD,uBACb,YAAe0sC,EAAgB7J,OAA/B,+CAAuC,CAAC,IAA/BhoB,EAA8B,QAC3B8xB,EAAkBD,EAAgB1rC,IAAI6Z,GAAtC8xB,cACF7R,EAAa,+BAAwB6R,EAAc1nC,MAAtC,WACb,iCAEN4V,EAAGgyB,gBAAgB/R,IANV,kFASbzhC,sBAAsB,WAAO,IAAD,uBACxB,YAAeqzC,EAAgB7J,OAA/B,+CAAuC,CAAC,IAA/BhoB,EAA8B,QAGnCA,EAAGgyB,gBAFgB,qCAFC,sFAQ7B,U,+BAgJD,IAAD,SACkEt0C,KAAKP,MAApEqQ,EADH,EACGA,EAAGgK,EADN,EACMA,OAAQvE,EADd,EACcA,MAAOR,EADrB,EACqBA,MAAOo9B,EAD5B,EAC4BA,KAAM92B,EADlC,EACkCA,QAAmBiP,GADrD,EAC2Cnd,SAD3C,EACqDmd,UADrD,EAEgCtqB,KAAKjB,MAAlCszC,EAFH,EAEGA,YAAavoB,EAFhB,EAEgBA,YAGjBwoB,EAMAx4B,EANAw4B,iBACAC,EAKAz4B,EALAy4B,qBACAC,EAIA14B,EAJA04B,aACAC,EAGA34B,EAHA24B,eACAC,EAEA54B,EAFA44B,iBACAC,EACA74B,EADA64B,kBAIAE,EAIA/4B,EAJA+4B,cACAC,EAGAh5B,EAHAg5B,aACAC,EAEAj5B,EAFAi5B,iBACAC,EACAl5B,EADAk5B,kBAGEI,EAAmB,YAATjB,EACV7uB,EAAQ8vB,EAAUT,EAAoBK,EAE5C,OACI,oCACI,yBAAK/yC,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAA8C6P,EAAZ,YAATqiC,EAAuB,gBAAqB,oBAG7F,yBAAK32B,IAAKxb,KAAKizC,aAAchzC,UAAU,uBACjCmzC,GACE,oCACKd,GAAoB,kBAAC,GAAD,CAAMjmC,QAAS,kBAAM,EAAKvF,aAAa,qBAAqB0U,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI,mBAAoBsJ,IAAQ3Q,SAA0B,qBAAhB0gC,EAAoCtrB,KAAM,kBAAC,GAAD,CAAc6P,QAAQ,cAAe7kB,KAAMjC,EAAE,oBAC5OyiC,GAAwB,kBAAC,GAAD,CAAMlmC,QAAS,kBAAM,EAAKvF,aAAa,yBAAyB0U,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI,uBAAwBsJ,IAAQ3Q,SAA0B,yBAAhB0gC,EAAwCtrB,KAAM,kBAACwtB,GAAD,MAAqBxiC,KAAMjC,EAAE,uBAC5O2iC,GAAkB,kBAAC,GAAD,CAAMpmC,QAAS,kBAAM,EAAKvF,aAAa,mBAAmB0U,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI,iBAAkBsJ,IAAQ3Q,SAA0B,mBAAhB0gC,EAAkCtrB,KAAM,kBAAC,GAAD,CAAY6P,QAAQ,cAAe7kB,KAAMjC,EAAE,kBAClO4iC,GAAoB,kBAAC,GAAD,CAAMrmC,QAAS,kBAAM,EAAKvF,aAAa,qBAAqB0U,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI,mBAAoBsJ,IAAQ3Q,SAA0B,qBAAhB0gC,EAAoCtrB,KAAM,kBAAC,GAAD,CAAc6P,QAAQ,cAAe7kB,KAAMjC,EAAE,oBAC5O0iC,GAAgB,kBAAC,GAAD,CAAMnmC,QAAS,kBAAM,EAAKvF,aAAa,iBAAiB0U,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI,eAAgBsJ,IAAQ3Q,SAA0B,iBAAhB0gC,EAAgCtrB,KAAM,kBAACytB,GAAD,MAAcziC,KAAMjC,EAAE,kBAG3MsjC,GACC,oCACKP,GAAiB,kBAAC,GAAD,CAAMxmC,QAAS,kBAAM,EAAKvF,aAAa,kBAAkB0U,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI,gBAAiBsJ,IAAQ3Q,SAA0B,kBAAhB0gC,EAAiCtrB,KAAM,kBAAC,GAAD,CAAY6P,QAAQ,cAAe7kB,KAAMjC,EAAE,iBAC9NgjC,GAAgB,kBAAC,GAAD,CAAMzmC,QAAS,kBAAM,EAAKvF,aAAa,iBAAiB0U,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI,eAAgBsJ,IAAQ3Q,SAA0B,iBAAhB0gC,EAAgCtrB,KAAM,kBAAC,GAAD,CAAc6P,QAAQ,cAAe7kB,KAAMjC,EAAE,gBAC5NijC,GAAoB,kBAAC,GAAD,CAAM1mC,QAAS,kBAAM,EAAKvF,aAAa,qBAAqB0U,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI,mBAAoBsJ,IAAQ3Q,SAA0B,qBAAhB0gC,EAAoCtrB,KAAM,kBAACytB,GAAD,MAAcziC,KAAMjC,EAAE,qBAG7NwT,EAAMjO,IAAI,SAAA/T,GAAC,OAAI,kBAAC,GAAD,CAAUqQ,SAAU0gC,IAAgB/wC,EAAGka,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI1X,EAAGghB,IAAQvL,IAAKzV,EAAG+M,OAAQ/M,EAAG+K,QAAS,kBAAM,EAAK4lC,iBAAiB3wC,QACzJ,kBAAC,GAAD,CAAaggC,SAAUthC,KAAKqmB,eAAgBmb,KAAM1xB,EAAE,UAAWuL,QAASrb,KAAKy0C,kBAAmBtnC,SAAUnN,KAAKomB,aAAcgb,YAAaphC,KAAKoyC,mBAEnJ,yBAAKnyC,UAAU,2BAA2ByD,MAAO,CAAEgxC,OAAQ,KAC3D,yBAAKl5B,IAAKxb,KAAK20C,UAAW10C,UAAU,uBAAuByD,MAAO,CAAEkxC,WAAY,EAAGhiC,SAAU,WAAYlE,OAAQ,QAAU4b,SAAUA,GACjI,kBAAC,GAAD,KAAgBxa,EAAE,oBACjBsjC,GACG,oCACI,kBAAC,GAAD,CAAY/mC,QAAS,kBAAM,EAAKvF,aAAa,qBAAqBkZ,QAASsyB,EAAkBvrB,KAAM,kBAAC,GAAD,CAAc9mB,UAAU,0BAA0B22B,QAAQ,cAAe7kB,KAAMjC,EAAE,oBACpL,kBAAC,GAAD,CAAYzD,QAAS,kBAAM,EAAKvF,aAAa,yBAAyBkZ,QAASuyB,EAAsBxrB,KAAM,kBAACwtB,GAAD,CAAiBt0C,UAAU,4BAA6B8R,KAAMjC,EAAE,uBAC3K,kBAAC,GAAD,CAAYzD,QAAS,kBAAM,EAAKvF,aAAa,mBAAmBkZ,QAASyyB,EAAgB1rB,KAAM,kBAAC,GAAD,CAAY9mB,UAAU,0BAA0B22B,QAAQ,cAAe7kB,KAAMjC,EAAE,kBAC9K,kBAAC,GAAD,CAAYzD,QAAS,kBAAM,EAAKvF,aAAa,qBAAqBkZ,QAAS0yB,EAAkB3rB,KAAM,kBAAC,GAAD,CAAc9mB,UAAU,0BAA0B22B,QAAQ,cAAe7kB,KAAMjC,EAAE,oBACpL,kBAAC,GAAD,CAAYzD,QAAS,kBAAM,EAAKvF,aAAa,iBAAiBkZ,QAASwyB,EAAczrB,KAAM,kBAACytB,GAAD,CAAUv0C,UAAU,4BAA6B8R,KAAMjC,EAAE,kBAG1JsjC,GACE,oCACI,kBAAC,GAAD,CAAY/mC,QAAS,kBAAM,EAAKvF,aAAa,kBAAkBkZ,QAAS6yB,EAAe9rB,KAAM,kBAAC2S,GAAD,CAAWz5B,UAAU,4BAA6B8R,KAAMjC,EAAE,iBACvJ,kBAAC,GAAD,CAAYzD,QAAS,kBAAM,EAAKvF,aAAa,iBAAiBkZ,QAAS8yB,EAAc/rB,KAAM,kBAAC,GAAD,CAAU9mB,UAAU,4BAA6B8R,KAAMjC,EAAE,gBACpJ,kBAAC,GAAD,CAAYzD,QAAS,kBAAM,EAAKvF,aAAa,qBAAqBkZ,QAAS+yB,EAAkBhsB,KAAM,kBAAC,GAAD,CAAc9mB,UAAU,4BAA6B8R,KAAMjC,EAAE,qBAGtKyF,GAASA,EAAMzB,OAAS,GACtB,oCACI,yBAAK7T,UAAU,+BAA+ByD,MAAO,CAAEyrC,OAAQ,cAC/D,kBAAC,GAAD,KAAgBr/B,EAAE,iBACfyF,GAAS,IAAIuS,MAAM,EAAG/S,GAAOM,IAAI,SAAA/T,GAAC,OAAI,kBAAC,GAAD,CAAYmb,MAAM,EAAMpQ,QAAS,kBAAM,EAAK4lC,iBAAiB3wC,IAAIyV,IAAKzV,EAAG+M,OAAQ/M,EAAG0e,QAAkB,YAATmyB,EAAqBQ,EAAkBrJ,SAAShoC,GAAK0xC,EAAkB1J,SAAShoC,QAG5NwoB,GACE,yBAAK7pB,UAAU,4BACT6pB,EAAYpU,SAASL,IAAI,SAAA/T,GAAC,OAAI,kBAAC,GAAD,CAAYmb,MAAM,EAAMpQ,QAAS,kBAAM,EAAK4lC,iBAAiB3wC,GAAG,IAAOyV,IAAKzV,EAAG+M,OAAQ/M,EAAG0e,QAAkB,YAATmyB,EAAqBQ,EAAkBrJ,SAAShoC,GAAK0xC,EAAkB1J,SAAShoC,c,GAzZjNf,IAAMC,YA0arBiR,iBAAkBugC,I,8jBCpajC,IAAM6C,GAASt0C,IAAMu0C,KAAK,kBAAM,sDAE1BC,G,YAEF,WAAYt1C,GAAQ,IAAD,8BACf,4CAAMA,KAqCVu1C,kBAtCmB,qBAsCC,oCAAAhjC,EAAA,yDACM,EAAKjT,MAAnBk2C,UADQ,iEAKNC,EAAW,CACbC,MAAM,wBANE,SASU//B,QAAQzC,IAAIuiC,GATtB,cASNnW,EATM,iBAWS3pB,QAAQzC,IAAIosB,EAAQ1pB,IAAI,SAAA/T,GAAC,OAAIA,EAAE8zC,UAXxC,oCAWLvnB,EAXK,KAaZ,EAAKnuB,SACD,CACImuB,SAfI,kDAmBZzb,QAAQC,MAAR,MAnBY,wDAtCD,EA6DnB06B,WAAa,WAAO,IACRsI,EAAW,EAAK51C,MAAhB41C,OACAC,EAAe,EAAKv2C,MAApBu2C,WAEF/4B,EAAQ,EAAKg5B,SAAS39B,QAAQ7Q,MAAMuS,OAC1C,IAAKiD,EAKD,OAJA,EAAKg5B,SAAS39B,QAAQxE,aACtB,EAAK1T,SAAS,CACV2S,OAAO,IAIX,EAAK3S,SAAS,CACV2S,OAAO,IAIfijC,EAAW/4B,MAAQA,EC9GpB,SAAuBzC,GAC1B,IAAKA,EAAQ,OAAO,EADc,IAI9Bw4B,EAOAx4B,EAPAw4B,iBACAC,EAMAz4B,EANAy4B,qBACAC,EAKA14B,EALA04B,aACAC,EAIA34B,EAJA24B,eACAC,EAGA54B,EAHA44B,iBACAC,EAEA74B,EAFA64B,kBAIJ,QAFI74B,EADAyC,QAKG+1B,GAAoBC,GAAwBC,GAAgBC,GAAkBC,GAAoBC,EAAkB7+B,OAAS,GDiG3H0hC,CAAcF,GAKnBD,GAAUA,EAAOC,GAJb,EAAKj/B,sBAAsB,qDAjFhB,EAwFnBo/B,qBAAuB,WACnB,IAAMC,EAAS,EAAKC,UAAU/9B,QACzB89B,GACAA,EAAOE,MACPF,EAAOE,KAAKC,UAEjBH,EAAOE,KAAKE,YAAY,IA9FT,EAiGnBC,4BAA8B,WAAO,IACzBjmC,EAAM,EAAKrQ,MAAXqQ,EACAwlC,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBhD,kBAAkB,IAEzD,EAAK5yC,SAAS,CACV41C,WAAYU,IAGF,EAAKT,SAAS39B,QAAQ7Q,QACtB+I,EAAE,mBACZ,EAAKpQ,SAAS,CACV6c,MAAO,OA/GA,EAoHnB05B,+BAAiC,WAAO,IAC5BnmC,EAAM,EAAKrQ,MAAXqQ,EACAwlC,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB/C,sBAAsB,IAE7D,EAAK7yC,SAAS,CACV41C,WAAYU,IAGF,EAAKT,SAAS39B,QAAQ7Q,QACtB+I,EAAE,sBACZ,EAAKpQ,SAAS,CACV6c,MAAO,OAlIA,EAuInB25B,0BAA4B,WAAO,IACvBpmC,EAAM,EAAKrQ,MAAXqQ,EACAwlC,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB7C,gBAAgB,IAEvD,EAAK/yC,SAAS,CACV41C,WAAYU,IAGF,EAAKT,SAAS39B,QAAQ7Q,QACtB+I,EAAE,iBACZ,EAAKpQ,SAAS,CACV6c,MAAO,OArJA,EA0JnB45B,4BAA8B,WAAO,IACzBrmC,EAAM,EAAKrQ,MAAXqQ,EACAwlC,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB5C,kBAAkB,IAEzD,EAAKhzC,SAAS,CACV41C,WAAYU,IAGF,EAAKT,SAAS39B,QAAQ7Q,QACtB+I,EAAE,mBACZ,EAAKpQ,SAAS,CACV6c,MAAO,OAxKA,EA6KnB65B,wBAA0B,WAAO,IACrBtmC,EAAM,EAAKrQ,MAAXqQ,EACAwlC,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB9C,cAAc,IAErD,EAAK9yC,SAAS,CACV41C,WAAYU,IAGF,EAAKT,SAAS39B,QAAQ7Q,QACtB+I,EAAE,eACZ,EAAKpQ,SAAS,CACV6c,MAAO,OA3LA,EAgMnB85B,yBAA2B,SAAAhoC,GAAW,IAC1BinC,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoB3C,kBAAmB2C,EAAW3C,kBAAkB74B,OAAO,SAAAxY,GAAC,OAAIA,IAAM+M,MAEzG,EAAK3O,SAAS,CACV41C,WAAYU,MAvMD,EA2MnBM,yBAA2B,WAAO,IACtBhB,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBzC,eAAe,IAEtD,EAAKnzC,SAAS,CACV41C,WAAYU,MAlND,EAsNnBO,wBAA0B,WAAO,IACrBjB,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBxC,cAAc,IAErD,EAAKpzC,SAAS,CACV41C,WAAYU,MA7ND,EAiOnBQ,4BAA8B,WAAO,IACzBlB,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBvC,kBAAkB,IAEzD,EAAKrzC,SAAS,CACV41C,WAAYU,MAxOD,EA4OnBS,yBAA2B,SAAApoC,GAAW,IAC1BinC,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAMU,EAAa,MAAQV,EAAR,CAAoBtC,kBAAmBsC,EAAWtC,kBAAkBl5B,OAAO,SAAAxY,GAAC,OAAIA,IAAM+M,MAEzG,EAAK3O,SAAS,CACV41C,WAAYU,MAnPD,EAuPnBU,sBAvPmB,sCAuPK,WAAMvE,GAAN,eAAAngC,EAAA,qEACC3S,IAAgBC,KAAK,CACtC,QAAS,WACT24B,UAAW,CAAE,QAAS,gBACtBpjB,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MANS,OACdvV,EADc,OASpB,EAAKE,SAAS,CACVi3C,iBAAiB,EACjBxE,OACA58B,MAAO/V,EAAOkW,SACdX,MAAOqxB,MAbS,yCAvPL,wDA4TnBwQ,uBAAyB,WAErB,EAAKC,wBAEL,EAAKn3C,SAAS,CACVi3C,iBAAiB,EACjBxE,KAAM,QAlUK,EAsUnBrrC,aAAe,SAAC2V,EAAM1V,GAAW,IACrBuuC,EAAe,EAAKv2C,MAApBu2C,WACR,GAAKA,EAAL,CAEA,IAAIU,EAAgB,KACpB,OAAQv5B,GACJ,IAAK,mBACDu5B,EAAa,MAAQV,EAAR,CAAoBhD,kBAAmBgD,EAAWhD,mBAC/D,MAEJ,IAAK,uBACD0D,EAAa,MAAQV,EAAR,CAAoB/C,sBAAuB+C,EAAW/C,uBACnE,MAEJ,IAAK,eACDyD,EAAa,MAAQV,EAAR,CAAoB9C,cAAe8C,EAAW9C,eAC3D,MAEJ,IAAK,iBACDwD,EAAa,MAAQV,EAAR,CAAoB7C,gBAAiB6C,EAAW7C,iBAC7D,MAEJ,IAAK,mBACDuD,EAAa,MAAQV,EAAR,CAAoB5C,kBAAmB4C,EAAW5C,mBAC/D,MAEJ,IAAK,oBACD,IAAIoE,EAAUC,EACVzB,EAAW3C,kBAAkBrJ,SAASviC,IACtC+vC,EAAWxB,EAAW3C,kBAAkB74B,OAAO,SAAAxY,GAAC,OAAIA,IAAMyF,IAC1DgwC,EAAWzB,EAAWtC,oBAEtB8D,EAAQ,uBAAQxB,EAAW3C,mBAAnB,CAAsC5rC,IAC9CgwC,EAAWzB,EAAWtC,kBAAkBl5B,OAAO,SAAAxY,GAAC,OAAIA,IAAMyF,KAG9DivC,EAAa,MACNV,EADM,CAET3C,kBAAmBmE,EACnB9D,kBAAmB+D,IAEvB,MAEJ,IAAK,gBACDf,EAAa,MAAQV,EAAR,CAAoBzC,eAAgByC,EAAWzC,gBAC5D,MAEJ,IAAK,eACDmD,EAAa,MAAQV,EAAR,CAAoBxC,cAAewC,EAAWxC,eAC3D,MAEJ,IAAK,mBACDkD,EAAa,MAAQV,EAAR,CAAoBvC,kBAAmBuC,EAAWvC,mBAC/D,MAEJ,IAAK,oBACD,IAAI+D,EAAUC,EACVzB,EAAWtC,kBAAkB1J,SAASviC,IACtCgwC,EAAWzB,EAAWtC,kBAAkBl5B,OAAO,SAAAxY,GAAC,OAAIA,IAAMyF,IAC1D+vC,EAAWxB,EAAW3C,oBAEtBoE,EAAQ,uBAAQzB,EAAWtC,mBAAnB,CAAsCjsC,IAC9C+vC,EAAWxB,EAAW3C,kBAAkB74B,OAAO,SAAAxY,GAAC,OAAIA,IAAMyF,KAG9DivC,EAAa,MACNV,EADM,CAET3C,kBAAmBmE,EACnB9D,kBAAmB+D,IAQ1Bf,GAEL,EAAKt2C,SAAS,CACV41C,WAAYU,MArZD,EAyZnBgB,kBAAoB,WAChB,IAAMz6B,EAAQ,EAAKg5B,SAAS39B,QAAQ7Q,MAAM2iC,OAAO,EAAGuN,KAEpD,EAAKv3C,SAAS,CACV6c,WA7ZW,EAianB+M,aAAe,SAAAtlB,GACX,IAAMw+B,EAASx+B,EAAMC,OACjBu+B,EAAOxhB,UAAYwhB,EAAO9gB,cAAgB8gB,EAAO/gB,cACjD,EAAK/hB,SAAS,CACVqV,MAAO,EAAKhW,MAAMgW,MAAQqxB,OAranB,EA0anB/vB,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK7W,MAAxC8W,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNhX,UAAU,4BACVoM,QAAS,kBAAMmK,EAAcC,KAC7B,kBAACnK,EAAA,EAAD,WApbZ,EAAKipC,SAAWh1C,IAAMsa,YACtB,EAAK86B,UAAYp1C,IAAMsa,YAEvB,EAAK9b,MAAQ,CACTm4C,cAAe,EACfrpB,KAAM,KACN8oB,iBAAiB,EACjBxE,KAAM,KACN51B,MAAO,GACPlK,OAAO,EACP8kC,OAAO,EACP5hC,MAAO,GACPR,MAAO,GAfI,E,iFAmCf/U,KAAKg1C,sB,8CAqOgB,IACbllC,EAAM9P,KAAKP,MAAXqQ,EACAwlC,EAAet1C,KAAKjB,MAApBu2C,WAGR,IADct1C,KAAKu1C,SAAS39B,QAAQ7Q,MACxB,CAAC,IAELurC,EAMAgD,EANAhD,iBACAC,EAKA+C,EALA/C,qBACAC,EAIA8C,EAJA9C,aACAC,EAGA6C,EAHA7C,eACAC,EAEA4C,EAFA5C,iBACAC,EACA2C,EADA3C,kBAQA2C,EAJAzC,cAIAyC,EAHAxC,aAGAwC,EAFAvC,iBAEAuC,EADAtC,kBAGCL,EAAkB7+B,UACfw+B,GAAqBC,GAAyBC,GAAiBC,GAAmBC,EAI1EJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,GAIlFJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,EAIhFJ,GAAqBC,IAAwBC,GAAiBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,IAAgBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,GAAiBC,IAAkBC,GACzF1yC,KAAKN,SAAS,CACV6c,MAAOzM,EAAE,oBALb9P,KAAKN,SAAS,CACV6c,MAAOzM,EAAE,kBALb9P,KAAKN,SAAS,CACV6c,MAAOzM,EAAE,gBALb9P,KAAKN,SAAS,CACV6c,MAAOzM,EAAE,eALb9P,KAAKN,SAAS,CACV6c,MAAOzM,EAAE,uBALb9P,KAAKN,SAAS,CACV6c,MAAOzM,EAAE,wB,+BA4JnB,IAAD,SAC8B9P,KAAKP,MAAhCqQ,EADH,EACGA,EAAGgK,EADN,EACMA,OAAQ1a,EADd,EACcA,GAAIic,EADlB,EACkBA,QACvB,IAAKvB,EAAQ,OAAO,KAFf,MAIkF9Z,KAAKjB,MAApFu2C,EAJH,EAIGA,WAAYznB,EAJf,EAIeA,KAAM8oB,EAJrB,EAIqBA,gBAAiBxE,EAJtC,EAIsCA,KAAM58B,EAJ5C,EAI4CA,MAAOR,EAJnD,EAImDA,MAAOwH,EAJ1D,EAI0DA,MAAOlK,EAJjE,EAIiEA,MAGlEigC,GAPC,EAIwE6E,MASzE7B,EANAhD,kBACAC,EAKA+C,EALA/C,qBACAC,EAIA8C,EAJA9C,aACAC,EAGA6C,EAHA7C,eACAC,EAEA4C,EAFA5C,iBACAC,EACA2C,EADA3C,kBAIAE,EAIAyC,EAJAzC,cACAC,EAGAwC,EAHAxC,aACAC,EAEAuC,EAFAvC,iBACAC,EACAsC,EADAtC,kBAGJ,OACI,oCACI,yBAAK/yC,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAmC6P,EAAV1Q,GAAM,EAAM,aAAkB,qBAE3E,kBAAC0X,EAAA,EAAD,CAAY7W,UAAU,sBAAsBgX,MAAM,UAAU5K,QAASrM,KAAK+sC,YACtE,kBAACqK,GAAD,QAGR,yBAAKn3C,UAAU,wBACX,yBAAKA,UAAU,4BACX,kBAAC,IAAMo3C,SAAP,CAAgBC,SAAU,MACtB,kBAACzC,GAAD,CACIr5B,IAAKxb,KAAK21C,UACVh1C,QAAS,CACL42C,UAAU,EACVC,MAAM,EACNC,cAAe5pB,EACf6pB,SAAU,MACVC,iBAAkB,CACdC,oBAAqB,iBACrBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAmB,IAG3B1rC,QAASrM,KAAKy1C,yBAM1B,yBAAKx1C,UAAU,uBACX,kBAACixC,GAAA,EAAD,CACI5P,SAAUthC,KAAKu1C,SACft1C,UAAU,qBACV2f,QAAQ,WACRqN,WAAS,EACTE,MAAOrd,EAAE,kBACT/I,MAAOwV,EACPlK,MAAOA,EACPlF,SAAUnN,KAAKg3C,qBAGvB,yBAAK/2C,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,kBAClB,kBAAC,GAAD,CAAY7P,UAAU,0BAA0B8mB,KAAM,kBAACixB,GAAD,MAAYjmC,KAAMjC,EAAE,kBAAmBzD,QAAS,kBAAM,EAAKqqC,sBAAsB,cACtIpE,GAAoB,kBAAC,GAAD,CAAYpL,SAAUlnC,KAAK+1C,4BAA6BhvB,KAAM,kBAAC,GAAD,CAAc9mB,UAAU,0BAA0B22B,QAAQ,cAAe7kB,KAAMjC,EAAE,oBACnKyiC,GAAwB,kBAAC,GAAD,CAAYrL,SAAUlnC,KAAKi2C,+BAAgClvB,KAAM,kBAACwtB,GAAD,CAAiBt0C,UAAU,4BAA6B8R,KAAMjC,EAAE,uBACzJ2iC,GAAkB,kBAAC,GAAD,CAAYvL,SAAUlnC,KAAKk2C,0BAA2BnvB,KAAM,kBAAC,GAAD,CAAY9mB,UAAU,0BAA0B22B,QAAQ,cAAe7kB,KAAMjC,EAAE,kBAC7J4iC,GAAoB,kBAAC,GAAD,CAAYxL,SAAUlnC,KAAKm2C,4BAA6BpvB,KAAM,kBAAC,GAAD,CAAc9mB,UAAU,0BAA0B22B,QAAQ,cAAe7kB,KAAMjC,EAAE,oBACnK0iC,GAAgB,kBAAC,GAAD,CAAYtL,SAAUlnC,KAAKo2C,wBAAyBrvB,KAAM,kBAACytB,GAAD,CAAUv0C,UAAU,4BAA6B8R,KAAMjC,EAAE,gBAClI6iC,EAAkBt9B,IAAI,SAAA/T,GAAC,OACrB,kBAAC,GAAD,CAAYyV,IAAKzV,EAAG+M,OAAQ/M,EAAG4lC,SAAU,EAAKmP,8BAGtD,yBAAKp2C,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,kBAClB,kBAAC,GAAD,CAAY7P,UAAU,6BAA6B8mB,KAAM,kBAAC,KAAD,MAAehV,KAAMjC,EAAE,qBAAsBzD,QAAS,kBAAM,EAAKqqC,sBAAsB,cAC/I7D,GAAiB,kBAAC,GAAD,CAAY3L,SAAUlnC,KAAKs2C,yBAA0BvvB,KAAM,kBAAC2S,GAAD,CAAWz5B,UAAU,4BAA6B8R,KAAMjC,EAAE,iBACtIgjC,GAAgB,kBAAC,GAAD,CAAY5L,SAAUlnC,KAAKu2C,wBAAyBxvB,KAAM,kBAAC,GAAD,CAAU9mB,UAAU,4BAA6B8R,KAAMjC,EAAE,gBACnIijC,GAAoB,kBAAC,GAAD,CAAY7L,SAAUlnC,KAAKw2C,4BAA6BzvB,KAAM,kBAAC,GAAD,CAAc9mB,UAAU,4BAA6B8R,KAAMjC,EAAE,oBAC9IkjC,EAAkB39B,IAAI,SAAA/T,GAAC,OACrB,kBAAC,GAAD,CAAYyV,IAAKzV,EAAG+M,OAAQ/M,EAAG4lC,SAAU,EAAKuP,+BAI1D,kBAAC,GAAD,CAAax7B,KAAM07B,EAAiBt7B,QAASrb,KAAK42C,wBAC9C,kBAAC,GAAD,CAAiB98B,OAAQw7B,EAAYnD,KAAMA,EAAM58B,MAAOA,EAAOR,MAAOA,EAAO5H,SAAUnN,KAAK8G,aAAcwjB,SAAUtqB,KAAKspB,oB,gDAxgBzG7pB,EAAOV,GAAQ,IACnC+a,EAAqBra,EAArBqa,OAAQm+B,EAAax4C,EAAbw4C,SACRf,EAAiBn4C,EAAjBm4C,aAER,OAAIp9B,GAAUo9B,IAAiBe,EACpB,CACHf,aAAce,EACd3C,WAAW,MAAKx7B,GAChByC,MAAOzC,EAAOyC,OAIf,S,GAjCYhc,IAAMC,WAijBlByb,GALCC,YACZzK,cACA0K,eAGWF,CAAQ84B,IE5jBjBmD,I,kNAEFn5C,MAAQ,CACJyR,QAAQ,EACRqV,aAAa,EACbliB,KAAM,EACNE,IAAK,G,EAGTihB,aAAe,WACX,EAAKiB,yBACL,EAAKoyB,oB,EAGTA,iBAAmB,WACf,EAAKz4C,SAAS,CACV8Q,QAAQ,K,EAIhB4nC,kBAAoB,WAChB,EAAK14C,SAAS,CACV8Q,QAAQ,K,EAIhB6nC,mBAAqB,WACjB,EAAKD,qB,EAGTE,oBAAsB,WAAO,IACjBh6B,EAAS,EAAK7e,MAAd6e,KACHA,IAEL,EAAK85B,oBAEL/4C,IAAgBC,KAAK,CACjB,QAAS,mBACTujC,eAAgBvkB,EAAKlf,O,EAI7B0mB,sBAAwB,SAAA9hB,GAChBA,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAGV,EAAKjH,SAAS,CACVmmB,aAAa,EACbliB,KAAMK,EAAMwC,QACZ3C,IAAKG,EAAMyC,W,EAInBsf,uBAAyB,WACrB,EAAKrmB,SAAS,CACVmmB,aAAa,EACbliB,KAAM,EACNE,IAAK,K,wEAIH,IAAD,EAC8B7D,KAAKP,MAAhCqQ,EADH,EACGA,EAAGwO,EADN,EACMA,KAAMi6B,EADZ,EACYA,OAAQhjC,EADpB,EACoBA,MACzB,IAAK+I,EAAM,OAAO,KAFb,MAIsCte,KAAKjB,MAAxCyR,EAJH,EAIGA,OAAQqV,EAJX,EAIWA,YAAahiB,EAJxB,EAIwBA,IAAKF,EAJ7B,EAI6BA,KAE1B4Y,EAAU+B,EAAV/B,MACFU,EDvEP,SAA2BnN,EAAGmoC,EAAU1iC,GAC3C,IAAKA,EAAO,MAAO,IAGnB,IADA,IAAI62B,EAAQ,EACHh4B,EAAI,EAAGA,EAAImB,EAAMG,SAAS5B,OAAQM,IAC0D,MAA7F+wB,YAAa5vB,EAAMG,SAAStB,GAAI,CAAE,QAAS,iBAAkByuB,eAAgBoV,KAC7E7L,IAIR,OAAKA,EAIY,IAAVA,EAAc,SAAd,UAA4BA,EAA5B,UAHIt8B,EAAE,iBC4DQ0oC,CAAkB1oC,EAAGwO,EAAKlf,GAAImW,GAE/C,OACI,oCACI,kBAAC+J,GAAA,EAAD,CAAUrf,UAAU,sBAAsBoxC,UAAMC,EAAW/xB,QAAM,EAAClT,QAASksC,EAAQvyB,cAAehmB,KAAK8lB,uBACnG,kBAACrG,GAAA,EAAD,CACIxf,UAAU,2BACVyf,QAASnD,EACTk8B,UAAWx7B,KAGnB,kBAACmI,GAAA,EAAD,CACInK,KAAM4K,EACNxK,QAASrb,KAAK+lB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAEnhB,MAAKF,QACvB2hB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,oBACpB,kBAAC+e,GAAA,EAAD,CAAUrZ,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBACtB,kBAACgf,GAAA,EAAD,CAAUtZ,QAASrM,KAAK8kB,cACpB,kBAACtF,GAAA,EAAD,KACI,kBAAC2nB,GAAD,OAEJ,kBAAC1nB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAIrC,kBAAC,IAAD,CACIoL,QAASC,KACTC,mBAAoB,EACpBH,KAAMzK,EACN6K,QAASrb,KAAK8tC,aACdxyB,kBAAgB,uBAChB,kBAAC,IAAD,CAAalc,GAAG,uBAAuB0Q,EAAE,YACzC,kBAAC,KAAD,KACI,kBAACq9B,GAAA,EAAD,KACKr9B,EAAE,uBAGX,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAKq4C,mBAAoBphC,MAAM,WAC3CnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAKs4C,oBAAqBrhC,MAAM,WAC5CnH,EAAE,c,GAzHVvP,IAAMC,YAwIZiR,iBAAkBymC,ICpJ3BQ,I,kNAEFC,UAAY,WAAO,IACCC,EAAsB,EAAKn5C,MAAnCqa,OACR,GAAK8+B,EAAL,CAFc,IAIN9+B,EAAW8+B,EAAX9+B,OAERza,IAAgBC,KAAK,CACjB,QAAS,mBACTwa,a,wEAIE,IAAD,EACoC9Z,KAAKP,MAAtCqQ,EADH,EACGA,EAAW8oC,EADd,EACM9+B,OACX,IAAK8+B,EAAmB,OAAO,KAF1B,IAIG9+B,EAAwB8+B,EAAxB9+B,OAAQ6R,EAAgBitB,EAAhBjtB,YAEhB,OACI,kBAACrM,GAAA,EAAD,CACIrf,UAAU,sBACVoxC,UAAMC,EACN/xB,QAAM,GACN,kBAACE,GAAA,EAAD,CACIxf,UAAU,0BACVyf,QAAS5F,EAAOyC,MAChBk8B,UAAW9sB,IAEf,kBAAC5P,EAAA,EAAD,CAAQ9b,UAAU,yBAAyB2f,QAAQ,YAAYi5B,kBAAgB,EAAC5hC,MAAM,UAAU5K,QAASrM,KAAK24C,WACzG7oC,EAAE,a,GA/BSvP,IAAMC,YA2CvBiR,iBAAkBinC,IChC3B7D,I,OAASt0C,IAAMu0C,KAAK,kBAAM,uDAE1B7S,G,YAEF,WAAYxiC,GAAQ,IAAD,8BACf,4CAAMA,KA4BV4jC,oBAAsB,SAAAx1B,GAClBpG,WAAW,WACP,EAAKqxC,YACN,MAhCY,EA0EnB9D,kBA1EmB,qBA0EC,oCAAAhjC,EAAA,yDACM,EAAKjT,MAAnBk2C,UADQ,iEAKNC,EAAW,CACbC,MAAM,uBACNA,MAAM,wBAPE,SAUU//B,QAAQzC,IAAIuiC,GAVtB,cAUNnW,EAVM,iBAYS3pB,QAAQzC,IAAIosB,EAAQ1pB,IAAI,SAAA/T,GAAC,OAAIA,EAAE8zC,UAZxC,oCAYLvnB,EAZK,KAcZ,EAAKnuB,SACD,CACImuB,SAhBI,kDAoBZzb,QAAQC,MAAR,MApBY,wDA1ED,EAkGnB0mC,mBAAqB,WAAO,IAChBjpC,EAAM,EAAKrQ,MAAXqQ,EAER,GADoBwzB,GAAZzO,QACI/gB,QAAUklC,IAClB,EAAK3iC,sBAAsBvG,EAAE,0BADjC,CAsBA,EAAKpQ,SAAS,CACVu5C,YAAY,EACZhB,UAAW,EACXn+B,OApBW,CACX,QAAS,YACTyC,MAAO,GACP28B,UAAW,GACXC,gBAAiB,GACjBxG,kBAAmB,GACnBK,kBAAmB,GACnBH,eAAe,EACfC,cAAc,EACdC,kBAAkB,EAClBT,kBAAkB,EAClBC,sBAAsB,EACtBC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,OAxHP,EAkInB0G,kBAAoB,WAChB,EAAK15C,SAAS,CACVu5C,YAAY,EACZhB,UAAW,EACXn+B,OAAQ,QAtIG,EA0InBu/B,iBA1ImB,sCA0IA,WAAM/6B,GAAN,eAAAtM,EAAA,qEACM3S,IAAgBC,KAAK,CACtC,QAAS,gBACTujC,eAAgBvkB,EAAKlf,KAHV,UACT0a,EADS,wDAQf,EAAKpa,SAAS,CACVu5C,YAAY,EACZhB,SAAU35B,EAAKlf,GACf0a,WAXW,yCA1IA,wDAyJnBizB,WAAa,SAAAjzB,GAAW,IACZm+B,EAAa,EAAKl5C,MAAlBk5C,SAER,EAAKmB,oBACAt/B,KAEa,IAAdm+B,EACA54C,IAAgBC,KAAK,CACjB,QAAS,iBACTujC,eAAgBoV,EAChBn+B,WAGJza,IAAgBC,KAAK,CACjB,QAAS,mBACTwa,aAxKO,EA6KnB27B,qBAAuB,WACnB,IAAMC,EAAS,EAAKC,UAAU/9B,QACzB89B,GACAA,EAAOE,MACPF,EAAOE,KAAKC,UAEjBH,EAAOE,KAAKE,YAAY,IAnLT,EAsLnBz/B,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK7W,MAAxC8W,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNhX,UAAU,4BACVoM,QAAS,kBAAMmK,EAAcC,KAC7B,kBAACnK,EAAA,EAAD,WAhMZ,EAAKqpC,UAAYp1C,IAAMsa,YAEvB,EAAK9b,MAAQ,CACTk6C,YAAY,EACZhB,UAAW,EACXn+B,OAAQ,KACRw7B,WAAY,KACZgE,mBAAoB,KACpB/jC,MAAO,KACPgkC,WAAY,IAAIrlC,KAZL,E,iFAiBflU,KAAKg1C,oBACLh1C,KAAK84C,WAELxV,GAAYh1B,GAAG,oBAAqBtO,KAAKqjC,uB,6CAKzCC,GAAY/0B,IAAI,oBAAqBvO,KAAKqjC,uB,6KAWtBhkC,IAAgBC,KAAK,CACrC,QAAS,WACT24B,UAAW,CAAE,QAAS,gBACtBnjB,eAAgB,EAChBD,aAAc,sBACdE,MAAO,M,OAKX,IAVMQ,E,OAQWikC,EAAelW,GAAxBzO,QACFlgB,EAAW,GACRP,EAAI,EAAGA,EAAIolC,EAAW1lC,OAAQM,IACnCO,EAASK,KAAK3V,IAAgBC,KAAK,CAC/B,QAAS,gBACTujC,eAAgB2W,EAAWplC,GAAGhV,KAC/BkW,MAAM,SAAAlJ,GAAC,OAAI,Q,gBAEIgJ,QAAQzC,IAAIgC,G,OAKlC,IALMkgB,E,OAIA0kB,EAAa,IAAIrlC,IACdE,EAAI,EAAGA,EAAIolC,EAAW1lC,OAAQM,IACnCmlC,EAAWvgC,IAAIwgC,EAAWplC,GAAGhV,GAAIy1B,EAAQzgB,I,iBAGZ/U,IAAgBC,KAAK,CAClD,QAAS,8B,QADPg6C,E,OAMNt5C,KAAKN,SAAS,CACV6V,QACAgkC,aACAD,uB,oIAmIE,IAAD,SACkBt5C,KAAKP,MAApBqQ,EADH,EACGA,EAAGuL,EADN,EACMA,QADN,EAEiFrb,KAAKjB,MAAnFu6C,EAFH,EAEGA,mBAAoBL,EAFvB,EAEuBA,WAAYn/B,EAFnC,EAEmCA,OAAQm+B,EAF3C,EAE2CA,SAAUpqB,EAFrD,EAEqDA,KAAMtY,EAF3D,EAE2DA,MAAOgkC,EAFlE,EAEkEA,WAC/D1kB,EAAYyO,GAAZzO,QAEF4kB,EAAa5kB,GAAWA,EAAQ/gB,OAAS,EACzC4lC,EAAwBJ,GACvBA,EAAmBvkB,aAAajhB,OAAS,KACvC+gB,GAAWA,EAAQ/gB,OAASklC,KAIrC,OACI,oCACI,yBAAK/4C,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,2BAGnD,yBAAK7P,UAAU,wBACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,4BACX,kBAAC,IAAMo3C,SAAP,CAAgBC,SAAU,MACtB,kBAAC,GAAD,CACI97B,IAAKxb,KAAK21C,UACVh1C,QAAS,CACL42C,UAAU,EACVC,MAAM,EACNC,cAAe5pB,EACf6pB,SAAU,MACVC,iBAAkB,CACdC,oBAAqB,iBACrBC,aAAa,EACbC,iBAAiB,EACjBC,mBAAmB,IAG3B1rC,QAASrM,KAAKy1C,yBAK1B,yBAAKx1C,UAAU,uBAAuB6P,EAAE,wBACxC,kBAACiM,EAAA,EAAD,CAAQ9b,UAAU,wBAAwBgX,MAAM,UAAU2I,QAAQ,YAAYi5B,kBAAgB,EAACc,UAAW,kBAAC3B,GAAD,MAAY3rC,QAASrM,KAAK+4C,oBAC/HjpC,EAAE,qBAGT2pC,GACE,oCACI,yBAAKx5C,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,aAChB+kB,GAAW,IAAIxf,IAAI,SAAA/T,GAAC,OAAK,kBAAC,GAAD,CAAQyV,IAAKzV,EAAElC,GAAIkf,KAAMhd,EAAGwY,OAAQy/B,EAAW9wC,IAAInH,EAAElC,IAAKmW,MAAOA,EAAOgjC,OAAQ,kBAAM,EAAKc,iBAAiB/3C,UAIjJo4C,GACE,oCACI,yBAAKz5C,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,sBACjBwpC,EAAmBvkB,aAAa1f,IAAI,SAAA/T,GAAC,OAAK,kBAAC,GAAD,CAAmByV,IAAKzV,EAAEwY,OAAOyC,MAAOzC,OAAQxY,SAK3G,kBAAC,GAAD,CAAa2Z,KAAMg+B,EAAY59B,QAASrb,KAAKo5C,mBACzC,kBAAC,GAAD,CAAct/B,OAAQA,EAAQ1a,GAAI64C,EAAU5C,OAAQr1C,KAAK+sC,mB,GAjRvDxsC,IAAMC,WAiSbyb,GALCC,YACZzK,cACA0K,eAGWF,CAAQgmB,ICrTR1/B,eACX,0BAAMC,EAAE,uhCACR,Y,kBCkFWo3C,G,2MA9EX76C,MAAQ,CACJkQ,QAAQ,G,EAWZ4qC,oCAAsC,SAAAhsC,GAAW,IACrCisC,EAAc,EAAKr6C,MAAnBq6C,UACR,GAAKA,EAAL,CAF4C,IAIpC52C,EAAa42C,EAAb52C,SACR,GAAKA,EAAL,CAL4C,IAOpCsV,EAActV,EAAdsV,UACR,GAAKA,EAAL,CAR4C,IAUpCjQ,EAASiQ,EAATjQ,KACR,GAAKA,EAAL,CAX4C,IAapClD,EAAWwI,EAAXxI,OAEJkD,EAAKnJ,KAAOiG,GAIhB,EAAK0J,mB,EAGToB,WAAa,WACT,EAAKzQ,SAAS,CAAEuP,QAAQ,K,EAG5BvJ,YAAc,WAAO,IAAD,EACe,EAAKjG,MAA5Bq6C,EADQ,EACRA,UAAWztC,EADH,EACGA,QAEfA,GACAA,EAAQytC,I,mFArCZtxC,IAAU8F,GAAG,oCAAqCtO,KAAK65C,uC,6CAIvDrxC,IAAU+F,IAAI,oCAAqCvO,KAAK65C,uC,+BAqClD,IAAD,EAC6B75C,KAAKP,MAA/Bq6C,EADH,EACGA,UAAW1gB,EADd,EACcA,WAGXl2B,GAFYlD,KAAKjB,MAAjBkQ,OAEa6qC,EAAb52C,UACAyqB,EAA6BzqB,EAA7ByqB,cAAenV,EAActV,EAAdsV,UAEjBoV,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWxe,YAAOkJ,EAAYA,EAAUjQ,KAAO,MAE/C8G,EAAMye,GAAYF,EAExB,OACI,yBAAK3tB,UAAU,eAAeoM,QAASrM,KAAK0F,aACxC,yBAAKzF,UAAU,uBAAuByD,MAAO,CAAEsqB,gBAAgB,OAAD,OAASF,GAAYF,EAArB,KAAiCK,eAAgB,QAAS8rB,mBAAoB,QACvI1qC,IAAQye,GACL,yBAAK7tB,UAAU,4BAA4ByD,MAAO,CAAEsqB,gBAAgB,OAAD,OAAS3e,EAAT,SAGzE+pB,GAAc,oCAAE,yBAAKn5B,UAAU,uBAAsB,yBAAKA,UAAU,8BACpEiD,GAAYA,EAASA,UAAY,kBAAC82C,GAAA,EAAD,CAAczxC,KAAMrF,EAASA,SAAU+2C,cAAc,S,GAnEhF15C,IAAMC,WCKxB05C,I,kNACFn7C,MAAQ,CACJo7C,WAAYhrC,IAAU2qC,UAAY3qC,IAAU2qC,UAAU16C,IAAM,G,EAehEsG,YAAc,SAAAo0C,GACV,EAAKp6C,SAAS,CACVy6C,WAAYL,EAAU16C,KAFH,IAKf8D,EAAa42C,EAAb52C,SACR,GAAKA,EAAL,CAEsCA,EAA9BsV,UARe,IAQMjQ,EAASrF,EAAnBA,SACnB,GAAKqF,EAAL,CAGA,IADY+G,YAAO/G,GACT,CACN,IAAMmH,EAAQlH,IAAUmH,WACxByqC,YAAsB1qC,EAAOoqC,GAAW,GAG5Cz6C,IAAgByF,aAAa,CACzB,QAAS,6BACTg1C,iB,mFA9BJ95C,KAAKyU,gB,oCAGM,IACH4lC,EAAgBr6C,KAAKP,MAArB46C,YACR,GAAKA,EAAL,CAEA,IAAM3qC,EAAQlH,IAAUmH,WACxB2qC,YAAuB5qC,EAAO2qC,EAAYA,gB,+BA0BpC,IAAD,SAC+Br6C,KAAKP,MAAjCqQ,EADH,EACGA,EAAGuqC,EADN,EACMA,YAAah/B,EADnB,EACmBA,QAChB8+B,EAAen6C,KAAKjB,MAApBo7C,WAEFI,EAAaF,EAAYA,YAAYvgC,OAAO,SAAAxY,GAAC,MAAwB,4BAApBA,EAAEmb,KAAK,WAE9D,OACI,oCACI,yBAAKxc,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,qBAGnD,yBAAK7P,UAAU,6DACTs6C,EAAWllC,IAAI,SAAA/T,GAAC,OAAK,kBAAC,GAAD,CAAWyV,IAAKzV,EAAElC,GAAI06C,UAAWx4C,EAAG83B,WAAY93B,EAAElC,KAAO+6C,EAAY9tC,QAAS,EAAK3G,sB,GAzDjGnF,IAAMC,YAoEpBiR,iBAAkByoC,I,2LCvD3BM,I,mBACF,WAAY/6C,GAAQ,IAAD,8BACf,4CAAMA,KASVqH,aAAe,SAAA9C,GACX,EAAKtE,SAAS,CAAE+c,KAAMzY,EAAMC,OAAO8C,QAEnCoyB,KAAiBnE,KAAK,4BAA6B,CAC/CvY,KAAMzY,EAAMC,OAAO8C,MACnB2Y,QAAS,EAAK+6B,SAAS,EAAK17C,MAAMkY,UAfvB,EAmBnByjC,mBAAqB,SAAA12C,GACjB,EAAKtE,SAAS,CAAEuX,MAAOjT,EAAMC,OAAO8C,QAEpCoyB,KAAiBnE,KAAK,4BAA6B,CAC/CvY,KAAM,EAAK1d,MAAM0d,KACjBiD,QAAS,EAAK+6B,SAASz2C,EAAMC,OAAO8C,UAxBzB,EA4BnB4zC,eAAiB,SAAA5zC,GACb,OAAQA,GACJ,KAAK6zC,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,IAAK,UACD,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQ,EAiDnBR,SAAW,SAAA1zC,GACP,OAAQA,GACJ,IAAK,MACD,OAAO6zC,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,MAAO,CAAErY,KAAM,WACnB,IAAK,SACD,OAAOsY,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQ,EAsEnBvzC,YAAc,WACV,EAAKhI,SAAS,CAAEub,MAAM,KAvEP,EA0EnBA,KAAO,WACH,EAAKvb,SAAS,CAAEub,MAAM,KAxEtB,EAAKlc,MAAQ,CACTkc,MAAM,EACNwB,KAAM,EAAKhd,MAAMkiB,MAAMu5B,QAAQz+B,KAC/BxF,MAAO,EAAK0jC,eAAe,EAAKl7C,MAAMkiB,MAAMu5B,QAAQx7B,QAAQgjB,OANjD,E,sEA8ET,IACE5yB,EAAM9P,KAAKP,MAAXqQ,EADH,EAEyB9P,KAAKjB,MAA3B0d,EAFH,EAEGA,KAAMxF,EAFT,EAESA,MAAOgE,EAFhB,EAEgBA,KAErB,OACI,kBAAC,IAAD,CACIC,QAASC,KACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAASrb,KAAK0H,YACd4T,kBAAgB,qBAChBC,mBAAiB,4BACjB,kBAAC,IAAD,CAAanc,GAAG,sBAAsB0Q,EAAE,eACxC,kBAAC,KAAD,KACI,kBAACqrC,GAAA,EAAD,CAAaC,UAAU,WAAWn7C,UAAU,qBACxC,kBAACo7C,GAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxBtrC,EAAE,UAEP,kBAACyrC,GAAA,EAAD,CACIvkC,aAAW,QACX+4B,KAAK,SACL9vC,UAAU,qBACV8G,MAAO0V,EACPtP,SAAUnN,KAAK8G,cACf,kBAAC00C,GAAA,EAAD,CAAkBz0C,MAAM,QAAQ00C,QAAS,kBAACjK,GAAA,EAAD,CAAOv6B,MAAM,YAAckW,MAAM,UAC1E,kBAACquB,GAAA,EAAD,CAAkBz0C,MAAM,OAAO00C,QAAS,kBAACjK,GAAA,EAAD,CAAOv6B,MAAM,YAAckW,MAAM,WAGjF,kBAACguB,GAAA,EAAD,CAAaC,UAAU,WAAWn7C,UAAU,qBACxC,kBAACo7C,GAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxBtrC,EAAE,WAEP,kBAACyrC,GAAA,EAAD,CACIvkC,aAAW,SACX+4B,KAAK,UACL9vC,UAAU,qBACV8G,MAAOkQ,EACP9J,SAAUnN,KAAK06C,oBACf,kBAACc,GAAA,EAAD,CACIz0C,MAAM,MACN00C,QACI,kBAACjK,GAAA,EAAD,CACIv6B,MAAM,UACNnK,QAAS,CACL3E,KAAM,sBAIlBglB,MAAM,QAEV,kBAACquB,GAAA,EAAD,CACIz0C,MAAM,SACN00C,QACI,kBAACjK,GAAA,EAAD,CACIv6B,MAAM,UACNnK,QAAS,CACL3E,KAAM,yBAIlBglB,MAAM,WAEV,kBAACquB,GAAA,EAAD,CACIz0C,MAAM,QACN00C,QACI,kBAACjK,GAAA,EAAD,CACIv6B,MAAM,UACNnK,QAAS,CACL3E,KAAM,wBAIlBglB,MAAM,UAEV,kBAACquB,GAAA,EAAD,CACIz0C,MAAM,QACN00C,QACI,kBAACjK,GAAA,EAAD,CACIv6B,MAAM,UACNnK,QAAS,CACL3E,KAAM,wBAIlBglB,MAAM,UAEV,kBAACquB,GAAA,EAAD,CACIz0C,MAAM,OACN00C,QACI,kBAACjK,GAAA,EAAD,CACIv6B,MAAM,UACNnK,QAAS,CACL3E,KAAM,uBAIlBglB,MAAM,SAEV,kBAACquB,GAAA,EAAD,CACIz0C,MAAM,SACN00C,QACI,kBAACjK,GAAA,EAAD,CACIv6B,MAAM,UACNnK,QAAS,CACL3E,KAAM,yBAIlBglB,MAAM,WAEV,kBAACquB,GAAA,EAAD,CACIz0C,MAAM,aACN00C,QACI,kBAACjK,GAAA,EAAD,CACIv6B,MAAM,UACNnK,QAAS,CACL3E,KAAM,8BAIlBglB,MAAM,wB,GAvMZ5sB,IAAMC,YA0NjByb,GAPCC,YACZkI,cACAs3B,KACAjqC,cACA4S,cAGWpI,CAAQu+B,IClOjBmB,I,mBACF,WAAYl8C,GAAQ,IAAD,8BACf,4CAAMA,KAUVm8C,iBAAmB,WACf,EAAKC,eAAejkC,QAAQqD,QAZb,EAmBnBxG,YAAc,WACVpV,IAAgBC,KAAK,CACjB,QAAS,iBACTw8C,gBAAgB,IACjBv8C,KAAK,SAAA86C,GAAW,OAAI,EAAK36C,SAAS,CAAE26C,mBAvBxB,EA0BnB0B,mBAAqB,WACZ,EAAKh9C,MAAMs7C,aAEhB,EAAK36C,SAAS,CACVq8C,oBAAoB,KA9BT,EAkCnBC,oBAAsB,WAClB,EAAKt8C,SAAS,CACVq8C,oBAAoB,KAjCxB,EAAKh9C,MAAQ,CACTs7C,YAAa,KACb0B,oBAAoB,GAGxB,EAAKF,eAAiBt7C,IAAMsa,YARb,E,iFAgBf7a,KAAKyU,gB,+BAwBC,IAAD,EACkBzU,KAAKP,MAApBqQ,EADH,EACGA,EAAGuL,EADN,EACMA,QADN,EAEuCrb,KAAKjB,MAAzCs7C,EAFH,EAEGA,YAAa0B,EAFhB,EAEgBA,mBAErB,OACI,oCACI,yBAAK97C,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,sBAGnD,yBAAK7P,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAACqf,GAAA,EAAD,CAAUtD,WAAW,EAAO/b,UAAU,qBAAqBsf,QAAM,EAAClT,QAASrM,KAAK+7C,oBAC5E,kBAACv8B,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,qBAE7B,kBAACwP,GAAA,EAAD,CAAUtD,WAAW,EAAO/b,UAAU,qBAAqBsf,QAAM,EAAClT,QAASrM,KAAK47C,kBAC5E,kBAACp8B,GAAA,EAAD,KACI,kBAACy8B,GAAD,OAEJ,kBAACx8B,GAAA,EAAD,CAAcC,QAAS5P,EAAE,mBAIrC,kBAAC,GAAD,CAAamL,KAAM8gC,EAAoB1gC,QAASrb,KAAKg8C,qBACjD,kBAAC,GAAD,CAAgB3B,YAAaA,KAEjC,kBAAC,GAAD,CAAa7+B,IAAKxb,KAAK67C,sB,GA1EjBt7C,IAAMC,YA0Fbyb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQ0/B,IC/FjBO,I,mBACF,WAAYz8C,GAAQ,IAAD,uBACf,4CAAMA,KAUVqH,aAAe,SAAAmoB,GACX,EAAKvvB,SAAS,CAAEuvB,aAEhB5vB,IAAgByF,aAAa,CAAE,QAAS,6BAA8BmqB,cAdvD,IAGPN,EAASlvB,EAATkvB,KACFM,EAAWN,EAAOA,EAAKM,SAAW,KAJzB,OAMf,EAAKlwB,MAAQ,CACTkwB,SAAUA,GAAY,MAPX,E,sEAiBT,IAAD,SACkBjvB,KAAKP,MAApBqQ,EADH,EACGA,EAAGuL,EADN,EACMA,QACH4T,EAAajvB,KAAKjB,MAAlBkwB,SAGFktB,GAFOrY,KAAkBxlB,MAAQ,CAAE89B,eAAgB,KAElCA,eAAe/mC,IAAI,SAAA/T,GAAC,OACvC,yBAAKyV,IAAKzV,EAAElC,GAAIa,UAAU,gBAAgBoM,QAAS,kBAAM,EAAKvF,aAAaxF,EAAElC,MACzE,kBAACoyC,GAAA,EAAD,CACIv6B,MAAM,UACNhX,UAAU,wBACV+f,QAASiP,IAAa3tB,EAAElC,GACxBi9C,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAAC78B,GAAA,EAAD,CAAcrgB,GAAG,UAAUsgB,QAASpe,EAAEyuC,KAAM0I,UAAWn3C,EAAEi7C,iBAIjE,OACI,oCACI,yBAAKt8C,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,eAGnD,yBAAK7P,UAAU,wBAAwBk8C,Q,GA9ChC57C,IAAMC,YA8Ddyb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQigC,I,4kBC5DjB19B,G,YACF,WAAY/e,GAAQ,IAAD,uBACf,4CAAMA,KAsDV+8C,cAAgB,SAAAC,GACZ,IAAMC,EAAW,EAAK39C,MAAM09C,GAC5B,GAAKC,EAAL,CAFwB,IAKlBC,EAAW,MAAQD,EAAR,CAAkBE,SAAuB,IADrCF,EAAbE,SACsD,QAAqB,IAEnF,EAAKl9C,SAAL,eAAiB+8C,EAAWE,MA9Db,EAiEnBE,kBAAoB,SAAAJ,GAChB,IAAMC,EAAW,EAAK39C,MAAM09C,GAC5B,GAAKC,EAAL,CAF4B,IAKtBC,EAAW,MAAQD,EAAR,CAAkBI,cADVJ,EAAjBI,eAGR,EAAKp9C,SAAL,eAAiB+8C,EAAWE,MAxEb,EA2EnBI,oBAAsB,WAClB,EAAKr9C,SAAS,CAAEs9C,eAAgB,EAAKj+C,MAAMi+C,iBAzE3C,IAAMC,EAAsBjpC,KAAYvL,IAAI,4CAH7B,OAKf,EAAK1J,MAAQ,CACTm+C,qBAAsB99B,KAAkBs9B,SAASj0C,IAAI,yCACrD00C,mBAAoB/9B,KAAkBs9B,SAASj0C,IAAI,uCACnD20C,qBAAsBh+B,KAAkBs9B,SAASj0C,IAAI,yCACrDu0C,eAAgBC,IAAwBA,EAAoBl2C,OATjD,E,oFAaK,IAAD,EACuE/G,KAAKjB,MAAvFm+C,EADW,EACXA,qBAAsBC,EADX,EACWA,mBAAoBC,EAD/B,EAC+BA,qBAAsBJ,EADrD,EACqDA,cACxEh9C,KAAKq9C,6BAA6B,wCAAyCH,GAC3El9C,KAAKq9C,6BAA6B,sCAAuCF,GACzEn9C,KAAKq9C,6BAA6B,wCAAyCD,GAC3Ep9C,KAAKs9C,uBAAuBN,K,+CAGN,IACdA,EAAkBh9C,KAAKjB,MAAvBi+C,cAEFC,EAAsBjpC,KAAYvL,IAAI,8CAClBw0C,IAAwBA,EAAoBl2C,SAC7Ci2C,GAEzB39C,IAAgBC,KAAK,CACjB,QAAS,YACTywC,KAAM,2CACNhpC,MAAO,CACH,QAAS,qBACTA,OAAQi2C,O,mDAKSn+B,EAAO69B,GAChC,GAAK79B,GACA69B,EAAL,CACA,IAAMa,EAAcn+B,KAAkBs9B,SAASj0C,IAAIoW,GACnD,GAAK0+B,EAAL,CAJ0C,IAMlCX,EAA2BF,EAA3BE,SAAUE,EAAiBJ,EAAjBI,aACAU,EAA6CD,EAAvDX,SAAoCa,EAAmBF,EAAjCT,aAC1BF,IAAaY,GAAcV,IAAiBW,GAEhDp+C,IAAgBC,KAAK,CACjB,QAAS,+BACTuf,MAAO,CAAE,QAASA,GAClB6+B,sBAAuBhB,Q,gCA4BrBA,GACN,QAAKA,GAIe,IAFCA,EAAbE,W,kCAKAF,GACR,QAAKA,GAEoBA,EAAjBI,e,+BAKF,IAAD,SACkB98C,KAAKP,MAApBqQ,EADH,EACGA,EAAGuL,EADN,EACMA,QADN,EAEqFrb,KAAKjB,MAAvFm+C,EAFH,EAEGA,qBAAsBC,EAFzB,EAEyBA,mBAAoBC,EAF7C,EAE6CA,qBAAsBJ,EAFnE,EAEmEA,cAExE,OACI,oCACI,yBAAK/8C,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,oBAGnD,yBAAK7P,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,8BAClB,yBAAK7P,UAAU,gBAAgBoM,QAAS,kBAAM,EAAKmwC,cAAc,0BAC7D,kBAACmB,GAAA,EAAD,CACI1mC,MAAM,UACNhX,UAAU,wBACV+f,QAAShgB,KAAK49C,UAAUV,GACxBb,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAAC78B,GAAA,EAAD,CACIrgB,GAAG,UACHsgB,QAAS5P,EAAE,gCACX2oC,UACIz4C,KAAK49C,UAAUV,GACTptC,EAAE,wBACFA,EAAE,4BAIpB,yBAAK7P,UAAU,gBAAgBoM,QAAS,kBAAM,EAAKwwC,kBAAkB,0BACjE,kBAACc,GAAA,EAAD,CACI1mC,MAAM,UACNhX,UAAU,wBACV+f,QAAShgB,KAAK69C,YAAYX,GAC1Bb,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAAC78B,GAAA,EAAD,CACIrgB,GAAG,UACHsgB,QAAS5P,EAAE,kBACX2oC,UACIz4C,KAAK69C,YAAYX,GAAwBptC,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAK7P,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,wBAClB,yBAAK7P,UAAU,gBAAgBoM,QAAS,kBAAM,EAAKmwC,cAAc,wBAC7D,kBAACmB,GAAA,EAAD,CACI1mC,MAAM,UACNhX,UAAU,wBACV+f,QAAShgB,KAAK49C,UAAUT,GACxBd,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAAC78B,GAAA,EAAD,CACIrgB,GAAG,UACHsgB,QAAS5P,EAAE,0BACX2oC,UACIz4C,KAAK49C,UAAUT,GACTrtC,EAAE,wBACFA,EAAE,4BAIpB,yBAAK7P,UAAU,gBAAgBoM,QAAS,kBAAM,EAAKwwC,kBAAkB,wBACjE,kBAACc,GAAA,EAAD,CACI1mC,MAAM,UACNhX,UAAU,wBACV+f,QAAShgB,KAAK69C,YAAYV,GAC1Bd,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAAC78B,GAAA,EAAD,CACIrgB,GAAG,UACHsgB,QAAS5P,EAAE,kBACX2oC,UACIz4C,KAAK69C,YAAYV,GAAsBrtC,EAAE,kBAAoBA,EAAE,uBAK/E,yBAAK7P,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,0BAClB,yBAAK7P,UAAU,gBAAgBoM,QAAS,kBAAM,EAAKmwC,cAAc,0BAC7D,kBAACmB,GAAA,EAAD,CACI1mC,MAAM,UACNhX,UAAU,wBACV+f,QAAShgB,KAAK49C,UAAUR,GACxBf,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAAC78B,GAAA,EAAD,CACIrgB,GAAG,UACHsgB,QAAS5P,EAAE,4BACX2oC,UACIz4C,KAAK49C,UAAUR,GACTttC,EAAE,wBACFA,EAAE,4BAIpB,yBAAK7P,UAAU,gBAAgBoM,QAAS,kBAAM,EAAKwwC,kBAAkB,0BACjE,kBAACc,GAAA,EAAD,CACI1mC,MAAM,UACNhX,UAAU,wBACV+f,QAAShgB,KAAK69C,YAAYT,GAC1Bf,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAAC78B,GAAA,EAAD,CACIrgB,GAAG,UACHsgB,QAAS5P,EAAE,kBACX2oC,UACIz4C,KAAK69C,YAAYT,GAAwBttC,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAK7P,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,uBAClB,yBAAK7P,UAAU,gBAAgBoM,QAASrM,KAAK+8C,qBACzC,kBAACY,GAAA,EAAD,CACI1mC,MAAM,UACNhX,UAAU,wBACV+f,QAASg9B,EACTX,UAAW,EACXC,WAAY,CAAE,kBAAmB,aAErC,kBAAC78B,GAAA,EAAD,CACIrgB,GAAG,UACHsgB,QAAS5P,EAAE,iBACX2oC,UAA2B3oC,EAAhBktC,EAAkB,uBAA4B,mC,GA9O7Dz8C,IAAMC,WAkQnByb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQuC,IC9QRjc,eACX,uBAAGwzB,UAAU,kCAAkC3B,SAAS,WACpD,0BAAM5xB,EAAE,ygBAEZ,QCOEs7C,I,kNACF/+C,MAAQ,CACJ8mB,aAAa,EACbliB,KAAM,EACNE,IAAK,G,EAGT0zB,kBAAoB,SAAAvzB,GACZA,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAHe,IAMjBo3C,EAAY,EAAKt+C,MAAjBs+C,QACR,GAAKA,IACDA,EAAQC,WAIZ,GAFwB,EAAKj/C,MAArB8mB,YAGJ,EAAKnmB,SAAS,CAAEmmB,aAAa,QAC1B,CACH,IAAMliB,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QAElB,EAAK/G,SAAS,CACVmmB,aAAa,EACbliB,OACAE,U,EAKZkiB,uBAAyB,SAAA/hB,GACrB,EAAKtE,SAAS,CACVmmB,aAAa,EACbliB,KAAM,EACNE,IAAK,K,EAIbo6C,gBAAkB,SAAAj6C,GACd,EAAK+hB,uBAAuB/hB,GADL,MAGU,EAAKvE,OAEtCy+C,EALuB,EAGfA,aAHe,EAGFH,U,wEAKf,IAAD,EACkB/9C,KAAKP,MAApBs+C,EADH,EACGA,QAASjuC,EADZ,EACYA,EACjB,IAAKiuC,EAAS,OAAO,KAFhB,MAI8B/9C,KAAKjB,MAAhC4E,EAJH,EAIGA,KAAME,EAJT,EAISA,IAAKgiB,EAJd,EAIcA,YAEfm4B,EAUAD,EAVAC,WACAG,EASAJ,EATAI,iBACAC,EAQAL,EARAK,oBACAC,EAOAN,EAPAM,aACAC,EAMAP,EANAO,SACAC,EAKAR,EALAQ,eACAC,EAIAT,EAJAS,GACAC,EAGAV,EAHAU,OACAC,EAEAX,EAFAW,QACAC,EACAZ,EADAY,iBAEEC,GAAYZ,EAElB,OACI,oCACI,kBAAC1+B,GAAA,EAAD,CAAUrf,UAAU,qBAAqBsf,QAAM,EAACyG,cAAehmB,KAAKu3B,mBAChE,yBAAKt3B,UAAU,WACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,eAAf,UAAiCk+C,EAAjC,YAAqDC,IACpDQ,GACG,yBAAK3+C,UAAU,gBAAgB6nC,YAAe,CAAEjZ,KAAM8vB,MAG9D,yBAAK1+C,UAAU,qBAAf,UAAuCo+C,EAAvC,aAAwDC,EAAxD,YAAoEC,IACpE,yBAAKt+C,UAAU,qBAAf,UACQu+C,EADR,OAEKC,GAAM,UAAOA,EAAP,MACNC,GAAO,UAAOA,MAI3B,kBAACt5B,GAAA,EAAD,CACInK,KAAM4K,EACNxK,QAASrb,KAAK+lB,uBACdV,gBAAgB,iBAChBL,eAAgB,CAAEnhB,MAAKF,QACvB2hB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,oBACpB,kBAAC+e,GAAA,EAAD,CAAUrZ,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBACtB,kBAACgf,GAAA,EAAD,CAAUtZ,QAASrM,KAAKi+C,iBACpB,kBAACz+B,GAAA,EAAD,KACI,kBAACq/B,GAAD,OAEJ,kBAACp/B,GAAA,EAAD,CAAcC,QAAS5P,EAAE,uB,GAzG/BvP,IAAMC,YAuHbiR,iBAAkBqsC,IClH3BgB,I,kNACF//C,MAAQ,CACJkc,MAAM,EACN8jC,SAAS,EACThB,QAAS,M,EAGbE,gBAAkB,SAAAF,GACd,EAAKr+C,SAAS,CACVub,MAAM,EACN8iC,a,EAIRiB,wBAA0B,WACtB,EAAKt/C,SAAS,CACVq/C,SAAS,K,EAIjBE,wBAA0B,WACtB,EAAKv/C,SAAS,CACVub,MAAM,EACN8iC,QAAS,Q,EAIjBmB,uB,qBAAyB,8BAAAltC,EAAA,wDACbmtC,EAAa,EAAK1/C,MAAlB0/C,SACApB,EAAY,EAAKh/C,MAAjBg/C,QAFa,wDAKrB,EAAKr+C,SAAS,CACVub,MAAM,EACN8iC,QAAS,OAPQ,SAUf1+C,IAAgBC,KAAK,CACvB,QAAS,mBACT8/C,WAAYrB,EAAQ3+C,KAZH,OAerB+/C,EAASA,SAAWA,EAASA,SAASrlC,OAAO,SAAAxY,GAAC,OAAIA,EAAElC,KAAO2+C,EAAQ3+C,KACnE,EAAK2P,cAhBgB,yC,EAmBzBswC,2BAA6B,WACzB,EAAK3/C,SAAS,CACVq/C,SAAS,K,EAIjBO,0B,qBAA4B,4BAAAttC,EAAA,4DAChBmtC,EAAa,EAAK1/C,MAAlB0/C,SAER,EAAKz/C,SAAS,CACVq/C,SAAS,IAJW,SAOlB1/C,IAAgBC,KAAK,CACvB,QAAS,8BARW,OAWxB6/C,EAASA,SAAWA,EAASA,SAASrlC,OAAO,SAAAxY,GAAC,OAAKA,EAAE08C,aACrD,EAAKjvC,cAZmB,yC,wEAelB,IAAD,SAC4B/O,KAAKP,MAA9BqQ,EADH,EACGA,EAAGqvC,EADN,EACMA,SAAU9jC,EADhB,EACgBA,QADhB,EAEqBrb,KAAKjB,MAAvBkc,EAFH,EAEGA,KAAM8jC,EAFT,EAESA,QAERnnC,EAAUunC,EAASA,SAASniC,KAAK,SAAA1b,GAAC,OAAIA,EAAE08C,aACxCuB,EAAQJ,EAASA,SAASrlC,OAAO,SAAAxY,GAAC,OAAKA,EAAE08C,aAE/C,OACI,oCACI,yBAAK/9C,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,oBAGnD,yBAAK7P,UAAU,wBACV4mB,QAAQjP,IACL,yBAAK3X,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,mBAClB,kBAAC,GAAD,CAASiuC,QAASnmC,EAASsmC,YAAal+C,KAAKi+C,kBAC5CsB,EAAMzrC,OAAS,GACZ,kBAACwL,GAAA,EAAD,CACIrf,UAAU,qBACVsf,QAAM,EACNigC,eAAa,EACbnzC,QAASrM,KAAKg/C,yBACd,kBAACx/B,GAAA,EAAD,KACI,kBAACq/B,GAAD,CAAU5nC,MAAM,eAEpB,kBAACwI,GAAA,EAAD,CACIggC,uBAAwB,CAAExoC,MAAO,aACjCyI,QAAS5P,EAAE,4BAM9ByvC,EAAMzrC,OAAS,GACZ,oCACI,yBAAK7T,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,kBACjByvC,EAAMlqC,IAAI,SAAA/T,GAAC,OACR,kBAAC,GAAD,CAASyV,IAAKzV,EAAElC,GAAI2+C,QAASz8C,EAAG48C,YAAa,EAAKD,uBAMtE,kBAAC,IAAD,CACI/iC,QAASC,KACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAASrb,KAAKi/C,wBACd3jC,kBAAgB,qBAChB,kBAAC,IAAD,CAAalc,GAAG,qBAAqB0Q,EAAE,YACvC,kBAAC,KAAD,KACI,kBAACq9B,GAAA,EAAD,CAAmBzpC,MAAO,CAAEoP,WAAY,aACnChD,EAAE,0BAGX,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAKi/C,wBAAyBhoC,MAAM,WAChDnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAKk/C,uBAAwBjoC,MAAM,WAC/CnH,EAAE,SAIf,kBAAC,IAAD,CACIoL,QAASC,KACTC,mBAAoB,EACpBH,KAAM8jC,EACN1jC,QAASrb,KAAKq/C,2BACd/jC,kBAAgB,qBAChB,kBAAC,IAAD,CAAalc,GAAG,qBAAqB0Q,EAAE,YACvC,kBAAC,KAAD,KACI,kBAACq9B,GAAA,EAAD,CAAmBzpC,MAAO,CAAEoP,WAAY,aACnChD,EAAE,wBAGX,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAKq/C,2BAA4BpoC,MAAM,WACnDnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAKs/C,0BAA2BroC,MAAM,WAClDnH,EAAE,c,GA5JFvP,IAAMC,YAgLpByb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQ6iC,IChMRv8C,eACX,0BAAMC,EAAE,81BACR,WCgBEk9C,I,OAAcn/C,IAAMo/C,KAAK,YAAqC,IAAlC7xC,EAAiC,EAAjCA,OAAQzB,EAAyB,EAAzBA,QAASuzC,EAAgB,EAAhBA,UAAgB,EACzBr/C,IAAMs/C,UAAS,GADU,mBACxDh6B,EADwD,KAC3Ci6B,EAD2C,OAEzCv/C,IAAMs/C,SAAS,GAF0B,mBAExDh8C,EAFwD,KAEnDk8C,EAFmD,OAGvCx/C,IAAMs/C,SAAS,GAHwB,mBAGxDl8C,EAHwD,KAGlDq8C,EAHkD,KAIvDlwC,EAAMmwC,cAANnwC,EAmBFiW,EAAyB,WAC3B+5B,GAAe,GACfE,EAAQ,GACRD,EAAO,IAYX,OACI,oCACI,kBAACzgC,GAAA,EAAD,CAAUrf,UAAU,qBAAqBsf,QAAM,EAAClT,QAXpC,WAChBA,EAAQyB,IAUkEkY,cAlCpD,SAAAhiB,GAMtB,GALIA,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAGNkf,EACAi6B,GAAe,OACZ,CAAC,IACIt5C,EAAqBxC,EAArBwC,QAASC,EAAYzC,EAAZyC,QAEjBq5C,GAAe,GACfE,EAAQx5C,GACRu5C,EAAOt5C,MAsBH,kBAAC,KAAD,CAAMqH,OAAQA,KAElB,kBAACsX,GAAA,EAAD,CACInK,KAAM4K,EACNxK,QAAS0K,EACTV,gBAAgB,iBAChBL,eAAgB,CAAEnhB,MAAKF,QACvB2hB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,oBACpB,kBAAC+e,GAAA,EAAD,CAAUrZ,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBACtB,kBAACgf,GAAA,EAAD,CAAUtZ,QAzBJ,WAClB0Z,IACA65B,EAAU9xC,KAwBM,kBAAC0R,GAAA,EAAD,KACI,kBAAC0gC,GAAD,OAEJ,kBAACzgC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oBAc3CqwC,G,2MAcFC,c,sCAAgB,WAAMtyC,GAAN,SAAAkE,EAAA,qEACN3S,IAAgBC,KAAK,CACxB,QAAS,cACRyO,QAASD,IAHD,yC,yIAXZ9N,KAAKyU,gB,oCAGM,IACH2O,EAAUpjB,KAAKP,MAAf2jB,MAEF1T,EAAQlH,IAAUmH,WAExB0Q,YAAiB3Q,EAAO0T,EAAMga,Y,+BAUxB,IAAD,SACyBp9B,KAAKP,MAA3B4b,EADH,EACGA,QAAS+H,EADZ,EACYA,MAAOtT,EADnB,EACmBA,EAExB,OACI,oCACI,yBAAK7P,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,mBAGnD,yBAAK7P,UAAU,wBACX,yBAAKA,UAAU,wBACTmjB,EAAMga,SAAStpB,OAAS,EACtB,oCACI,kBAAC,GAAD,CAAey0B,WAAS,GAAEz4B,EAAE,qBAExBsT,EAAMga,SAAS/nB,IAAI,SAAA/T,GAAC,OAAI,kBAACo+C,GAAD,CAAa3oC,IAAKzV,EAAGwM,OAAQxM,EAAG+K,QAASiV,KAAUs+B,UAAW,EAAKQ,mBAInG,kBAAC,GAAD,KAAgBtwC,EAAE,qB,GA5CnBvP,IAAMC,WAyDlBiR,iBAAkB0uC,ICvJlB59C,eACX,uBAAGwzB,UAAU,iCAAiC3B,SAAS,WACnD,0BAAM5xB,EAAE,q3BAEZ,UCJWD,eACX,uBAAGwzB,UAAU,kCAAkC3B,SAAS,WACpD,0BAAM5xB,EAAE,2mCAEZ,gB,kkBCaE69C,G,2MACFthD,MAAQ,CACJogD,SAAU,KACV/7B,MAAO,KACPk9B,kBAAkB,EAClBC,oBAAoB,G,EAaxBljC,qBAAuB,SAAAxP,GAAW,IACtBE,EAA4BF,EAA5BE,QAASyyC,EAAmB3yC,EAAnB2yC,eACTp9B,EAAU,EAAKrkB,MAAfqkB,MACR,GAAKA,EAAL,CAH6B,IAKrB8F,EAA0B9F,EAA1B8F,YAAakU,EAAaha,EAAbga,SACbqjB,EAAeD,EAAfC,WAEJA,MADiD,IAA/BrjB,EAAS1iB,QAAQ3M,MAGnC0yC,EACA,EAAK/gD,SAAS,CACV0jB,MAAM,MACCA,EADF,CAED8F,YAAaA,EAAc,EAC3BkU,SAAS,CAAErvB,GAAH,oBAAeqvB,QAI/B,EAAK19B,SAAS,CACV0jB,MAAM,MACCA,EADF,CAED8F,YAAaA,EAAc,EAC3BkU,SAAUA,EAAStjB,OAAO,SAAAxY,GAAC,OAAIA,IAAMyM,W,EAkBrDwyC,mBAAqB,WACZ,EAAKxhD,MAAMogD,UAEhB,EAAKz/C,SAAS,CACV6gD,oBAAoB,K,EAI5BG,oBAAsB,WAClB,EAAKhhD,SAAS,CACV6gD,oBAAoB,K,EAI5BD,iBAAmB,WACV,EAAKvhD,MAAMqkB,OAEhB,EAAK1jB,SAAS,CACV4gD,kBAAkB,K,EAI1BK,kBAAoB,WAChB,EAAKjhD,SAAS,CACV4gD,kBAAkB,K,mFA1EtBtgD,KAAKyU,cAELxG,IAAUK,GAAG,qBAAsBtO,KAAKqd,wB,6CAIxCpP,IAAUM,IAAI,qBAAsBvO,KAAKqd,wB,uJAiCzChe,IAAgBC,KAAK,CACjB,QAAS,sBACVC,KAAK,SAAA4/C,GAAQ,OAAI,EAAKz/C,SAAS,CAAEy/C,eAEpC9/C,IAAgBC,KAAK,CACjB,QAAS,kBACTypB,OAAQ,EACRhU,MAAO,MACRxV,KAAK,SAAA6jB,GAAK,OAAI,EAAK1jB,SAAS,CAAE0jB,Y,8HA+B3B,IAAD,EACkBpjB,KAAKP,MAApBqQ,EADH,EACGA,EAAGuL,EADN,EACMA,QADN,EAE6Drb,KAAKjB,MAA/DuhD,EAFH,EAEGA,iBAAkBl9B,EAFrB,EAEqBA,MAAOm9B,EAF5B,EAE4BA,mBAAoBpB,EAFhD,EAEgDA,SAE/CyB,EACFzB,GAAYA,EAASA,SAASrrC,OAAS,EACJ,IAA7BqrC,EAASA,SAASrrC,OACd,YADJ,UAEOqrC,EAASA,SAASrrC,OAFzB,aAGA,YAEJ+sC,EACFz9B,GAASA,EAAM8F,YAAc,EACD,IAAtB9F,EAAM8F,YACF,SADJ,UAEO9F,EAAM8F,YAFb,UAGA,WAEV,OACI,oCACI,yBAAKjpB,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASgP,GAChD,kBAAC,GAAD,OAEJ,yBAAKpb,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,sBAGnD,yBAAK7P,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAACqf,GAAA,EAAD,CACIrf,UAAU,sBACVoxC,UAAMC,EACN/xB,QAAM,EACNlT,QAASrM,KAAKsgD,kBACd,kBAAC9gC,GAAA,EAAD,CAAcvf,UAAU,2BACpB,kBAAC6gD,GAAD,OAEJ,kBAACrhC,GAAA,EAAD,CACIrgB,GAAG,UACHa,UAAU,0BACVyf,QAAS5P,EAAE,gBACX2oC,UAAWoI,KAGnB,kBAACvhC,GAAA,EAAD,CACIrf,UAAU,sBACVoxC,UAAMC,EACN/xB,QAAM,EACNlT,QAASrM,KAAKugD,oBACd,kBAAC/gC,GAAA,EAAD,CAAcvf,UAAU,2BACpB,kBAAC8gD,GAAD,OAEJ,kBAACthC,GAAA,EAAD,CACIrgB,GAAG,UACHa,UAAU,0BACVyf,QAAS5P,EAAE,iBACX2oC,UAAWmI,MAIvB,yBAAK3gD,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgB6P,EAAE,iBAClB,kBAACwP,GAAA,EAAD,CAAUrf,UAAU,sBAAsBoxC,UAAMC,EAAW/xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACIxf,UAAU,2BACVyf,QAAS5P,EAAE,qBACX2oC,UAAW3oC,EAAE,uBAGrB,kBAACwP,GAAA,EAAD,CAAUrf,UAAU,sBAAsBoxC,UAAMC,EAAW/xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACIxf,UAAU,2BACVyf,QAAS5P,EAAE,iBACX2oC,UAAW3oC,EAAE,wBAGrB,kBAACwP,GAAA,EAAD,CAAUrf,UAAU,sBAAsBoxC,UAAMC,EAAW/xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACIxf,UAAU,2BACVyf,QAAS5P,EAAE,4BACX2oC,UAAW3oC,EAAE,wBAGrB,kBAACwP,GAAA,EAAD,CAAUrf,UAAU,sBAAsBoxC,UAAMC,EAAW/xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACIxf,UAAU,2BACVyf,QAAS5P,EAAE,wBACX2oC,UAAW3oC,EAAE,wBAGrB,kBAACwP,GAAA,EAAD,CAAUrf,UAAU,sBAAsBoxC,UAAMC,EAAW/xB,QAAM,GAC7D,kBAACE,GAAA,EAAD,CACIxf,UAAU,2BACVyf,QAAS5P,EAAE,eACX2oC,UAAW3oC,EAAE,0BAK7B,kBAAC,GAAD,CAAamL,KAAMqlC,EAAkBjlC,QAASrb,KAAK2gD,mBAC/C,kBAAC,GAAD,CAAcv9B,MAAOA,KAEzB,kBAAC,GAAD,CAAanI,KAAMslC,EAAoBllC,QAASrb,KAAK0gD,qBACjD,kBAAC,GAAD,CAAgBvB,SAAUA,U,GAhMhB5+C,IAAMC,WAiNrByb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQokC,ICjNjBW,I,mBACF,WAAYvhD,GAAQ,IAAD,8BACf,4CAAMA,KAsBV+P,kBAAoB,SAAA3B,GAAW,IACnBQ,EAAW,EAAK5O,MAAhB4O,OACAoB,EAAmB5B,EAAnB4B,QAASL,EAAUvB,EAAVuB,MAEjB,GAAIK,IAAYpB,GACXe,EAAL,CAEA,IAAMM,EAAQlH,IAAUC,MACxBmH,YAAgBF,EAAOrB,GAAQ,KA/BhB,EAiDnB4yC,gBAAkB,WACd,EAAKvhD,SAAS,CACVuhD,iBAAiB,KAnDN,EAuDnBC,iBAAmB,WACf,EAAKxhD,SAAS,CACVuhD,iBAAiB,KAzDN,EA6DnBE,YAAc,WACV,EAAKzhD,SAAS,CACVyhD,aAAa,KA/DF,EAmEnBC,aAAe,WACX,EAAK1hD,SAAS,CACVyhD,aAAa,KArEF,EAyEnBE,kBAAoB,WAChB,EAAK3hD,SAAS,CACV2hD,mBAAmB,KA3ER,EA+EnBC,mBAAqB,WACjB,EAAK5hD,SAAS,CACV2hD,mBAAmB,KAjFR,EAqFnBE,oBAAsB,WAClB,EAAK7hD,SAAS,CACV6hD,qBAAqB,KAvFV,EA2FnBC,qBAAuB,WACnB,EAAK9hD,SAAS,CACV6hD,qBAAqB,KA7FV,EAiGnBE,aAAe,WACX,EAAK/hD,SAAS,CACV+hD,cAAc,KAnGH,EAuGnBC,cAAgB,WACZ,EAAKhiD,SAAS,CACV+hD,cAAc,KAzGH,EA6GnBE,YAAc,WACV,EAAKjiD,SAAS,CACViiD,aAAa,KA/GF,EAmHnBC,aAAe,WACX,EAAKliD,SAAS,CACViiD,aAAa,KArHF,EAyHnBE,oBAAsB,WAClBxiD,IAAgByF,aAAa,CACzB,QAAS,uBACTmW,MAAM,KAzHV,EAAKlc,MAAQ,CACTkiD,iBAAiB,EACjBE,aAAa,EACbE,mBAAmB,EACnBE,qBAAqB,EACrBE,cAAc,EACdE,aAAa,GATF,E,iFAcf3hD,KAAKyU,cAELtF,IAAUb,GAAG,kBAAmBtO,KAAKwP,qB,6CAIrCL,IAAUZ,IAAI,kBAAmBvO,KAAKwP,qB,6JAe9BnB,EAAWrO,KAAKP,MAAhB4O,OAEFqB,EAAQlH,IAAUmH,WAExBC,YAAgBF,EAAOrB,GAAQ,G,SAEVhP,IAAgBC,KAAK,CACtC,QAAS,kBACTyO,QAASE,IAAUiH,Y,OAFjB1V,E,OAKNyO,IAAU6zC,YAAY7zC,IAAUiH,UAAW1V,G,mIAkFrC,IAAD,EACqBQ,KAAKP,MAAvB4O,EADH,EACGA,OAAQ8R,EADX,EACWA,MADX,EAEuGngB,KAAKjB,MAAzGkiD,EAFH,EAEGA,gBAAiBE,EAFpB,EAEoBA,YAAaE,EAFjC,EAEiCA,kBAAmBE,EAFpD,EAEoDA,oBAAqBE,EAFzE,EAEyEA,aAAcE,EAFvF,EAEuFA,YAE5F,OACI,oCACI,kBAAC,GAAD,CACItzC,OAAQA,EACR8R,MAAOA,EACP9E,QAASrb,KAAK6hD,oBACdxU,cAAertC,KAAKihD,gBACpB3T,UAAWttC,KAAKmhD,YAChB5T,gBAAiBvtC,KAAKqhD,kBACtB7T,kBAAmBxtC,KAAKuhD,oBACxB9T,WAAYztC,KAAKyhD,aACjB/T,UAAW1tC,KAAK2hD,cAEpB,kBAAC,GAAD,CAAa1mC,KAAMgmC,EAAiB5lC,QAASrb,KAAKkhD,kBAC9C,kBAAC,GAAD,CAAa7yC,OAAQA,KAEzB,kBAAC,GAAD,CAAa4M,KAAMkmC,EAAa9lC,QAASrb,KAAKohD,cAC1C,kBAAC,GAAD,CAAS/yC,OAAQA,KAErB,kBAAC,GAAD,CAAa4M,KAAMomC,EAAmBhmC,QAASrb,KAAKshD,oBAChD,kBAAC,GAAD,CAAejzC,OAAQA,KAE3B,kBAAC,GAAD,CAAa4M,KAAMsmC,EAAqBlmC,QAASrb,KAAKwhD,sBAClD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAavmC,KAAM0mC,EAAatmC,QAASrb,KAAK4hD,cAC1C,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAa3mC,KAAMwmC,EAAcpmC,QAASrb,KAAK0hD,eAC3C,kBAAC,GAAD,Y,GAlKGnhD,IAAMC,YAoLdyb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQ+kC,ICrLjBe,I,qMACoB3xC,EAAWC,EAAWyqB,GAAc,IAAD,EAC3B96B,KAAKP,MAAvBqO,EAD6C,EAC7CA,OAAQpK,EADqC,EACrCA,MAChB,OAAI0M,EAAUtC,SAAWA,GAIrBsC,EAAU1M,MAAMG,MAAQH,EAAMG,M,+BAO5B,IAAD,EAC8B7D,KAAKP,MAAhCqO,EADH,EACGA,OAAQzB,EADX,EACWA,QAAS3I,EADpB,EACoBA,MAEzB,OACI,kBAAC4b,GAAA,EAAD,CAAUrf,UAAU,iBAAiBoM,QAAS,kBAAMA,EAAQyB,IAASyR,QAAM,EAAC7b,MAAOA,GAC/E,kBAAC,KAAD,CAAMoK,OAAQA,S,GAnBHvN,IAAMC,YA+LlBwhD,G,YArKX,WAAYviD,GAAQ,IAAD,8BACf,4CAAMA,KAwBV6pB,aAAe,SAAAtlB,GACX,EAAKi+C,uBACL,EAAKC,wBA3BU,EAsCnBC,qBAAuB,WAAO,IAAD,EACM,EAAKpjD,MAA5BukB,EADiB,EACjBA,MAAOwG,EADU,EACVA,YAETs4B,EAAet4B,GAAexG,EAE5B1L,GAAYwqC,IAAiBt4B,EAAc,EAAKJ,cAAgB,EAAKH,SAArE3R,QACR,GAAKA,EAAL,CAEA,IAAM2iB,EAAY3iB,EAAQyqC,mBAC1B,GAAI9nB,EAAU/rB,KAAO,EAAG,CACpB,IAAM8zC,EAAU,GAChB,aAAI/nB,EAAU+P,QAAQvoC,QAAQ,SAAAgV,GAC1BurC,EAAQttC,KAAKotC,EAAahlB,SAASrmB,MAGvC,IAAMrH,EAAQlH,IAAUmH,WACxB0Q,YAAiB3Q,EAAO4yC,MAtDb,EA4EnBjhC,eAAiB,SAAAvT,GACbwT,aAASxT,GAAQ,GACjB,EAAKpG,eA9EU,EAiFnBszB,WAAa,WAAmB1X,GAAW,IAA3BmE,EAA0B,EAA1BA,MAAO/jB,EAAmB,EAAnBA,MACboK,EAASwV,EAAM8Z,SAAS3V,GAE9B,OAAO,kBAAC,GAAD,CAAc1Q,IAAKjJ,EAAQA,OAAQA,EAAQzB,QAAS,kBAAM,EAAKgV,eAAevT,IAASpK,MAAOA,KApFtF,EAuFnB0iB,aAvFmB,sCAuFJ,WAAMrU,GAAN,mBAAAC,EAAA,wDACLiI,EAAQlI,EAAKuH,OADR,uBAGP,EAAK5Z,SAAS,CACVoqB,YAAa,OAJV,0CASezqB,IAAgBC,KAAK,CAC3C,QAAS,iBACT2a,QACAlF,MAAO,MAZA,QASL+U,EATK,QAcCsT,SAAWtT,EAAYsT,SAAS7Z,KAAK,SAACjiB,EAAGkiB,GAAJ,OAC7C++B,YAAgBjhD,GAAGkhD,cAAcD,YAAgB/+B,MAG/C9T,EAAQlH,IAAUmH,WACxB0Q,YAAiB3Q,EAAOoa,EAAYsT,SAAStV,MAAM,EAAG,KAEtD,EAAKpoB,SAAS,CAAEoqB,gBArBL,0CAvFI,wDA+GnBpiB,YAAc,WACVrI,IAAgByF,aAAa,CACzB,QAAS,uBACTmW,MAAM,KA/GV,EAAKoL,eAAiB9lB,IAAMsa,YAC5B,EAAK0O,QAAUhpB,IAAMsa,YACrB,EAAK6O,cAAgBnpB,IAAMsa,YAE3B,EAAK9b,MAAQ,CACTukB,MAAO,KACPwG,YAAa,MAGjB,EAAKm4B,qBAAuB/iC,YAAS,EAAK+iC,qBAAsB,KAAK,GACrE,EAAKC,qBAAuBte,YAAS,EAAKse,qBAAsB,KAAK,GAbtD,E,iFAgBE,IACTtqC,EAAY5X,KAAKqmB,eAAjBzO,QACJA,GACAnQ,WAAW,kBAAMmQ,EAAQxE,SAAS,IAGtCpT,KAAKyU,gB,6CASLzU,KAAKmiD,yB,6CAILniD,KAAKmiD,yB,uJAwBDtlB,EAAWmD,GAAWnD,S,gCAELx9B,IAAgBC,KAAK,CAClC,QAAS,gB,QADbu9B,E,QAGSO,SAAWP,EAASO,SAAS7Z,KAAK,SAACjiB,EAAGkiB,GAAJ,OAAU++B,YAAgBjhD,GAAGkhD,cAAcD,YAAgB/+B,MACtGwc,GAAWnD,SAAWA,E,OAGpBntB,EAAQlH,IAAUmH,WACxB0Q,YAAiB3Q,EAAOmtB,EAASO,SAAStV,MAAM,EAAG,KAEnD9nB,KAAKN,SAAS,CACV4jB,MAAOuZ,I,oIA8CL,IAAD,OACG1c,EAAUngB,KAAKP,MAAf0gB,MADH,EAE0BngB,KAAKjB,MAA5BukB,EAFH,EAEGA,MAAOwG,EAFV,EAEUA,YAETpmB,EAAQyc,EAAQ,CAAEqE,UAAW,KAAQ,KAE3C,OACI,oCACI,yBAAKvkB,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASrM,KAAK0H,aACnDyY,EAAQ,kBAAC7T,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,kBAAC,GAAD,CAAag1B,SAAUthC,KAAKqmB,eAAgBlZ,SAAUnN,KAAKomB,gBAE/D,yBAAKnmB,UAAU,mBAAmByD,MAAOA,GACpC4f,GACG,kBAAC,GAAD,CACI9H,IAAKxb,KAAKupB,QACVtpB,UAAU,gBACVG,OAAQkjB,EAAM8Z,SACd1C,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA15B,GAAC,OAAI,EAAK05B,WAAW15B,EAAGgiB,IACpCgH,SAAUtqB,KAAKspB,eAGtBQ,GACG,kBAAC,GAAD,CACItO,IAAKxb,KAAK0pB,cACVzpB,UAAU,qCACVG,OAAQ0pB,EAAYsT,SACpB1C,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA15B,GAAC,OAAI,EAAK05B,WAAW15B,EAAGwoB,IACpCQ,SAAUtqB,KAAKspB,qB,GAzJpB/oB,IAAMC,W,SCpCvBiiD,I,mBACF,WAAYhjD,GAAQ,IAAD,uBACf,4CAAMA,KAoBVuwB,wBAA0B,SAAAniB,GAAW,IACzBoiB,EAAiBpiB,EAAjBoiB,aAER,EAAKvwB,SAAS,CAAEuwB,kBAxBD,EA2BnByyB,kCAAoC,WAChC,EAAKhjD,SAAS,CAAEijD,qBAAqB,KA5BtB,EA+BnBC,aAAe,WACP,EAAKC,UAET,EAAKA,SAAU,EACfp7C,WAAW,WACPsB,OAAO+5C,SAASC,UACjB,OArCY,IAGP9yB,EAAiB8C,KAAjB9C,aAHO,OAKf,EAAKlxB,MAAQ,CACT4jD,qBAAqB,EACrB1yB,gBAPW,E,iFAYf8C,KAASzkB,GAAG,kCAAmCtO,KAAK0iD,mCACpD3vB,KAASzkB,GAAG,wBAAyBtO,KAAKgwB,2B,6CAI1C+C,KAASxkB,IAAI,kCAAmCvO,KAAK0iD,mCACrD3vB,KAASxkB,IAAI,wBAAyBvO,KAAKgwB,2B,+BAsBrC,IAAD,EACyChwB,KAAKjB,MAA3C4jD,EADH,EACGA,oBAAqB1yB,EADxB,EACwBA,aACrBngB,EAAM9P,KAAKP,MAAXqQ,EAER,OAAK6yC,EAKD,kBAAC5mC,EAAA,EAAD,CAAQ9b,UAAU,gBAAgB2f,QAAQ,YAAY3I,MAAM,UAAU5K,QAASrM,KAAK4iD,cAC/E3yB,EAAe,kBAAC+yB,GAAA,EAAD,MAAkBlzC,EAAE,WALjC,S,GA9COvP,IAAMC,YAyDjBiR,iBAAkBgxC,IClD3BQ,I,0BACF,WAAYxjD,GAAQ,IAAD,8BACf,4CAAMA,KAaViI,YAAc,WACVrI,IAAgByF,aAAa,CACzB,QAAS,yBACTmW,MAAM,KAjBK,EAqBnB8xB,WArBmB,qBAqBN,wCAAA/6B,EAAA,wDACDK,EAAU,EAAKtT,MAAfsT,MADC,EAEkC,EAAKtT,MAAxCmkD,EAFC,EAEDA,aAAcC,EAFb,EAEaA,iBAEhB5mC,EAAQ,EAAKg5B,SAAS39B,QAAQ7Q,MAAMuS,OAJjC,uBAML,EAAK5Z,SAAS,CACV2S,OAAO,IAPN,iCAYLA,GACA,EAAK3S,SAAS,CACV2S,OAAO,IAIf,EAAK3K,cAECikB,EAAc,EAAKy3B,eAAexrC,QAAQ7Q,MApBvC,UAsBU1H,IAAgBC,KAAK,CACpC,QAAS,0BACTid,QACAoP,cACA8M,YAAY,EACZqqB,SAAU,OA3BL,QAsBH5zC,EAtBG,OA8BLi0C,EACA9jD,IAAgBC,KAAK,CACjB,QAAS,eACTmQ,QAASP,EAAK9P,GACdgQ,MAAO,CAAE,QAAS,cAAehQ,GAAI+jD,EAAiB/jD,MAEnD8jD,GACP7jD,IAAgBC,KAAK,CACjB,QAAS,eACTmQ,QAASP,EAAK9P,GACdgQ,MAAO,CAAE,QAAS,gBAAiB2gC,KAAM,YAAaliB,KAAMq1B,KAIpE9hC,aAASlS,EAAK9P,IA5CL,0CArBM,EAoEnB0wC,kBApEmB,sCAoEC,WAAO7R,EAAMkQ,GAAb,eAAAn8B,EAAA,4DAChB,EAAKtS,SAAS,CACVwjD,aAAcjlB,EACdolB,gBAAiBlV,IAHL,SAMK9uC,IAAgBC,KAAK,CACtC,QAAS,aACTiJ,KAAM,CACF,QAAS,gBACTwnC,KAAM,YACNliB,KAAMoQ,GAEVqlB,UAAW,CAAE,QAAS,iBACtBC,SAAUC,OAdE,OAMVhkD,EANU,OAiBhB,EAAKE,SAAS,CACVyjD,iBAAkB3jD,IAlBN,yCApED,wDAGf,EAAK+1C,SAAWh1C,IAAMsa,YACtB,EAAKuoC,eAAiB7iD,IAAMsa,YAE5B,EAAK9b,MAAQ,CACTsT,OAAO,EACP6wC,aAAc,KACdG,gBAAiB,KACjBF,iBAAkB,MAVP,E,sEA0FT,IAAD,EACgBnjD,KAAKP,MAAlB0gB,EADH,EACGA,MAAOrQ,EADV,EACUA,EACPuC,EAAUrS,KAAKjB,MAAfsT,MAER,OACI,oCACI,yBAAKpS,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASrM,KAAK0H,aACnDyY,EAAQ,kBAAC7T,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAKrM,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,iBAGnD,yBAAK7P,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAcouC,SAAUruC,KAAK8vC,oBAC7B,yBAAK7vC,UAAU,kBACX,kBAACixC,GAAA,EAAD,CACI5P,SAAUthC,KAAKu1C,SACfljC,MAAOA,EACPpS,UAAU,iBACV2f,QAAQ,WACRqN,WAAS,EACTE,MAAOrd,EAAE,oBACTqhC,aAAc,KAElB,kBAACD,GAAA,EAAD,CACI5P,SAAUthC,KAAKojD,eACfnjD,UAAU,iBACV2f,QAAQ,WACRqN,WAAS,EACTE,MAAOrd,EAAE,kCACTqhC,aAAc,KAElB,yBAAKlxC,UAAU,qBAAqB6P,EAAE,uBAKlD,yBAAK7P,UAAU,yBAAyBoM,QAASrM,KAAK+sC,YAClD,kBAAC,GAAD,Y,GApIKxsC,IAAMC,YAgJhBiR,iBAAkBwxC,ICxGlBQ,I,mBA7CX,WAAYhkD,GAAQ,IAAD,8BACf,4CAAMA,KAEDkyC,OAASpxC,IAAMsa,YAHL,E,yEAMN,IAAD,EAMJ7a,KAAK2xC,OAAO/5B,QAEhB,MAAO,CAAEjU,KARD,EAEJiuC,WAMW/tC,IARP,EAGJguC,UAKgBnlC,MARZ,EAIJ02B,YAIuB10B,OARnB,EAKJgT,gB,sCAMQ3P,GACZ,IAAM+/B,EAAM9xC,KAAK2xC,OAAO/5B,QACnBk6B,IAELA,EAAIpuC,MAAMu/B,QAAUlxB,K,+BAGd,IAAD,EACiC/R,KAAKP,MAAnCqO,EADH,EACGA,OAAQ6D,EADX,EACWA,SAAUtF,EADrB,EACqBA,QAE1B,OACI,yBAAKmP,IAAKxb,KAAK2xC,OAAQ1xC,UAAWgM,IAAW,OAAQ,CAAE,gBAAiB0F,IAAatF,QAASA,GAC1F,kBAAC+7B,GAAA,EAAD,CAAUt6B,OAAQA,EAAQyB,OAAO,IACjC,yBAAKtP,UAAU,eACX,kBAACqM,EAAA,EAAD,CAAWrM,UAAU,sBAEzB,yBAAKA,UAAU,aAAayjD,YAAiB51C,S,GAlCtCvN,IAAMC,YCcvBuhD,G,8LACoB3xC,EAAWC,EAAWyqB,GAAc,IAAD,EACjB96B,KAAKP,MAAjCqO,EAD6C,EAC7CA,OAAQ6D,EADqC,EACrCA,SAAUjO,EAD2B,EAC3BA,MAC1B,OAAI0M,EAAUtC,SAAWA,IAIrBsC,EAAUuB,WAAaA,GAIvBvB,EAAU1M,MAAMG,MAAQH,EAAMG,O,+BAO5B,IAAD,EACwC7D,KAAKP,MAA1CqO,EADH,EACGA,OAAQ6D,EADX,EACWA,SAAUtF,EADrB,EACqBA,QAAS3I,EAD9B,EAC8BA,MAEnC,OACI,kBAAC4b,GAAA,EAAD,CAAUrf,UAAU,iBAAiBoM,QAAS,kBAAMA,EAAQyB,IAASyR,QAAM,EAAC7b,MAAOA,GAC/E,kBAACi6C,GAAA,EAAD,CAAU19C,UAAU,0BAA0B+f,QAASrO,EAAUsF,MAAM,YACvE,kBAAC,KAAD,CAAMnJ,OAAQA,S,GAxBHvN,IAAMC,WA8B3BmjD,G,YACF,WAAYlkD,GAAQ,IAAD,8BACf,4CAAMA,KAoCV6pB,aAAe,SAAAtlB,GACX,EAAKi+C,uBACL,EAAKC,wBAvCU,EAkDnBC,qBAAuB,WAAO,IAAD,EACM,EAAKpjD,MAA5BukB,EADiB,EACjBA,MAAOwG,EADU,EACVA,YAETs4B,EAAet4B,GAAexG,EAE5B1L,GAAYwqC,IAAiBt4B,EAAc,EAAKJ,cAAgB,EAAKH,SAArE3R,QACR,GAAKA,EAAL,CAEA,IAAM2iB,EAAY3iB,EAAQyqC,mBAC1B,GAAI9nB,EAAU/rB,KAAO,EAAG,CACpB,IAAM8zC,EAAU,GAChB,aAAI/nB,EAAU+P,QAAQvoC,QAAQ,SAAAgV,GAC1BurC,EAAQttC,KAAKotC,EAAahlB,SAASrmB,MAGvC,IAAMrH,EAAQlH,IAAUmH,WACxB0Q,YAAiB3Q,EAAO4yC,MAlEb,EAwFnBjhC,eAAiB,SAAAvT,GAAW,IAKpB81C,EALmB,EACgB,EAAK7kD,MAApC8kD,EADe,EACfA,cAAexR,EADA,EACAA,YACfh9B,EAAewuC,EAAfxuC,IAAKyuC,EAAUD,EAAVC,MAEPC,EAAS,IAAI7vC,IAAImB,GAEnB2uC,EAAiB,KACjB1Q,GAAa,EACbj+B,EAAIhB,IAAIvG,IACRi2C,EAAOhrC,OAAOjL,GACd81C,EAAWE,EAAMhqC,OAAO,SAAAxY,GAAC,OAAIA,IAAMwM,IACnCk2C,EAAiB3R,IAAgBvkC,EAAS,KAAOukC,EACjDiB,GAAa,IAEbyQ,EAAO/qC,IAAIlL,EAAQA,GACnB81C,EAAWE,EAAMjqC,OAAO,CAAC/L,IACzBk2C,EAAiB,MAGrB,IAAMnwC,EAAQ,EAAKwS,eAAezO,QAClC/D,EAAMT,QACDkgC,IACDz/B,EAAMoF,UAAY,GAClB,EAAKmN,aAAa,KAGtB,IAAMmtB,EAAY,EAAKN,aAAar7B,QAC9B47B,EAAaD,EAAU9xB,aACvBgyB,EAAmBF,EAAU7xB,aAE7BkyB,EAAU,IAAI1/B,IA9BG,uBA+BvB,YAAgB,EAAKg/B,SAAS5I,OAA9B,+CAAsC,CAAC,IAA9BvzB,EAA6B,QAC5BuL,EAAK,EAAK4wB,SAASzqC,IAAIsO,GAC7B,GAAIuL,EAAI,CACJ,IAAMyG,EAASzG,EAAG0oB,YAClB4I,EAAQ56B,IAAIjC,EAAKgS,KAnCF,kFAuCvB,IAAM2qB,EAAcH,EAAU7vC,MAAMu/B,QAC9B0Q,EAAgBJ,EAAUvyB,UAC5BsyB,IACAC,EAAU7vC,MAAMu/B,QAAU,MAG9B,EAAKvjC,SAAS,CACV2yC,YAAa2R,EACbH,cAAe,CACXC,MAAOF,EACPvuC,IAAK0uC,IAEV,WACC,EAAKjQ,aAAaR,EAAYE,EAAYC,EAAkBE,EAAeD,GAC3E,EAAKuQ,aAAarQ,MA7IP,EAoPnB5Y,WAAa,WAAmB1X,EAAO4gC,GAAsB,IAA7Cz8B,EAA4C,EAA5CA,MAAO/jB,EAAqC,EAArCA,MACboK,EAASwV,EAAMmE,GACf2R,EAAa8qB,EAAiB7vC,IAAIvG,GAExC,OAAO,kBAAC,GAAD,CAAciJ,IAAKjJ,EAAQA,OAAQA,EAAQ6D,SAAUynB,EAAY/sB,QAAS,kBAAM,EAAKgV,eAAevT,IAASpK,MAAOA,KAxP5G,EA2PnB0iB,aA3PmB,sCA2PJ,WAAMrU,GAAN,6BAAAC,EAAA,wDACLiI,EAAQlI,EAAKuH,OADR,uBAGP,EAAK5Z,SAAS,CACVoqB,YAAa,KACbq6B,YAAa,KACb9R,YAAa,OANV,iCAWL19B,EAAW,IACRK,KACL3V,IAAgBC,KAAK,CACjB,QAAS,iBACT2a,QACAlF,MAAO,MAGfJ,EAASK,KACL3V,IAAgBC,KAAK,CACjB,QAAS,oBACT2a,WAtBG,SAyB8B7E,QAAQzC,IAAIgC,GAzB1C,mCAyBJmV,EAzBI,KAyBSs6B,EAzBT,KA2BXt6B,EAAYsT,SAAWtT,EAAYsT,SAAS7Z,KAAK,SAACjiB,EAAGkiB,GAAJ,OAC7C++B,YAAgBjhD,GAAGkhD,cAAcD,YAAgB/+B,MAG/C2gC,EAAc,CAAE,QAAS,QAAS/mB,SAAU,IAClDgnB,EAAY1uC,SAASyiB,OAAO,SAAC2rB,EAAOz1C,GAChC,IAAMa,EAAOC,IAAU1G,IAAI4F,GAI3B,OAHIa,GAA+B,oBAAvBA,EAAKuN,KAAK,UAClBqnC,EAAM9uC,KAAK9F,EAAKuN,KAAK1O,SAElB+1C,GACRK,EAAY/mB,UAET1tB,EAAQlH,IAAUmH,WACxB0Q,YAAiB3Q,EAAOoa,EAAYsT,UACpC/c,YAAiB3Q,EAAOy0C,EAAY/mB,UAEpC,EAAK19B,SAAS,CAAEoqB,cAAaq6B,cAAa9R,YAAa,OA5C5C,0CA3PI,wDA0SnB3qC,YAAc,WACVrI,IAAgByF,aAAa,CACzB,QAAS,uBACTmW,MAAM,KA7SK,EAiTnBw5B,kBAAoB,SAAAzwC,GAAU,IAAD,EACc,EAAKjF,MAApC8kD,EADiB,EACjBA,cAAexR,EADE,EACFA,YAClBwR,IAEWA,EAARxuC,IACChB,IAAIg+B,KAEbruC,EAAM2C,kBACN3C,EAAM+B,YAAYo7B,2BAElB,EAAKzhC,SAAS,CACV2yC,YAAa,UA5TF,EAgUnBD,gBAAkB,WAAO,IAAD,EACmB,EAAKrzC,MAApC8kD,EADY,EACZA,cAAexR,EADH,EACGA,YACvB,GAAKwR,EAAL,CAFoB,IAIZC,EAAeD,EAAfC,MAAOzuC,EAAQwuC,EAARxuC,IACf,GAAKyuC,GACAA,EAAMhwC,OAEX,GAAIuB,EAAIhB,IAAIg+B,GACR,EAAKhxB,eAAegxB,OADxB,CAKA,IAAMO,EAAWkR,EAAMA,EAAMhwC,OAAS,GACjC8+B,GAEL,EAAKlzC,SAAS,CACV2yC,YAAaO,OA9UjB,EAAK2C,SAAWh1C,IAAMsa,YACtB,EAAKwL,eAAiB9lB,IAAMsa,YAC5B,EAAK0O,QAAUhpB,IAAMsa,YACrB,EAAK6O,cAAgBnpB,IAAMsa,YAC3B,EAAKo4B,aAAe1yC,IAAMsa,YAC1B,EAAKq4B,SAAW,IAAIh/B,IAEpB,EAAKnV,MAAQ,CACTukB,MAAO,KACPwG,YAAa,KACb+5B,cAAe,CACXC,MAAO,GACPzuC,IAAK,IAAInB,KAEbm+B,YAAa,MAGjB,EAAK4P,qBAAuB/iC,YAAS,EAAK+iC,qBAAsB,KAAK,GACrE,EAAKC,qBAAuBte,YAAS,EAAKse,qBAAsB,KAAK,GArBtD,E,0EAyBf,OAAOliD,KAAKjB,MAAM8kD,cAAcC,Q,0CAGf,IACTlsC,EAAY5X,KAAKqmB,eAAjBzO,QACJA,GACAnQ,WAAW,kBAAMmQ,EAAQxE,SAAS,IAGtCpT,KAAKyU,gB,6CASLzU,KAAKmiD,yB,6CAILniD,KAAKmiD,yB,uJAwBDtlB,EAAWmD,GAAWnD,S,gCAELx9B,IAAgBC,KAAK,CAClC,QAAS,gB,QADbu9B,E,QAGSO,SAAWP,EAASO,SAAS7Z,KAAK,SAACjiB,EAAGkiB,GAAJ,OAAU++B,YAAgBjhD,GAAGkhD,cAAcD,YAAgB/+B,MACtGwc,GAAWnD,SAAWA,E,OAGpBntB,EAAQlH,IAAUmH,WACxB0Q,YAAiB3Q,EAAOmtB,EAASO,SAAStV,MAAM,EAAG,KAEnD9nB,KAAKN,SAAS,CACV4jB,MAAOuZ,I,wIA6DFyW,EAAYE,EAAYC,EAAkBE,EAAeD,GAAc,IAAD,OACzEH,EAAYvzC,KAAKizC,aAAar7B,QAE9Bm8B,EAAgBR,EAAU9xB,aAI1BuyB,GAHsBT,EAAU7xB,aAGpBqyB,EAAgBP,GADjBO,EAAgBP,EAKzBA,EAFU,KAGVD,EAAU7vC,MAAMu/B,QAAhB,sBAAyCvhC,KAAKC,IAAI6xC,EAHxC,KAGV,OACA1yC,sBAAsB,WAClByyC,EAAU7vC,MAAMu/B,QAAhB,sBAAyCvhC,KAAKC,IAAIoyC,EAL5C,KAKN,OACAtsC,WAAW,WACP,EAAK4e,eAAezO,QAAQq8B,eAAe,CAAEjY,SAAU,UACxD,SAGPuX,EAAU7vC,MAAMu/B,QAAhB,sBAXU,IAWV,OACAjjC,KAAKqmB,eAAezO,QAAQq8B,eAAe,CAAEjY,SAAU,YAEpDgY,EACHD,EAfU,KAgBVR,EAAU7vC,MAAMu/B,QAAhB,sBAAyCvhC,KAAKC,IAAI8xC,EAhBxC,KAgBV,OACA3yC,sBAAsB,WAClByyC,EAAU7vC,MAAMu/B,QAAhB,sBAAyCvhC,KAAKC,IAAIoyC,EAlB5C,KAkBN,WAGJR,EAAU7vC,MAAMu/B,QAAhB,sBArBU,IAqBV,OACAsQ,EAAUvyB,UAAY2yB,GAGtBL,GACAC,EAAU7vC,MAAMu/B,QAAUyQ,EAC1BH,EAAUvyB,UAAY2yB,GAEtB3zC,KAAKqmB,eAAezO,QAAQq8B,eAAe,CAAEjY,SAAU,a,mCAKtDkY,GAAc,IAAD,OAChBC,EAAkB,IAAIjgC,IADN,uBAEtB,YAAgBlU,KAAKkzC,SAAS5I,OAA9B,+CAAsC,CAAC,IAA9BvzB,EAA6B,QAC5BuL,EAAKtiB,KAAKkzC,SAASzqC,IAAIsO,GAC7B,GAAIuL,EAAI,CACJ,IAAM8xB,EAAgB9xB,EAAG0oB,YACnBqJ,EAAaH,EAAY7/B,IAAI0C,GAAOm9B,EAAYzrC,IAAIsO,GAAO,KACjE,GAAIs9B,EAAY,CACRA,EAAW1wC,KAAOywC,EAAczwC,MAChCwwC,EAAgBn7B,IAAIsJ,EAAI,CAAE+xB,aAAYD,kBAG1C,IAAMre,EAAS,+BAA2Bse,EAAW1wC,KAAOywC,EAAczwC,KAA3D,eAAsE0wC,EAAWxwC,IAAMuwC,EAAcvwC,IAArG,OACfye,EAAGgyB,gBAAgBve,MAbT,kFAkBtBj1B,sBAAsB,WAAO,IAAD,uBACxB,YAAgB,EAAKoyC,SAAS5I,OAA9B,+CAAsC,CAAC,IAA9BvzB,EAA6B,QAC5BuL,EAAK,EAAK4wB,SAASzqC,IAAIsO,GAC7B,GAAIuL,EAAI,CACJ,IAAIigB,EAAU,mCACd,GAAI4R,EAAgB9/B,IAAIiO,GAAK,CAAC,IAAD,EACa6xB,EAAgB1rC,IAAI6Z,GAAlD+xB,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpB7R,EAAa,+BAAwB8R,EAAW1wC,KAAOywC,EAAczwC,KAAO0wC,EAAW3nC,MAA1E,eAAsF2nC,EAAWxwC,IAAMuwC,EAAcvwC,IAArH,QACA,mCAGjBye,EAAGgyB,gBAAgB/R,KAXH,kFAenB4R,EAAgB3lC,MAErB/G,WAAW,WAAO,IAAD,uBACb,YAAe0sC,EAAgB7J,OAA/B,+CAAuC,CAAC,IAA/BhoB,EAA8B,QAC3B8xB,EAAkBD,EAAgB1rC,IAAI6Z,GAAtC8xB,cACF7R,EAAa,+BAAwB6R,EAAc1nC,MAAtC,WACA,iCAEnB4V,EAAGgyB,gBAAgB/R,IANV,kFASbzhC,sBAAsB,WAAO,IAAD,uBACxB,YAAeqzC,EAAgB7J,OAA/B,+CAAuC,CAAC,IAA/BhoB,EAA8B,QAGnCA,EAAGgyB,gBAFgB,qCAFC,sFAQ7B,S,+BAqGD,IAAD,SACgBt0C,KAAKP,MAAlB0gB,EADH,EACGA,MAAOrQ,EADV,EACUA,EADV,EAEmE9P,KAAKjB,MAArEukB,EAFH,EAEGA,MAAOwG,EAFV,EAEUA,YAAaq6B,EAFvB,EAEuBA,YAAaN,EAFpC,EAEoCA,cAAexR,EAFnD,EAEmDA,YAElD3uC,EAAQyc,EAAQ,CAAEqE,UAAW,KAAQ,KAI3C,OAFAxkB,KAAKkzC,SAASzW,QAGV,oCACI,yBAAKx8B,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASrM,KAAK0H,aACnDyY,EAAQ,kBAAC7T,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAKrM,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,sBAGnD,yBAAK0L,IAAKxb,KAAKizC,aAAchzC,UAAU,uBAClC4jD,EAAcC,MAAMzuC,IAAI,SAAA/T,GAAC,OAAI,kBAAC,GAAD,CAAUqQ,SAAU0gC,IAAgB/wC,EAAGka,IAAK,SAAA8G,GAAQ,EAAK4wB,SAASl6B,IAAI1X,EAAGghB,IAAQvL,IAAKzV,EAAGwM,OAAQxM,EAAG+K,QAAS,kBAAM,EAAKgV,eAAe/f,QACrK,kBAAC,GAAD,CAAaggC,SAAUthC,KAAKqmB,eAAgBmb,KAAM1xB,EAAE,iBAAkBuL,QAASrb,KAAKy0C,kBAAmBtnC,SAAUnN,KAAKomB,aAAcgb,YAAaphC,KAAKoyC,mBAE1J,yBAAKnyC,UAAU,oBACf,yBAAKA,UAAU,mBAAmByD,MAAOA,GACpC4f,GACG,kBAAC,GAAD,CACI9H,IAAKxb,KAAKupB,QACVtpB,UAAU,gBACVG,OAAQkjB,EAAM8Z,SACd1C,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA15B,GAAC,OAAI,EAAK05B,WAAW15B,EAAGgiB,EAAM8Z,SAAUymB,EAAcxuC,MAClEiV,SAAUtqB,KAAKspB,eAGtBQ,GAAeq6B,GACZ,kBAAC,GAAD,CACI3oC,IAAKxb,KAAK0pB,cACVzpB,UAAU,qCACVG,OAAQ0pB,EAAYsT,SAASvjB,OAAOsqC,EAAY/mB,UAChD1C,UAAW,GACXE,cAAe,GACfI,WAAY,SAAA15B,GAAC,OAAI,EAAK05B,WAAW15B,EAAGwoB,EAAYsT,SAASvjB,OAAOsqC,EAAY/mB,UAAWymB,EAAcxuC,MACrGiV,SAAUtqB,KAAKspB,qB,GAjYb/oB,IAAMC,WAqZrByb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQ0nC,IC1bjB5B,I,qMACoB3xC,EAAWC,EAAWyqB,GAAc,IAC9ChtB,EAAW9N,KAAKP,MAAhBqO,OACR,OAAIsC,EAAUtC,SAAWA,I,+BAOnB,IAAD,EACqB9N,KAAKP,MAAvBqO,EADH,EACGA,OAAQpK,EADX,EACWA,MAEhB,OACI,kBAAC4b,GAAA,EAAD,CAAUrf,UAAU,iBAAiBsf,QAAM,EAAC7b,MAAOA,GAC/C,kBAAC,KAAD,CAAMoK,OAAQA,S,GAfHvN,IAAMC,YAqB3B6jD,G,YAEF,WAAY5kD,GAAQ,IAAD,8BACf,4CAAMA,KAoCViI,YAAc,WAAO,IACT2T,EAAY,EAAK5b,MAAjB4b,QACHA,GAELA,KAtCA,EAAKk6B,SAAWh1C,IAAMsa,YAEtB,EAAK9b,MAAQ,CACTsT,OAAO,GANI,E,iFAUE,IACTiwC,EAAYtiD,KAAKP,MAAjB6iD,QAEF5yC,EAAQlH,IAAUmH,WACxB0Q,YAAiB3Q,EAAO4yC,K,iCAGhB,IACAjwC,EAAUrS,KAAKjB,MAAfsT,MAEFkK,EAAQvc,KAAKu1C,SAAS39B,QAAQ7Q,MAAMuS,OAC1C,OAAKiD,GAODlK,GACArS,KAAKN,SAAS,CACV2S,OAAO,IAIRkK,IAZHvc,KAAKN,SAAS,CACV2S,OAAO,IAEJkK,K,+BAmBL,IAAD,EACkDvc,KAAKP,MAApDqQ,EADH,EACGA,EAAGwyC,EADN,EACMA,QAASe,EADf,EACeA,gBAAiBiB,EADhC,EACgCA,cAC7BjyC,EAAUrS,KAAKjB,MAAfsT,MAEFiR,EAAQg/B,EAAQjtC,IAAI,SAAAvH,GAAM,OAAK,kBAAC,GAAD,CAAciJ,IAAKjJ,EAAQA,OAAQA,MAElEy2C,EAAkC,IAAnBjC,EAAQxuC,OAAR,UAA0BwuC,EAAQxuC,OAAlC,sBAAwDwuC,EAAQxuC,OAAhE,WAErB,OACI,oCACI,yBAAK7T,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,qBAAqBoM,QAASrM,KAAK0H,aACrD,kBAAC,GAAD,OAEJ,yBAAKzH,UAAU,qCACX,0BAAMA,UAAU,yBAAyB6P,EAAE,eAGnD,yBAAK7P,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAc2uC,WAAYyU,EAAiBhV,SAAUiW,IACrD,yBAAKrkD,UAAU,kBACX,kBAACixC,GAAA,EAAD,CACI5P,SAAUthC,KAAKu1C,SACfljC,MAAOA,EACPpS,UAAU,iBACV2f,QAAQ,WACRqN,WAAS,EACTE,MAAOrd,EAAE,aACTqhC,aAAc,MAGtB,kBAAC,GAAD,KAAgBoT,GACfjhC,S,GA/EI/iB,IAAMC,WAoGpByb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQooC,IC5HjBG,G,YACF,WAAY/kD,GAAQ,IAAD,8BACf,4CAAMA,KAcVstC,WAfmB,qBAeN,wCAAA/6B,EAAA,wDACc,EAAKjT,MAApB0lD,WADC,oBAGCnC,EAAU,EAAKoC,mBAAmB9sC,QAAQ+sC,cACnC7wC,OAJR,iDAML,EAAKpU,SAAS,CACV+kD,YAAY,EACZnC,YARC,4BAW+C,EAAKvjD,MAAjDujD,EAXH,EAWGA,QAASY,EAXZ,EAWYA,aAAcC,EAX1B,EAW0BA,iBAEzB5mC,EAAQ,EAAKqoC,kBAAkBhtC,QAAQitC,WAbxC,0DAkBL,EAAKn9C,cAlBA,UAoBcrI,IAAgBC,KAAK,CACpC,QAAS,0BACTid,QACAkc,YAAY,EACZ9M,YAAa,GACbm3B,SAAU,OAzBT,QAoBC5zC,EApBD,OA4BDi0C,EACA9jD,IAAgBC,KAAK,CACjB,QAAS,eACTmQ,QAASP,EAAK9P,GACdgQ,MAAO,CAAE,QAAS,cAAehQ,GAAI+jD,EAAiB/jD,MAEnD8jD,GACP7jD,IAAgBC,KAAK,CACjB,QAAS,eACTmQ,QAASP,EAAK9P,GACdgQ,MAAO,CAAE,QAAS,gBAAiB2gC,KAAM,YAAaliB,KAAMq1B,KAIhEZ,EAAQxuC,OAAS,GACjBzU,IAAgBC,KAAK,CACjB,QAAS,iBACTmQ,QAASP,EAAK9P,GACdg+B,SAAUklB,IAIlBlhC,aAASlS,EAAK9P,IAlDT,0CAfM,EAqEnBsI,YAAc,WACVrI,IAAgByF,aAAa,CACzB,QAAS,uBACTmW,MAAM,KAxEK,EA4EnB6pC,kBAAoB,WAChB,EAAKplD,SAAS,CACV+kD,YAAY,EACZnC,QAAS,MA/EE,EAmFnBxS,kBAnFmB,sCAmFC,WAAO7R,EAAMkQ,GAAb,eAAAn8B,EAAA,4DAChB,EAAKtS,SAAS,CACVwjD,aAAcjlB,EACdolB,gBAAiBlV,IAHL,SAMK9uC,IAAgBC,KAAK,CACtC,QAAS,aACTiJ,KAAM,CACF,QAAS,gBACTwnC,KAAM,YACNliB,KAAMoQ,GAEVqlB,UAAW,CAAE,QAAS,iBACtBC,SAAUC,OAdE,OAMVhkD,EANU,OAiBhB,EAAKE,SAAS,CACVyjD,iBAAkB3jD,IAlBN,yCAnFD,wDAGf,EAAKklD,mBAAqBnkD,IAAMsa,YAChC,EAAK+pC,kBAAoBrkD,IAAMsa,YAE/B,EAAK9b,MAAQ,CACT0lD,YAAY,EACZnC,QAAS,GACTY,aAAc,KACdG,gBAAiB,KACjBF,iBAAkB,MAXP,E,sEAyGT,IACEhjC,EAAUngB,KAAKP,MAAf0gB,MADH,EAE4CngB,KAAKjB,MAA9C0lD,EAFH,EAEGA,WAAYnC,EAFf,EAEeA,QAASe,EAFxB,EAEwBA,gBAE7B,OACI,oCACI,kBAAC,GAAD,CAAiB7nC,IAAKxb,KAAK0kD,mBAAoBvkC,MAAOA,EAAO9E,QAASrb,KAAK0H,cAE3E,kBAAC,GAAD,CAAauT,KAAMwpC,GACf,kBAAC,GAAD,CACIjpC,IAAKxb,KAAK4kD,kBACVvB,gBAAiBA,EACjBf,QAASA,EACTgC,cAAetkD,KAAK8vC,kBACpBz0B,QAASrb,KAAK8kD,qBAItB,yBAAK7kD,UAAU,yBAAyBoM,QAASrM,KAAK+sC,YAClD,kBAAC,GAAD,Y,GA7HGxsC,IAAMC,WAyIdiR,iBAAkB+yC,ICkFlBO,G,YAzNX,WAAYtlD,GAAQ,IAAD,8BACf,4CAAMA,KA2DVulD,yBAA2B,SAAAn3C,GAEvB,GADyBklB,KAAjB9C,aACR,CAFiC,IAIzB5hB,EAAkBR,EAAlBQ,OAAQ4L,EAAUpM,EAAVoM,MAJiB,EAKgB,EAAKlb,MAA9CynB,EALyB,EAKzBA,WAAYy+B,EALa,EAKbA,aAAc1rC,EALD,EAKCA,WAE9BiN,GAAcnY,IAAW42C,GAAgBhrC,IAAUV,IAIvD,EAAKU,MAAQA,EACb,EAAKva,SACD,CACI8mB,YAAY,EACZy+B,aAAc52C,EACdkL,WAAY,UA5EL,EAiFnB2rC,kBAAoB,WAChB,GAAK,EAAKjrC,MAAV,CAEA,IAAMkrC,EAAS,EAAKC,UAAUxtC,QAC1ButC,GACAA,EAAOE,aAAa,EAAKprC,OAG7B,EAAKA,MAAQ,OAzFE,EA4FnBqrC,uBAAyB,SAAAz3C,GAErB,GADyBklB,KAAjB9C,aACR,CAF+B,IAIvBhV,EAAiBpN,EAAjBoN,KAAM5M,EAAWR,EAAXQ,OAEd,EAAK3O,SAAS,CAAE6lD,aAActqC,EAAMuqC,SAAUn3C,MAlG/B,EAqGnBo3C,uBArGmB,sCAqGM,WAAM53C,GAAN,eAAAmE,EAAA,wDACI+gB,KAAjB9C,aADa,iDAIbhV,EAASpN,EAAToN,KAER,EAAKvb,SAAS,CAAEgmD,aAAczqC,IANT,yCArGN,wDA8GnB0qC,uBA9GmB,sCA8GM,WAAM93C,GAAN,eAAAmE,EAAA,wDACI+gB,KAAjB9C,aADa,iDAIbhV,EAASpN,EAAToN,KAER,EAAKvb,SAAS,CAAEkmD,aAAc3qC,IANT,yCA9GN,wDAuHnB4qC,yBAvHmB,sCAuHQ,WAAMh4C,GAAN,eAAAmE,EAAA,wDACE+gB,KAAjB9C,aADe,iDAIfhV,EAASpN,EAAToN,KAER,EAAKvb,SAAS,CAAEomD,eAAgB7qC,IANT,yCAvHR,wDAgInBvT,YAAc,WACV,EAAKhI,SAAS,CACV6lD,cAAc,EACdG,cAAc,EACdE,cAAc,EACdE,gBAAgB,EAChBt/B,YAAY,KAtID,EA0InBJ,aAAe,SAAA2/B,GACX,EAAKrmD,SAAS,CACV8mB,WAAYu/B,EACZd,aAAc,EACd1rC,WAAY,QA9ID,EAkJnBqoB,uBAAyB,SAAA7vB,GACrB,EAAKrS,SAAS,CACV6Z,WAAYxH,EACZkI,MAAO,QArJI,EAyJnB0wB,oBAAsB,SAACt8B,EAAQsW,EAAW6B,GACtCpF,aAAS/S,EAAQsW,GAEjB,EAAKqF,qBA5JU,EA+JnBA,kBAAoB,WAChB,EAAKtqB,SAAS,CACV8mB,YAAY,EACZy+B,aAAc,EACd1rC,WAAY,QAhKhB,EAAK6rC,UAAY7kD,IAAMsa,YAEvB,EAAK9b,MAAQ,CACTynB,YAAY,EACZ++B,cAAc,EACdG,cAAc,EACdE,cAAc,EACdE,gBAAgB,GAVL,E,mFAcG11C,EAAWC,EAAWyqB,GAAc,IAAD,EACwC96B,KAAKjB,MAA1FynB,EAD6C,EAC7CA,WAAYjN,EADiC,EACjCA,WAAYgsC,EADqB,EACrBA,aAAcG,EADO,EACPA,aAAcE,EADP,EACOA,aAAcE,EADrB,EACqBA,eAE1E,OAAIz1C,EAAUmW,aAAeA,IAIzBnW,EAAUkJ,aAAeA,IAIzBlJ,EAAUk1C,eAAiBA,IAI3Bl1C,EAAUq1C,eAAiBA,IAI3Br1C,EAAUu1C,eAAiBA,GAI3Bv1C,EAAUy1C,iBAAmBA,Q,0CAQjC/yB,KAASzkB,GAAG,yBAA0BtO,KAAKglD,0BAC3C71C,IAAUb,GAAG,uBAAwBtO,KAAKslD,wBAC1Cn2C,IAAUb,GAAG,uBAAwBtO,KAAKylD,wBAC1Ct2C,IAAUb,GAAG,uBAAwBtO,KAAK2lD,wBAC1Cx2C,IAAUb,GAAG,yBAA0BtO,KAAK6lD,4B,6CAI5C9yB,KAASxkB,IAAI,yBAA0BvO,KAAKglD,0BAC5C71C,IAAUZ,IAAI,uBAAwBvO,KAAKslD,wBAC3Cn2C,IAAUZ,IAAI,uBAAwBvO,KAAKylD,wBAC3Ct2C,IAAUZ,IAAI,uBAAwBvO,KAAK2lD,wBAC3Cx2C,IAAUZ,IAAI,yBAA0BvO,KAAK6lD,4B,+BA8GvC,IAAD,EACgH7lD,KAAKjB,MAAlHymD,EADH,EACGA,SAAUP,EADb,EACaA,aAAc1rC,EAD3B,EAC2BA,WAAYiN,EADvC,EACuCA,WAAYk/B,EADnD,EACmDA,aAAcH,EADjE,EACiEA,aAAcK,EAD/E,EAC+EA,aAAcE,EAD7F,EAC6FA,eAClG,OAAKt/B,GAAek/B,GAAiBH,GAAiBK,GAAiBE,EAKnE,kBAAC,IAAD,CACI7qC,MAAI,EACJG,mBAAoB,EACpBC,QAASrb,KAAK0H,YACdoF,QAAS,CACL3E,KAAM,wBACNkB,UAAW,6BACX28C,MAAO,0BAEXC,QAASjmD,KAAKklD,mBAEbK,GAAgB,kBAAC,GAAD,CAAUl3C,OAAQm3C,EAAUrlC,OAAK,IACjDulC,GAAgB,kBAAC,GAAD,CAAUvlC,OAAK,IAC/BylC,GAAgB,kBAAC,GAAD,CAAUzlC,OAAK,IAC/B2lC,GAAkB,kBAAC,GAAD,CAAY3lC,OAAK,IACnCqG,GACG,oCACI,kBAAC,GAAD,CACIhL,IAAKxb,KAAKolD,UACV5+B,YAAY,EACZ6Z,SAAS,EACTh0B,QAASrM,KAAK8gB,kBACdwF,SAAUtmB,KAAKomB,aACfyb,mBAAoB7hC,KAAK4hC,uBACzBzhB,OAAK,IAET,yBAAKlgB,UAAU,kBACX,kBAAC,GAAD,CACIoO,OAAQ42C,EACRlzC,KAAMwH,EACNuxB,gBAAiB9qC,KAAK2qC,oBACtBtvB,QAASrb,KAAKgqB,uBAnC3B,S,GA3KSzpB,IAAMC,WCV3B,SAAS0lD,KACZ,IAAMC,EAAUh3C,IAAUylB,SAASnsB,IAAI,mBACjC8M,EAAQ,GACR6wC,EAAa,GACnB,GAAID,EAAS,CAAC,IAAD,uBACT,YAAqBA,EAAQ7b,OAA7B,+CAAqC,CAAC,IAA3Bj8B,EAA0B,QAC3Ba,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAIa,EAAM,CACN,IAAMg2B,EAAQC,YAAa92B,EAAQ,CAAE,QAAS,oBAChC,MAAV62B,GAAe3vB,EAAMP,KAAK9F,GAC9Bk3C,EAAWpxC,KAAK,CAAEkwB,QAAO9lC,GAAIiP,EAAQkO,MAAOrN,EAAKqN,UANhD,mFAab,OAFqBhH,EAAMgO,KAAK,SAACvR,EAAGi0B,GAAJ,OAAUC,YAAaf,YAAac,EAAG,CAAE,QAAS,oBAAsBd,YAAanzB,EAAG,CAAE,QAAS,uBAE/GqD,IAAI,SAAA/T,GAAC,OAAIA,EAAEib,QAAO3c,KAAK,M,cCOzCymD,I,OAAiB,CACnBC,MAAO5lD,YAAS6lD,eAChBC,KAAM9lD,YAAS+lD,gBAgeJC,G,YA5dX,WAAYjnD,GAAQ,IAAD,8BACf,4CAAMA,KAqIV4jC,oBAAsB,SAAAx1B,GAClB,EAAK+2B,aAvIU,EA0InB5U,wBAA0B,SAAAniB,GAGtB,GAFyBA,EAAjBoiB,aAER,CAHgC,MAKiD,EAAKlxB,MAA9EwmD,EALwB,EAKxBA,aAAcG,EALU,EAKVA,aAAcl/B,EALJ,EAKIA,WAAYo/B,EALhB,EAKgBA,aAAcE,EAL9B,EAK8BA,gBAC1DP,GAAgBG,GAAgBl/B,GAAco/B,GAAgBE,IAC9D,EAAKpmD,SAAS,CACNgmD,cAAc,EACdH,cAAc,EACd/+B,YAAY,EACZo/B,cAAc,EACdE,gBAAgB,EAChBzlB,QAAS,GACV,WACC,EAAK3gC,SAAS,CACV2gC,QAASgmB,SA1JV,EAiMnBrhB,kBAAoB,SAAAn3B,GAAW,IACN84C,EAAoB,EAAK5nD,MAAtC8mC,YAES+gB,EAAgB,EAAKC,cAA9BjvC,QACR,IAAIgvC,IAAeA,EAAYr+B,QAA/B,CAJ0B,IAQTu+B,EAAmB,EAAKC,eAAjCnvC,QACR,IAAIkvC,IAAkBA,EAAev+B,QAArC,CAIA,IAAMy+B,EAAc73C,IAAUylB,SAASnsB,IAAI,mBACrCo9B,EAAcmhB,GAAeA,EAAYx4C,KAAO,EAEtD,EAAK9O,SAAS,CAAEmmC,cAAaC,aAAcogB,MAAqB,WAC5D,IAAKS,GAAmB9gB,EAAa,CAAC,IAC1BjuB,EAAY,EAAKivC,cAAjBjvC,QACR,GAAIA,EAAQ2R,QAAS,CAAC,IACD09B,EAAgBrvC,EAAQ2R,QAAjC3R,QACJqvC,GAAeA,EAAYjmC,UAAY,IACvCpJ,EAAQoJ,WAAa,QAMjC2lC,IAAoB9gB,GACpBxmC,IAAgByF,aAAa,CACzB,QAAS,gCA/NF,EAoOnB2gD,uBApOmB,sCAoOM,WAAM53C,GAAN,eAAAmE,EAAA,yDACI+gB,KAAjB9C,aADa,iDAIbhV,EAASpN,EAAToN,KAER,EAAKvb,SAAS,CAAEgmD,aAAczqC,IANT,yCApON,wDA6OnBqqC,uBAAyB,SAAAz3C,GAErB,IADyBklB,KAAjB9C,aACR,CAF+B,IAIvBhV,EAAiBpN,EAAjBoN,KAAM5M,EAAWR,EAAXQ,OAEd,EAAK3O,SAAS,CAAE6lD,aAActqC,EAAMuqC,SAAUn3C,MAnP/B,EAsPnBs3C,uBAtPmB,sCAsPM,WAAM93C,GAAN,eAAAmE,EAAA,yDACI+gB,KAAjB9C,aADa,iDAIbhV,EAASpN,EAAToN,KAER,EAAKvb,SAAS,CAAEkmD,aAAc3qC,IANT,yCAtPN,wDA+PnB4qC,yBA/PmB,sCA+PQ,WAAMh4C,GAAN,eAAAmE,EAAA,yDACE+gB,KAAjB9C,aADe,iDAIfhV,EAASpN,EAAToN,KAER,EAAKvb,SAAS,CAAEomD,eAAgB7qC,IANT,yCA/PR,wDAwQnBisC,sBAAwB,SAAAr5C,GAAW,IACvBoN,EAASpN,EAAToN,KAER,EAAKvb,SAAS,CAAEogC,YAAa7kB,KA3Qd,EA8QnBksC,0BAA4B,SAAAt5C,GACxB,EAAKkB,eA/QU,EAkRnBi2C,yBAA2B,SAAAn3C,GAEvB,IADyBklB,KAAjB9C,aACR,CAFiC,IAIzB5hB,EAAkBR,EAAlBQ,OAAQ4L,EAAUpM,EAAVoM,MAJiB,EAKgB,EAAKlb,MAA9CynB,EALyB,EAKzBA,WAAYy+B,EALa,EAKbA,aAAc1rC,EALD,EAKCA,WAElC,IAAIiN,GAAcnY,IAAW42C,GAAgBhrC,IAAUV,EAAvD,CAIA,IAAM4rC,EAAS,EAAKiC,iBAAiBxvC,QACrC,EAAKlY,SACD,CACI8mB,YAAY,EACZy+B,aAAc52C,EACdkL,WAAY,KACZgsC,cAAc,EACdhF,oBAAoB,EACpBmF,cAAc,GAElB,WACQP,GACAA,EAAOE,aAAaprC,QAzSjB,EA+SnB6G,kBAAoB,WACQ,EAAK/hB,MAArB+gC,YAEJzgC,IAAgByF,aAAa,CACzB,QAAS,6BAGb,EAAK+hD,cAAcjvC,QAAQyvC,eAtThB,EA0TnBjhC,aAAe,SAAA2/B,GACX,EAAKrmD,SAAS,CACV8mB,WAAYu/B,EACZd,aAAc,EACd1rC,WAAY,QA9TD,EAkUnBoxB,oBAAsB,SAACt8B,EAAQsW,EAAW6B,GACtCpF,aAAS/S,EAAQsW,GAEjB,IAAMsgC,EAAez+B,EAAa,EAAKznB,MAAMkmD,aAAe,EACtD1rC,EAAaiN,EAAa,EAAKznB,MAAMwa,WAAa,KAExD,EAAK7Z,SAAS,CACV8mB,aACAy+B,eACA1rC,gBA3UW,EA+UnByQ,kBAAoB,WAChB,EAAKtqB,SAAS,CACV8mB,YAAY,EACZy+B,aAAc,EACd1rC,WAAY,QAnVD,EAuVnBqoB,uBAAyB,SAAA7vB,GACrB,EAAKrS,SAAS,CACV6Z,WAAYxH,EACZkI,MAAO,QA1VI,EA8VnBqtC,gBAAkB,WACd,EAAK1iB,aA/VU,EAuWnB2iB,mBAAqB,WACjB,EAAK7nD,SAAS,CAAEogC,aAAa,KAxWd,EA2WnB0nB,oBAAsB,WAClB,EAAK9nD,SAAS,CAAEgmD,cAAc,KA5Wf,EA+WnB7D,oBAAsB,WAClB,EAAKniD,SAAS,CAAE6lD,cAAc,KAhXf,EAmXnBkC,oBAAsB,WAClB,EAAK/nD,SAAS,CAAEkmD,cAAc,KApXf,EAuXnB8B,sBAAwB,WACpB,EAAKhoD,SAAS,CAAEomD,gBAAgB,KArXhC,EAAKe,cAAgBtmD,IAAMsa,YAC3B,EAAKksC,eAAiBxmD,IAAMsa,YAC5B,EAAKusC,iBAAmB7mD,IAAMsa,YAE9B,EAAK9b,MAAQ,CACT+9B,MAAO,KAEP+I,aAAa,EACbC,aAAc,KAEd6hB,UAAW,GACXC,aAAc,GAEdvnB,QAASgmB,GACT7/B,YAAY,EACZsZ,aAAa,EACb4lB,cAAc,EACdH,cAAc,EACdK,cAAc,EACdE,gBAAgB,EAEhBb,aAAc,EACd1rC,WAAY,KACZU,MAAO,MA1BI,E,mFA8BG7J,EAAWC,GAAY,IAAD,EAepCrQ,KAAKjB,MAbL+9B,EAFoC,EAEpCA,MACA+I,EAHoC,EAGpCA,YACAC,EAJoC,EAIpCA,aACA6hB,EALoC,EAKpCA,UACAC,EANoC,EAMpCA,aACAphC,EAPoC,EAOpCA,WACAsZ,EARoC,EAQpCA,YACAylB,EAToC,EASpCA,aACAG,EAVoC,EAUpCA,aACAE,EAXoC,EAWpCA,aACAE,EAZoC,EAYpCA,eACAb,EAboC,EAapCA,aACA1rC,EAdoC,EAcpCA,WAGJ,OAAIlJ,EAAUysB,QAAUA,IAIpBzsB,EAAUw1B,cAAgBA,IAI1Bx1B,EAAUy1B,eAAiBA,IAI3Bz1B,EAAUu3C,eAAiBA,IAI3Bv3C,EAAUs3C,YAAcA,IAIxBt3C,EAAUmW,aAAeA,IAIzBnW,EAAUyvB,cAAgBA,IAI1BzvB,EAAUk1C,eAAiBA,IAI3Bl1C,EAAUq1C,eAAiBA,IAI3Br1C,EAAUu1C,eAAiBA,IAI3Bv1C,EAAUy1C,iBAAmBA,IAI7Bz1C,EAAU40C,eAAiBA,GAI3B50C,EAAUkJ,aAAeA,e,0CAQ7BvZ,KAAK6nD,YAEL90B,KAASzkB,GAAG,yBAA0BtO,KAAKglD,0BAC3CjyB,KAASzkB,GAAG,0BAA2BtO,KAAKmnD,2BAC5Cp0B,KAASzkB,GAAG,wBAAyBtO,KAAKgwB,yBAC1C7gB,IAAUb,GAAG,yBAA0BtO,KAAKglC,mBAC5C71B,IAAUb,GAAG,wBAAyBtO,KAAKglC,mBAC3C71B,IAAUb,GAAG,qBAAsBtO,KAAKglC,mBACxC71B,IAAUb,GAAG,uBAAwBtO,KAAKslD,wBAC1Cn2C,IAAUb,GAAG,sBAAuBtO,KAAKknD,uBACzC/3C,IAAUb,GAAG,uBAAwBtO,KAAKylD,wBAC1Ct2C,IAAUb,GAAG,uBAAwBtO,KAAK2lD,wBAC1Cx2C,IAAUb,GAAG,yBAA0BtO,KAAK6lD,0BAC5CviB,GAAYh1B,GAAG,oBAAqBtO,KAAKqjC,uB,6CAIzCtQ,KAASxkB,IAAI,yBAA0BvO,KAAKglD,0BAC5CjyB,KAASxkB,IAAI,0BAA2BvO,KAAKmnD,2BAC7Cp0B,KAASxkB,IAAI,wBAAyBvO,KAAKgwB,yBAC3C7gB,IAAUZ,IAAI,yBAA0BvO,KAAKglC,mBAC7C71B,IAAUZ,IAAI,wBAAyBvO,KAAKglC,mBAC5C71B,IAAUZ,IAAI,qBAAsBvO,KAAKglC,mBACzC71B,IAAUZ,IAAI,uBAAwBvO,KAAKslD,wBAC3Cn2C,IAAUZ,IAAI,sBAAuBvO,KAAKknD,uBAC1C/3C,IAAUZ,IAAI,uBAAwBvO,KAAKylD,wBAC3Ct2C,IAAUZ,IAAI,uBAAwBvO,KAAK2lD,wBAC3Cx2C,IAAUZ,IAAI,yBAA0BvO,KAAK6lD,0BAC7CviB,GAAY/0B,IAAI,oBAAqBvO,KAAKqjC,uB,oKA8BrBrD,GAAW9C,O,gDAAW,G,OAArCJ,E,KAEEvnB,EAAwBunB,EAAxBvnB,MAAO+nB,EAAiBR,EAAjBQ,aAEfgG,GAAYzO,QAAUyO,GAAYzO,SAAWmL,GAAWnL,QACxD70B,KAAKN,SAAS,CACVo9B,QAEA+I,YAAavI,GAAgBA,EAAaxpB,OAAS,EACnDgyB,aAAcogB,OAGlBlmD,KAAKkgB,kBAAkB3K,GAAS,IAAIF,IAAI,SAAA/T,GAAC,OAAIA,EAAElC,MAE/CC,IAAgByF,aAAa,CACzB,QAAS,4B,uIAIJ,IACQgiD,EAAmB9mD,KAAK+mD,eAAjCnvC,QACF8kB,EACFoqB,GAAkBA,EAAe/nD,MAAMwW,MAAQuxC,EAAe/nD,MAAMwW,MAAMuS,MAAM,EAAG,IAAM,GAE5E8+B,EAAgB5mD,KAAK6mD,cAA9BjvC,QACFkwC,EAAclB,GAAeA,EAAY7nD,MAAMwW,MAAQqxC,EAAY7nD,MAAMwW,MAAMuS,MAAM,EAAG,IAAM,GAE5F+M,EAAYyO,GAAZzO,QAERmL,GAAWzB,KAAK1J,EAASizB,EAAaprB,K,uCAoKzBjnB,GACb,IAAM/F,EAAQlH,IAAUmH,WACxBgG,YAAiBjG,EAAO+F,K,+BAuBlB,IAAD,EAiBDzV,KAAKjB,MAfL+9B,EAFC,EAEDA,MACA+I,EAHC,EAGDA,YACAC,EAJC,EAIDA,aACA6hB,EALC,EAKDA,UACAC,EANC,EAMDA,aACApC,EAPC,EAODA,SACAD,EARC,EAQDA,aACAG,EATC,EASDA,aACA5lB,EAVC,EAUDA,YACAtZ,EAXC,EAWDA,WACAo/B,EAZC,EAYDA,aACAE,EAbC,EAaDA,eACAzlB,EAdC,EAcDA,QACA4kB,EAfC,EAeDA,aACA1rC,EAhBC,EAgBDA,WAGEwuC,EAAiBjrB,EAAQA,EAAMvnB,OAAS,GAAK,KAC7CyyC,EAAoBlrB,EAAQA,EAAMQ,cAAgB,GAAK,KAE7D,OACI,oCACI,yBAAKr9B,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,GAAD,CACIub,IAAKxb,KAAKonD,iBACV5gC,WAAYA,EACZ6Z,QAAqB,IAAZA,EACTh0B,QAASrM,KAAK8gB,kBACdwF,SAAUtmB,KAAKomB,aACfyb,mBAAoB7hC,KAAK4hC,yBAE7B,yBAAK3hC,UAAU,mBACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,2BAA2ByD,MAAO,CAAEgxC,OAAQ,KAC3D,kBAAC,GAAD,CACIj4B,KAAK,eACLjB,IAAKxb,KAAK6mD,cACV9gB,WAAYgiB,EACZzkC,MAAOqkC,EACP9hB,YAAaA,EACbC,aAAcA,EACd7qB,MAAM,EACN4pB,YAAa7kC,KAAKsnD,mBAG1B,kBAACW,GAAA,EAAD,CACIh8C,WAAW,SACXo0B,QAASA,EACToM,GAAIjmB,EACJkmB,cAAc,EACdC,eAAe,GACf,kBAAC,GAAD,CACIt+B,OAAQ42C,EACRlzC,KAAMwH,EACNuxB,gBAAiB9qC,KAAK2qC,oBACtBtvB,QAASrb,KAAKgqB,sBAI1B,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAa/O,KAAM6kB,EAAaO,QAASA,EAAShlB,QAASrb,KAAKunD,oBAC5D,kBAAC,GAAD,CACIvgB,aAAchnC,KAAK+mD,eACnBzjC,MAAOskC,EACP7hB,WAAYiiB,KAIpB,kBAAC,GAAD,CAAa/sC,KAAMyqC,EAAcrlB,QAASA,EAAShlB,QAASrb,KAAKwnD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAavsC,KAAMsqC,EAAcllB,QAASA,EAAShlB,QAASrb,KAAK6hD,qBAC7D,kBAAC,GAAD,CAAUxzC,OAAQm3C,KAGtB,kBAAC,GAAD,CAAavqC,KAAM2qC,EAAcvlB,QAASA,EAAShlB,QAASrb,KAAKynD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAaxsC,KAAM6qC,EAAgBzlB,QAASA,EAAShlB,QAASrb,KAAK0nD,uBAC/D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,Y,GAtdElnD,aCuCP0nD,G,2MA9DXnpD,MAAQ,CACJsP,OAAQ8qB,KAAiBnG,c,EAmB7Bm1B,iCAAmC,SAAAt6C,GAC3BsrB,KAAiBivB,oBACjB,EAAK1gD,e,EAIb2gD,2BAA6B,SAAAx6C,GAAW,IAC5BQ,EAAWR,EAAXQ,OAER,EAAK3O,SAAS,CAAE2O,Y,EAGpB3G,YAAc,WACVrI,IAAgByF,aAAa,CACzB,QAAS,2BACTuJ,OAAQ,K,qFA/BM+B,EAAWC,EAAWyqB,GAAc,IAC9CzsB,EAAWrO,KAAKjB,MAAhBsP,OAER,OAAOgC,EAAUhC,SAAWA,I,0CAI5B8qB,KAAiB7qB,GAAG,2BAA4BtO,KAAKqoD,4BACrDlvB,KAAiB7qB,GAAG,iCAAkCtO,KAAKmoD,oC,6CAI3DhvB,KAAiB5qB,IAAI,2BAA4BvO,KAAKqoD,4BACtDlvB,KAAiB5qB,IAAI,iCAAkCvO,KAAKmoD,oC,+BAsBtD,IACE95C,EAAWrO,KAAKjB,MAAhBsP,OACR,OAAKA,EAGD,kBAAC,IAAD,CACI4M,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAASrb,KAAK0H,YACdoF,QAAS,CACL3E,KAAM,wBACNkB,UAAW,6BACX28C,MAAO,2BAEX,kBAAC,GAAD,CAAU/lD,UAAU,2BAA2BoO,OAAQA,EAAQ8R,OAAK,KAbxD,S,GA1CC5f,IAAMC,W,oDCNpB+B,eACX,0BAAMC,EAAE,6zBACR,QCFWD,eACX,0BAAMC,EAAE,uuBACR,cCFWD,eACX,0BAAMC,EAAE,uzCACR,U,qBCWE8lD,G,2MACFvpD,MAAQ,CACJugC,SAAU,M,EAGdipB,gBAAkB,SAAAvkD,GACd,EAAKtE,SAAS,CAAE4/B,SAAUt7B,EAAMu7B,iB,EAGpCC,gBAAkB,WACd,EAAK9/B,SAAS,CAAE4/B,SAAU,Q,EAG9BkpB,kBAAoB,WAChB,EAAKhpB,kBADiB,IAGdipB,EAAkB,EAAKhpD,MAAvBgpD,cACHA,GAELhhD,WAAW,kBAAMghD,KAAiBC,M,EAGtCC,qBAAuB,WACnB,EAAKnpB,kBADoB,IAGjBopB,EAAqB,EAAKnpD,MAA1BmpD,iBACHA,GAELnhD,WAAW,kBAAMmhD,KAAoBF,M,EAGzCG,iBAAmB,WACf,EAAKrpB,kBADgB,IAGbspB,EAAiB,EAAKrpD,MAAtBqpD,aACHA,GAELA,K,wEAGM,IAAD,EAC0B9oD,KAAKP,MAAnBqQ,GADZ,EACGhD,QADH,EACYgD,GAAGzB,EADf,EACeA,OACZixB,EAAat/B,KAAKjB,MAAlBugC,SAER,OACI,oCACI,kBAACxoB,EAAA,EAAD,CACI7W,UAAU,uBACV+W,aAAW,SACXiE,KAAM4L,QAAQyY,GACdjzB,QAASrM,KAAKuoD,iBACd,kBAACQ,GAAD,OAEJ,kBAACvoB,GAAA,EAAD,CACIphC,GAAG,cACHkgC,SAAUA,EACVrkB,KAAM4L,QAAQyY,GACdmB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhBnK,QAASrb,KAAKw/B,iBACd,kBAAC7Z,GAAA,EAAD,CAAUtZ,QAASrM,KAAKwoD,kBAAmBj7C,UAAWy7C,YAAqB36C,IACvE,kBAACmR,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,kBAE7B,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAK2oD,qBAAsBp7C,UAAWy7C,YAAqB36C,IAC1E,kBAACmR,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,sBAE3ByB,aAAclD,IACZ,kBAACsX,GAAA,EAAD,CAAUtZ,QAASrM,KAAK6oD,iBAAkBt7C,UAAW07C,YAAa56C,IAC9D,kBAACmR,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iB,GAtF1BvP,IAAMC,WAsGlBiR,iBAAkB62C,I,oBCtH1B,SAASY,GAAUC,GAAsB,IAAhBC,EAAe,wDAC3C,GAAKD,EAAL,CAEA,GAAIC,GAASD,EAAK9tB,YAAc8tB,EAAK9tB,WAAWvnB,OAAS,EAAG,CACxD,IAAMu1C,EAAWF,EAAK9tB,WAAW8tB,EAAK9tB,WAAWvnB,OAAS,GACpD0nB,EAAQt4B,SAASu4B,cACvBD,EAAME,SAAS2tB,EAAUA,EAASv1C,QAClC0nB,EAAMG,UAAS,GAEf,IAAMC,EAAY7yB,OAAO8yB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnB2tB,EAAKnoC,UAAYmoC,EAAK1nC,aAG1B0nC,EAAK/1C,SCfT,IAAMk3B,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGFgf,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGPr9C,GACN,MAA0C,qBAA5BpM,KAAKupD,QAAQn9C,EAAE+M,UAEjCuwC,eANiB,SAMFt9C,GACX,MAA+C,qBAAjCpM,KAAKwpD,aAAap9C,EAAE+M,WAI1CmwC,GAAMC,QAAQjf,KAAqB,EACnCgf,GAAMC,QAAQjf,KAAiB,EAC/Bgf,GAAMC,QAAQjf,KAAgB,EAC9Bgf,GAAMC,QAAQjf,KAAe,EAC7Bgf,GAAMC,QAAQjf,KAAkB,EAEhCgf,GAAME,aAAalf,KAAmB,EACtCgf,GAAME,aAAalf,KAAqB,EACxCgf,GAAME,aAAalf,KAAqB,EACxCgf,GAAME,aAAalf,KAAsB,E,WClBnCqf,G,YACF,WAAYlqD,GAAQ,IAAD,8BACf,4CAAMA,KASVmqD,QAAU,WACN,OAAO,EAAKC,cAAcjyC,QAAQqB,WAXnB,EAcnB7F,MAAQ,WAAoB,IAAnBg2C,EAAkB,wDACjBD,EAAO,EAAKU,cAAcjyC,QAEhCsxC,GAAUC,EAAMC,IAjBD,EAoBnBtkC,aAAe,WAAO,IAAD,EACY,EAAKrlB,MAA1Bm+B,EADS,EACTA,OAAQsJ,EADC,EACDA,SACXtJ,GACAsJ,GAELA,EAAStJ,EAAOx+B,KAzBD,EA4BnBiiC,YAAc,SAAAr9B,GAAU,IACZ45B,EAAW,EAAKn+B,MAAhBm+B,OAER55B,EAAM8B,iBAEN,IAAMqjD,EAAO,EAAKU,cAAcjyC,QAC1B9D,EAASq1C,EAAKW,QAAQh2C,OAEtB/B,GADYo3C,EAAKW,QAAQC,UAClB,EAAKH,WAElB,EAAKlqD,SAAS,CACVsqD,aAAcl2C,EAAS/B,EAAK+B,SAGhCzU,IAAgByF,aAAa,CACzB,QAAS,yBACT1F,GAAIw+B,EAAOx+B,GACX2S,UA7CW,EAiDnB0U,cAAgB,SAAAziB,GACZ,IAAMmlD,EAAO,EAAKU,cAAcjyC,QAC1BmyC,EAAYZ,EAAKW,QAAQC,UAEzBj2C,EADY,EAAK81C,UACE91C,OAErBm2C,GAAe,EACbruB,EAAY7yB,OAAO8yB,eACnB4tB,EAAYH,GAAMG,UAAUzlD,GAC5B0lD,EAAiBJ,GAAMI,eAAe1lD,GAM5C,OAJI43B,IACAquB,IAAiBruB,EAAUsuB,YAGvBlmD,EAAM+S,KACV,IAAK,YAED,IADa,EAAK6yC,UACP,CAAC,IAAD,EACsB,EAAKnqD,MAA1Bm+B,EADD,EACCA,OAAQsJ,EADT,EACSA,SAMhB,OALIA,GACAA,EAAStJ,EAAOx+B,IAAI,GAGxB4E,EAAM8B,kBACC,EAGX,MAEJ,IAAK,QAAU,IAAD,EACsB,EAAKrG,MAA7Bm+B,EADE,EACFA,OAAQusB,EADN,EACMA,YAMhB,OALIvsB,GAAUusB,GACVA,EAAYvsB,EAAOx+B,IAGvB4E,EAAM8B,kBACC,EAEX,IAAK,UACD,IAAM81B,EAAY7yB,OAAO8yB,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUwuB,YAAa,MAE5B,IAAMC,EAAalB,EAAK9tB,YAAc8tB,EAAK9tB,WAAWvnB,OAAS,EAAIq1C,EAAK9tB,WAAW,GAAK,KAExF,IAAKgvB,GAAezuB,EAAU0uB,aAAeD,IAAezuB,EAAU2uB,aAAe,CAAC,IAAD,EACjD,EAAK9qD,MAA7Bm+B,EADyE,EACzEA,OAAQ4sB,EADiE,EACjEA,YAMhB,OALIA,GACAA,EAAY5sB,EAAOx+B,IAGvB4E,EAAM8B,kBACC,EAGX,MAEJ,IAAK,YACD,IAAM81B,EAAY7yB,OAAO8yB,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUwuB,YAAa,MAE5B,IAAMK,EACFtB,EAAK9tB,YAAc8tB,EAAK9tB,WAAWvnB,OAAS,EAAIq1C,EAAK9tB,WAAW8tB,EAAK9tB,WAAWvnB,OAAS,GAAK,KAElG,IAAK22C,GAAc7uB,EAAU0uB,aAAeG,GAAa7uB,EAAU2uB,eAAiBE,EAAU32C,OAAS,CAAC,IAAD,EACnE,EAAKrU,MAA7Bm+B,EAD2F,EAC3FA,OAAQusB,EADmF,EACnFA,YAMhB,OALIA,GACAA,EAAYvsB,EAAOx+B,IAGvB4E,EAAM8B,kBACC,GAOnB,SAAI2jD,IAAaC,OAIb51C,GAAUi2C,IAAcE,KACxBjmD,EAAM8B,kBACC,KAvII,EA6InB6gB,YAAc,SAAA3iB,GACVA,EAAM8B,iBAEN,IACMikD,EADO,EAAKF,cAAcjyC,QACTkyC,QAAQC,UAEzBnuB,EAAY7yB,OAAO8yB,eACnB6uB,EAAkB9uB,EAAYA,EAAUsuB,WAAa,GAErDjxC,EAAY,EAAK2wC,UACvB,KAAI3wC,EAAUnF,OAAS8nB,EAAU9nB,QAAUi2C,GAA3C,CAEA,IAAIY,EAAY3mD,EAAMoW,cAAcC,QAAQ,cACvCswC,IAELA,EAAYA,EAAUtkB,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtDptB,EAAUnF,OAAS42C,EAAgB52C,OAAS62C,EAAU72C,OAASi2C,IAC/DY,EAAYA,EAAUjhB,OAAO,EAAGqgB,EAAY9wC,EAAUnF,OAAS42C,EAAgB52C,SAEnF5Q,SAASoQ,YAAY,cAAc,EAAOq3C,MAjK3B,EAoKnB7jD,aAAe,WAAO,IACV82B,EAAW,EAAKn+B,MAAhBm+B,OACHA,GAELv+B,IAAgByF,aAAa,CACzB,QAAS,+BACT1F,GAAIw+B,EAAOx+B,MAvKf,EAAKyqD,cAAgBtpD,IAAMsa,YAE3B,EAAK9b,MAAQ,CACTirD,aAAcY,MANH,E,sEA8KT,IAAD,EACiB5qD,KAAKP,MAAnBqQ,EADH,EACGA,EAAG8tB,EADN,EACMA,OACHosB,EAAiBhqD,KAAKjB,MAAtBirD,aAEAa,EAAcjtB,EAAditB,UAER,OACI,yBAAK5qD,UAAU,sBACX,yBAAKA,UAAU,8BACX,kBAACuxC,GAAA,EAAD,CACIz6B,IAAKgY,KAAK3tB,MACV0L,QAAS,CAAE3E,KAAM,0BACjB8O,MAAM,UACN+I,QAAS6qC,EACT19C,SAAUnN,KAAK8G,eAEnB,yBACI0U,IAAKxb,KAAK6pD,cACV5pD,UAAU,0BACVwS,iBAAe,EACfgJ,gCAA8B,EAC9BC,YAAa5L,EAAE,UACfg7C,cAAaC,IACbC,kBAAiBJ,KACjBlpB,QAAS1hC,KAAKqhC,YACd1lB,UAAW3b,KAAKymB,cAChB5K,QAAS7b,KAAK2mB,eAGtB,yBAAK1mB,UAAU,oCACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,4BAA4BoM,QAASrM,KAAK8kB,cAC5D,kBAACxY,EAAA,EAAD,CAAWuE,SAAS,YAG5B,yBAAK5Q,UAAU,qCACd+pD,GAAgBe,IAAqBE,KAClC,kBAAC,KAAD,CACIC,MAAM,SACNjrD,UAAU,8BACVgX,MAAO+yC,GAAgB,EAAI,gBAAkB,QAC7CpqC,QAAQ,aACPoqC,Q,GAxNMzpD,IAAMC,WA6OtByb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQ0tC,I,UCvNjBwB,I,mBACF,WAAY1rD,GAAQ,IAAD,8BACf,4CAAMA,KAsCV2rD,0BAA4B,SAAAv9C,GAAW,IAC3Bw9C,EAASC,KAATD,KAER,EAAK3rD,SAAS,CACV6rD,SAAS,EACTvB,aAAcwB,KACdH,UA7CW,EAiDnBI,+BAAiC,SAAA59C,GAAW,IAChCw9C,EAASC,KAATD,KAEFlC,EAAO,EAAKuC,YAAY9zC,QACxB9D,EAASq1C,EAAKW,QAAQh2C,OACtBmF,EAAYkwC,EAAKlwC,UAEvB,EAAKvZ,SAAS,CACVsqD,aAAcl2C,EAASmF,EAAUnF,OACjCu3C,UA1DW,EA8DnBM,uBAAyB,SAAA99C,GAAW,IACxBw9C,EAASC,KAATD,KAER,EAAK3rD,SAAS,CAAE2rD,UAjED,EAoEnBO,gCAAkC,SAAA/9C,GAAW,IACjCw9C,EAASC,KAATD,KAER,EAAK3rD,SAAS,CAAE2rD,QAAQ,WACpB5jD,WAAW,WACM,EAAKokD,cAAcpjD,IAAI4iD,EAAK1qD,QAAQmT,OAAS,GAErDV,OAAM,QA3EJ,EA0FnBqT,cAAgB,SAAAziB,GACZ,IAAMmlD,EAAO,EAAKuC,YAAY9zC,QACxBmyC,EAAYZ,EAAKW,QAAQC,UAEzBj2C,EADYq1C,EAAKlwC,UACEnF,OAErBm2C,GAAe,EACbruB,EAAY7yB,OAAO8yB,eACnB4tB,EAAYH,GAAMG,UAAUzlD,GAC5B0lD,EAAiBJ,GAAMI,eAAe1lD,GAM5C,OAJI43B,IACAquB,IAAiBruB,EAAUsuB,YAGvBlmD,EAAM+S,KACV,IAAK,QACD,IAAK/S,EAAM8nD,SAIP,OAHA,EAAKC,sBAAsB,GAE3B/nD,EAAM8B,kBACC,EAGX,MAEJ,IAAK,YACD,IAAM81B,EAAY7yB,OAAO8yB,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUwuB,YAAa,MAE5B,IAAMK,EACFtB,EAAK9tB,YAAc8tB,EAAK9tB,WAAWvnB,OAAS,EAAIq1C,EAAK9tB,WAAW8tB,EAAK9tB,WAAWvnB,OAAS,GAAK,KAElG,IAAK22C,GAAc7uB,EAAU0uB,aAAeG,GAAa7uB,EAAU2uB,eAAiBE,EAAU32C,OAI1F,OAHA,EAAKi4C,sBAAsB,GAE3B/nD,EAAM8B,kBACC,EAOnB,SAAI2jD,IAAaC,OAIb51C,GAAUi2C,IAAcE,KACxBjmD,EAAM8B,kBACC,KA7II,EAmJnB6gB,YAAc,SAAA3iB,GACVA,EAAM8B,iBAEN,IAAMqjD,EAAO,EAAKuC,YAAY9zC,QACxBmyC,EAAYZ,EAAKW,QAAQC,UAEzBnuB,EAAY7yB,OAAO8yB,eACnB6uB,EAAkB9uB,EAAYA,EAAUsuB,WAAa,GAErDjxC,EAAYkwC,EAAKlwC,UACvB,KAAIA,EAAUnF,OAAS8nB,EAAU9nB,QAAUi2C,GAA3C,CAEA,IAAIY,EAAY3mD,EAAMoW,cAAcC,QAAQ,cACvCswC,IAED1xC,EAAUnF,OAAS42C,EAAgB52C,OAAS62C,EAAU72C,OAASi2C,IAC/DY,EAAYA,EAAUjhB,OAAO,EAAGqgB,EAAY9wC,EAAUnF,OAAS42C,EAAgB52C,SAEnF5Q,SAASoQ,YAAY,cAAc,EAAOq3C,MArK3B,EAwKnBtpB,YAAc,SAAAr9B,GACVA,EAAM8B,iBAEN,IAAMqjD,EAAO,EAAKuC,YAAY9zC,QAGxBqB,EAAYkwC,EAAKlwC,UAGL,SAFAkwC,EAAKn/C,YAGnBm/C,EAAKlwC,UAAY,IAOrB5Z,IAAgByF,aAAa,CACzB,QAAS,2BACTknD,SAAU/yC,KA3LC,EA+LnBgzC,gBAAkB,WAAO,IACbZ,EAAS,EAAKtsD,MAAdssD,KACR,GAAKA,KAEeA,EAAZ1qD,QACImT,QAAUo4C,KAAtB,CAEA,IAAMtuB,EAAS,CACXx+B,GAAI2vB,KAAK3tB,MACT2Q,KAAM,IAGV1S,IAAgByF,aAAa,CACzB,QAAS,4BACT84B,aA7MW,EAiNnBuuB,mBAAqB,SAAC/sD,GAA2B,IAAvBgtD,EAAsB,wDACxCA,EACA,EAAKC,wBAAwBjtD,GAE7B,EAAK0lB,aAAa1lB,IArNP,EAyNnB0lB,aAAe,SAAA1lB,GACXC,IAAgByF,aAAa,CACzB,QAAS,+BACT1F,QA5NW,EAgOnBitD,wBAA0B,SAAAjtD,GAAO,IACrBisD,EAAS,EAAKtsD,MAAdssD,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpB1qD,EAAY0qD,EAAZ1qD,QAEF8mB,EAAQ9mB,EAAQ+mB,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOA,IACxCktD,EAAY7kC,EAAQ,EACtB8kC,GAAe,EACVn4C,EAAIqT,EAAOrT,EAAIzT,EAAQmT,OAAQM,IAAK,CAEzC,GADiBzT,EAAQyT,GAAjBrC,KACE,CACNw6C,GAAe,EACf,OAIJA,GACA,EAAKJ,mBAAmB/sD,GAG5B,IAAMotD,EAAW,EAAKX,cAAcpjD,IAAI6jD,GACxC,GAAKE,EAOLA,EAASp5C,OAAM,QAJX81C,GAFgB,EAAKwC,YAAY9zC,SAEd,KAzPR,EAgQnB60C,sBAAwB,SAAArtD,GAAO,IACnBisD,EAAS,EAAKtsD,MAAdssD,KACR,GAAKA,EAAL,CAF0B,IAOpBiB,EAHcjB,EAAZ1qD,QAEc+mB,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOA,IACpB,EAEpBotD,EAAW,EAAKX,cAAcpjD,IAAI6jD,GACxC,GAAKE,EAOLA,EAASp5C,OAAM,QAJX81C,GAFgB,EAAKwC,YAAY9zC,SAEd,KA7QR,EAoRnBm0C,sBAAwB,SAAA3sD,GAAO,IACnBisD,EAAS,EAAKtsD,MAAdssD,KACR,GAAKA,EAAL,CAF0B,IAIlB1qD,EAAY0qD,EAAZ1qD,QAEF8mB,EAAQ9mB,EAAQ+mB,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOA,IACxCstD,EAAYjlC,EAAQ,EAEpBklC,EAAW,EAAKd,cAAcpjD,IAAIikD,GACxC,GAAKC,EAULA,EAASv5C,MAAMu5C,GAAU,OAVzB,CACI,IAAM56C,EAAO0V,GAAS,GAAKA,EAAQ9mB,EAAQmT,OAASnT,EAAQ8mB,GAAO1V,KAAO,GAC1E,GAAIpR,EAAQmT,SAAW/B,EACnB,OAGJ,EAAKk6C,qBApSM,EA2SnBW,QAAU,WAAO,IACLvB,EAAS,EAAKtsD,MAAdssD,KACR,GAAKA,EAAL,CAFY,IAIJ1qD,EAAY0qD,EAAZ1qD,QAEFksD,EAAWX,IAAyBvrD,EAAQmT,OAElD,OAAI+4C,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGL,eAAN,OAAsBX,IAAyBvrD,EAAQmT,OAAvD,oBA1Te,EA6TnBpM,YAAc,WAAO,IACT2jD,EAAS,EAAKtsD,MAAdssD,KAEJyB,aAAYzB,GACZ,EAAK3rD,SAAS,CAAE6rD,SAAS,IAEzB,EAAKwB,0BAnUM,EAuUnBx1C,WAAa,WAAO,IACRy1C,EAAW,EAAKvtD,MAAhButD,OAEFC,EAAmB3B,KAAU4B,sBAC9BD,IAELD,EAAOC,GAEP,EAAKF,2BA/UU,EAkVnBI,wBAA0B,WACtB,EAAKztD,SAAS,CAAE6rD,SAAS,KAnVV,EAsVnBwB,uBAAyB,WACrB,EAAKI,0BAEL9tD,IAAgByF,aAAa,CACzB,QAAS,4BA1VE,EA8VnBsoD,sBAAwB,WACpB/tD,IAAgByF,aAAa,CACzB,QAAS,qCAhWE,EAoWnBuoD,iCAAmC,WAC/BhuD,IAAgByF,aAAa,CACzB,QAAS,gDAtWE,EA0WnBwoD,iBAAmB,WACfjuD,IAAgByF,aAAa,CACzB,QAAS,gCA5WE,EAgXnBuR,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK7W,MAAxC8W,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNhX,UAAU,4BACVoM,QAAS,kBAAMmK,EAAcC,KAC7B,kBAACnK,EAAA,EAAD,WA7XG,EAmYnBihD,gCAAkC,SAAAvpD,GAAU,IAChC8L,EAAM,EAAKrQ,MAAXqQ,EACAu7C,EAAS,EAAKtsD,MAAdssD,KACHA,IAEmC,iBAAvBA,EAAK5uC,KAAK,WAEvBzY,EAAM2C,kBAEN,EAAK0P,sBAAsBvG,EAAE,8BAzYjC,EAAK47C,YAAcnrD,IAAMsa,YACzB,EAAKgxC,cAAgB,IAAI33C,IAEzB,EAAKnV,MAAQ,CACTssD,KAAM,KACNE,SAAS,EACTvB,aAAcwB,MATH,E,iFAcfF,KAAUh9C,GAAG,+BAAgCtO,KAAK2rD,wBAClDL,KAAUh9C,GAAG,kCAAmCtO,KAAK2rD,wBACrDL,KAAUh9C,GAAG,6CAA8CtO,KAAK2rD,wBAChEL,KAAUh9C,GAAG,6BAA8BtO,KAAK2rD,wBAChDL,KAAUh9C,GAAG,yBAA0BtO,KAAK2rD,wBAC5CL,KAAUh9C,GAAG,+BAAgCtO,KAAK2rD,wBAClDL,KAAUh9C,GAAG,sBAAuBtO,KAAKorD,2BACzCE,KAAUh9C,GAAG,4BAA6BtO,KAAK4rD,iCAC/CN,KAAUh9C,GAAG,yBAA0BtO,KAAK2rD,wBAC5CL,KAAUh9C,GAAG,2BAA4BtO,KAAKyrD,kC,6CAI9CH,KAAU/8C,IAAI,+BAAgCvO,KAAK2rD,wBACnDL,KAAU/8C,IAAI,kCAAmCvO,KAAK2rD,wBACtDL,KAAU/8C,IAAI,6CAA8CvO,KAAK2rD,wBACjEL,KAAU/8C,IAAI,6BAA8BvO,KAAK2rD,wBACjDL,KAAU/8C,IAAI,yBAA0BvO,KAAK2rD,wBAC7CL,KAAU/8C,IAAI,+BAAgCvO,KAAK2rD,wBACnDL,KAAU/8C,IAAI,sBAAuBvO,KAAKorD,2BAC1CE,KAAU/8C,IAAI,4BAA6BvO,KAAK4rD,iCAChDN,KAAU/8C,IAAI,yBAA0BvO,KAAK2rD,wBAC7CL,KAAU/8C,IAAI,2BAA4BvO,KAAKyrD,kC,yCA4ChC5rD,EAAWC,EAAWC,GAAW,IAAD,OAC9BC,KAAKjB,MAAdssD,OAEKvrD,EAAUurD,MACnB5jD,WAAW,WACPyhD,GAAU,EAAKwC,YAAY9zC,SAAS,IACrC,K,+BA0TD,IAAD,OACG9H,EAAM9P,KAAKP,MAAXqQ,EADH,EAEmC9P,KAAKjB,MAArCirD,EAFH,EAEGA,aAAcuB,EAFjB,EAEiBA,QAASF,EAF1B,EAE0BA,KAC/B,IAAKA,EAAM,OAAO,KAHb,IAKGmC,EAAiBnC,EAAjBmC,aAEF7sD,EAAU0qD,EAAOA,EAAK1qD,QAAU,GAChC8sD,EAAuBpC,EAAK5uC,KAAKixC,uBACjCC,EAAsD,oBAAvBtC,EAAK5uC,KAAK,SACzCmxC,EAAkC,iBAAvBvC,EAAK5uC,KAAK,SAE3Bzc,KAAK6rD,cAAcpvB,QACnB,IAAMnZ,EAAQ3iB,EAAQ0U,IAAI,SAAC/T,EAAG8S,GAAJ,OACtB,kBAAC,GAAD,CACIoH,IAAK,SAAA8G,GAAE,OAAI,EAAKupC,cAAc7yC,IAAI5E,EAAGkO,IACrCvL,IAAKzV,EAAElC,GACPw+B,OAAQt8B,EACR4lC,SAAU,EAAKilB,mBACf3B,YAAa,EAAKiC,sBAClBtC,YAAa,EAAK4B,0BAIpB8B,EAAe3B,IAAyBvrD,EAAQmT,OAAS,EACzD0tB,EAAOxhC,KAAK4sD,UAElB,OACI,oCACI,kBAAC,IAAD,CACI3sD,UAAWgM,IAAW,qBAAsB,CAAE,qBAAsB2hD,IACpE3yC,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAASrb,KAAK0H,YACd4T,kBAAgB,gBAChB,kBAAC,IAAD,CAAalc,GAAG,gBAAgB0Q,EAAE,YAClC,kBAAC,KAAD,CAAehD,QAAS,CAAE3E,KAAM,4BAC5B,yBAAKlI,UAAU,qCACX,kBAAC0f,GAAA,EAAD,CAAY1I,MAAM,UAAU2I,QAAQ,YAAYlc,MAAO,CAAEoqD,SAAU,IAC9Dh+C,EAAE,aAENk6C,GAAgB+D,KAAuBC,MACpC,kBAACruC,GAAA,EAAD,CAAY1I,MAAO+yC,GAAgB,EAAI,gBAAkB,QAASpqC,QAAQ,aACrEoqC,IAIb,yBACIxuC,IAAKxb,KAAK0rD,YACVtsD,GAAG,8BACHqT,iBAAe,EACfgJ,gCAA8B,EAC9BC,YAAa5L,EAAE,gBACfg7C,cAAaiD,KACb/C,kBAAiBQ,KACjB3vC,QAAS7b,KAAK2mB,YACdhL,UAAW3b,KAAKymB,cAChBib,QAAS1hC,KAAKqhC,cAElB,kBAACpd,GAAA,EAAD,CAAShkB,UAAU,YACnB,kBAAC0f,GAAA,EAAD,CAAY1I,MAAM,UAAU2I,QAAQ,aAC/B9P,EAAE,gBAEP,kBAACgU,GAAA,EAAD,CAAMhX,QAAS,CAAE3E,KAAM,4BAClBmb,EACAuqC,GACG,kBAACvuC,GAAA,EAAD,CACI3N,UAAU,EACV1R,UAAU,yBACVsf,QAAM,EACNlT,QAASrM,KAAKisD,iBACd,kBAACxsC,GAAA,EAAD,CAAcwuC,mBAAiB,EAACvuC,QAAS5P,EAAE,mBAIvD,kBAAC6P,GAAA,EAAD,KAAa6hB,GACb,kBAACvd,GAAA,EAAD,CAAShkB,UAAU,YACnB,kBAAC0f,GAAA,EAAD,CAAY1I,MAAM,UAAU2I,QAAQ,aAC/B9P,EAAE,aAEP,kBAACo+C,GAAA,EAAD,KACI,kBAAC1S,GAAA,EAAD,CACIC,QACI,kBAACkC,GAAA,EAAD,CACI1mC,MAAM,UACN+I,QAASwtC,EACTrgD,SAAUnN,KAAKotD,wBAGvBjgC,MAAOrd,EAAE,mBAEb,yBAAKzD,QAASrM,KAAKutD,gCAAiC7pD,MAAO,CAAEyqD,WAAY,gBACrE,kBAAC3S,GAAA,EAAD,CACIC,QACI,kBAACkC,GAAA,EAAD,CACI1mC,MAAM,UACN1J,SAAUogD,EACV3tC,QAASytC,EACTtgD,SAAUnN,KAAKqtD,mCAGvBlgC,MAAOrd,EAAE,mBAGjB,kBAAC0rC,GAAA,EAAD,CACIC,QACI,kBAACkC,GAAA,EAAD,CAAU1mC,MAAM,UAAU+I,QAAS4tC,EAAUzgD,SAAUnN,KAAKstD,mBAEhEngC,MAAOrd,EAAE,eAGjB,kBAAC6P,GAAA,EAAD,KAAa7P,EAAE,cAEnB,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9E,MAAM,UAAU5K,QAASrM,KAAK0H,aACjCoI,EAAE,WAENs+C,aAAY/C,IACT,kBAACtvC,EAAA,EAAD,CAAQ9E,MAAM,UAAU5K,QAASrM,KAAKuX,YACjCzH,EAAE,aAKnB,kBAAC,IAAD,CACI7P,UAAU,0BACVgb,KAAMswC,EACNrwC,QAASC,KACTC,mBAAoB,EACpBC,QAASrb,KAAKmtD,wBACd7xC,kBAAgB,gBAChB,kBAAC,IAAD,CAAalc,GAAG,gBAAgB0Q,EAAE,yBAClC,kBAAC,KAAD,CAAehD,QAAS,CAAE3E,KAAM,4BAC3B2H,EAAE,wBAEP,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9E,MAAM,UAAU5K,QAASrM,KAAKmtD,yBACjCr9C,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ9E,MAAM,UAAU5K,QAASrM,KAAK+sD,wBACjCj9C,EAAE,c,GA9hBAvP,IAAMC,YAkjBtByb,GAPCC,YACZkI,cACA3S,cACA0K,eACAkI,cAGWpI,CAAQkvC,I,SC1kBjBkD,I,mBACF,WAAY5uD,GAAQ,IAAD,8BACf,4CAAMA,KAuGV6uD,kBAAoB,SAAAtqD,GACE,UAAdA,EAAM+S,MACN,EAAKw3C,YAAY32C,QAAQxE,QACzBpP,EAAM8B,iBACN9B,EAAM2C,oBA5GK,EAgHnB6nD,iBAAmB,SAAAxqD,GACG,UAAdA,EAAM+S,MACN,EAAKg2B,aACL/oC,EAAM8B,iBACN9B,EAAM2C,oBApHK,EAwHnB8nD,iBAAmB,SAAAzqD,GACf,EAAKtE,SAAS,CACVqS,KAAM/N,EAAMC,OAAO8C,SA1HR,EA8HnB2nD,gBAAkB,SAAA1qD,GACd,EAAKtE,SAAS,CACVsrB,IAAKhnB,EAAMC,OAAO8C,SAhIP,EAoInBgmC,WAAa,WAAO,IAAD,EACqB,EAAKttC,MAAjCkvD,EADO,EACPA,YAAaC,EADN,EACMA,WADN,EAEK,EAAK7vD,MAAnBgT,EAFS,EAETA,KAAMiZ,EAFG,EAEHA,IAKZ,GAFAA,EAAc,OAARA,EAAeA,EAAM4jC,GAD3B78C,EAAgB,OAATA,EAAgBA,EAAO48C,IAGhB3jC,EAAd,CAKA,IAAKjZ,EAGD,OAFA,EAAKrS,SAAS,CAAEmvD,WAAW,SAC3B,EAAKC,aAAal3C,QAAQxE,QAK9B,KADA4X,EAAM+jC,aAAY/jC,IAId,OAFA,EAAKtrB,SAAS,CAAEsvD,UAAU,SAC1B,EAAKT,YAAY32C,QAAQxE,SAM7BiiC,EAFmB,EAAK51C,MAAhB41C,QAEDtjC,EAAMiZ,QAnBT,EAAK8jC,aAAal3C,QAAQxE,SA5If,EAkKnB06B,aAAe,YAGXmhB,EAFqB,EAAKxvD,MAAlBwvD,aAhKR,EAAKC,QAAU3uD,IAAMsa,YACrB,EAAKi0C,aAAevuD,IAAMsa,YAC1B,EAAKs0C,OAAS5uD,IAAMsa,YACpB,EAAK0zC,YAAchuD,IAAMsa,YAEzB,EAAK9b,MAAQ,GARE,E,gFAWAc,EAAWC,EAAWC,GAAW,IAAD,SACLC,KAAKP,MAAvCkvD,EADuC,EACvCA,YAAaC,EAD0B,EAC1BA,WAAY3zC,EADc,EACdA,KAE7BA,GAAQpb,EAAUob,OAASA,GAC3BxT,WAAW,WACP,IAAMsK,EAAO,EAAK+8C,aAAal3C,QACzBoT,EAAM,EAAKujC,YAAY32C,QAExB7F,GACAiZ,IAEA2jC,EAEOC,GAGR78C,EAAKqB,QACLrB,EAAKsB,UAHL2X,EAAI5X,QAFJrB,EAAKqB,UAOV,K,yFAyBWhD,EAAWC,EAAWyqB,GAAc,IAAD,EACO96B,KAAKP,MAAzDkvD,EAD6C,EAC7CA,YAAaC,EADgC,EAChCA,WAAYvZ,EADoB,EACpBA,OAAQ4Z,EADY,EACZA,SAAUh0C,EADE,EACFA,KADE,EAErBjb,KAAKjB,MAA7B8vD,EAF6C,EAE7CA,UAAWG,EAFkC,EAElCA,SAEnB,OAAI5+C,EAAUu+C,cAAgBA,IAI1Bv+C,EAAUw+C,aAAeA,IAIzBv+C,EAAUw+C,YAAcA,IAIxBx+C,EAAU2+C,WAAaA,IAIvB5+C,EAAUilC,SAAWA,IAIrBjlC,EAAU6+C,WAAaA,GAIvB7+C,EAAU6K,OAASA,S,+BAqFjB,IAAD,EACwCjb,KAAKP,MAA1Cwb,EADH,EACGA,KAAM2zC,EADT,EACSA,WAAYD,EADrB,EACqBA,YAAa7+C,EADlC,EACkCA,EADlC,EAE2B9P,KAAKjB,MAA7B8vD,EAFH,EAEGA,UAAWG,EAFd,EAEcA,SACnB,OAAK/zC,EAGD,kBAAC,IAAD,CACIC,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAASrb,KAAK8tC,aACdxyB,kBAAgB,yBAChB,kBAAC,IAAD,CAAalc,GAAG,yBAAyB0Q,EAAE,eAC3C,kBAAC,KAAD,KACI,yBAAKpM,MAAO,CAAE0rD,QAAS,OAAQC,cAAe,SAAU3iD,MAAO,MAC3D,kBAACwkC,GAAA,EAAD,CACI11B,IAAKxb,KAAKkvD,QACV5tB,SAAUthC,KAAK8uD,aACf3hC,MAAOrd,EAAE,QACTq/B,OAAO,SACPmgB,aAAa,MACbne,aAAcwd,EACdt8C,MAAOw8C,EACP1hD,SAAUnN,KAAKyuD,iBACf9yC,UAAW3b,KAAKsuD,oBAEpB,kBAACpd,GAAA,EAAD,CACI11B,IAAKxb,KAAKmvD,OACV7tB,SAAUthC,KAAKuuD,YACfphC,MAAOrd,EAAE,OACTq/B,OAAO,SACPmgB,aAAa,MACbne,aAAcyd,EACdv8C,MAAO28C,EACP7hD,SAAUnN,KAAK0uD,gBACf/yC,UAAW3b,KAAKwuD,qBAI5B,kBAAC1yC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAK8tC,aAAc72B,MAAM,WACrCnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAK+sC,WAAY91B,MAAM,WACnCnH,EAAE,aAzCD,Q,gDAjFUrQ,EAAOV,GACnC,OAAIA,EAAMwwD,WAAa9vD,EAAMwb,KAClB,CACHs0C,UAAU,EACVV,WAAW,EACXG,UAAU,EACVj9C,KAAM,KACNiZ,IAAK,MAIN,S,GAtGazqB,IAAMC,YAqOnBiR,iBAAkB48C,IC/JlBmB,I,kNArDXliC,wBAA0B,SAAAzf,GAAW,IAAD,EACS,EAAKpO,MAAtC4O,EADwB,EACxBA,OAAQsW,EADgB,EAChBA,UAAW4I,EADK,EACLA,UAC3B,GAAKA,EAAL,CAFgC,IAIxBne,EAAUme,EAAVne,MACHA,GAEDvB,EAAOQ,SAAWA,GAAUR,EAAO8W,YAAcA,GAAa9W,EAAOxI,SAAW+J,EAAMhQ,IACtF,EAAK2P,gB,mFA3BTvG,IAAU8F,GAAG,qCAAsCtO,KAAKstB,yBACxD9kB,IAAU8F,GAAG,iCAAkCtO,KAAKstB,yBACpD9kB,IAAU8F,GAAG,oCAAqCtO,KAAKstB,yBACvD9kB,IAAU8F,GAAG,wBAAyBtO,KAAKstB,yBAC3C9kB,IAAU8F,GAAG,mCAAoCtO,KAAKstB,yBACtD9kB,IAAU8F,GAAG,iCAAkCtO,KAAKstB,yBACpD9kB,IAAU8F,GAAG,qCAAsCtO,KAAKstB,2B,6CAIxD9kB,IAAU+F,IAAI,qCAAsCvO,KAAKstB,yBACzD9kB,IAAU+F,IAAI,iCAAkCvO,KAAKstB,yBACrD9kB,IAAU+F,IAAI,oCAAqCvO,KAAKstB,yBACxD9kB,IAAU+F,IAAI,wBAAyBvO,KAAKstB,yBAC5C9kB,IAAU+F,IAAI,mCAAoCvO,KAAKstB,yBACvD9kB,IAAU+F,IAAI,iCAAkCvO,KAAKstB,yBACrD9kB,IAAU+F,IAAI,qCAAsCvO,KAAKstB,2B,+BAenD,IAAD,EACmDttB,KAAKP,MAArD4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAAW4I,EADtB,EACsBA,UAAWI,EADjC,EACiCA,cACtC,IAAKJ,EAAW,OAAO,KAFlB,IAIGne,EAAUme,EAAVne,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAMwe,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5Exe,EAAMC,YAAOF,GACbmf,GAAclf,GAAOue,GAAYG,aAAmBR,GACpDkiC,EAAcC,aAAarhD,EAAQsW,GACnCgrC,EAAS9oC,QAAQxX,GAAOue,GAE9B,OACI,yBAAK3tB,UAAU,cACV0vD,GACG,yBACI1vD,UAAWgM,IACP,mBACA,CAAE,yBAA0BwjD,GAC5B,CAAE,4BAA6BpgD,GAC/B,CAAE,gBAAiBA,GAAOkf,GAC1B,CAAE,sBAAuBlf,GAAOue,GAAWW,IAE/Cld,WAAW,EACXhC,IAAKA,GAAOue,EACZtc,IAAI,U,GA3DJ/Q,IAAMC,YCCxBovD,I,kNASFC,mBAAqB,SAAArwD,GAAW,IAAD,EACG,EAAKC,MAA3B4O,EADmB,EACnBA,OAAQsW,EADW,EACXA,UAEZtW,IAAW7O,EAAOiQ,SAAWkV,IAAcnlB,EAAOJ,IAClD,EAAK2P,e,EAIbrJ,YAAc,SAAA1B,GACVA,EAAM2C,mB,EAGVmpD,WAAa,SAAA9rD,GACT,GAAqB,IAAjBA,EAAMub,OAAV,CAEAvb,EAAM2C,kBAHY,MAKqB,EAAKlH,MAApC4O,EALU,EAKVA,OAAQsW,EALE,EAKFA,UAAWtY,EALT,EAKSA,QAErBiK,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KACrB,GAAIy5C,aAAiBz5C,GAAU,OAAO,KAEtC8K,aAAS/S,EAAQsW,GAAW,GACxBtY,GAASA,M,mFA/Bb8K,KAAa7I,GAAG,mBAAoBtO,KAAK6vD,sB,6CAIzC14C,KAAa5I,IAAI,mBAAoBvO,KAAK6vD,sB,+BA8BpC,IAAD,EAC4B7vD,KAAKP,MAA9BqQ,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQsW,EADd,EACcA,UACbpI,EAAUvc,KAAKP,MAAf8c,MAEAjG,EAAUa,KAAa1O,IAAI4F,EAAQsW,GAEzCpI,EAAQA,GAASsoC,aAASvuC,EAASxG,GACnC,IAAIuH,EAAWf,EAAyB4xB,aAAW5xB,EAASxG,GAAnCA,EAAE,WACrByd,EAAYyiC,aAAkB3hD,EAAQsW,GACtCgJ,EAAgBsiC,aAAsB5hD,EAAQsW,GAOpD,OALIorC,aAAiBz5C,KACjBiG,EAAQ,KACRlF,EAAUvH,EAAE,mBAIZ,yBAAK7P,UAAU,QAAQiM,YAAalM,KAAK8vD,WAAYzjD,QAASrM,KAAK0F,aAC/D,yBAAKzF,UAAU,iBACX,yBAAKA,UAAU,wBACdstB,GACG,kBAAC,GAAD,CACIlf,OAAQA,EACRsW,UAAWA,EACX4I,UAAWA,EACXI,cAAeA,IAGvB,yBAAK1tB,UAAU,iBACVsc,GAAS,yBAAKtc,UAAU,uBAAuBsc,GAChD,yBAAKtc,UAAWgM,IAAW,2BAA4BoL,U,GAlE3D9W,IAAMC,YAiFXiR,iBAAkBm+C,IChF3BM,I,kNASF/oC,uBAAyB,SAAAtZ,GAAW,IAAD,EACc,EAAKpO,MAA1C4O,EADuB,EACvBA,OAAQsW,EADe,EACfA,UAAWwrC,EADI,EACJA,cACnB1gD,EAAwB5B,EAAxB4B,QAASsG,EAAelI,EAAfkI,WAEb1H,IAAWoB,IACXkV,IAAc5O,GAAco6C,IAAkBp6C,GAElD,EAAKhH,gB,EAGTrH,YAAc,WAAO,IAAD,EACkB,EAAKjI,MAA/B4O,EADQ,EACRA,OADQ,EACA8hD,cAGZC,aAAY/hD,EAAQ,GAEpBgiD,aAAahiD,EAAQ,I,mFAvBzB8I,KAAa7I,GAAG,uBAAwBtO,KAAKmnB,0B,6CAI7ChQ,KAAa5I,IAAI,uBAAwBvO,KAAKmnB,0B,+BAuBxC,IAAD,EACoDnnB,KAAKP,MAAtD4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAAWwrC,EADtB,EACsBA,cAAergD,EADrC,EACqCA,EAAGzD,EADxC,EACwCA,QAC7C,OAAKgC,IACAsW,GAAcwrC,GAGf,yBAAKlwD,UAAU,mBACX,yBAAKA,UAAU,+BACX,kBAAC6W,EAAA,EAAD,CAAY7W,UAAU,uBAAuB+W,aAAW,QAAQ3K,QAASrM,KAAK0H,aAC1E,kBAAC4E,EAAA,EAAD,QAGR,yBAAKrM,UAAU,iCACX,kBAAC,GAAD,CACIoO,OAAQA,EACRsW,UAAWwrC,GAAiBxrC,EAC5BpI,MAAO4zC,EAAgBrgD,EAAE,eAAiB,KAC1CzD,QAASA,KAGjB,yBAAKpM,UAAU,kCAlBH,S,GA/BCM,IAAMC,YA8DpBiR,iBAAkBy+C,IC5D3BI,I,kNACFvjB,WAAa,YAETwjB,EADsB,EAAK9wD,MAAnB8wD,c,EAIZziB,aAAe,YAEXmhB,EADqB,EAAKxvD,MAAlBwvD,a,wEAIF,IAAD,EACgBjvD,KAAKP,MAAlB09B,EADH,EACGA,MAAOrtB,EADV,EACUA,EACf,OAAKqtB,EAGD,kBAAC,IAAD,CACIjiB,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAASrb,KAAK8tC,aACdxyB,kBAAgB,uBAChB,kBAAC,IAAD,CAAalc,GAAG,uBAAuB0Q,EAAE,YACzC,kBAAC,KAAD,KACI,kBAACq9B,GAAA,EAAD,KACKhQ,EAAMrpB,OAAS,EAAIhE,EAAE,yBAA2BA,EAAE,0BAG3D,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAK8tC,aAAc72B,MAAM,WACrCnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAK+sC,WAAY91B,MAAM,WACnCnH,EAAE,SApBA,S,GAbIvP,IAAMC,YAiDtByb,GAFCC,YAAQzK,cAETwK,CAAQq0C,IC2CRE,I,kNAnGXzxD,MAAQ,G,EAcR0xD,0BAA4B,WACxB,EAAKC,MAAQC,YAAY,WACrB,IACMC,EADM,IAAI7hC,KACG,EAAK9tB,UAGxB,EAAKvB,SAAS,CACV+B,KAAMmvD,KAEX,IACH,EAAK3vD,UAAY,IAAI8tB,M,EAGzB8hC,yBAA2B,WACnB,EAAKH,OACLnpD,aAAa,EAAKmpD,OAGtB,EAAKhxD,SAAS,CACV+B,KAAM,Q,EAIdqvD,0BAA4B,WACpB,EAAKJ,OACLnpD,aAAa,EAAKmpD,OAGtB,EAAKhxD,SAAS,CACV+B,KAAM,Q,mFAxCV0V,KAAa7I,GAAG,0BAA2BtO,KAAKywD,2BAChDt5C,KAAa7I,GAAG,yBAA0BtO,KAAK6wD,0BAC/C15C,KAAa7I,GAAG,0BAA2BtO,KAAK8wD,6B,6CAIhD35C,KAAa5I,IAAI,0BAA2BvO,KAAKywD,2BACjDt5C,KAAa5I,IAAI,yBAA0BvO,KAAK6wD,0BAChD15C,KAAa5I,IAAI,0BAA2BvO,KAAK8wD,6B,iCAoC1C1uD,GACP,IAAI2uD,EAAQ3uD,EAAE8nD,WAOd,OANqB,IAAjB6G,EAAMj9C,OACNi9C,GAAS,IACFA,EAAMj9C,OAAS,IACtBi9C,EAAQA,EAAMrnB,OAAO,EAAG,IAGrBqnB,I,iCAGA3uD,GACP,IAAI2uD,EAAQ3uD,EAAE8nD,WAKd,OAJqB,IAAjB6G,EAAMj9C,SACNi9C,EAAQ,IAAMA,GAGXA,I,+BAGFC,GACL,IAAIC,EAAMD,EAAI,IAEVE,GADJF,GAAKA,EAAIC,GAAM,KACA,GAEXE,GADJH,GAAKA,EAAIE,GAAQ,IACF,GACXE,GAAOJ,EAAIG,GAAQ,GAEnB3xD,EAAS2xD,EAAO,IAAMnxD,KAAKqxD,WAAWH,GAAQ,IAAMlxD,KAAKsxD,WAAWL,GAKxE,OAJIG,EAAM,IACN5xD,EAAS4xD,EAAM,IAAM5xD,GAGlBA,I,+BAGD,IACEiC,EAASzB,KAAKjB,MAAd0C,KACR,OAAKA,EAGD,yBAAKxB,UAAU,gBACVD,KAAKuxD,SAAS9vD,GACf,yBAAKxB,UAAU,uBALL,S,GAtFAM,IAAMC,Y,qBCe1BgxD,I,mBACF,WAAY/xD,GAAQ,IAAD,8BACf,4CAAMA,KAqDVgyD,sBAAwB,WAChBvuD,SAAS4E,gBAAkB,EAAK4pD,WAAW95C,SAC3C,EAAK+5C,iBAxDM,EA4DnBC,YAAc,WAAO,IAAD,EAC6B,EAAKnyD,MAA1C4O,EADQ,EACRA,OAAQsW,EADA,EACAA,UAAW1J,EADX,EACWA,KAAM42C,EADjB,EACiBA,QACjC,GAAK52C,EAAL,CAEA,IAAIlJ,EAAO,KACPgG,EAAU,KACRzB,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,GAAIrO,EAAS,CAAC,IACFe,EAAYf,EAAZe,QACJA,IACAtF,EAAOsF,EAAQtF,KACfgG,EAAUV,EAAQU,SAI1B,IAAM/M,EAAU,EAAK0mD,WAAW95C,QAC3B5M,IAED+G,EACA,EAAK+/C,iBAAiB//C,GACfgG,EACP,EAAK+5C,iBAAiB/5C,GACf85C,GAAWA,EAAQ95C,QAC1B/M,EAAQhB,UAAY6nD,EAAQ95C,QAE5B/M,EAAQiO,UAAY,KAGxBsiB,GAAWvwB,MAxFI,EAgHnB+hC,WAAa,WAAO,IAAD,EAC6B,EAAKttC,MAAzC4O,EADO,EACPA,OAAQwjD,EADD,EACCA,QAAS7E,EADV,EACUA,OAAQzU,EADlB,EACkBA,OADlB,EAE2C,EAAKx5C,MAAvDqxD,EAFO,EAEPA,YAAa2B,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,UAAWC,EAF3B,EAE2BA,YAEpCjnD,EAAU,EAAK0mD,WAAW95C,QAChC,GAAK5M,EAAL,CALe,IAOPhB,EAAcgB,EAAdhB,UAERgB,EAAQiO,UAAY,KATL,MAWYi5C,aAAYloD,GAEjC+N,EAAU,CACZ,QAAS,gBACThG,KAfW,EAWPA,KAKJiG,SAhBW,EAWDA,UASd,GADkB6O,QAAQupC,GACX,CACX,GAAI4B,EAAW,CAAC,IACJ5iD,EAAU4iD,EAAV5iD,MACR,IAAKA,EAAO,OAFD,IAIHkI,EAAUlI,EAAVkI,MACR,IAAKA,EAAO,OAEZ,IAAM9I,EAAO8I,EAAMA,EAAMxD,OAAS,GAE1BpH,EAAkB8B,EAAlB9B,MAAOgC,EAAWF,EAAXE,OAUf6pC,EAAO,KARS,CACZ,QAAS,oBACTnpC,MAAO,CAAE,QAAS,gBAAiB2gC,KAAMgiB,EAAShiB,KAAMliB,KAAMkkC,GAC9DrlD,QACAgC,SACAqJ,iBAKJwgC,EAAOxgC,EAAS,MAGpBo6C,aAAkB9jD,EAAQ,OACvB,CAAC,IACI+jD,EAAgBP,EAAhBO,MAAO7pD,EAASspD,EAATtpD,KACP8pD,EAA2BD,EAA3BC,MAAOjjD,EAAoBgjD,EAApBhjD,MAAOlM,EAAakvD,EAAblvD,SAElBmU,EAAU,KACd,GAAIjI,EAAO,CAAC,IACAkI,EAAUlI,EAAVkI,MACR,IAAKA,EAAO,OAEZ,IAAM9I,EAAO8I,EAAMA,EAAMxD,OAAS,GAE1BpH,EAAkB8B,EAAlB9B,MAAOgC,EAAWF,EAAXE,OAEf2I,EAAU46C,EACJ,CACE,QAAS,oBACT7iD,MAAO,CAAE,QAAS,gBAAiB2gC,KAAMxnC,EAAKwnC,KAAMliB,KAAMtlB,GAC1DmE,QACAgC,SACAqJ,WAEF,CACE,QAAS,uBACT7U,SAAU,CAAE,QAAS,gBAAiB6sC,KAAMxnC,EAAKwnC,KAAMliB,KAAMtlB,GAC7DiQ,UAAW,KACXT,gBAEL,GAAI7U,EACPmU,EAAU,CACN,QAAS,uBACTnU,SAAU,CAAE,QAAS,gBAAiB6sC,KAAMxnC,EAAKwnC,KAAMliB,KAAMtlB,GAC7DiQ,UAAW,KACXT,gBAED,GAAIs6C,EAAO,CAAC,IACP3xD,EAA+B2xD,EAA/B3xD,SAAU6b,EAAqB81C,EAArB91C,MAAO+1C,EAAcD,EAAdC,UAEzBj7C,EAAU,CACN,QAAS,oBACTg7C,MAAO,CAAE,QAAS,gBAAiBtiB,KAAMxnC,EAAKwnC,KAAMliB,KAAMtlB,GAC1DiQ,UAAW,KACX9X,WACA6b,QACA+1C,YACAv6C,WAGR,IAAKV,EAAS,OAEd21C,EAAO31C,EAAS9O,MA/ML,EAmNnBulC,aAAe,WAAO,IAAD,EACuB,EAAKruC,MAArC4O,EADS,EACTA,OAAQsW,EADC,EACDA,UAAWsqC,EADV,EACUA,SAErB34C,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACvBkC,QAAQvQ,IAGtB67C,aAAkB9jD,EAAQ,GAG9B4gD,KA7Ne,EAgOnBxoC,cAAgB,SAAAziB,GAAU,IACduuD,EAAgFvuD,EAAhFuuD,OAAQC,EAAwExuD,EAAxEwuD,QAA6BC,GAA2CzuD,EAA/D+S,IAA+D/S,EAA1DmV,QAA0DnV,EAAjD0uD,KAAiD1uD,EAA3CyuD,SAAS3G,EAAkC9nD,EAAlC8nD,SAAU6G,EAAwB3uD,EAAxB2uD,OAAQ5sD,EAAgB/B,EAAhB+B,YAIxE,GADwBA,EAAhB4iC,YAEJ3kC,EAAM2C,uBAIV,OAAQZ,EAAY2sD,MAChB,IAAK,QACL,IAAK,cAEIH,KAAWC,GAAWC,GAAW3G,IAAc6G,EAO1CJ,GAAWC,GAAYC,GAAY3G,GAAa6G,IACtD,EAAK5lB,aAEL/oC,EAAM8B,iBACN9B,EAAM2C,oBAVNzD,SAASoQ,YAAY,mBAErBtP,EAAM8B,iBACN9B,EAAM2C,mBASV,MAGJ,IAAK,OACI4rD,IAAWC,IAAWC,GAAa3G,GAAa6G,IACjD,EAAKC,aAEL5uD,EAAM8B,iBACN9B,EAAM2C,mBAEV,MAGJ,IAAK,OACI4rD,IAAWC,IAAWC,GAAa3G,GAAa6G,IACjD,EAAKE,eAEL7uD,EAAM8B,iBACN9B,EAAM2C,mBAEV,MAEJ,IAAK,OAEI4rD,IAAWC,IAAWC,GAAa3G,GAAa6G,GAO5CJ,IAAWC,IAAWC,GAAa3G,GAAa6G,IACrD,EAAKG,aAEL9uD,EAAM8B,iBACN9B,EAAM2C,oBAVN,EAAKosD,YAEL/uD,EAAM8B,iBACN9B,EAAM2C,mBASV,MAGJ,IAAK,QACG4rD,IAAWC,IAAWC,GAAa3G,GAAa6G,IAChD,EAAKK,cAELhvD,EAAM8B,iBACN9B,EAAM2C,qBAxSH,EA+SnBqsD,YAAc,WACV9vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,OAjTvB,EAoTnBs/C,WAAa,WACT1vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtCpQ,SAASoQ,YAAY,QAAQ,EAAO,OAxTrB,EA2TnBu/C,aAAe,WACX3vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtCpQ,SAASoQ,YAAY,UAAU,EAAO,OA/TvB,EAkUnBw/C,WAAa,WACT5vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtC,IAAIvB,EAAO,GACH6pB,EALO,gBAKPA,UACJA,IAAcA,EAAUwuB,cACxBr4C,EAAO6pB,EAAUsuB,YAGhBn4C,IACLA,EAAI,gBAAYA,EAAZ,WACJ7O,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,cAAc,EAAOvB,KA/U3B,EAkVnBkhD,gBAAkB,WACd/vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtCpQ,SAASoQ,YAAY,aAAa,EAAO,OAtV1B,EAyVnB4/C,oBAAsB,WAClBhwD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtCpQ,SAASoQ,YAAY,iBAAiB,EAAO,OA7V9B,EAgWnBy/C,UAAY,WACR,EAAKI,qBAjWU,EAoWnBA,kBAAoB,WAChB,IAAIxE,EAAc,GACdC,EAAa,GAFK,kBAIdhzB,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACF43B,EAAiC53B,EAAjC43B,eACN,GAAIA,IADmC53B,EAAjB63B,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/B5E,EAAc2E,EAAcr6C,UAC5B21C,EAAa0E,EAAcE,OAKlC7E,IAAe/yB,GAAcA,EAAUwuB,cACxCuE,EAAc/yB,EAAUsuB,YAG5B,EAAKxqD,SAAS,CACV+zD,aAAa,EACb7E,aACAD,iBA3XW,EA+XnB+E,mBAAqB,WACjB,EAAKh0D,SACD,CACI+zD,aAAa,GAEjB,WACI,EAAKE,sBArYE,EAianBhtC,YAAc,SAAA3iB,GACV,IAAMmW,EAAYnW,EAAMoW,cAAcC,QAAQ,cAC1CF,IACAnW,EAAM8B,iBACN5C,SAASoQ,YAAY,cAAc,EAAO6G,KAra/B,EAyanBknB,YAAc,WACV,EAAKuyB,kBA1aU,EAubnBC,oBAAsB,WAClB,EAAKH,sBAxbU,EA2bnBI,kBAAoB,SAAC/hD,EAAMiZ,GACvB,EAAK0oC,qBACLjsD,WAAW,WAAM,IAEL+zB,EAFK,gBAELA,MACR,GAAIA,EAAO,CAAC,IACA43B,EAAiC53B,EAAjC43B,eAAgBC,EAAiB73B,EAAjB63B,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAOxoC,EAClB+oC,EAAWx3C,MAAQyO,EACnB+oC,EAAW96C,UAAYlH,EAHoB,IAMnC04C,EAAcsJ,EAAdtJ,UACR,GAAIA,EAAW,CACX,IAAMjvB,EAAQt4B,SAASu4B,cACvBD,EAAME,SAAS+uB,EAAWA,EAAUuJ,YAAYlgD,QAChD0nB,EAAMy4B,OAAOxJ,EAAWA,EAAUuJ,YAAYlgD,QAE9C,IAAM8nB,EAAY14B,SAAS24B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,IAAMplB,EAAI,kBAAc4U,EAAd,kBAA2BA,EAA3B,sDAA4EjZ,EAA5E,QACV7O,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,cAAc,EAAO8C,IAC3C,IA7dY,EAgenB89C,gBAAkB,SAAAlwD,GACd,IAAMgH,EAAU,EAAKmpD,aAAav8C,QAC7B5M,GAELA,EAAQwjC,SApeO,EAuenB4lB,wBAvemB,qBAueO,sCAAApiD,EAAA,wDAChBhH,EAAU,EAAKmpD,aAAav8C,QADZ,oDAKD,KADbulB,EAAUnyB,EAAVmyB,OACErpB,OALY,sDAOE+yB,MAAM7kC,KAAKm7B,GAPb,kBAOf50B,EAPe,gBAQjBA,EARiB,kEAUE8rD,aAAsB9rD,GAVxB,QAUhBypD,EAVgB,OAYtB,EAAKtyD,SAAS,CACVqyD,SAAUxpD,EACVypD,cAGJhnD,EAAQjE,MAAQ,GAjBM,0CAveP,EA2fnButD,kBAAoB,WAAO,IACfrC,EAAgB,EAAKlzD,MAArBkzD,YAER,EAAKvyD,SAAS,CACVuyD,aAAcA,KA5flB,EAAKP,WAAanxD,IAAMsa,YACxB,EAAKs5C,aAAe5zD,IAAMsa,YAE1B,EAAK9b,MAAQ,GANE,E,iFA+CfmE,SAAS8F,iBAAiB,kBAAmBhJ,KAAKyxD,uBAAuB,K,6CAIzEvuD,SAASgG,oBAAoB,kBAAmBlJ,KAAKyxD,uBAAuB,K,uCAwC/DxgB,GAAgB,IACrBnhC,EAAM9P,KAAKP,MAAXqQ,EACF9E,EAAUhL,KAAK0xD,WAAW95C,QAEhC,GAAKq5B,EAAL,CAJ4B,IASpBl/B,EAAmBk/B,EAAnBl/B,KAAMiG,EAAai5B,EAAbj5B,SACd,IACI,IAAMu8C,EAAQC,aAASziD,EAAMiG,EAAUlI,GACvC9E,EAAQhB,UAAY,KACpBuqD,EAAMxyD,QAAQ,SAAAT,GACV0J,EAAQf,YAAY3I,KAE1B,MAAO8K,GACLpB,EAAQiO,UAAYlH,QAZpB/G,EAAQiO,UAAY,O,sCA2SxBjZ,KAAK47B,UAAY14B,SAAS24B,eACrB77B,KAAK47B,WACL57B,KAAK47B,UAAU64B,aAEpBz0D,KAAKw7B,MAAQx7B,KAAK47B,UAAU84B,WAAW,M,yCAGvB,IACRl5B,EAAUx7B,KAAVw7B,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAY14B,SAAS24B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBx7B,KAAK0xD,WAAW95C,QAAQxE,aARpBmoB,O,uCAwBJ,IAAMvwB,EAAUhL,KAAK0xD,WAAW95C,QAChC,GAAK5M,EAAL,CAFa,IAILhB,EAAcgB,EAAdhB,UACU,SAAdA,GAAsC,oBAAdA,IACxBgB,EAAQhB,UAAY,S,+BAgFlB,IAAD,EAC2ChK,KAAKP,MAA7C4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAAWktC,EADtB,EACsBA,QAAS52C,EAD/B,EAC+BA,KAAMnL,EADrC,EACqCA,EADrC,EAEiF9P,KAAKjB,MAAnF4vD,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,WAAY6E,EAF5B,EAE4BA,YAAarD,EAFzC,EAEyCA,YAAa4B,EAFtD,EAEsDA,UAAWC,EAFjE,EAEiEA,YACtE,IAAKh3C,EAAM,OAAO,KAElB,IAAM3E,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACnCgwC,EAAY9tC,QAAQvQ,GACtBs+C,GAAU,EACV/C,GAAWA,EAAQO,OAAoC,iBAA3BP,EAAQO,MAAM,SAC1CwC,GAAU,EACH5C,GAAoC,iBAAvBA,EAAU,SAC9B4C,GAAU,EACHxE,GAAgD,iBAAjCA,EAAY/4C,QAAQ,WAC1Cu9C,GAAU,GAGd,IAAIxC,EAAQ,KACRuC,EACAvC,EACAJ,EACM/rC,aAAS,CAAE5O,QAAS26C,IACpB/rC,aAAS3P,EAAS,MACjBu7C,IACPO,EAAQnsC,aAAS,CAAE5O,QAASw6C,EAAQO,SAExC,IAAMyC,EAAwB/kD,EAAZ6kD,EAAc,OAAY,QAE5C,OACI,kBAAC,IAAD,CACIz5C,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAASrb,KAAK8tC,aACdxyB,kBAAgB,0BAChB2qC,QAASjmD,KAAK4xD,aACd,yBAAK3xD,UAAU,6BACX,yBAAKyD,MAAO,CAAEyrC,OAAQ,KAAOijB,GAC3BuC,GACE,oCACI,kBAAC79C,EAAA,EAAD,CACI0oC,eAAe,EACfxoC,aAAYlH,EAAE,QACd7P,UAAU,gCACVuO,KAAK,QACLnC,QAASrM,KAAKk0D,iBACd,kBAAC,KAAD,CAAUrjD,SAAS,aAEvB,2BACI2K,IAAKxb,KAAKm0D,aACVl0D,UAAU,yBACVwc,KAAK,OACLyyB,OAAO,UACP/hC,SAAUnN,KAAKo0D,4BAIxBO,GAAaC,GACZ,kBAACrZ,GAAA,EAAD,CAAYx0C,MAAOkrD,EAAa9kD,SAAUnN,KAAKs0D,kBAAmB5wD,MAAO,CAAEyrC,OAAQ,gBAC/E,kBAACqM,GAAA,EAAD,CAAkBz0C,OAAO,EAAM00C,QAAS,kBAACjK,GAAA,EAAD,CAAOv6B,MAAM,YAAakW,MAAOrd,EAAE,iBAC3E,kBAAC0rC,GAAA,EAAD,CAAkBz0C,OAAO,EAAO00C,QAAS,kBAACjK,GAAA,EAAD,CAAOv6B,MAAM,YAAakW,MAAOrd,EAAE,kBAIxF,yBACI0L,IAAKxb,KAAK0xD,WACVtyD,GAAG,4BACHqT,iBAAe,EACfgJ,gCAA8B,EAC9BC,YAAa5L,EAAE,WACf6L,UAAW3b,KAAKymB,cAChB5K,QAAS7b,KAAK2mB,YACd+a,QAAS1hC,KAAKqhC,cAElB,kBAACvlB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAK8tC,aAAc72B,MAAM,WACrCnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAK+sC,WAAY91B,MAAM,WACnC49C,IAGT,kBAAC,GAAD,CACI55C,KAAMw4C,EACN9E,YAAaA,EACbC,WAAYA,EACZvZ,OAAQr1C,KAAK8zD,kBACb7E,SAAUjvD,KAAK6zD,0B,gDA9kBCp0D,EAAOV,GAAQ,IACnCwwD,EAAaxwD,EAAbwwD,SACAt0C,EAAqCxb,EAArCwb,KAAM5M,EAA+B5O,EAA/B4O,OAAQsW,EAAuBllB,EAAvBklB,UAAWktC,EAAYpyD,EAAZoyD,QAEjC,GAAItC,IAAat0C,EAAM,CACnB,GAAIA,EAAM,CACN,IAAMm1C,EAAcj5C,KAAa1O,IAAI4F,EAAQsW,GACzCstC,GAAc,EAOlB,OANI7B,GAAgD,iBAAjCA,EAAY/4C,QAAQ,SACnC46C,GAAc,EACPJ,GAAWA,EAAQO,OAAoC,iBAA3BP,EAAQO,MAAM,WACjDH,GAAc,GAGX,CACH1C,UAAU,EACV0C,cACA7B,cACA4B,UAAW,KACXD,SAAU,MAGd,MAAO,CACHxC,UAAU,EACV0C,aAAa,EACb7B,YAAa,KACb4B,UAAW,KACXD,SAAU,MAKtB,OAAO,S,GA5CexxD,IAAMC,YA6mBrBiR,iBAAkB+/C,IClmBlB9zB,G,WA3BX,WAAYrvB,GAAS,oBACjBrO,KAAKqO,OAASA,EACdrO,KAAK80D,WAAa,K,sDAGZj+C,GACN,GAAK7W,KAAKqO,OAAV,CAEA,GAAIrO,KAAK80D,YAAc90D,KAAK80D,WAAW,WAAaj+C,EAAO,SAAU,CACjE,IAAIzV,EAAM,IAAI2tB,KAEd,GADA3tB,EAAI2zD,WAAW3zD,EAAI4zD,aAAeC,MAC9Bj1D,KAAKk1D,gBAAkBl1D,KAAKk1D,eAAiB9zD,EAC7C,OAIRpB,KAAK80D,WAAaj+C,EAClB7W,KAAKk1D,eAAiB,IAAInmC,KAE1B1vB,IAAgBC,KAAK,CACjB,QAAS,iBACTmQ,QAASzP,KAAKqO,OACdwI,OAAQA,S,wBCgBds+C,I,OAAoB50D,IAAMu0C,KAAK,kBAAM,uDAErCsgB,G,YACF,WAAY31D,GAAQ,IAAD,uBACf,4CAAMA,KAoHV41D,wBAA0B,WAElBnyD,SAAS4E,gBAAkB,EAAKwtD,cAAc19C,SAC9C,EAAK+5C,iBAxHM,EAgKnB4D,yBAA2B,SAAA1nD,GAAW,IAAD,EACH,EAAKpO,MADF,EACzB4O,OADyB,EACjBsW,UACE,EAAK5lB,MAAfo4C,MAGJ,EAAKz3C,SAAS,CAAEy3C,OAAO,GAAS,WAC5B1vC,WAAW,WACP,EAAK/H,SAAS,CAAEy3C,OAAO,KACxB,KAGP,EAAKz3C,SAAS,CAAEy3C,OAAO,KA3KZ,EA+KnBqe,wBAA0B,SAAA3nD,GAAW,IACzBsvB,EAAUtvB,EAAVsvB,MACHA,GAEL,EAAKs4B,gBAAgB5uB,MAAM7kC,KAAKm7B,KAnLjB,EAsLnBjV,uBAAyB,SAAAra,GAAW,IAAD,EACG,EAAK9O,MAA/BsP,EADuB,EACvBA,OAAQ8hD,EADe,EACfA,cACR1gD,EAAuC5B,EAAvC4B,QAASmJ,EAA8B/K,EAA9B+K,YAAa88C,EAAiB7nD,EAAjB6nD,aAEzBvF,GACAuF,GACDrnD,IAAWoB,IAC6B,IAAxCmJ,EAAY8B,QAAQy1C,IAExB,EAAKriB,gBA/LU,EAkMnB6nB,0BAA4B,SAAA9nD,GAAW,IAC3BQ,EAAsBR,EAAtBQ,OAAQsW,EAAc9W,EAAd8W,UAEhB,IAD0B,EAAK5lB,MAAvB62D,eAEJ,EAAK72D,MAAMsP,SAAWA,EAA1B,CAEKsW,EAGD,EAAKkxC,wBAFL,EAAKC,2BAKT,IAAMC,EAA8B,IAAdpxC,GAAmBqxC,aAAc3nD,EAAQsW,GAC/D,EAAKjlB,SACD,CACIywD,cAAexrC,EACfoxC,iBAEJ,WACS,EAAKh3D,MAAMg3D,gBACZ,EAAKE,iBACL,EAAK50B,cACL55B,WAAW,WACP,EAAK8zB,cACN,QA1NA,EAqQnB26B,0BAA4B,SAAAroD,GACJA,EAAZytC,SAGR,EAAK6a,aAzQU,EA4QnBC,yBAA2B,SAAAvoD,GAAW,IAC1B4B,EAAY5B,EAAZ4B,QADyB,EAEC,EAAK1Q,MAA/BsP,EAFyB,EAEzBA,OAFyB,EAEjBunD,eAGZvnD,IAAWoB,GAEf,EAAK4mD,aAnRU,EAsRnBC,4BAA8B,SAAAzoD,GAAW,IAClBktB,EAASltB,EAApB0oD,UACR,GAAKx7B,EAAL,CAFoC,IAI5Bw7B,EAAkDx7B,EAAlDw7B,UAAW/9C,EAAuCuiB,EAAvCviB,UAAW9L,EAA4BquB,EAA5BruB,MAAOgC,EAAqBqsB,EAArBrsB,OAAQhO,EAAaq6B,EAAbr6B,SAC7C,GAAK61D,EAAL,CAEA,IAAMvrD,EAAU,EAAKsqD,cAAc19C,QACnC,GAAK5M,EAAL,CAEAA,EAAQiO,UAAY,KAEpB,EAAK06C,mBAEL,IAAMt8C,EAAU,CACZ,QAAS,wBACTk/C,UAAW,CACP,QAAS,cACTn3D,GAAIm3D,EAAUn3D,IAElBsN,QACAgC,SACAhO,YAGJ,GAAI8X,EAAW,CAAC,IACGg+C,EAAkDh+C,EAAzD9L,MAA+B+pD,EAA0Bj+C,EAAlC9J,OAAyBnG,EAASiQ,EAATjQ,KAExD8O,EAAQmB,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACTpZ,GAAImJ,EAAKnJ,IAEbsN,MAAO8pD,EACP9nD,OAAQ+nD,GAIhB,EAAKC,YAAYr/C,GAAS,EAAO,SAAA7X,UA7TlB,EAgUnBm3D,0BAA4B,SAAA9oD,GAAW,IAClBktB,EAASltB,EAAlB1O,QACR,GAAK47B,EAAL,CAFkC,IAI1B57B,EAAsC47B,EAAtC57B,QAASqZ,EAA6BuiB,EAA7BviB,UAAW9L,EAAkBquB,EAAlBruB,MAAOgC,EAAWqsB,EAAXrsB,OACnC,GAAKvP,EAAL,CAEA,IAAM6L,EAAU,EAAKsqD,cAAc19C,QACnC,GAAK5M,EAAL,CAEAA,EAAQiO,UAAY,KAEpB,EAAK06C,mBAEL,IAAMt8C,EAAU,CACZ,QAAS,sBACTlY,QAAS,CACL,QAAS,cACTC,GAAID,EAAQC,IAEhBsN,QACAgC,UAGJ,GAAI8J,EAAW,CAAC,IACGg+C,EAAkDh+C,EAAzD9L,MAA+B+pD,EAA0Bj+C,EAAlC9J,OAAyBnG,EAASiQ,EAATjQ,KAExD8O,EAAQmB,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACTpZ,GAAImJ,EAAKnJ,IAEbsN,MAAO8pD,EACP9nD,OAAQ+nD,GAIhB,EAAKC,YAAYr/C,GAAS,EAAO,SAAA7X,MAEjCH,IAAgByF,aAAa,CACzB,QAAS,gCACT08B,KAAM,WA1WK,EA8WnBo1B,oBAAsB,SAAA/oD,GAAW,IAAD,EACqB,EAAK9O,MAAtCk0B,EADY,EACpB5kB,OAAuBunD,EADH,EACGA,cACvBvnD,EAAsBR,EAAtBQ,OAAQsW,EAAc9W,EAAd8W,UAEZsO,IAAkB5kB,IAItB,EAAK3O,SAAS,CAAEm3D,iBAAkBlyC,IAE9BA,IAAcixC,GACd,EAAKkB,kBAzXM,EA6XnB3mC,qBAAuB,SAAAtiB,GACA,EAAK9O,MAAhBsP,SACOR,EAAOuiB,aAEtB,EAAK+lC,YACL,EAAKY,eAAiB,KACtB,EAAKr3D,SACD,CACI2O,OAAQR,EAAOuiB,WACfymC,iBAAkBG,YAA6BnpD,EAAOuiB,YACtD+/B,cAAe,EACfsD,aAAa,GAEjB,WACI,EAAK4C,cAIb,EAAKY,uBA/YU,EAkZnBC,SAAW,WAAO,IACN7oD,EAAW,EAAKtP,MAAhBsP,OAEFrD,EAAU,EAAKsqD,cAAc19C,QAE7Bq5B,EAAgBpd,YAAaxlB,GAC/B4iC,GACA,EAAK6gB,iBAAiB7gB,GACtB,EAAKvxC,SAAS,CACVm3D,iBAAkBG,YAA6B3oD,MAGnDrD,EAAQiO,UAAY,MA9ZT,EA8cnB69C,cAAgB,WACc,EAAK/3D,MAAvB62D,eAGRnuD,WAAW,WAGP8zB,GAFgB,EAAK+5B,cAAc19C,UAGpC,MAtdY,EAydnBu/C,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9B/oD,EAAyB+oD,EAAzB/oD,OAAQgpD,EAAiBD,EAAjBC,aACXhpD,GAELhP,IAAgBC,KAAK,CACjB,QAAS,sBACTmQ,QAASpB,EACTipD,cAAeD,MAleJ,EAsenBE,gBAAkB,SAAClpD,EAAQwoD,EAAkB7sD,GACzC,IAAMkF,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAAL,CAFuD,IAI/CooD,EAAkBpoD,EAAlBooD,cAJ+C,EAK5BpF,aAAYloD,GAA/B+H,EAL+C,EAK/CA,KAAMiG,EALyC,EAKzCA,SACRq/C,EACDtlD,GAAQA,EAAK+B,OAAS,GAAMkE,EAASlE,OAAS,EACzC,CACI,QAAS,eACTmE,oBAAqB4+C,EACrBW,mBAAoB,CAChB,QAAS,mBACTzlD,KAAM,CACF,QAAS,gBACTA,OACAiG,YAEJM,0BAA0B,EAC1BC,aAAa,IAGrB,KAEV,OAAIk/C,YAAYH,EAAeD,GACpB,KAGJ,CAAEhpD,SAAQgpD,kBAlgBF,EAqgBnBK,aAAe,WAAyB,IAAxBC,IAAuB,2DACgD,EAAK54D,MAAhFsP,EAD2B,EAC3BA,OAAQ8hD,EADmB,EACnBA,cAAiCyH,GADd,EACJf,iBADI,EACce,gBAAgBhC,EAD9B,EAC8BA,cAEjE,GAAIA,EAAJ,CACI,GAAK,IAAI7mC,KAAS6mC,EAAiBiC,KAC/B,OAGJ,EAAKC,wBAEF,GAAIF,EACHD,GAAa,EAAKI,mBADnB,CAKP,IAAM/sD,EAAU,EAAKsqD,cAAc19C,QACnC,GAAK5M,EAAL,CAhBmC,IAkB7BhB,EAAcgB,EAAdhB,UAKN,GAHAgB,EAAQiO,UAAY,KACpB,EAAKooB,cAEAr3B,GACAA,EAAUsP,OAAf,CAxBmC,MA0BR44C,aAAYloD,GAA/B+H,EA1B2B,EA0B3BA,KAAMiG,EA1BqB,EA0BrBA,SAERi5B,EAAgB,CAClB,QAAS,gBACTl/B,OACAiG,YAEEggD,EAAe,CACjB,QAAS,mBACTjmD,KAAMk/B,EACN34B,0BAA0B,EAC1BC,aAAa,GAGjB,GAAI43C,EAAe,CACf,IAAM8H,EAAgB9gD,KAAa1O,IAAI4F,EAAQ8hD,GAC/C,IAAK8H,EAAe,OAFL,IAIP5gD,EAAY4gD,EAAZ5gD,QACR,IAAKA,EAAS,OALC,IAOPtF,EAAkBsF,EAAlBtF,KAAMgG,EAAYV,EAAZU,QACVhG,EACA,EAAKmmD,gBAAgBF,EAAc,SAAAx4D,MAC5BuY,GACP,EAAKogD,mBAAmBlnB,GAE5Bmf,aAAY/hD,EAAQ,QAEpB,EAAKqoD,YAAYsB,GAAc,EAAO,SAAAx4D,UA5jB3B,EAgkBnBqpD,iBAAmB,WACfxpD,IAAgByF,aAAa,CACzB,QAAS,yBAlkBE,EAskBnB0jD,kBAAoB,WACX,EAAKja,gBAEV,EAAKA,eAAe32B,QAAQ42B,SAzkBb,EAgmBnB4pB,0BAhmBmB,qBAgmBS,oCAAApmD,EAAA,wDAEH,KADbmrB,EAAU,EAAKoR,eAAe32B,QAA9BulB,OACErpB,OAFc,oDAIH,IAAjBqpB,EAAMrpB,OAJc,sBAKS+yB,MAAM7kC,KAAKm7B,GALpB,kBAKZk7B,EALY,gBAMfA,EANe,iEAQE,EAAKC,WAAWD,GAAS,GAR3B,OAQdxG,EARc,OAUpB,EAAKnyD,SAAS,CACVq2D,eAAe,EACflE,YAZgB,wBAepBhrB,MAAM7kC,KAAKm7B,GAAOp7B,QAAlB,sCAA0B,WAAMwG,GAAN,uBAAAyJ,EAAA,qEACQ08B,YAAcnmC,GADtB,mCACfmE,EADe,KACRgC,EADQ,KAGhB2I,EAAU,CACZ,QAAS,oBACTjI,MAAO,CAAE,QAAS,gBAAiB2gC,KAAMxnC,EAAKwnC,KAAMvhC,KAAMjG,EAAKiG,KAAMqf,KAAMtlB,GAC3EmE,QACAgC,UAGJ,EAAK6pD,gBAAgBlhD,EAAS9O,GAVR,yCAA1B,uDAfoB,QA6BxB,EAAKgmC,eAAe32B,QAAQ7Q,MAAQ,GA7BZ,0CAhmBT,EAgoBnB4hD,qBAAuB,WACd,EAAK6P,mBAEV,EAAKA,kBAAkB5gD,QAAQ42B,SAnoBhB,EAsoBnBiqB,6BAtoBmB,qBAsoBY,oCAAAzmD,EAAA,wDAEN,KADbmrB,EAAU,EAAKq7B,kBAAkB5gD,QAAjCulB,OACErpB,OAFiB,oDAIN,IAAjBqpB,EAAMrpB,OAJiB,sBAKM+yB,MAAM7kC,KAAKm7B,GALjB,kBAKfk7B,EALe,gBAMlBA,EANkB,iEAQD,EAAKC,WAAWD,GAAS,GARxB,OAQjBxG,EARiB,OAUvB,EAAKnyD,SAAS,CACVq2D,eAAe,EACflE,YAZmB,wBAevBhrB,MAAM7kC,KAAKm7B,GAAOp7B,QAAQ,SAAAwG,GACtB,IAAM8O,EAAU,CACZ,QAAS,uBACTnU,SAAU,CAAE,QAAS,gBAAiB6sC,KAAMxnC,EAAKwnC,KAAMvhC,KAAMjG,EAAKiG,KAAMqf,KAAMtlB,IAGlF,EAAKmwD,mBAAmBrhD,EAAS9O,KArBd,QAyB3B,EAAKiwD,kBAAkB5gD,QAAQ7Q,MAAQ,GAzBZ,0CAtoBZ,EAwvBnBisD,YAAc,WACV9vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,OA1vBvB,EA6vBnBs/C,WAAa,WACT1vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtCpQ,SAASoQ,YAAY,QAAQ,EAAO,OAjwBrB,EAowBnBu/C,aAAe,WACX3vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtCpQ,SAASoQ,YAAY,UAAU,EAAO,OAxwBvB,EA2wBnBw/C,WAAa,WACT5vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtC,IAAIvB,EAAO,GACH6pB,EALO,gBAKPA,UACJA,IAAcA,EAAUwuB,cACxBr4C,EAAO6pB,EAAUsuB,YAGhBn4C,IACLA,EAAI,gBAAYA,EAAZ,WACJ7O,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,cAAc,EAAOvB,KAxxB3B,EA2xBnBkhD,gBAAkB,WACd/vD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtCpQ,SAASoQ,YAAY,aAAa,EAAO,OA/xB1B,EAkyBnB4/C,oBAAsB,WAClBhwD,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,UAAU,EAAO,MAEtCpQ,SAASoQ,YAAY,iBAAiB,EAAO,OAtyB9B,EAyyBnBy/C,UAAY,WACR,EAAKI,qBA1yBU,EA6yBnBrlB,aAAe,WAAO,IAAD,EACmC,EAAK/uC,MAAjDsP,EADS,EACTA,OAAQ8hD,EADC,EACDA,cAAe0G,EADd,EACcA,iBAC/B,OAAI1G,GACAC,aAAY/hD,EAAQ,IACb,KACAwoD,IACPxG,aAAahiD,EAAQ,IACd,IApzBI,EA0zBnBoY,cAAgB,SAAAziB,GAAU,IACduuD,EAAoFvuD,EAApFuuD,OAAQC,EAA4ExuD,EAA5EwuD,QAASz7C,EAAmE/S,EAAnE+S,IAAKoC,EAA8DnV,EAA9DmV,QAASw/C,EAAqD30D,EAArD20D,SAAUlG,EAA2CzuD,EAA3CyuD,QAAS3G,EAAkC9nD,EAAlC8nD,SAAU6G,EAAwB3uD,EAAxB2uD,OAAQ5sD,EAAgB/B,EAAhB+B,YADvD,EAEuB,EAAKhH,MAAzCoxD,EAFa,EAEbA,cAAe0G,EAFF,EAEEA,iBAWvB,GATAzkD,QAAQo0B,IAAI,wBAAyBzvB,EAAKoC,EAASw/C,EAAUpG,EAAQC,EAASC,EAAS3G,EAAU6G,EAAQ3uD,EAAO+B,EAAaA,EAAY4iC,aAEzIlhC,WAAW,WAAO,IACNwR,EAAc,EAAKq8C,cAAc19C,QAAjCqB,UACR7G,QAAQo0B,IAAI,eAAgBvtB,EAAUnF,OAAQ,aAAImF,GAAW5D,IAAI,SAAA/T,GAAC,MAAK,CAAEs3D,MAAOt3D,EAAGoxD,KAAMpxD,EAAE8qB,WAAW,QACvG,MAGqBrmB,EAAhB4iC,YAKR,OAAQ5iC,EAAY2sD,MAEhB,IAAK,SACD,GAAIH,GAAUC,IAAYC,IAAY3G,EAAU,CAC5C,GAAIqE,EAAe,OACnB,GAAI0G,EAAkB,OAEtB7yD,EAAM8B,iBAEV,MAEJ,IAAK,QACL,IAAK,cAEIysD,KAAWC,GAAWC,GAAW3G,IAAc6G,EAO1CJ,GAAWC,GAAYC,GAAY3G,GAAa6G,IACtD,EAAK+E,cAAa,GAElB1zD,EAAM8B,iBACN9B,EAAM2C,oBAVNzD,SAASoQ,YAAY,mBAErBtP,EAAM8B,iBACN9B,EAAM2C,mBASV,MAGJ,IAAK,SACI4rD,GAAWC,GAAYC,GAAY3G,IAC/B6G,GAAU,EAAK7kB,iBAChB9pC,EAAM8B,iBACN9B,EAAM2C,mBAGd,MAGJ,IAAK,UACD,IAAKgsD,IAAWJ,IAAWC,IAAYC,IAAY3G,EAAU,CACzD,IAAM9gD,EAAU,EAAKsqD,cAAc19C,QACnC,GAAI5M,IAAYA,EAAQiO,UAAW,CAE/B,GAD0B,EAAKla,MAAvBoxD,cACW,OAEnB9wD,IAAgByF,aAAa,CACzB,QAAS,+BAGbd,EAAM8B,iBACN9B,EAAM2C,mBAGd,MAGJ,IAAK,OACI4rD,IAAWC,IAAWC,GAAa3G,GAAa6G,IACjD,EAAKC,aAEL5uD,EAAM8B,iBACN9B,EAAM2C,mBAEV,MAGJ,IAAK,OACI4rD,IAAWC,IAAWC,GAAa3G,GAAa6G,IACjD,EAAKE,eAEL7uD,EAAM8B,iBACN9B,EAAM2C,mBAEV,MAEJ,IAAK,OAEI4rD,IAAWC,IAAWC,GAAa3G,GAAa6G,GAO5CJ,IAAWC,IAAWC,GAAa3G,GAAa6G,IACrD,EAAKG,aAEL9uD,EAAM8B,iBACN9B,EAAM2C,oBAVN,EAAKosD,YAEL/uD,EAAM8B,iBACN9B,EAAM2C,mBASV,MAGJ,IAAK,QACG4rD,IAAWC,IAAWC,GAAa3G,GAAa6G,IAChD,EAAKK,cAELhvD,EAAM8B,iBACN9B,EAAM2C,qBA/6BH,EAs7BnB4xD,gBAAkB,SAAClhD,EAAS9O,GACnB8O,GAEL,EAAKq/C,YAAYr/C,GAAS,EAAM,SAAA7X,GAC5B,IAAMq5D,EAAgB1hD,KAAa1O,IAAIjJ,EAAOiQ,QAASjQ,EAAOJ,IACzC,MAAjBy5D,GACA,EAAKC,qBAAqBD,EAAetwD,GAG7CC,IAAUuwD,WAAWv5D,EAAO6X,QAAQjI,MAAMkI,MAAM,GAAGlI,MAAMhQ,GAAII,MA/7BlD,EAm8BnBw5D,eAAiB,SAAA3N,GACb,EAAKqL,YAAYrL,GAAM,EAAM,eAp8Bd,EAu8BnBqN,mBAAqB,SAACrhD,EAAS9O,GACtB8O,GAEL,EAAKq/C,YAAYr/C,GAAS,EAAM,SAAA7X,GAAM,OAAIgJ,IAAUuwD,WAAWv5D,EAAO6X,QAAQnU,SAASA,SAAS9D,GAAII,MA18BrF,EA68BnBy5D,gBAAkB,SAAC5hD,EAAS9O,GACnB8O,GAEL,EAAKq/C,YAAYr/C,GAAS,EAAM,SAAA7X,GAAM,OAAIgJ,IAAUuwD,WAAWv5D,EAAO6X,QAAQg7C,MAAMA,MAAMjzD,GAAII,MAh9B/E,EAm9BnB05D,oBAAsB,SAAC7hD,EAAS9O,GACvB8O,GAEL,EAAKq/C,YAAYr/C,GAAS,EAAM,SAAA7X,GAAM,OAAIgJ,IAAUuwD,WAAWv5D,EAAO6X,QAAQyY,WAAWN,MAAMpwB,GAAII,MAt9BpF,EA0+BnBmnB,YA1+BmB,sCA0+BL,WAAM3iB,GAAN,qBAAAgO,EAAA,0DACQhO,EAAMoW,eAAiBpW,EAAMm1D,cAAc/+C,cAArDkJ,EADE,EACFA,MADE,oDAIJ6Z,EAAQ,GACd0J,MAAM7kC,KAAKshB,GAAOvhB,QAAQ,SAAAg5B,GACtB,GAAkC,IAA9BA,EAAKq+B,KAAK1+C,QAAQ,QAAe,CACjC,IAAMnS,EAAOwyB,EAAKs+B,YACd9wD,GACA40B,EAAMnoB,KAAKzM,QAKnB40B,EAAMrpB,OAAS,GAdT,uBAeN9P,EAAM8B,iBAEN,EAAK2vD,gBAAgBt4B,GAjBf,+BAqBJhjB,EAAYnW,EAAMoW,cAAcC,QAAQ,eArBpC,wBAuBNrW,EAAM8B,iBACN5C,SAASoQ,YAAY,cAAc,EAAO6G,GAxBpC,6DA1+BK,wDAugCnBm/C,mBAAqB,WAAO,IAChBn8B,EAAU,EAAKp+B,MAAfo+B,MACHA,GACAA,EAAMrpB,SAEXqpB,EAAMp7B,QAAQ,SAAAwG,GACV,IAAM8O,EAAU,CACZ,QAAS,uBACTnU,SAAU,CAAE,QAAS,gBAAiB6sC,KAAMxnC,EAAKwnC,KAAMliB,KAAMtlB,IAGjE,EAAKmwD,mBAAmBrhD,EAAS9O,KAGrC,EAAKgxD,sBArhCU,EAwhCnBA,kBAAoB,WAChB,EAAK75D,SAAS,CAAEy9B,MAAO,QAzhCR,EA4hCnBq8B,yBAA2B,WACF,EAAKz6D,MAAlB06D,WAGR,EAAKpD,YACL,EAAKqD,4BAjiCU,EAoiCnBA,wBAA0B,WACtB,EAAKh6D,SAAS,CAAE+5D,SAAU,QAriCX,EAwiCnBX,qBAAuB,SAACxiD,EAAS2nB,GAC7B,GAAK3nB,EAAL,CADsC,IAG9BggB,EAAwChgB,EAAxCggB,cAAejf,EAAyBf,EAAzBe,QAAS5H,EAAgB6G,EAAhB7G,QAASrQ,EAAOkX,EAAPlX,GACzC,GAAKk3B,GAC0B,+BAA3BA,EAAc,UACO,iBAArBjf,EAAQ,SAAZ,CANsC,IAQ9BjI,EAAUiI,EAAVjI,MACR,GAAKA,EAAL,CAEA,IAAMZ,EAAOkf,YAAQte,EAAMkI,MAAO4W,KAClC,GAAK1f,EAAL,CAZsC,IAcvBjG,EAASiG,EAAhBY,MACH7G,IACDA,EAAK01B,OAET11B,EAAK01B,KAAOA,EACZz1B,IAAUmxD,gBAAgBlqD,EAASrQ,EAAImJ,EAAKnJ,WA3jC7B,EAinCnBs3D,YAjnCmB,sCAinCL,WAAOr/C,EAASuiD,EAAYzxC,GAA5B,qBAAAnW,EAAA,0DAC2B,EAAKjT,MAAlCsP,EADE,EACFA,OAAQwoD,EADN,EACMA,iBAEXxoD,EAHK,oDAILgJ,EAJK,0EAOA0b,KAAS8mC,sBAAT,0CAAkExrD,IAPlE,wBASehP,IAAgBC,KAAK,CACtC,QAAS,cACTmQ,QAASpB,EACT4J,oBAAqB4+C,EACrBx+C,sBAAuBhB,IAbrB,QASA7X,EATA,OAgBN,EAAKE,SAAS,CAAEm3D,iBAAkB,GAAK,WAC/B+C,GACA,EAAKzD,cAKb92D,IAAgBC,KAAK,CACjB,QAAS,eACTmQ,QAASpB,EACTuK,YAAa,CAACpZ,EAAOJ,MAGrBy3D,GACAxG,aAAahiD,EAAQ,GAGzB8Z,EAAS3oB,GAjCH,kDAmCNs6D,MAAM,qBAAuB19B,KAAKG,UAAL,OAnCvB,wDAjnCK,4DAwpCnBw9B,kBAAoB,SAAA/6D,GACXA,IAEL,EAAK20D,mBACLzwD,SAASoQ,YAAY,cAAc,EAAOtU,EAAMg7D,QAChD,EAAK34B,gBA7pCU,EAgqCnBA,YAhqCmB,sCAgqCL,WAAMr9B,GAAN,SAAAgO,EAAA,qDACV,EAAKioD,YACL,EAAKC,WACL,EAAKC,yBAHK,yCAhqCK,wDAorCnBhH,kBAAoB,WAChB,IAAIxE,EAAc,GACdC,EAAa,GAFK,kBAIdhzB,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACF43B,EAAiC53B,EAAjC43B,eACN,GAAIA,IADmC53B,EAAjB63B,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/B5E,EAAc2E,EAAcr6C,UAC5B21C,EAAa0E,EAAcE,OAKlC7E,IAAe/yB,GAAcA,EAAUwuB,cACxCuE,EAAc/yB,EAAUsuB,YAG5B,EAAKxqD,SAAS,CACV+zD,aAAa,EACb7E,aACAD,iBA3sCW,EA+sCnB+E,mBAAqB,WACjB,EAAKh0D,SACD,CACI+zD,aAAa,GAEjB,WACI,EAAKE,sBArtCE,EAivCnBp4B,WAAa,WACT,IAAMvwB,EAAU,EAAKsqD,cAAc19C,QACnC,GAAK5M,EACL,GAAKA,EAAQqwB,WAAWvnB,OAAxB,CAKA,IAAMsmD,EAAen/B,GAAiBjwB,GACtC,GAAKovD,EAAL,CAIA,IAAM5+B,EAAQt4B,SAASu4B,cACvBD,EAAME,SAAS0+B,EAAcA,EAAatmD,QAC1C0nB,EAAMG,UAAS,GAEf,IAAMC,EAAY7yB,OAAO8yB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBxwB,EAAQoI,cAjBJpI,EAAQoI,SArvCG,EAywCnBygD,oBAAsB,WAClB,EAAKH,sBA1wCU,EA6wCnBI,kBAAoB,SAAC/hD,EAAMiZ,GACvB,EAAK0oC,qBACLjsD,WAAW,WAAM,IAEL+zB,EAFK,gBAELA,MACR,GAAIA,EAAO,CAAC,IACA43B,EAAiC53B,EAAjC43B,eAAgBC,EAAiB73B,EAAjB63B,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAOxoC,EAClB+oC,EAAWx3C,MAAQyO,EACnB+oC,EAAW96C,UAAYlH,EAHoB,IAMnC04C,EAAcsJ,EAAdtJ,UACR,GAAIA,EAAW,CACX,IAAMjvB,EAAQt4B,SAASu4B,cACvBD,EAAME,SAAS+uB,EAAWA,EAAUuJ,YAAYlgD,QAChD0nB,EAAMy4B,OAAOxJ,EAAWA,EAAUuJ,YAAYlgD,QAE9C,IAAM8nB,EAAY14B,SAAS24B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,IAAMplB,EAAI,kBAAc4U,EAAd,kBAA2BA,EAA3B,sDAA4EjZ,EAA5E,QACV7O,SAASoQ,YAAY,gBAAgB,EAAO,MAC5CpQ,SAASoQ,YAAY,cAAc,EAAO8C,IAC3C,IA/yCY,EAkzCnBikD,sBAAwB,WACpB,EAAKC,wBAnzCU,EAszCnBpG,gBAAkB,SAACn8C,EAASV,GACpBA,EACA,EAAKkjD,iBAAiBljD,GAI1B,EAAK8gD,mBAAmBpgD,IA5zCT,EA+zCnByiD,gBAAkB,SAACnjD,EAAS9O,GAGxB,OAFA,EAAK+xD,sBAAqB,GAElBjjD,EAAQ,UACZ,IAAK,oBACD,EAAK4hD,gBAAgB5hD,EAAS9O,GAC9B,MAEJ,IAAK,oBACD,EAAKgwD,gBAAgBlhD,EAAS9O,GAC9B,MAEJ,IAAK,uBACD,EAAKmwD,mBAAmBrhD,EAAS9O,KA50C1B,EAs2CnBuY,kBAAoB,WAChBrZ,WAAW,kBAAM,EAAKksD,oBAAoB,IAv2C3B,EA02CnBmE,iBAAmB,WAAwB,IAAvB2C,EAAsB,wDACjC,EAAKC,WAEV,EAAKA,SAASD,UAAYA,EAC1B,EAAKC,SAASx4D,OACd,EAAKw4D,SAASC,OAAOC,iBAAiB74D,QAAQ,SAAAiL,GAAK,OAAIA,EAAM9K,WA/2C9C,EAk3CnB+0D,mBAAqB,WACjB,EAAKa,kBAAiB,IAn3CP,EAs3CnBC,aAt3CmB,qBAs3CJ,sCAAA/lD,EAAA,yDACP,EAAK0oD,SADE,wDAGPC,EAAS,KAHF,kBAKQ1oD,UAAU4oD,aAAaC,aAAa,CAAEzI,OAAO,IALrD,UAKPsI,EALO,QAMH,EAAKD,SANF,8GASNC,EATM,wBAUP,EAAKj7D,SAAS,CACVq7D,wBAAwB,IAXrB,2BAgBLC,EAAc,CAChBC,aAAc,EACdC,WAAY,MAGFP,EAAOC,iBAAiB,GAChCO,iBAAiBH,GAEjBr6D,EAAU,CAAEy6D,SAAU,yBAA0BC,mBAAoB,MACpEC,EAAgB,CAClBC,qBAAsB,WAClB,OAAO,IAAIC,OAAOC,6DAEtBC,uBAAwBD,2DAGtBf,EAAW,IAAIiB,KAAchB,EAAQh6D,EAAS26D,GAE9CM,EAAS,GAEflB,EAASmB,gBAAkB,SAAAzvD,GACvBwvD,EAAO5mD,KAAK5I,EAAEyhB,OAElB6sC,EAASoB,QAAU,aAGnBpB,EAASqB,OAAS,WACd18D,IAAgByF,aAAa,CAAE,QAAS,2BACxC,EAAKpF,SAAS,CAAEk2D,cAAe,OAFX,IAIZ6E,EAAc,EAAKC,SAAnBD,UAIR,GAHA,EAAKC,SAAW,KAEhB,EAAKrE,aACDoE,EAAJ,CAKA,IAAMx8B,EAAO,IAAI+9B,KAAKJ,EAAQ,CAAE,KAAS,2BACnCK,EAAWlzD,OAAOsiB,IAAI+iB,gBAAgBnQ,GAEtCo0B,EAAQ,IAAI6J,MAAMD,GACxB5J,EAAM7oD,UAAY,WACd,IAAM6N,EAAU,CACZ,QAAS,wBACTyY,WAAY,CAAE,QAAS,gBAAiBigB,KAAM,GAAIvhC,KAAMyvB,EAAKzvB,KAAMqf,KAAMoQ,GACzEv9B,SAAUgB,KAAKy6D,MAAM9J,EAAM3xD,UAC3B07D,SAAU,GACVrkD,QAAS,MAGb,EAAKmhD,oBAAoB7hD,EAAS4mB,MAG1Cy8B,EAAS57B,QAAU,WACfz/B,IAAgByF,aAAa,CAAE,QAAS,4BACxC,EAAKpF,SAAS,CAAEk2D,cAAe,OAE/B,EAAKS,aAIT,EAAKqE,SAAWA,EAChB,EAAKA,SAAS95D,MAAM,IACpB,EAAKK,UAAY,IAAI8tB,KAErB1vB,IAAgByF,aAAa,CAAE,QAAS,4BACxC,EAAKpF,SAAS,CAAEk2D,cAAe,IAAI7mC,OApFxB,wDAt3CI,EA68CnBstC,sBAAwB,WACpB,EAAK38D,SAAS,CACVq7D,wBAAwB,KA58C5B,EAAKvC,kBAAoBj4D,IAAMsa,YAC/B,EAAK0zB,eAAiBhuC,IAAMsa,YAC5B,EAAKy6C,cAAgB/0D,IAAMsa,YAE3B,IAAMxM,EAAS0kB,KAASsG,YAPT,OASf,EAAKt6B,MAAQ,CACTsP,SACAwoD,iBAAkBG,YAA6B3oD,GAC/C8hD,cAAe,EACfyH,gBAAgB,EAChBhC,cAAe,KACfmF,wBAAwB,EACxBuB,SAAU,MAGdp5D,SAASoQ,YAAY,6BAA6B,EAAO,MAnB1C,E,mFAsBGlD,EAAWC,GAAY,IACjCP,EAAM9P,KAAKP,MAAXqQ,EADgC,EAepC9P,KAAKjB,MAZLsP,EAHoC,EAGpCA,OACAorD,EAJoC,EAIpCA,SACAt8B,EALoC,EAKpCA,MACA05B,EANoC,EAMpCA,iBACA1G,EAPoC,EAOpCA,cACA4F,EARoC,EAQpCA,cACAtC,EAToC,EASpCA,YACA6I,EAVoC,EAUpCA,SACA1E,EAXoC,EAWpCA,eACAhC,EAZoC,EAYpCA,cACAmF,EAboC,EAapCA,uBACA5jB,EAdoC,EAcpCA,MAGJ,OAAI/mC,EAAUN,IAAMA,IAIhBO,EAAUhC,SAAWA,IAIrBgC,EAAUopD,WAAaA,IAIvBppD,EAAU8sB,QAAUA,IAIpB9sB,EAAUwmD,mBAAqBA,IAI/BxmD,EAAU8/C,gBAAkBA,IAI5B9/C,EAAUisD,WAAaA,IAIvBjsD,EAAUojD,cAAgBA,IAI1BpjD,EAAU0lD,gBAAkBA,IAI5B1lD,EAAUulD,gBAAkBA,IAI5BvlD,EAAUunD,iBAAmBA,IAI7BvnD,EAAU0qD,yBAA2BA,GAIrC1qD,EAAU8mC,QAAUA,e,kCAQxBn3C,KAAKk3D,WACLl3D,KAAK82D,gBACL92D,KAAKqhC,gB,kCAGI,IAAD,EAC4CrhC,KAAKjB,MAAjDsP,EADA,EACAA,OAAQ8hD,EADR,EACQA,cAAe0G,EADvB,EACuBA,iBAEzB7rD,EAAUhL,KAAKs1D,cAAc19C,QACnC,GAAK5M,EAAL,CAEA,IAAIhB,EAAY,KAEZA,EADAmmD,EACYnwD,KAAK+2D,eAAiB/2D,KAAK+2D,eAAe/sD,UAAY,KAEtDgB,EAAQhB,UAGxB,IAAMqtD,EAAer3D,KAAKu3D,gBAAgBlpD,EAAQwoD,EAAkB7sD,GACpEhK,KAAKm3D,oBAAoBE,M,0CAWzBn0D,SAAS8F,iBAAiB,kBAAmBhJ,KAAKq1D,yBAAyB,GAE3EkH,KAAejuD,GAAG,4BAA6BtO,KAAKs2D,6BACpDvjC,KAASzkB,GAAG,yBAA0BtO,KAAKu1D,0BAC3CxiC,KAASzkB,GAAG,qBAAsBtO,KAAKmwB,sBACvC4C,KAASzkB,GAAG,0BAA2BtO,KAAKk2D,2BAC5C/mD,IAAUb,GAAG,yBAA0BtO,KAAKo2D,0BAC5C5tD,IAAU8F,GAAG,wBAAyBtO,KAAKw1D,yBAC3Cr+C,KAAa7I,GAAG,0BAA2BtO,KAAK21D,2BAChDx+C,KAAa7I,GAAG,oBAAqBtO,KAAK42D,qBAC1Cz/C,KAAa7I,GAAG,uBAAwBtO,KAAKkoB,wBAC7Cs0C,KAAaluD,GAAG,0BAA2BtO,KAAK22D,2BAEhD32D,KAAKq2D,c,6CAILr2D,KAAKm2D,YAELoG,KAAehuD,IAAI,4BAA6BvO,KAAKs2D,6BACrDvjC,KAASxkB,IAAI,yBAA0BvO,KAAKu1D,0BAC5CxiC,KAASxkB,IAAI,qBAAsBvO,KAAKmwB,sBACxC4C,KAASxkB,IAAI,0BAA2BvO,KAAKk2D,2BAC7C/mD,IAAUZ,IAAI,yBAA0BvO,KAAKo2D,0BAC7C5tD,IAAU+F,IAAI,wBAAyBvO,KAAKw1D,yBAC5Cr+C,KAAa5I,IAAI,0BAA2BvO,KAAK21D,2BACjDx+C,KAAa5I,IAAI,oBAAqBvO,KAAK42D,qBAC3Cz/C,KAAa5I,IAAI,uBAAwBvO,KAAKkoB,wBAC9Cs0C,KAAajuD,IAAI,0BAA2BvO,KAAK22D,2BAEjDzzD,SAASgG,oBAAoB,kBAAmBlJ,KAAKq1D,yBAAyB,GAE9Er1D,KAAKi3D,uB,iDAoEL,IAAMjsD,EAAUhL,KAAKs1D,cAAc19C,QACnC,GAAK5M,EAAL,CAFuB,IAIf+rD,EAAmB/2D,KAAnB+2D,eAER,GAAIA,EAAgB,CAGhB,GAFA/rD,EAAQhB,UAAY+sD,EAAe/sD,WAE9B+sD,EAAev7B,MAEhB,YADAx7B,KAAKu7B,aAIT,IAAMK,EAAY14B,SAAS24B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASg7B,EAAev7B,OAElCxwB,EAAQoI,aAERpI,EAAQhB,UAAY,KACpBhK,KAAKu7B,aAGTv7B,KAAKqhC,iB,8CAIL,IAAMr2B,EAAUhL,KAAKs1D,cAAc19C,QAC9B5M,IAELhL,KAAK+2D,eAAiB,CAClB/sD,UAAWgB,EAAQhB,UACnBwxB,MAAOx7B,KAAKw7B,U,uCAiKF,IAAD,EACqBx7B,KAAKjB,MAA/BsP,EADK,EACLA,OAAQ8hD,EADH,EACGA,cAEV75C,EAAUa,KAAa1O,IAAI4F,EAAQ8hD,GACzC,GAAK75C,EAAL,CAJa,IAMLe,EAAYf,EAAZe,QACR,GAAKA,EAAL,CAPa,IASLtF,EAAkBsF,EAAlBtF,KAAMgG,EAAYV,EAAZU,QACd,GAAKhG,GAASgG,EAAd,CAEA,IAAM/M,EAAUhL,KAAKs1D,cAAc19C,QAE/B7F,EACA/R,KAAK8xD,iBAAiB//C,GACfgG,EACP/X,KAAK8xD,iBAAiB/5C,GAEtB/M,EAAQiO,UAAY,U,uCAIXg4B,GAAgB,IACrBnhC,EAAM9P,KAAKP,MAAXqQ,EACF9E,EAAUhL,KAAKs1D,cAAc19C,QAEnC,GAAKq5B,EAAL,CAJ4B,IASpBl/B,EAAmBk/B,EAAnBl/B,KAAMiG,EAAai5B,EAAbj5B,SACd,IACI,IAAMu8C,EAAQC,aAASziD,EAAMiG,EAAUlI,GACvC9E,EAAQhB,UAAY,KACpBuqD,EAAMxyD,QAAQ,SAAAT,GACV0J,EAAQf,YAAY3I,KAE1B,MAAO8K,GACLpB,EAAQiO,UAAYlH,QAZpB/G,EAAQiO,UAAY,O,yEA8IX1Q,EAAMk0D,G,2EACdl0D,E,yCAAa,M,WAEZwP,EAAU/X,KAAKs1D,cAAc19C,QAAQ5N,aAEvChK,KAAKs1D,cAAc19C,QAAQ5N,UAAY,KACvChK,KAAKqhC,gBAGKo7B,E,iCACFpI,aAAsB9rD,G,4DACtBm0D,aAAyBn0D,G,mCAF/B6pD,E,uBAIC,CACH7pD,OACA6pD,QACAr6C,Y,0IAsEK,IAAD,EAC0B/X,KAAKjB,MAA/BsP,EADA,EACAA,OAAQ8hD,EADR,EACQA,cACVjhD,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAAL,CAEA,IAAMlE,EAAUhL,KAAKs1D,cAAc19C,QACnC,GAAK5M,EAAL,CANQ,IAQAhB,EAAcgB,EAAdhB,UAMR,GALkB,SAAdA,GAAsC,oBAAdA,IACxBgB,EAAQhB,UAAY,MAEFgB,EAAdiO,UAGR,IAAInI,YAASzC,GACb,IAAI8hD,GAEkBjhD,EAAKwuB,sBAAwBxuB,EAAKwuB,oBAAsB,IAAIA,GAAoBxuB,EAAK9P,MAC7F66D,UAAU,CAAE,QAAS,yB,iCAG3B,IACA9J,EAAkBnwD,KAAKjB,MAAvBoxD,cACFl3C,EAAYjZ,KAAKs1D,cAAc19C,QAAQqB,UAC7C,IAAKA,GAAaA,EAAUnF,OAAS,IAAMq8C,EAA3C,CACqBqM,KAATh7B,MAEJniC,IAAgByF,aAAa,CACzB,QAAS,gCACT08B,KAAM,WALlB,CAYWm7B,YAAYv7D,MAAvB,IAEIw7D,EADUC,OACIC,KAAK7jD,GACZ0jD,YAAYv7D,MAEvB,GAAKw7D,GAAS3jD,IAAc2jD,EAAM,GAAlC,CAYA,IAAMG,EAAYhuC,KAAK3tB,MACvB/B,IAAgBC,KAAK,CACjB,QAAS,cACTN,MAAO49D,EAAM,GACb7nD,MAAO,MACRxV,KAAK,SAAAy9D,GACJ39D,IAAgByF,aAAa,CACzB,QAAS,gCACT08B,KAAM,CACFu7B,YACA/9D,MAAO49D,EAAM,GACbI,gBAKZ39D,IAAgBC,KAAK,CACjB,QAAS,iBACTN,MAAO49D,EAAM,GACb7nD,MAAO,MACRxV,KAAK,SAAAy9D,GACJ39D,IAAgByF,aAAa,CACzB,QAAS,iCACT08B,KAAM,CACFu7B,YACA/9D,MAAO49D,EAAM,GACbI,oBAtCZ,CACqBR,KAATh7B,MAEJniC,IAAgByF,aAAa,CACzB,QAAS,gCACT08B,KAAM,W,8EAwQArE,G,yEACbA,E,oDACAA,EAAMrpB,O,oDAEU,IAAjBqpB,EAAMrpB,O,iCACgB9T,KAAKs4D,WAAWn7B,EAAM,GAAIA,EAAM,GAAG1gB,KAAKwO,WAAW,U,UAAnE4mC,E,0DAGN7xD,KAAKN,SAAS,CACVq2D,eAAe,EACflE,Y,wBAGJ7xD,KAAKN,SAAS,CAAEy9B,U,6IAwFP9lB,GAAU,IAAD,EACYrX,KAAKjB,MAA/BsP,EADc,EACdA,OAAQ8hD,EADM,EACNA,cAGX9hD,GACA8hD,GACA94C,GAELhY,IAAgBC,KAAK,CACjB,QAAS,mBACTmQ,QAASpB,EACT0H,WAAYo6C,EACZ93C,sBAAuBhB,M,yCAIZU,GAAU,IAAD,EACU/X,KAAKjB,MAA/BsP,EADgB,EAChBA,OAAQ8hD,EADQ,EACRA,cAEX9hD,GACA8hD,GACAp4C,GAEL1Y,IAAgBC,KAAK,CACjB,QAAS,qBACTmQ,QAASpB,EACT0H,WAAYo6C,EACZp4C,c,8EAIcV,EAAS8Q,G,iFACOnoB,KAAKjB,MAA/BsP,E,EAAAA,OAAQ8hD,E,EAAAA,cAEX9hD,E,oDACA8hD,E,oDACA94C,E,2EAGoBhY,IAAgBC,KAAK,CACtC,QAAS,kBACTmQ,QAASpB,EACT0H,WAAYo6C,EACZ93C,sBAAuBhB,I,QAJrB7X,E,OAON2oB,EAAS3oB,G,0MA0DS,IACd2wD,EAAkBnwD,KAAKjB,MAAvBoxD,cACUnwD,KAAKs1D,cAAc19C,QAAQqB,WAC1Bk3C,EAKfnwD,KAAKN,SAAS,CACVk4D,gBAAgB,IALpB53D,KAAKN,SAAS,CACVk4D,gBAAgB,M,sCAgDxB53D,KAAK47B,UAAY14B,SAAS24B,eACrB77B,KAAK47B,WACL57B,KAAK47B,UAAU64B,aAEpBz0D,KAAKw7B,MAAQx7B,KAAK47B,UAAU84B,WAAW,M,yCAGvB,IACRl5B,EAAUx7B,KAAVw7B,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAY14B,SAAS24B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBx7B,KAAKs1D,cAAc19C,QAAQxE,aARvBpT,KAAKu7B,e,6CA4GwB,IAAD,OAAf0hC,IAAe,yDACxBpL,EAAY7xD,KAAKjB,MAAjB8yD,QAER7xD,KAAKN,SACD,CACIq2D,eAAe,EACflE,QAAS,MAEb,WACQoL,GAAUpL,GAAWA,EAAQ95C,SAC7B,EAAKu9C,cAAc19C,QAAQ5N,UAAY6nD,EAAQ95C,QAC/C,EAAKwjB,aACL,EAAK8F,eAEL,EAAKsyB,uB,+BAmHX,IACE7jD,EAAM9P,KAAKP,MAAXqQ,EADH,EAiBD9P,KAAKjB,MAdLsP,EAHC,EAGDA,OACA8hD,EAJC,EAIDA,cACA0B,EALC,EAKDA,QACAgF,EANC,EAMDA,iBACA15B,EAPC,EAODA,MAEAwxB,GATC,EAQD8K,SARC,EASD9K,aACAC,EAVC,EAUDA,WACA6E,EAXC,EAWDA,YACAsC,EAZC,EAYDA,cACA6B,EAbC,EAaDA,eACAhC,EAdC,EAcDA,cACAmF,EAfC,EAeDA,uBACA5jB,EAhBC,EAgBDA,MAGE+lB,EAAiB/M,EAAgB,IAAMgN,aAAc9uD,EAAQ8hD,GAC/DppC,EAAQ,kBAACD,GAAA,EAAD,CAAe7L,MAAO26C,GAAiBgC,EAAgB5wC,SAAU,kBAACo2C,GAAD,MAAoBr2C,KAAM,kBAACs2C,GAAD,QAKvG,OAJIlN,IACAppC,EAAO,kBAACqwB,GAAD,OAIP,yBAAKn3C,UAAU,uBACX,yBAAKA,UAAWgM,IAAW,WAAY,CAAE,qBAAsB2pD,GAAiB,CAAE,MAASze,KACvF,yBAAKl3C,UAAWgM,IAAW,oBACvB,kBAAC,GAAD,CACIoC,OAAQA,EACRsW,UAAWkyC,EACX1G,cAAe4F,EAAgB,EAAI5F,EACnC9jD,QAASrM,KAAK8gB,oBAElB,yBAAK7gB,UAAU,oBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAMo3C,SAAP,CACIC,SACI,kBAACxgC,EAAA,EAAD,CAAY7W,UAAU,uBAAuB+W,aAAW,YACpD,kBAAC,KAAD,QAGR,kBAACm+C,GAAD,CAAmBjlD,SAAUlQ,KAAK+5D,sBAG1C,yBAAK95D,UAAU,0BACX,yBACIb,GAAG,mBACHoc,IAAKxb,KAAKs1D,cACV55C,YAA8B5L,EAAjBotD,EAAmB,UAAe,WAC/CzqD,iBAAe,EACfgJ,gCAA8B,EAC9BE,UAAW3b,KAAKymB,cAEhB5K,QAAS7b,KAAK2mB,YACd+a,QAAS1hC,KAAKqhC,eAGtB,yBAAKphC,UAAU,yBACX,kBAAC,GAAD,MACA,2BACIub,IAAKxb,KAAKw4D,kBACVv4D,UAAU,yBACVwc,KAAK,OACLwyB,SAAS,WACT9hC,SAAUnN,KAAKy4D,+BAEnB,2BACIj9C,IAAKxb,KAAKuuC,eACVtuC,UAAU,yBACVwc,KAAK,OACLwyB,SAAS,WACTC,OAAO,UACP/hC,SAAUnN,KAAKo4D,6BAEjBvxC,QAAQspC,KAAmByF,GACzB,kBAAC,GAAD,CACIvnD,OAAQA,EACRo6C,cAAezoD,KAAKwoD,kBACpBI,iBAAkB5oD,KAAK2oD,qBACvBG,aAAc9oD,KAAK6oD,sBAUrC+M,GACE,yBAAK31D,UAAU,4CACX,kBAAC6W,EAAA,EAAD,CACI7W,UAAU,gCACV+W,aAAW,SACXxI,KAAK,QACLyI,MAAM,YACN5K,QAASrM,KAAKi3D,oBACd,kBAAC9vB,GAAD,QAIZ,yBAAKlnC,UAAU,mCACX,kBAAC6W,EAAA,EAAD,CACI7W,UAAWgM,IAAW,uBAAwB,CAAC,8BAA+B2pD,IAAkBgC,IAChG5gD,aAAW,OACXxI,KAAK,QACLnC,QAASrM,KAAK03D,cACb3wC,MAIXxV,aAAclD,IAAW,kBAAC,GAAD,CAAkB2+C,OAAQhtD,KAAKg5D,iBAC1D,kBAAC,GAAD,CAAkB77B,MAAOA,EAAOozB,UAAWvwD,KAAKs5D,mBAAoBrK,SAAUjvD,KAAKu5D,oBAEnF,kBAAC,GAAD,CACIt+C,KAAMw4C,EACN9E,YAAaA,EACbC,WAAYA,EACZvZ,OAAQr1C,KAAK8zD,kBACb7E,SAAUjvD,KAAK6zD,sBAEnB,kBAAC,GAAD,CACI54C,KAAM86C,EACN1nD,OAAQA,EACRsW,UAAWwrC,EACX0B,QAASA,EACTtZ,OAAQv4C,KAAKk0D,gBACblH,OAAQhtD,KAAKw6D,gBACbvL,SAAUjvD,KAAKq6D,wBAEnB,kBAAC,IAAD,CACIj/C,mBAAoB,EACpBH,KAAM8/C,EACN1/C,QAASrb,KAAKq8D,sBACd/gD,kBAAgB,qBAChB,kBAAC,IAAD,CAAalc,GAAG,qBAAqB0Q,EAAE,sBACvC,kBAAC,KAAD,KACI,kBAACq9B,GAAA,EAAD,KAAoBr9B,EAAE,6BAE1B,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAKq8D,sBAAuBplD,MAAM,WAC9CnH,EAAE,c,GAnmDRtP,aA4mDRiR,iBAAkB2jD,I,qBCpoDlBkI,I,wLAfD,IAAD,EAC0Bt9D,KAAKP,MAA5B6oC,EADH,EACGA,QAASi1B,EADZ,EACYA,UAEjB,OACI,yBAAKt9D,UAAU,0BACX,yBAAKA,UAAU,0BACX,kBAAC,KAAD,CAAQgX,MAAM,UAAUhX,UAAU,wBAAwBoM,QAASkxD,GAC9Dj1B,S,GARG/nC,IAAMC,YCC5Bg9D,G,iLACQ,IACE1tD,EAAM9P,KAAKP,MAAXqQ,EAEFw4B,EAAoBx4B,EADN9P,KAAKjB,MAAjB2f,QACoB,cAAmB,aAE/C,OAAO,kBAAC,GAAD,CAAe4pB,QAASA,EAASi1B,UAAWv9D,KAAK8e,iC,GAN7BN,IAUpB/M,iBAAkB+rD,ICH3BC,I,kNAyBFhgD,mBAAqB,SAAA5P,GAAW,IACpBQ,EAAW,EAAK5O,MAAhB4O,OAEJqvD,YAAgBrvD,EAAQR,EAAO6P,YAAYte,KAC3C,EAAK2P,e,EAIb4O,mBAAqB,SAAA9P,GAAW,IACpBQ,EAAW,EAAK5O,MAAhB4O,OAEJsvD,YAAgBtvD,EAAQR,EAAO+P,WAAWxe,KAC1C,EAAK2P,e,EAIb6uD,WAAa,WAAO,IACRvvD,EAAW,EAAK5O,MAAhB4O,OACHA,GAELhP,IAAgBC,KAAK,CACjB,QAAS,WACTmQ,QAASpB,K,EAIjBwvD,oBAAsB,WAAO,IACjBxvD,EAAW,EAAK5O,MAAhB4O,OACHA,GAELhP,IAAgBC,KAAK,CACjB,QAAS,oBACTmQ,QAASpB,EACTyvD,uBAAuB,K,qFAzDT1tD,EAAWC,GAAY,IAAD,EAClBrQ,KAAKP,MAAnBqQ,EADgC,EAChCA,EAAGzB,EAD6B,EAC7BA,OAEX,OAAI+B,EAAU/B,SAAWA,GAIrB+B,EAAUN,IAAMA,I,0CAQpB8M,KAAgBtO,GAAG,mBAAoBtO,KAAKyd,oBAC5CI,KAAgBvP,GAAG,mBAAoBtO,KAAK2d,sB,6CAI5Cf,KAAgBrO,IAAI,mBAAoBvO,KAAKyd,oBAC7CI,KAAgBtP,IAAI,mBAAoBvO,KAAK2d,sB,+BA8CvC,IAAD,EACiB3d,KAAKP,MAAnB4O,EADH,EACGA,OAAQyB,EADX,EACWA,EACVZ,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,KAHb,IAKGuN,EAASvN,EAATuN,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAM0hB,EAAavhB,KAAgBnU,IAAIgU,EAAKK,gBAC5C,IAAKqhB,EAAY,OAAO,KAFD,IAIf4/B,EAAW5/B,EAAX4/B,OACR,IAAKA,EAAQ,OAAO,KALG,IAOfC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEnB,OAAQF,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAez1B,QAASx4B,EAAE,cAAeytD,UAAWv9D,KAAK69D,sBAEpE,IAAK,0BACD,OAAOG,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAe11B,QAASx4B,EAAE,aAAcytD,UAAWv9D,KAAK49D,aAE9F,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,6BACD,OAAII,EACOC,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAE9D,kBAAC,GAAD,CAAe51B,QAASx4B,EAAE,aAAcytD,UAAWv9D,KAAK49D,aAI3E,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,qBACD,IAAMhgD,EAAaC,KAAgBpV,IAAIgU,EAAKe,eAC5C,IAAKI,EAAY,OAAO,KAFD,IAIf6a,EAAuB7a,EAAvB6a,WAAYslC,EAAWngD,EAAXmgD,OACpB,IAAKA,EAAQ,OAAO,KALG,IAOfC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEnB,OAAQF,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAez1B,QAASx4B,EAAE,cAAeytD,UAAWv9D,KAAK69D,sBAEpE,IAAK,0BACD,OAAOG,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAe11B,QAAsBx4B,EAAb2oB,EAAe,cAAmB,aAAc8kC,UAAWv9D,KAAK49D,aAE9H,IAAK,uBACD,OACI,kBAAC,GAAD,CACIt1B,QAAsBx4B,EAAb2oB,EAAe,cAAmB,aAC3C8kC,UAAWv9D,KAAK49D,aAI5B,IAAK,yBACD,OAAInlC,EACO,kBAAC,GAAD,CAAsBpqB,OAAQA,IAE9B,kBAAC,GAAD,MAGf,IAAK,6BACD,OAAI2vD,EACOC,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAGjE,kBAAC,GAAD,CACI51B,QAAsBx4B,EAAb2oB,EAAe,cAAmB,aAC3C8kC,UAAWv9D,KAAK49D,cAS5C,OAAO,S,GAxKMr9D,IAAMC,YA4KZiR,iBAAkBgsD,I,UC9GlBU,I,mBAnEX,WAAY1+D,GAAQ,IAAD,8BACf,4CAAMA,KAeV2+D,YAAc,WACV,IAAMh9D,EAAM,IAAI2tB,KACVsvC,EAAU,EAAKC,OAASl9D,EACxB2F,EAAQ,IAAOs3D,EAAU,EAAK5+D,MAAM4gC,QAAW,IAOrD,GALA,EAAK3gC,SAAS,CACV2+D,QAASA,EAAU,EAAIA,EAAU,EACjCt3D,MAAOA,EAAQ,IAAM,IAAMA,IAG3B3F,GAAO,EAAKk9D,QACR,EAAKC,QAAS,CACdC,cAAc,EAAKD,SACnB,EAAKA,QAAU,KAFD,IAINE,EAAc,EAAKh/D,MAAnBg/D,UACJA,GACAA,MA9BZ,EAAK1/D,MAAQ,CACTs/D,QAAS,EAAK5+D,MAAM4gC,QAAU,IAC9Bt5B,MAAO,GALI,E,iFAUf/G,KAAKiB,UAAY,IAAI8tB,KACrB/uB,KAAKs+D,OAASt+D,KAAKiB,UACnBjB,KAAKs+D,OAAOI,gBAAgB1+D,KAAKs+D,OAAOK,kBAAoB3+D,KAAKP,MAAM4gC,SACvErgC,KAAKu+D,QAAU5N,YAAY3wD,KAAKo+D,YAAa,O,6CA2BzCp+D,KAAKu+D,UACLC,cAAcx+D,KAAKu+D,SACnBv+D,KAAKu+D,QAAU,Q,+BAIb,IAAD,EACsBv+D,KAAKjB,MAAxBgI,EADH,EACGA,MAAOs3D,EADV,EACUA,QAEf,OACI,yBAAKp+D,UAAU,sBACX,yBAAKA,UAAU,2BACX,kBAAC,KAAD,CAAYgX,MAAM,YAAYonD,EAAU,KAAMO,YAElD,yBAAK3+D,UAAU,+BACX,kBAAC4+D,GAAA,EAAD,CAAkBrwD,KAAM,GAAIzH,MAAO,IAAMA,EAAO6Y,QAAQ,iB,GAxD5Crf,IAAMC,YCmBhCs+D,I,kNACFC,oBAAsB,SAAC1wD,EAAQyB,GAC3B,IAAMZ,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,KAClB,IAAKA,EAAKuN,KAAM,OAAO,KAEvB,OAAQvN,EAAKuN,KAAK,UACd,IAAK,qBACD,MAAM,wCAAN,OAA+CvN,EAAKqN,MAApD,KAEJ,IAAK,qBACD,IAAMqB,EAAaC,KAAgBpV,IAAIyG,EAAKuN,KAAKe,eACjD,OAAII,EACOA,EAAW6a,WAAX,iDACyCvpB,EAAKqN,MAD9C,oDAEuCrN,EAAKqN,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,MAAM,6CAAN,OAAoD1K,YAAkBxD,GAAQ,EAAOyB,GAArF,KAIR,OAAO,M,wEAGD,IAAD,EACgC9P,KAAKP,MAAlC4b,EADH,EACGA,QAAShN,EADZ,EACYA,OAAQyB,EADpB,EACoBA,EAAGmL,EADvB,EACuBA,KAE5B,OACI,kBAAC,IAAD,CACIG,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,sBAChBL,KAAMA,GACN,kBAAC,IAAD,CAAa7b,GAAG,uBAAuByS,YAAkBxD,GAAQ,EAAOyB,IACxE,kBAAC,KAAD,KACI,yBAAK7P,UAAU,yBACX,kBAAC,EAAD,CAAUoO,OAAQA,IAClB,kBAAC8+B,GAAA,EAAD,CAAmB/tC,GAAG,6BACjBY,KAAK++D,oBAAoB1wD,EAAQyB,MAI9C,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAAS,kBAAMgP,GAAQ,IAAQpE,MAAM,WAA7C,UAGA,kBAAC8E,EAAA,EAAD,CAAQ1P,QAAS,kBAAMgP,GAAQ,IAAOpE,MAAM,UAAU+E,WAAS,GAA/D,Y,GAnDUzb,IAAMC,YA4D9Bw+D,GAA0BvtD,cAAkBqtD,IAE5CG,G,iLACQ,IAAD,EACgCj/D,KAAKP,MAAlC4b,EADH,EACGA,QAAShN,EADZ,EACYA,OAAQyB,EADpB,EACoBA,EAAGmL,EADvB,EACuBA,KAE5B,OACI,kBAAC,IAAD,CACIG,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,sBAChBL,KAAMA,GACN,kBAAC,IAAD,CAAa7b,GAAG,uBAAuByS,YAAkBxD,GAAQ,EAAOyB,IACxE,kBAAC,KAAD,KACI,yBAAK7P,UAAU,yBACX,kBAAC,EAAD,CAAUoO,OAAQA,IAClB,kBAAC8+B,GAAA,EAAD,CAAmB/tC,GAAG,6BAAtB,0CAKR,kBAAC0c,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAAS,kBAAMgP,GAAQ,IAAQpE,MAAM,WAA7C,UAGA,kBAAC8E,EAAA,EAAD,CAAQ1P,QAAS,kBAAMgP,GAAQ,IAAOpE,MAAM,UAAU+E,WAAS,GAA/D,Y,GAvBazb,IAAMC,WAgCjC0+D,GAA6BztD,cAAkBwtD,IAE/ChgC,G,YACF,WAAYx/B,GAAQ,IAAD,8BACf,4CAAMA,KASV0/D,kBAAoB,SAAAn7D,GAChB,EAAKtE,SAAS,CAAE4/B,SAAUt7B,EAAMu7B,iBAXjB,EAcnBC,gBAAkB,WACd,EAAK9/B,SAAS,CAAE4/B,SAAU,QAfX,EAkBnB8/B,eAAiB,WACb,EAAK5/B,kBACL/3B,WAAW,kBAAM,EAAKhI,MAAM4/D,mBAAmB,MApBhC,EAuBnBC,mBAAqB,WACjB,EAAK9/B,kBAEL,EAAK9/B,SAAS,CAAE6/D,kBAAkB,KA1BnB,EA6BnBC,2BAA6B,SAAAhgE,GAAW,IAC5BsQ,EAAM,EAAKrQ,MAAXqQ,EAIR,GAFA,EAAKpQ,SAAS,CAAE6/D,kBAAkB,IAE7B//D,EAAL,CAEA,IAAM6O,EAAS8qB,KAAiBE,YAC1B/iB,EAAUxG,EAAE,sBACZ2vD,EAAU,CACZ,QAAS,oBACThwD,QAASpB,EACTyvD,uBAAuB,GAG3B,EAAKznD,sBAAsBhI,EAAQ,2BAA4BiI,EAASmpD,KA5CzD,EA+CnBC,YAAc,WACV,EAAKlgC,kBAEL,EAAK9/B,SAAS,CAAEigE,YAAY,KAlDb,EAqDnBC,oBAAsB,SAAApgE,GAGlB,GAFA,EAAKE,SAAS,CAAEigE,YAAY,IAEvBngE,EAAL,CAEA,IAAM6O,EAAS8qB,KAAiBE,YAC1B/iB,EAAU,EAAKupD,yBAAyBxxD,GAC1CoxD,EAAUluD,aAAclD,GACtB,CAAE,QAAS,oBAAqBoB,QAASpB,EAAQyvD,uBAAuB,GACxE,CAAE,QAAS,YAAaruD,QAASpB,GAEnCwH,aAAaxH,IAAWyxD,YAAUzxD,KAClCoxD,EAAU,CACN,QAAS,sBACThwD,QAASpB,EACTN,QAASE,IAAUiH,UACnB6oD,OAAQ,CACJ,QAAS,0BACTC,WAAW,KAKvB,EAAK3nD,sBAAsBhI,EAAQ,wBAAyBiI,EAASmpD,KA5EtD,EA+EnBppD,sBAAwB,SAAChI,EAAQ0xD,EAAkBzpD,EAASmpD,GAAa,IAC7D3vD,EAAM,EAAKrQ,MAAXqQ,EACR,GAAKiwD,EAAL,CAEA,IAAMhpD,EAAG,UAAMgpD,EAAN,mBAAiC1xD,GACpCwI,EAAM,sCAAG,sBAAA7E,EAAA,8EAED3S,IAAgBC,KAAKmgE,GAFpB,uBAIPpgE,IAAgByF,aAAa,CAAE,QAASi7D,EAAkB1xD,SAAQglB,YAAY,IAJvE,qEAAH,qDALwD,EAgBzB,EAAK5zB,MAAxC8W,EAhB4D,EAgB5DA,gBAAiBC,EAhB2C,EAgB3CA,cAEzBnX,IAAgByF,aAAa,CAAE,QAASi7D,EAAkB1xD,SAAQglB,YAAY,IAC9E,IAAM5c,EAAWF,EAAgBD,EAAS,CACtC0pD,SAAS,EACTjpD,MACAH,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,WACJE,MAAM,UACNhX,UAAU,mBACV,kBAAC,GAAD,CACIogC,QAAS1pB,IACT8nD,UAAW,WACP5nD,IACAL,EAAcC,OAG1B,kBAACsF,EAAA,EAAD,CACIhF,IAAI,OACJE,MAAM,UACNzI,KAAK,QACLnC,QAAS,WA1BjBhN,IAAgByF,aAAa,CAAE,QAASi7D,EAAkB1xD,SAAQglB,YAAY,IA4BlE7c,EAAcC,KAEjB3G,EAAE,cA1HA,EAgInBmwD,kBAAoB,SAAC5xD,EAAQyB,GACzB,IAAMZ,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,KAClB,IAAKA,EAAKuN,KAAM,OAAO,KAEvB,OAAQvN,EAAKuN,KAAK,UACd,IAAK,qBACD,OAAO3M,EAAE,cAEb,IAAK,qBACD,IAAM8N,EAAaC,KAAgBpV,IAAIyG,EAAKuN,KAAKe,eACjD,OAAII,EACOA,EAAW6a,WAAa3oB,EAAE,gBAAkBA,EAAE,iBAGlD,KAEX,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,kBAIjB,OAAO,MAvJQ,EA0JnB+vD,yBAA2B,SAAAxxD,GAAW,IAC1ByB,EAAM,EAAKrQ,MAAXqQ,EAEFZ,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAOY,EAAE,mBACpB,IAAKZ,EAAKuN,KAAM,OAAO3M,EAAE,mBAEzB,OAAQZ,EAAKuN,KAAK,UACd,IAAK,qBACD,OAAO3M,EAAE,mBAEb,IAAK,qBACD,IAAM8N,EAAaC,KAAgBpV,IAAIyG,EAAKuN,KAAKe,eACjD,OAAII,EACOA,EAAW6a,WAAa,eAAiB,aAG7C3oB,EAAE,mBAEb,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,mBAIjB,OAAOA,EAAE,oBAnLM,EAsLnBowD,YAAc,WACV,EAAK1gC,kBAEL,IAAMnxB,EAAS8qB,KAAiBE,YAChCh6B,IAAgByF,aAAa,CACzB,QAAS,oBACTuJ,YAzLJ,EAAKtP,MAAQ,CACTugC,SAAU,KACVqgC,YAAY,EACZJ,kBAAkB,GANP,E,sEAgMT,IACEzvD,EAAM9P,KAAKP,MAAXqQ,EADH,EAE8C9P,KAAKjB,MAAhDugC,EAFH,EAEGA,SAAUqgC,EAFb,EAEaA,WAAYJ,EAFzB,EAEyBA,iBAExBlxD,EAAS8qB,KAAiBE,YAC1BjG,EAAe+sC,YAAgB9xD,GAC/B+xD,EAAaC,YAAchyD,GAC3BiyD,EAAiBtgE,KAAKigE,kBAAkB5xD,EAAQyB,GAChDywD,EAAeC,YAAgBnyD,GAErC,OACI,oCACI,kBAACyI,EAAA,EAAD,CACIkqB,YAAW1B,EAAW,cAAgB,KACtC2B,gBAAc,OACdhhC,UAAU,mBACV+W,aAAW,OACX3K,QAASrM,KAAKm/D,mBACd,kBAAClyB,GAAD,OAEJ,kBAACzM,GAAA,EAAD,CACIphC,GAAG,YACHkgC,SAAUA,EACVrkB,KAAM4L,QAAQyY,GACdjkB,QAASrb,KAAKw/B,gBACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAUtZ,QAASrM,KAAKo/D,gBAAiBtvD,EAAE,aAC1CsjB,GAAgB,kBAACzN,GAAA,EAAD,CAAUtZ,QAASrM,KAAKs/D,oBAAqBxvD,EAAE,iBAC/DswD,GAAcE,GAAkB,kBAAC36C,GAAA,EAAD,CAAUtZ,QAASrM,KAAK0/D,aAAcY,GACtEC,GAAgB,kBAAC56C,GAAA,EAAD,CAAUtZ,QAASrM,KAAKkgE,aAAcpwD,EAAE,WAE7D,kBAACkvD,GAAD,CAAyB3wD,OAAQA,EAAQ4M,KAAM0kD,EAAYtkD,QAASrb,KAAK4/D,sBACzE,kBAACV,GAAD,CACI7wD,OAAQA,EACR4M,KAAMskD,EACNlkD,QAASrb,KAAKw/D,kC,GA9OLj/D,IAAMC,WA0PpByb,GALCC,YACZC,eACA1K,cAGWwK,CAAQgjB,IC5MRwhC,I,kNApIXC,8BAAgC,SAAA7yD,GACT,EAAKpO,MAAhB4O,SACOR,EAAO4B,SAEtB,EAAKV,e,EAGTc,kBAAoB,SAAAhC,GACG,EAAKpO,MAAhB4O,SACOR,EAAO4B,SAEtB,EAAKV,e,EAGT4xD,uBAAyB,SAAA9yD,GACF,EAAKpO,MAAhB4O,SACOR,EAAO4B,SAEtB,EAAKV,e,EAGTnB,mBAAqB,SAAAC,GAAW,IACpBQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,GACAA,EAAKuN,KAEV,OAAQvN,EAAKuN,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAY3N,EAAKuN,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA1b,GAAC,OAAIA,EAAEyM,UAAYF,EAAOE,WAE3D,EAAKgB,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACGG,EAAKuN,KAAK1O,UAAYF,EAAOE,SAC7B,EAAKgB,gB,EAUrBsO,qBAAuB,SAAAxP,GAAW,IACtBQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GACtBa,GACAA,EAAKuN,OAGkB,oBAAvBvN,EAAKuN,KAAK,UAAyD,mBAAvBvN,EAAKuN,KAAK,UACvDvN,EAAKuN,KAAK1O,UAAYF,EAAOE,SAE7B,EAAKgB,gB,EAIbuO,2BAA6B,SAAAzP,GAAW,IAC5BQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GACtBa,GACAA,EAAKuN,MAEiB,uBAAvBvN,EAAKuN,KAAK,UAAqCvN,EAAKuN,KAAKK,iBAAmBjP,EAAOiP,gBACnF,EAAK/N,e,EAIbwO,2BAA6B,SAAA1P,GAAW,IAC5BQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GACtBa,GACAA,EAAKuN,MAEiB,uBAAvBvN,EAAKuN,KAAK,UAAqCvN,EAAKuN,KAAKe,gBAAkB3P,EAAO2P,eAClF,EAAKzO,e,EAIb0O,mBAAqB,SAAA5P,GAAW,IACpBQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GACtBa,GACAA,EAAKuN,MAEiB,uBAAvBvN,EAAKuN,KAAK,UAAqCvN,EAAKuN,KAAKK,iBAAmBjP,EAAO6P,YAAYte,IAC/F,EAAK2P,e,EAIb4O,mBAAqB,SAAA9P,GAAW,IACpBQ,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GACtBa,GACAA,EAAKuN,MAEiB,uBAAvBvN,EAAKuN,KAAK,UAAqCvN,EAAKuN,KAAKe,gBAAkB3P,EAAO+P,WAAWxe,IAC7F,EAAK2P,e,mFArITI,IAAUb,GAAG,8BAA+BtO,KAAK0gE,+BACjDvxD,IAAUb,GAAG,kBAAmBtO,KAAK6P,mBACrC5B,IAAUK,GAAG,mBAAoBtO,KAAK4N,oBACtCuB,IAAUb,GAAG,uBAAwBtO,KAAK2gE,wBAC1C1yD,IAAUK,GAAG,qBAAsBtO,KAAKqd,sBACxCT,KAAgBtO,GAAG,2BAA4BtO,KAAKsd,4BACpDO,KAAgBvP,GAAG,2BAA4BtO,KAAKud,4BACpDX,KAAgBtO,GAAG,mBAAoBtO,KAAKyd,oBAC5CI,KAAgBvP,GAAG,mBAAoBtO,KAAK2d,sB,6CAI5CxO,IAAUZ,IAAI,8BAA+BvO,KAAK0gE,+BAClDvxD,IAAUZ,IAAI,kBAAmBvO,KAAK6P,mBACtC5B,IAAUM,IAAI,mBAAoBvO,KAAK4N,oBACvCuB,IAAUZ,IAAI,uBAAwBvO,KAAK2gE,wBAC3C1yD,IAAUM,IAAI,qBAAsBvO,KAAKqd,sBACzCT,KAAgBrO,IAAI,2BAA4BvO,KAAKsd,4BACrDO,KAAgBtP,IAAI,2BAA4BvO,KAAKud,4BACrDX,KAAgBrO,IAAI,mBAAoBvO,KAAKyd,oBAC7CI,KAAgBtP,IAAI,mBAAoBvO,KAAK2d,sB,+BAqHvC,IACEtP,EAAWrO,KAAKP,MAAhB4O,OAEF4O,EAAW2jD,YAAgBvyD,GAAQ,GACnCwyD,EAAmBC,YAAqBzyD,GAE9C,OACI,yBAAKpO,UAAWgM,IAAW,uBAAwB,CAAE,8BAA+B40D,KAC/E5jD,O,GAnJgB1c,IAAMC,YCkBxBugE,I,wLAnBD,IAAD,EACkC/gE,KAAKP,MAApCQ,EADH,EACGA,UAAWoO,EADd,EACcA,OAAQhC,EADtB,EACsBA,QAE3B,OACI,yBAAKpM,UAAWgM,IAAW,cAAehM,GAAYoM,QAASA,GAC3D,kBAAC,EAAD,CAAUgC,OAAQA,EAAQG,KAAM,KAChC,yBAAKvO,UAAU,uBACX,kBAAC,GAAD,CAAaoO,OAAQA,IACrB,kBAAC,GAAD,CAAoBA,OAAQA,U,GATvB9N,IAAMC,YCAzBwgE,I,kNACFlzB,aAAe,WACXt2B,gB,EAGJsN,aAAe,WACX,IAAI1lB,EAAK,EACLwW,EAAa,GAFA,uBAGjB,YAAkCuB,KAAa0sC,cAAczlB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/vB,EAA4D,EAA5DA,OAAQsW,EAAoD,EAApDA,UACfvlB,EAAKiP,EACLuH,EAAWZ,KAAK2P,IALH,kFAQjBI,aAAe3lB,EAAIwW,I,EAGvBgP,cAAgB,WACZ,IAAIxlB,EACEwW,EAAa,GAFD,uBAGlB,YAAkCuB,KAAa0sC,cAAczlB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/vB,EAA4D,EAA5DA,OAAQsW,EAAoD,EAApDA,UACfvlB,EAAKiP,EACLuH,EAAWZ,KAAK2P,IALF,kFAQlBE,aAAgBzlB,EAAIwW,I,wEAGd,IAAD,EACgB5V,KAAKP,MAAlBqQ,EADH,EACGA,EAAGs8B,EADN,EACMA,MAEP60B,GAAe,EAHd,uBAIL,YAAkC9pD,KAAa0sC,cAAczlB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/vB,EAA4D,EAA5DA,OAAQsW,EAAoD,EAApDA,UACTrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,CACV2qD,GAAe,EACf,MAEJ,IAAK3qD,EAAQ4O,+BAAiC5O,EAAQ6O,6BAA8B,CAChF87C,GAAe,EACf,QAZH,kFAgBL,IAAIC,GAAiB,EAhBhB,uBAiBL,YAAkC/pD,KAAa0sC,cAAczlB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/vB,EAA4D,EAA5DA,OAAQsW,EAAoD,EAApDA,UACTrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,CACV4qD,GAAiB,EACjB,MAEJ,IAAK5qD,EAAQc,iBAAkB,CAC3B8pD,GAAiB,EACjB,QAzBH,kFA6BL,OACI,yBAAKjhE,UAAU,kBACVihE,GACG,kBAACnlD,EAAA,EAAD,CAAQ9E,MAAM,UAAUhX,UAAU,wBAAwBoM,QAASrM,KAAK4kB,eACnEwnB,GAAS,EAAIt8B,EAAE,WAAf,UAA+BA,EAAE,WAAjC,YAA+Cs8B,IAGvD60B,GACG,kBAACllD,EAAA,EAAD,CAAQ9E,MAAM,UAAUhX,UAAU,wBAAwBoM,QAASrM,KAAK8kB,cACnEsnB,GAAS,EAAIt8B,EAAE,UAAf,UAA8BA,EAAE,UAAhC,YAA6Cs8B,IAGtD,yBAAKnsC,UAAU,yBACf,kBAAC8b,EAAA,EAAD,CAAQ9E,MAAM,UAAUhX,UAAU,wBAAwBoM,QAASrM,KAAK8tC,cACnEh+B,EAAE,gB,GAtEKvP,IAAMC,YAiFnBiR,iBAAkBuvD,I,SCnE3BG,I,mBACF,WAAY1hE,GAAQ,IAAD,8BACf,4CAAMA,KA8CV2hE,oBAAsB,SAAAvzD,GAAW,IACrBQ,EAAWR,EAAXQ,OAEJ,EAAK5O,MAAM4O,SAAWA,GAE1B,EAAKyW,gBApDU,EAuDnBu8C,2BAA6B,SAAAxzD,GACH,EAAK9O,MAAnB4lB,WAGJ,EAAKlQ,eA3DM,EA+DnB6sD,gCAAkC,SAAAzzD,GAAW,IACjCQ,EAAuBR,EAAvBQ,OAAQkzD,EAAe1zD,EAAf0zD,WAEZ,EAAK9hE,MAAM4O,SAAWA,GAE1B,EAAK3O,SAAS,CAAE6hE,gBApED,EAuEnBC,0BAA4B,SAAA3zD,GAAW,IAC3B4B,EAA0C5B,EAA1C4B,QAA4BkV,EAAc9W,EAAjC4zD,kBACE,EAAKhiE,MAAhB4O,SAEOoB,GAEf,EAAK/P,SAAS,CAAEilB,eA7ED,EAgFnBlQ,YAAc,WAAO,IACTpG,EAAW,EAAK5O,MAAhB4O,OACAsW,EAAc,EAAK5lB,MAAnB4lB,UAEHtW,IACAsW,IAEWxN,KAAa1O,IAAI4F,EAAQsW,IAGzCtlB,IAAgBC,KAAK,CACjB,QAAS,aACTmQ,QAASpB,EACT0H,WAAY4O,IAEXplB,KAAK,SAAAC,GACF2X,KAAa6B,IAAIxZ,GAEjB,IAAMkQ,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAO,CAAClQ,IAE5B,EAAKuP,gBAERuG,MAAM,SAAAjD,GACuBA,EAAlBqgD,KACR,GAAgB,mBADUrgD,EAAZiE,QACoB,CAC9B,IAAMorD,EAAiB,CACnB,QAAS,iBACTjyD,QAASpB,EACTjP,GAAIulB,EACJtN,QAAS,MAGbF,KAAa6B,IAAI0oD,GACjB,EAAK3yD,oBAlHF,EAsJnBrJ,YAAc,SAAA1B,GAAU,IACZqK,EAAW,EAAK5O,MAAhB4O,OACAsW,EAAc,EAAK5lB,MAAnB4lB,UAEHA,GAELvD,aAAS/S,EAAQsW,IA5JF,EA+JnBG,aA/JmB,sCA+JJ,WAAM9gB,GAAN,mBAAAgO,EAAA,wDACPhO,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAGF0H,EAAW,EAAK5O,MAAhB4O,OACAsW,EAAc,EAAK5lB,MAAnB4lB,WAEOg9C,YAAetzD,GATnB,gBAWP,EAAK3O,SAAS,CAAE6rD,SAAS,IAXlB,8BAaD19B,EAAO1e,IAAUyyD,cAAcvzD,GAb9B,UAcDhP,IAAgByF,aAAa,CAC/B,QAAS,gCACTuJ,OAAQA,EACRkzD,WAAYM,OAAOC,OAAO,GAAIj0C,EAAM,CAAEk0C,oBAAqBp9C,MAjBxD,0CA/JI,wDAqLnBu7C,YArLmB,qBAqLL,4BAAAluD,EAAA,qDACF3D,EAAW,EAAK5O,MAAhB4O,OAER,EAAK3G,cAELrI,IAAgBC,KAAK,CACjB,QAAS,mBACTmQ,QAASpB,IAPH,yCArLK,EAgMnB3G,YAAc,WACV,EAAKhI,SAAS,CAAE6rD,SAAS,KA9LzB,EAAKxsD,MAAQ,GAHE,E,gFAuBAc,EAAWC,EAAWC,GAAW,IACxC4kB,EAAc3kB,KAAKjB,MAAnB4lB,UAEJA,GAAa7kB,EAAU6kB,YAAcA,GACrC3kB,KAAKyU,gB,0CAKTzU,KAAKyU,cAELse,KAASzkB,GAAG,2BAA4BtO,KAAKqhE,4BAC7ClyD,IAAUb,GAAG,gCAAiCtO,KAAKshE,iCACnDnyD,IAAUb,GAAG,oBAAqBtO,KAAKohE,qBACvCjyD,IAAUb,GAAG,0BAA2BtO,KAAKwhE,6B,6CAI7CzuC,KAASxkB,IAAI,2BAA4BvO,KAAKqhE,4BAC9ClyD,IAAUZ,IAAI,gCAAiCvO,KAAKshE,iCACpDnyD,IAAUZ,IAAI,oBAAqBvO,KAAKohE,qBACxCjyD,IAAUZ,IAAI,0BAA2BvO,KAAKwhE,6B,4CA2E5BpxD,EAAWC,EAAWyqB,GAAc,IAAD,EACxB96B,KAAKP,MAA1B4O,EAD6C,EAC7CA,OAAQyB,EADqC,EACrCA,EAAG6R,EADkC,EAClCA,MADkC,EAEV3hB,KAAKjB,MAAxCwiE,EAF6C,EAE7CA,WAAYhW,EAFiC,EAEjCA,QAAS5mC,EAFwB,EAExBA,UAE7B,OAAIvU,EAAUN,IAAMA,IAIhBM,EAAUuR,QAAUA,IAIpBvR,EAAU/B,SAAWA,IAIrBgC,EAAUkxD,aAAeA,IAIzBlxD,EAAUk7C,UAAYA,GAItBl7C,EAAUsU,YAAcA,Q,+BAqDtB,IAAD,EACiB3kB,KAAKP,MAAnB4O,EADH,EACGA,OAAQyB,EADX,EACWA,EADX,EAE0B9P,KAAKjB,MAA5B4lB,EAFH,EAEGA,UAAW4mC,EAFd,EAEcA,QAEnB,IAAKl9C,EAAQ,OAAO,KAGpB,GADgCc,IAAUyyD,cAAcvzD,GAAhD0zD,sBACoBp9C,EAAW,OAAO,KAE9C,IAAMrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KAErB,IAAIe,EAAWf,EAAyB4xB,aAAW5xB,EAASxG,GAAnCA,EAAE,WACrByd,EAAYyiC,aAAkB3hD,EAAQsW,GACtCgJ,EAAgBsiC,aAAsB5hD,EAAQsW,GAMpD,OAJIorC,aAAiBz5C,KACjBe,EAAUvH,EAAE,mBAIZ,oCACI,yBAAK7P,UAAU,iBAAiBiM,YAAalM,KAAK0F,aAC9C,yBAAKzF,UAAU,wBACdstB,GACG,kBAAC,GAAD,CACIlf,OAAQA,EACRsW,UAAWA,EACX4I,UAAWA,EACXI,cAAeA,IAGvB,yBAAK1tB,UAAU,0BACX,yBAAKA,UAAU,wBAAwB6P,EAAE,kBACzC,yBAAK7P,UAAU,2BAA2BoX,KAGjDk0C,GACG,kBAAC,IAAD,CACIrwC,QAASC,KACTC,mBAAoB,EACpBH,MAAI,EACJI,QAASrb,KAAK0H,YACd4T,kBAAgB,8BAChB,kBAAC,IAAD,CAAalc,GAAG,8BAA8B0Q,EAAE,YAChD,kBAAC,KAAD,KACI,kBAACq9B,GAAA,EAAD,KAAoBr9B,EAAE,uBAE1B,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAK0H,YAAauP,MAAM,WACpCnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAKkgE,YAAajpD,MAAM,WACpCnH,EAAE,a,gDAnPCrQ,EAAOV,GAAQ,IACnCijE,EAAoBjjE,EAApBijE,gBACA3zD,EAAW5O,EAAX4O,OAER,GAAI2zD,IAAoB3zD,EAAQ,CAC5B,IAAMa,EAAOC,IAAU1G,IAAI4F,GAC3B,MAAO,CACH2zD,gBAAiB3zD,EACjBkzD,WAAYpyD,IAAUyyD,cAAcvzD,GACpCsW,UAAWzV,GAAQA,EAAKuyD,kBAAoBvyD,EAAKuyD,kBAAoB,EACrElW,SAAS,GAIjB,OAAO,S,GArBahrD,IAAMC,YAwQnBiR,iBAAkB0vD,IC7P3Bc,G,YACF,WAAYxiE,GAAQ,IAAD,8BACf,4CAAMA,KA6CVyiE,6BAA+B,SAAAr0D,GAAW,IAC9BQ,EAAuBR,EAAvBQ,OAAQuH,EAAe/H,EAAf+H,WAEZusD,GAA0B,EAHO,uBAIrC,YAAsBvsD,EAAtB,+CAAkC,CAAC,IAA1B+O,EAAyB,QACxBrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,CACV6rD,GAA0B,EAC1B,MAEJ,IAAK7rD,EAAQ6O,6BAA8B,CACvCg9C,GAA0B,EAC1B,QAZ6B,kFAgBrC,EAAKziE,SAAS,CACV0iE,kBAAkB,EAClB/zD,SACAuH,aACAusD,wBAAyBA,EACzBE,OAAQF,KAnEG,EAuEnBG,mBAAqB,WACjB,EAAK5iE,SAAS,CAAE2iE,QAAS,EAAKtjE,MAAMsjE,UAxErB,EA2EnBE,kBAAoB,WAChB,EAAK7iE,SAAS,CAAE0iE,kBAAkB,KA5EnB,EA+EnBI,qBAAuB,WAAO,IAAD,EACc,EAAKzjE,MAApCsjE,EADiB,EACjBA,OAAQh0D,EADS,EACTA,OAAQuH,EADC,EACDA,WAExB4B,eACA,EAAK+qD,oBAELljE,IAAgBC,KAAK,CACjB,QAAS,iBACTmQ,QAASpB,EACTuK,YAAahD,EACbysD,OAAQA,KAzFG,EA6FnBI,8BAAgC,SAAA50D,GAC5B,EAAKnO,SAAS,CAAEgjE,eAAgBvrD,KAAa0sC,cAAcr1C,QA9F5C,EAiGnB2hB,qBAAuB,SAAAtiB,GACnB,EAAKkB,eAlGU,EAqGnB4zD,wBAA0B,SAAA90D,GACtB,EAAKnO,SAAS,CAAEkjE,gBAAiB/0D,EAAO9O,SAtGzB,EAyGnBmgC,2BAA6B,SAAArxB,GACzB,EAAKnO,SAAS,CAAEy/B,mBAAoBtxB,EAAOinB,uBA1G5B,EA6GnBuqC,gBAAkB,WACd,IAAMhxD,EAAS0kB,KAASsG,YACXlqB,IAAU1G,IAAI4F,KAGF0kB,KAAjB9C,aAGJ7O,aAAS/S,EAAQ,MAAM,GAEvB4jB,cAA4B,KAvHjB,EA2HnB4wC,iBAAmB,WACf,IAAMx0D,EAAS0kB,KAASsG,YACXlqB,IAAU1G,IAAI4F,IAG3B8xB,aAAW9xB,IAhII,EAmInBy0D,SAAW,SAAAC,GAGP,OAAOjzD,EAFO,EAAKrQ,MAAXqQ,GAECizD,GACJ18B,QAAQ,MAAO,IACfA,QAAQ,SAAK,KArIlB,EAAKtnC,MAAQ,CACTogC,mBAAoBpM,KAASqN,wBAC7BwiC,gBAAiB7vC,KAASiwC,qBAC1BZ,kBAAkB,GANP,E,mFAUGhyD,EAAWC,GAC7B,OAAIA,IAAcrQ,KAAKjB,QAInBqR,EAAUuR,QAAU3hB,KAAKP,MAAMkiB,OAI/BvR,EAAUN,IAAM9P,KAAKP,MAAMqQ,K,0CAQ/BijB,KAASzkB,GAAG,qBAAsBtO,KAAKmwB,sBACvC4C,KAASzkB,GAAG,6BAA8BtO,KAAKkiE,8BAC/CnvC,KAASzkB,GAAG,2BAA4BtO,KAAKk/B,4BAC7CnM,KAASzkB,GAAG,wBAAyBtO,KAAK2iE,yBAE1CxrD,KAAa7I,GAAG,6BAA8BtO,KAAKyiE,+BACnDtrD,KAAa7I,GAAG,8BAA+BtO,KAAKyiE,iC,6CAIpD1vC,KAASxkB,IAAI,qBAAsBvO,KAAKmwB,sBACxC4C,KAASxkB,IAAI,6BAA8BvO,KAAKkiE,8BAChDnvC,KAASxkB,IAAI,2BAA4BvO,KAAKk/B,4BAC9CnM,KAASxkB,IAAI,wBAAyBvO,KAAK2iE,yBAE3CxrD,KAAa5I,IAAI,6BAA8BvO,KAAKyiE,+BACpDtrD,KAAa5I,IAAI,8BAA+BvO,KAAKyiE,iC,+BAgG/C,IACE3yD,EAAM9P,KAAKP,MAAXqQ,EADH,EAUD9P,KAAKjB,MAPLogC,EAHC,EAGDA,mBACAyjC,EAJC,EAIDA,gBACAF,EALC,EAKDA,eACAN,EANC,EAMDA,iBACAD,EAPC,EAODA,wBACAE,EARC,EAQDA,OACAzsD,EATC,EASDA,WAGEw2B,EAAQx2B,EAAaA,EAAW9B,OAAS,EAE3C2nC,EAAU,KACVinB,IACAjnB,EAAU,kBAAC,GAAD,CAAerP,MAAOs2B,KAGpC,IAAMr0D,EAAS0kB,KAASsG,YAClBnqB,EAAOC,IAAU1G,IAAI4F,GAErBwyD,EAAmBC,YAAqBzyD,GAC1CkO,EAAQ/B,YAAanM,GAAQ,EAAMyB,GACnCmN,EAAW2jD,YAAgBvyD,GAAQ,GACnC40D,GAAwB,EAE5B,GAAIL,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACDrmD,EAAQvc,KAAK8iE,SAAS,cACtB7lD,EAAW,GACXgmD,GAAwB,EACxB,MACJ,IAAK,mCACD1mD,EAAQvc,KAAK8iE,SAAS,uBACtB7lD,EAAW,GACXgmD,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACD1mD,EAAQvc,KAAK8iE,SAAS,YACtB7lD,EAAW,GACXgmD,GAAwB,EACxB,MACJ,IAAK,mCACD1mD,EAAQvc,KAAK8iE,SAAS,uBACtB7lD,EAAW,GACXgmD,GAAwB,OAG7B,GAAI9jC,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACD5iB,EAAQvc,KAAK8iE,SAAS,eACtB7lD,EAAW,GACXgmD,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACD1mD,EAAQvc,KAAK8iE,SAAS,WACtB7lD,EAAW,GACXgmD,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACD1mD,EAAQvc,KAAK8iE,SAAS,WACtB7lD,EAAW,GACXgmD,GAAwB,OAIhC1mD,EAAQvc,KAAK8iE,SAAS,WACtB7lD,EAAW,GACXgmD,GAAwB,EAuC5B,OApCAxnB,EAAUA,GACN,yBAAKx7C,UAAU,kBACVgjE,EACG,yBACIhjE,UAAWgM,IAAW,gBAAiB,OAAQiD,EAAO,iBAAmB,kBACzE7C,QAASrM,KAAKq/D,iBACd,0BAAMp/D,UAAU,yBAAyBsc,GACzC,kBAAC2mD,GAAA,EAAD,MACA,0BACIjjE,UAAWgM,IAAW,sBAAuB,CAAE,uBAAwB40D,KACtE5jD,GAEL,0BAAMhd,UAAU,wBAGpB,kBAAC,GAAD,CACIA,UAAWgM,IAAW,OAAQ,kBAC9BoC,OAAQA,EACRhC,QAASrM,KAAKq/D,kBAGtB,kBAAC,GAAD,CAAehxD,OAAQA,IACtBa,GACG,oCACI,kBAAC4H,EAAA,EAAD,CACI7W,UAAU,6BACV+W,aAAW,SACX3K,QAASrM,KAAK6iE,kBACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAgBxD,gBAAiBr/D,KAAKq/D,oBAOlD,oCACK5jB,EACD,kBAAC,IAAD,CACIrgC,mBAAoB,EACpBH,KAAMmnD,EACN/mD,QAASrb,KAAKuiE,kBACdjnD,kBAAgB,uBAChB,kBAAC,IAAD,CAAalc,GAAG,uBAAhB,WACA,kBAAC,KAAD,KACI,kBAAC+tC,GAAA,EAAD,KACe,IAAVf,EACK,sCADL,gCAE8BA,EAF9B,eAIHv2B,aAAaxH,GACX,kBAAC8+B,GAAA,EAAD,MACO5uB,YAAclQ,KAAsB,IAAV+9B,EACvB,gDACA,oDAIV,oCAEQ+1B,GACA,kBAAC3mB,GAAA,EAAD,CACAC,QACI,kBAACkC,GAAA,EAAD,CAAU39B,QAASqiD,EAAQl1D,SAAUnN,KAAKsiE,mBAAoBrrD,MAAM,YAExEkW,MACI5b,aAAclD,GAAd,qBACoBwD,YAAkBxD,GAAQ,EAAOyB,IAC/C,qBAS1B,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAKuiE,kBAAmBtrD,MAAM,WAC1CnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAKwiE,qBAAsBvrD,MAAM,WAC7CnH,EAAE,c,GAvTVtP,aAgUNiR,iBAAkBwwD,I,8HC3KlBkB,I,kNAzKXpkE,MAAQ,CACJugC,SAAU,KACVv4B,MAAO6B,IAAYvE,OACnB++D,UAAWx6D,IAAYvE,OACvBuC,UAAU,EACVy8D,YAAY,EACZC,WAAW,G,EAWfC,0BAA4B,SAAA11D,GAAW,IAC3BxJ,EAAuBwJ,EAAvBxJ,OAAQ4D,EAAe4F,EAAf5F,gBAEGqpC,IAAfrpC,EACA,EAAKvI,SAAS,CAAEqH,MAAO1C,IAEvB,EAAK3E,SAAS,CAAEqH,MAAO1C,EAAQ++D,UAAWn7D,K,EAIlDu7D,kBAAoB,SAAAlkC,GAChB,EAAK5/B,SAAS,CAAE4/B,SAAUA,K,EAG9BmkC,mBAAqB,WAAO,IAAD,EACqB,EAAK1kE,MAAzC6H,EADe,EACfA,SAAUy8D,EADK,EACLA,WAAYC,EADP,EACOA,UAE1B18D,GACAy8D,GACAC,GAEJ,EAAK5jE,SAAS,CAAE4/B,SAAU,Q,EAG9BokC,iBAAmB,SAAC1/D,EAAO2/D,GACvB,EAAKjkE,SAAS,CAAE2jE,YAAY,IAExBM,GACA,EAAKH,kBAAkBx/D,EAAMu7B,gB,EAIrCqkC,iBAAmB,WACf,EAAKlkE,SAAS,CAAE2jE,YAAY,GAAS,WACjC,EAAKI,wB,EAIbI,sBAAwB,WACpB,EAAKnkE,SAAS,CAAE4jE,WAAW,GAAS,WAChC,EAAKG,wB,EAIbK,iBAAmB,WAAO,IAAD,EACQ,EAAK/kE,MAA1BgI,EADa,EACbA,MAAOq8D,EADM,EACNA,UACTW,EAAYh9D,EAAQ,EAAI,EAAIq8D,GAAaY,IAE/C3kE,IAAgByF,aAAa,CACzB,QAAS,0BACTT,OAAQ0/D,K,EAIhBj9D,aAAe,SAAC9C,EAAO+C,GAAW,IAAD,EACG,EAAKhI,MAA7B6H,EADqB,EACrBA,SAAUw8D,EADW,EACXA,UAEdx8D,EACAvH,IAAgByF,aAAa,CACzB,QAAS,0BACTT,OAAQ0C,IAGZ1H,IAAgByF,aAAa,CACzB,QAAS,0BACTmD,WAAYlB,EAAQ,EAAIA,EAAQq8D,EAChC/+D,OAAQ0C,K,EAKpBk9D,gBAAkB,WAAO,IACbl9D,EAAU,EAAKhI,MAAfgI,MAER,EAAKrH,SAAS,CACVkH,UAAU,EACVw8D,UAAWr8D,K,EAInBm9D,cAAgB,WAAO,IAAD,EACW,EAAKnlE,MAA1BgI,EADU,EACVA,MAAOq8D,EADG,EACHA,UAEf,EAAK1jE,SACD,CACIkH,UAAU,EACVw8D,UAAWr8D,EAAQ,EAAIA,EAAQq8D,GAEnC,WACI,EAAKK,wB,EAKjBn2D,cAAgB,SAAAvG,GACZ,OAAc,IAAVA,EACO,kBAAC,KAAD,CAAe8J,SAAS,UAG/B9J,EAAQ,IACD,kBAAC,KAAD,CAAgB8J,SAAS,UAGhC9J,EAAQ,GACD,kBAAC,KAAD,CAAgB8J,SAAS,UAG7B,kBAAC,KAAD,CAAcA,SAAS,W,mFAlH9BjI,IAAY0F,GAAG,0BAA2BtO,KAAKujE,6B,6CAI/C36D,IAAY2F,IAAI,0BAA2BvO,KAAKujE,6B,+BAiH1C,IAAD,SACuBvjE,KAAKjB,MAAzBugC,EADH,EACGA,SAAUv4B,EADb,EACaA,MACZkU,EAAO4L,QAAQyY,GAErB,OACI,yBACI9yB,aAAc,SAAAJ,GAAC,OAAI,EAAKs3D,iBAAiBt3D,GAAG,IAC5CK,aAAczM,KAAK4jE,iBACnBlgE,MAAO,CACHkP,SAAU,WACVu7C,WAAY,gBAEhB,kBAACr3C,EAAA,EAAD,CAAY7W,UAAU,uBAAuBgX,MAAM,UAAU5K,QAASrM,KAAK8jE,kBACtE9jE,KAAKsN,cAAcvG,IAExB,yBACIrD,MAAO,CACHkP,SAAU,WACVu7C,WAAY,cACZgW,WAAYlpD,EAAO,UAAY,SAC/By5B,OAAQ,GAEZloC,aAAc,SAAAJ,GAAC,OAAI,EAAKs3D,iBAAiBt3D,GAAG,IAC5CK,aAAczM,KAAK6jE,uBACnB,yBAAK5jE,UAAU,uBACX,kBAAC0M,EAAA,EAAD,CACIhL,IAAK,EACLiL,IAAK,EACLC,KAAM,IACN9F,MAAOA,EACPoG,SAAUnN,KAAK8G,aACfs9D,YAAapkE,KAAKikE,gBAClBI,UAAWrkE,KAAKkkE,cAChBI,YAAY,oB,GAjKb/jE,IAAMC,Y,0CC4ElB+jE,G,YAhFX,WAAY9kE,GAAQ,IAAD,uBACf,4CAAMA,KAiBV+kE,0BAA4B,SAAA32D,GAAW,IAC3B8kD,EAAW9kD,EAAX8kD,OAER,EAAKjzD,SAAS,CAAEizD,YArBD,EAwBnB8R,aAAe,WAAO,IACV9R,EAAW,EAAK5zD,MAAhB4zD,OAEJ+R,EAAa/R,EACjB,OAAQA,GACJ,KAAKgS,IAAWC,KACZF,EAAaC,IAAWE,OACxB,MAEJ,KAAKF,IAAWE,OACZH,EAAaC,IAAWG,WACxB,MAEJ,KAAKH,IAAWG,WACZJ,EAAaC,IAAWC,KAKhCvlE,IAAgByF,aAAa,CACzB,QAAS,0BACT6tD,OAAQ+R,KA7CG,EAiDnBK,QAAU,SAAApS,GACN,OAAQA,GACJ,KAAKgS,IAAWC,KAGhB,KAAKD,IAAWE,OACZ,OAAO,kBAAC,KAAD,CAAYh0D,SAAS,UAEhC,KAAK8zD,IAAWG,WACZ,OAAO,kBAAC,KAAD,CAAej0D,SAAS,UAEnC,QACI,OAAO,kBAAC,KAAD,CAAYA,SAAS,YA7DrB,IAGP8hD,EAAW/pD,IAAX+pD,OAHO,OAKf,EAAK5zD,MAAQ,CACT4zD,UANW,E,iFAWf/pD,IAAY0F,GAAG,0BAA2BtO,KAAKwkE,6B,6CAI/C57D,IAAY2F,IAAI,0BAA2BvO,KAAKwkE,6B,+BAmD1C,IACE7R,EAAW3yD,KAAKjB,MAAhB4zD,OAER,OACI,kBAAC77C,EAAA,EAAD,CACI7W,UAAU,uBACVgX,MAAO07C,IAAWgS,IAAWC,KAAO,UAAY,UAChDv4D,QAASrM,KAAKykE,cACbzkE,KAAK+kE,QAAQpS,Q,GA3EHpyD,IAAMC,W,qBC+ClBwkE,G,YA/CX,WAAYvlE,GAAQ,IAAD,uBACf,4CAAMA,KAiBVwlE,2BAA6B,SAAAp3D,GAAW,IAC5Bq3D,EAAYr3D,EAAZq3D,QAER,EAAKxlE,SAAS,CAAEwlE,aArBD,EAwBnBC,cAAgB,WAAO,IACXD,EAAY,EAAKnmE,MAAjBmmE,QAER7lE,IAAgByF,aAAa,CACzB,QAAS,2BACTogE,SAAUA,KA7BC,IAGPA,EAAYt8D,IAAZs8D,QAHO,OAKf,EAAKnmE,MAAQ,CACTmmE,WANW,E,iFAWft8D,IAAY0F,GAAG,2BAA4BtO,KAAKilE,8B,6CAIhDr8D,IAAY2F,IAAI,2BAA4BvO,KAAKilE,8B,+BAkB3C,IACEC,EAAYllE,KAAKjB,MAAjBmmE,QAER,OACI,kBAACpuD,EAAA,EAAD,CACI7W,UAAU,uBACVgX,MAAQiuD,EAAsB,UAAZ,UAClB74D,QAASrM,KAAKmlE,eACd,kBAAC,KAAD,CAAat0D,SAAS,e,GA1CVtQ,IAAMC,WCmDnB4kE,G,YAlDX,WAAY3lE,GAAQ,IAAD,uBACf,4CAAMA,KAiBV4lE,gCAAkC,SAAAx3D,GAAW,IACjCy3D,EAAiBz3D,EAAjBy3D,aAER,EAAK5lE,SAAS,CAAE4lE,kBArBD,EAwBnBC,mBAAqB,WAAO,IAGlBC,EAFmB,EAAKzmE,MAAtBumE,eAGaG,IAA6BC,IAA2BD,IAE7EpmE,IAAgByF,aAAa,CACzB,QAAS,gCACTwgE,aAAcE,KAhCH,IAGPF,EAAiB18D,IAAjB08D,aAHO,OAKf,EAAKvmE,MAAQ,CACTumE,gBANW,E,iFAWf18D,IAAY0F,GAAG,gCAAiCtO,KAAKqlE,mC,6CAIrDz8D,IAAY2F,IAAI,gCAAiCvO,KAAKqlE,mC,+BAqBhD,IACEC,EAAiBtlE,KAAKjB,MAAtBumE,aAER,OACI,kBAACxuD,EAAA,EAAD,CACI7W,UAAU,uBACVgX,MAAOquD,EAAeG,IAA6B,UAAY,UAC/Dp5D,QAASrM,KAAKulE,oBACd,yBAAKtlE,UAAU,+BAAf,W,GA7CiBM,IAAMC,WC4CxBmlE,G,YA7CX,WAAYlmE,GAAQ,IAAD,8BACf,4CAAMA,KAiBVmmE,wBAA0B,SAAA/3D,GAAW,IACzBzJ,EAAgByJ,EAAhBzJ,YAER,EAAK1E,SAAS,CACV0E,YAAaA,EACbyhE,kBAAmBj6D,YAAkBlK,KAAKmK,MAAMzH,GAAe,OAvBpD,EA2BnB0hE,cAAgB,SAAC1hE,EAAa1D,GAGHkL,YAAkBlK,KAAKmK,MAAMnL,GAAY,IAKhE,OAJ0BkL,YAAkBlK,KAAKmK,MAAMzH,GAAe,KA5BtE,EAAKrF,MAAQ,CACTqF,YAAa,EACb1D,SAAU,EACViL,WAAY,EAAKm6D,cAAc,EAAG,IANvB,E,iFAWfl9D,IAAY0F,GAAG,wBAAyBtO,KAAK4lE,2B,6CAI7Ch9D,IAAY2F,IAAI,wBAAyBvO,KAAK4lE,2B,+BAuBxC,IACEC,EAAsB7lE,KAAKjB,MAA3B8mE,kBAER,OAAO,oCAAGA,O,GA1CCtlE,IAAMC,W,oBC6MVulE,I,mBAvMX,WAAYtmE,GAAQ,IAAD,uBACf,4CAAMA,KA0BVumE,eAAiB,WACb,IAAMxkD,EAAO,EAAK+H,QAAQ3R,QAC1B,GAAK4J,EAAL,CAFmB,IAIXmD,EAJW,gBAIXA,UACR,GAAKA,EAAL,CAEA,IAAMoW,EAAO,EAAKkrC,WAAWx9D,IAAIkc,GACjC,GAAKoW,EAAL,CAEA,IAAMouB,EAAO+c,eAAqBnrC,GAC7BouB,IAEL3nC,EAAKR,UAAYmoC,EAAKtX,UAAY,QAxCnB,EAyDnBs0B,kCAAoC,SAAAt4D,GAAW,IACnCu4D,EAASv4D,EAATu4D,KAEJA,EACA,EAAK1mE,SACD,CACI2mE,kBAAmBD,GAEvB,WACI,EAAKE,YAIb,EAAK5mE,SACD,CACI2mE,kBAAmBD,GAEvB,WACI,EAAKG,cA3EF,EAiFnBC,0BAA4B,SAAA34D,GAAW,IAC3BQ,EAAsBR,EAAtBQ,OAAQsW,EAAc9W,EAAd8W,UAEhB,EAAKtW,OAASA,EACd,EAAKsW,UAAYA,GArFF,EAwFnB8hD,mCAAqC,SAAA54D,GAAW,IAAD,kBACnCQ,EADmC,EACnCA,OAAQsW,EAD2B,EAC3BA,UAEZ9W,EAAOQ,SAAWA,GAAUR,EAAO8W,YAAcA,GACjD,EAAKjlB,SAAS,CACVgnE,SAAU,QA7FH,EAkGnBC,4BAA8B,SAAA94D,GAAW,IAAD,kBAC5BQ,EAD4B,EAC5BA,OAAQsW,EADoB,EACpBA,UACR+hD,EAAa74D,EAAb64D,SAEJr4D,IAAWq4D,EAASr4D,QAAUsW,IAAc+hD,EAAS/hD,WACrD,EAAKjlB,SAAS,CACVgnE,SAAUA,KAxGH,EA6GnBJ,QAAU,WACN/+D,aAAa,EAAKq/D,aAElB,EAAKA,YAAcn/D,WAAW,WAAO,IAAD,EACc,EAAK1I,MAA3C8nE,EADwB,EACxBA,eAAgBR,EADQ,EACRA,kBACxB,EAAK3mE,SAAS,CACVub,KAAM4rD,GAAkBR,KAE7B,MArHY,EAwHnBE,SAAW,WACPh/D,aAAa,EAAK84B,SAElB,EAAKA,QAAU54B,WAAW,WAAO,IAAD,EACkB,EAAK1I,MAA3C8nE,EADoB,EACpBA,eAAgBR,EADI,EACJA,kBACxB,EAAK3mE,SAAS,CACVub,KAAM4rD,GAAkBR,KAE7B,MAhIY,EAmInB3C,iBAAmB,WACf,EAAKhkE,SAAS,CACV2mE,mBAAmB,EACnBprD,MAAM,KAtIK,EA0InB2oD,iBAAmB,WACf,EAAKlkE,SACD,CACI2mE,mBAAmB,GAEvB,WACI,EAAKE,cAhJE,EAqJnBj9C,aAAe,WACX,IAAM9H,EAAO,EAAK+H,QAAQ3R,QACrB4J,IAEDA,EAAKR,WAAawI,KAClBnqB,IAAgByF,aAAa,CACzB,QAAS,kCAEN0c,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,MACjEnqB,IAAgByF,aAAa,CACzB,QAAS,oCA5JjB,EAAKykB,QAAUhpB,IAAMsa,YACrB,EAAKorD,WAAa,IAAI/xD,IAJP,IAMPoC,EAAsB1N,IAAtB0N,QAASowD,EAAa99D,IAAb89D,SANF,OAQf,EAAKr4D,OAASiI,EAAUA,EAAQ7G,QAAU,EAC1C,EAAKkV,UAAYrO,EAAUA,EAAQlX,GAAK,EAExC,EAAKL,MAAQ,CACTkc,MAAM,EACN4rD,gBAAgB,EAChBR,mBAAmB,EACnBK,SAAUA,GAfC,E,gFAmBA7mE,EAAWC,EAAWC,GAAW,IACxCkb,EAASjb,KAAKjB,MAAdkc,MAEHnb,EAAUmb,MAAQA,GACnBjb,KAAKgmE,mB,0CAqBTp9D,IAAY0F,GAAG,0BAA2BtO,KAAKwmE,2BAC/C59D,IAAY0F,GAAG,4BAA6BtO,KAAK2mE,6BACjD/9D,IAAY0F,GAAG,mCAAoCtO,KAAKymE,oCACxD79D,IAAY0F,GAAG,kCAAmCtO,KAAKmmE,qC,6CAIvDv9D,IAAY2F,IAAI,0BAA2BvO,KAAKwmE,2BAChD59D,IAAY2F,IAAI,4BAA6BvO,KAAK2mE,6BAClD/9D,IAAY2F,IAAI,mCAAoCvO,KAAKymE,oCACzD79D,IAAY2F,IAAI,kCAAmCvO,KAAKmmE,qC,+BA8GlD,IAAD,SACsBnmE,KAAKjB,MAAxBkc,EADH,EACGA,KAAMyrD,EADT,EACSA,SACd,IAAKzrD,EAAM,OAAO,KAClB,IAAKyrD,EAAU,OAAO,KAHjB,IAKGz9C,EAAay9C,EAAbz9C,SACR,OAAKA,EACDA,EAASnV,QAAU,EAAU,MAEjC9T,KAAKimE,WAAWxpC,QAGZ,yBAAKx8B,UAAU,YACX,yBAAKA,UAAU,oBACX,yBACIub,IAAKxb,KAAKupB,QACVtpB,UAAU,iBACVuM,aAAcxM,KAAK0jE,iBACnBj3D,aAAczM,KAAK4jE,iBACnBt5C,SAAUtqB,KAAKspB,cACdo9C,EAASz9C,SACLnB,MAAM,GACNg/C,UACAzxD,IAAI,SAAA/T,GAAC,OACF,yBAAKyV,IAAKzV,EAAElC,GAAIoc,IAAK,SAAA8G,GAAE,OAAI,EAAK2jD,WAAWjtD,IAAI1X,EAAElC,GAAIkjB,IAAKriB,UAAU,iBAC/DgmB,aAAS3kB,EAAG,kBAAM4kB,aAAU5kB,EAAEmO,QAASnO,EAAElC,aAnBhD,S,GA3KPmB,IAAMC,Y,SCkBvBumE,I,mBACF,WAAYtnE,GAAQ,IAAD,uBACf,4CAAMA,KA0HVgxD,0BAA4B,SAAA5iD,GACxB,IAAMvK,EAAS,EAAK0jE,SAASpvD,QACxBtU,IAEAA,EAAOsC,SACR,EAAKqhE,cAAc,KACnB,EAAKC,iBAAkB,KAjIZ,EAqInBrW,yBAA2B,SAAAhjD,GACvB,IAAMvK,EAAS,EAAK0jE,SAASpvD,QACxBtU,GAEDA,EAAOsC,QAAU,EAAKshE,kBACtB,EAAKC,aAAa,KAClB,EAAKD,iBAAkB,IA3IZ,EA+InB7B,gCAAkC,SAAAx3D,GAAW,IACjCy3D,EAAiBz3D,EAAjBy3D,aAEFhiE,EAAS,EAAK0jE,SAASpvD,QACxBtU,IAELA,EAAOgiE,aAAeA,IArJP,EAwJnB/B,0BAA4B,SAAA11D,GAAW,IAC3BxJ,EAAWwJ,EAAXxJ,OAEFf,EAAS,EAAK0jE,SAASpvD,QACxBtU,IAELA,EAAOe,OAASA,IA9JD,EAiKnB+iE,wBAA0B,SAAAv5D,GAAW,IACzBQ,EAA6BR,EAA7BQ,OAAQsW,EAAqB9W,EAArB8W,UAAW5d,EAAU8G,EAAV9G,MACnBuP,EAAY,EAAKvX,MAAjBuX,QAER,GAAKA,EAAL,CAJgC,IAMxB7G,EAAyB6G,EAAzB7G,QAASrQ,EAAgBkX,EAAhBlX,GACjB,GADiCkX,EAAZe,SAEjBhJ,IAAWoB,GAAWkV,IAAcvlB,EAAxC,CAEA,IAAMkE,EAAS,EAAK0jE,SAASpvD,QACxBtU,GACAA,EAAO5C,WAEZ4C,EAAOc,YAAc2C,EAAQzD,EAAO5C,aA/KrB,EAkLnBynD,iCAAmC,SAAAt6C,GAC/B,EAAKw5D,mBAAqBxgD,QAAQkM,KAASq1B,qBAnL5B,EAsLnBkf,+BAAiC,SAAAz5D,GAC7B,EAAKw5D,oBAAqB,GAvLX,EA0LnBE,+BAAiC,SAAA15D,GAC7B,EAAKw5D,oBAAqB,GA3LX,EA8LnBG,8BAAgC,SAAA35D,GAC5B,EAAKw5D,oBAAqB,EAE1B,IAAM/jE,EAAS,EAAK0jE,SAASpvD,QACxBtU,GAELA,EAAOoB,SApMQ,EAuMnB+iE,iBAAmB,SAAAnxD,GAAY,IACnB7G,EAAgB6G,EAAhB7G,QAASrQ,EAAOkX,EAAPlX,GAEJsoE,EAAY,EAAK3oE,MAAtBsQ,IAEFA,EAAM,EAAKs4D,YAAYrxD,GACvB8kD,EAAW,EAAKwM,iBAAiBtxD,GACjCuxD,EAAUhhD,QAAQxX,GAChBq3D,EAAa99D,IAAb89D,SAER,EAAKhnE,SACD,CACI4W,UACAowD,WACAmB,UACAx4D,MACA+rD,YAEJ,WACI,IAAM93D,EAAS,EAAK0jE,SAASpvD,QACxBtU,IAEDokE,IAAYr4D,GACZ/L,EAAO45B,OAEX55B,EAAOc,YAAc,EAAKnD,UACtB,EAAKomE,oBACL/jE,EAAOoB,QAEPrF,IAAgByF,aAAa,CACzB,QAAS,yBACTuJ,OAAQoB,EACRkV,UAAWvlB,KAERkE,EAAOsC,QACdtC,EAAOmB,WA1OJ,EAgPnBqjE,wBAA0B,SAAAj6D,GAAW,IACzBQ,EAAsBR,EAAtBQ,OAAQsW,EAAc9W,EAAd8W,UACRrO,EAAY,EAAKvX,MAAjBuX,QAER,GAAKA,EAAL,CAJgC,IAMxB7G,EAAyB6G,EAAzB7G,QAASrQ,EAAgBkX,EAAhBlX,GAAIiY,EAAYf,EAAZe,QACrB,GAAKA,GACDhJ,IAAWoB,GAAWkV,IAAcvlB,EAExC,OAAQiY,EAAQ,UACZ,IAAK,cAAgB,IACToV,EAAapV,EAAboV,SACR,GAAIA,EAAU,CAAC,IACH4lC,EAAkC5lC,EAAlC4lC,MAAOviC,EAA2BrD,EAA3BqD,WAAYi4C,EAAet7C,EAAfs7C,WAE3B,GAAI1V,EAAO,CACP,GAAI2V,cAAqB,OAED3V,EAAhBA,OAEJ,EAAKoV,iBAAiBnxD,GAI9B,GAAIwZ,EACkBA,EAAVN,OAEJ,EAAKi4C,iBAAiBnxD,GAI9B,GAAIyxD,EACkBA,EAAV5jE,OAEJ,EAAKsjE,iBAAiBnxD,GAKlC,MAEJ,IAAK,eAAiB,IACV+7C,EAAUh7C,EAAVg7C,MACR,GAAIA,EAAO,CACP,GAAI2V,cAAqB,OAED3V,EAAhBA,OAEJ,EAAKoV,iBAAiBnxD,GAI9B,MAEJ,IAAK,mBAAqB,IACdwZ,EAAezY,EAAfyY,WACR,GAAIA,EACkBA,EAAVN,OAEJ,EAAKi4C,iBAAiBnxD,GAI9B,MAEJ,IAAK,mBAAqB,IACdyxD,EAAe1wD,EAAf0wD,WACR,GAAIA,EACkBA,EAAV5jE,OAEJ,EAAKsjE,iBAAiBnxD,MAvTvB,EAgUnBqwD,4BAA8B,SAAA94D,GAAW,IAC7B64D,EAAa74D,EAAb64D,SACAr4D,EAAsBq4D,EAAtBr4D,OAAQsW,EAAc+hD,EAAd/hD,UACRrO,EAAY,EAAKvX,MAAjBuX,QAEJA,GAAWA,EAAQ7G,UAAYpB,GAAUiI,EAAQlX,KAAOulB,GACxD,EAAKjlB,SAAS,CAAEgnE,SAAUA,KAtUf,EA0UnBuB,yBAA2B,SAAAp6D,GACvB,EAAKnO,SAAS,CACV4W,QAAS,KACTowD,SAAU,KACVmB,SAAS,EACTx4D,IAAK,KACL+rD,SAAU,QAhVC,EAoVnBoL,0BAA4B,SAAA34D,GAAW,IAC3BQ,EAAsBR,EAAtBQ,OAAQsW,EAAc9W,EAAd8W,UADkB,EAET,EAAK5lB,MAAtBuX,EAF0B,EAE1BA,QAASjH,EAFiB,EAEjBA,IAEjB,GAAIiH,GAAWA,EAAQ7G,UAAYpB,GAAUiI,EAAQlX,KAAOulB,EAAW,CACnE,IAAKtV,EAAK,OAEV,IAAM/L,EAAS,EAAK0jE,SAASpvD,QAC7B,IAAKtU,EAAQ,OAEb,EAAK4jE,iBAAkB,EACnB5jE,EAAOsC,OACPtC,EAAOmB,OAEPnB,EAAOoB,aAGX,EAAK+iE,iBAAiB7+D,IAAY0N,UArWvB,EAyWnB4xD,WAAa,WACT7oE,IAAgByF,aAAa,CACzB,QAAS,2BA3WE,EA+WnBH,WAAa,WAAO,IACR2R,EAAY,EAAKvX,MAAjBuX,QACHA,GAELjX,IAAgByF,aAAa,CACzB,QAAS,0BACTuJ,OAAQiI,EAAQ7G,QAChBkV,UAAWrO,EAAQlX,MAtXR,EA0XnB+oE,WAAa,WACT9oE,IAAgByF,aAAa,CACzB,QAAS,2BA5XE,EAgYnB8iE,iBAAmB,SAAAtxD,GACf,GAAIA,EAAS,CAAC,IACFe,EAAYf,EAAZe,QACR,GAAIA,EAAS,CAAC,IACFg7C,EAA4Ch7C,EAA5Cg7C,MAAOviC,EAAqCzY,EAArCyY,WAAYi4C,EAAyB1wD,EAAzB0wD,WAAYt7C,EAAapV,EAAboV,SAEvC,GAAI4lC,EACA,OAAOA,EAAM+V,UAGjB,GAAIt4C,EACA,OAAOA,EAAWs4C,UAGtB,GAAIL,EACA,MAAO,YAGX,GAAIt7C,EAAU,CACV,GAAIA,EAAS4lC,MACT,OAAO5lC,EAAS4lC,MAAM+V,UAG1B,GAAI37C,EAASqD,WACT,OAAOrD,EAASqD,WAAWs4C,UAG/B,GAAI37C,EAASs7C,WACT,MAAO,cAMvB,MAAO,IAlaQ,EAqanBJ,YAAc,SAAArxD,GACV,GAAIA,EAAS,CAAC,IACFe,EAAYf,EAAZe,QACR,GAAIA,EAAS,CAAC,IACFg7C,EAA4Ch7C,EAA5Cg7C,MAAOviC,EAAqCzY,EAArCyY,WAAYi4C,EAAyB1wD,EAAzB0wD,WAAYt7C,EAAapV,EAAboV,SAEvC,GAAI4lC,EAAO,CAAC,IACO9pD,EAAS8pD,EAAhBA,MACR,GAAI9pD,EAAM,CACN,IAAI8G,EAAMC,YAAO/G,GAMjB,OALK8G,GAAO24D,gBACR34D,EAAG,6BAAyB9G,EAAKnJ,IACjCipE,aAAeh5D,EAAK,CAAEhK,OAAQkD,EAAKnJ,GAAIoP,KAAMjG,EAAKiG,KAAM4sD,SAAU/I,EAAM+V,aAGrE/4D,GAIf,GAAIygB,EAAY,CAAC,IACLN,EAAUM,EAAVN,MACR,GAAIA,EACA,OAAOlgB,YAAOkgB,GAItB,GAAIu4C,EAAY,CAAC,IACL5jE,EAAU4jE,EAAV5jE,MACR,GAAIA,EACA,OAAOmL,YAAOnL,GAItB,GAAIsoB,EAAU,CACV,GAAIA,EAAS4lC,MAAO,CAChB,IAAM9pD,EAAOkkB,EAAS4lC,MAAMA,MAC5B,GAAI9pD,EACA,OAAO+G,YAAO/G,GAItB,GAAIkkB,EAASqD,WAAY,CAAC,IACdN,EAAU/C,EAASqD,WAAnBN,MACR,GAAIA,EACA,OAAOlgB,YAAOkgB,GAItB,GAAI/C,EAASs7C,WAAY,CAAC,IACd5jE,EAAUsoB,EAASs7C,WAAnB5jE,MACR,GAAIA,EACA,OAAOmL,YAAOnL,MAOlC,MAAO,IA/dQ,EAkenBc,YAAc,WAAsB,IAArBqjE,IAAoB,yDACvBhyD,EAAY,EAAKvX,MAAjBuX,QACHA,IAELjX,IAAgByF,aAAa,CACzB,QAAS,0BACTuJ,OAAQiI,EAAQ7G,QAChBkV,UAAWrO,EAAQlX,GACnBkpE,aAGJ,EAAK5oE,SACD,GAKA,WACIL,IAAgByF,aAAa,CACzB,QAAS,uBACTuJ,OAAQiI,EAAQ7G,QAChBkV,UAAWrO,EAAQlX,GACnBkpE,iBAxfG,EA8fnBC,iBAAmB,WACf,EAAKtjE,aAAY,IA/fF,EAkgBnByC,YAAc,WACV,IAAMpE,EAAS,EAAK0jE,SAASpvD,QACzBtU,GACAA,EAAOoB,QAGX,EAAKO,aAAY,IAxgBF,EA2gBnBf,qBAAuB,WAAO,IAClBoS,EAAY,EAAKvX,MAAjBuX,QACR,GAAKA,EAAL,CAEA,IAAMhT,EAAS,EAAK0jE,SAASpvD,QACxBtU,GAELjE,IAAgByF,aAAa,CACzB,QAAS,kCACTuJ,OAAQiI,EAAQ7G,QAChBkV,UAAWrO,EAAQlX,GACnBkF,SAAUhB,EAAOgB,SACjB5D,SAAU4C,EAAO5C,SACjB8nE,WAAYllE,EAAOklE,WACnBC,YAAanlE,EAAOmlE,gBAzhBT,EA6hBnBjjE,eAAiB,WAAO,IACZ8Q,EAAY,EAAKvX,MAAjBuX,QACR,GAAKA,EAAL,CAEA,IAAMhT,EAAS,EAAK0jE,SAASpvD,QACxBtU,GAELjE,IAAgByF,aAAa,CACzB,QAAS,4BACTuJ,OAAQiI,EAAQ7G,QAChBkV,UAAWrO,EAAQlX,GACnBkF,SAAUhB,EAAOgB,aAxiBN,EA4iBnBc,iBAAmB,WAAO,IACdkR,EAAY,EAAKvX,MAAjBuX,QACR,GAAKA,EAAL,CAEA,IAAMhT,EAAS,EAAK0jE,SAASpvD,QACxBtU,IAEL,EAAK5D,SAAS,CACV0E,YAAad,EAAOc,YACpByhE,kBAAmBj6D,YAAkBlK,KAAKmK,MAAMvI,EAAOc,aAAe,MAG1E/E,IAAgByF,aAAa,CACzB,QAAS,wBACTuJ,OAAQiI,EAAQ7G,QAChBkV,UAAWrO,EAAQlX,GACnBsB,SAAU4C,EAAO5C,SACjB0D,YAAad,EAAOc,YACpBE,SAAUhB,EAAOgB,SACjBy4D,UAAWhuC,KAAK3tB,WA/jBL,EAmkBnBoD,cAAgB,WAAO,IACX8R,EAAY,EAAKvX,MAAjBuX,QACR,GAAKA,EAAL,CAEA,IAAMhT,EAAS,EAAK0jE,SAASpvD,QAC7B,GAAKtU,EAAL,CALkB,IAOVgiE,EAAyB18D,IAAzB08D,aAAcjhE,EAAWuE,IAAXvE,OAEdoL,EAAgB6G,EAAhB7G,QAASrQ,EAAOkX,EAAPlX,GACXizD,EAAQqW,aAASj5D,EAASrQ,GAMhC,GAJAkE,EAAOgiE,aAAejT,EAAQoT,IAA6BH,EAC3DhiE,EAAOe,OAASA,EAChBf,EAAOqlE,OAAQ,GAEXtW,EAAJ,CAIA,IAAIsI,EAAS,KACT,kBAAmBr3D,EACnBq3D,EAASr3D,EAAOslE,gBACT,qBAAsBtlE,IAC7Bq3D,EAASr3D,EAAOulE,oBAGflO,GAILt7D,IAAgByF,aAAa,CACzB,QAAS,iCACTuJ,OAAQiI,EAAQ7G,QAChBkV,UAAWrO,EAAQlX,GACnBu7D,OAAQA,QAtmBG,EA0mBnBmO,gBAAkB,WAAO,IACbxyD,EAAY,EAAKvX,MAAjBuX,QACR,GAAKA,EAAL,CAEA,EAAK5W,SAAS,CACVmoE,SAAS,IAGb,IAAMvkE,EAAS,EAAK0jE,SAASpvD,QACxBtU,GAELjE,IAAgByF,aAAa,CACzB,QAAS,wBACTuJ,OAAQiI,EAAQ7G,QAChBkV,UAAWrO,EAAQlX,GACnBgF,YAAad,EAAOc,YACpB1D,SAAU4C,EAAO5C,SACjBq8D,UAAWhuC,KAAK3tB,UA3nBL,EA+nBnB2nE,iBAAmB,WAAO,IACdzyD,EAAY,EAAKvX,MAAjBuX,QACHA,IAEL,EAAK5W,SAAS,CACVmoE,SAAS,IAGE,EAAKb,SAASpvD,SAG7BvY,IAAgByF,aAAa,CACzB,QAAS,yBACTuJ,OAAQiI,EAAQ7G,QAChBkV,UAAWrO,EAAQlX,OA7oBR,EAipBnBmmE,mBAAqB,WAAO,IAGlBC,EAFmB,EAAKzmE,MAAtBumE,eAGaG,IAA6BC,IAA2BD,IAE7E,EAAK/lE,SACD,CACI4lE,aAAcE,GAElB,WACI,IAAMliE,EAAS,EAAK0jE,SAASpvD,QACxBtU,IAELA,EAAOgiE,aAAeE,KAI9BnmE,IAAgByF,aAAa,CACzB,QAAS,gCACTwgE,aAAcE,KArqBH,EAyqBnBwD,QAAU,SAAC1yD,EAASowD,GAChB,IAAKpwD,EAAS,OAAO,EACrB,IAAKowD,IAAaA,EAASz9C,SAASnV,OAAQ,OAAO,EAFtB,IAIrBrE,EAAgB6G,EAAhB7G,QAASrQ,EAAOkX,EAAPlX,GAEXqoB,EAAQi/C,EAASz9C,SAASvB,UAAU,SAAApmB,GAAC,OAAIA,EAAEmO,UAAYA,GAAWnO,EAAElC,KAAOA,IACjF,OAAe,IAAXqoB,GAEGA,EAAQ,EAAIi/C,EAASz9C,SAASnV,QAlrBtB,EAqrBnBm1D,QAAU,SAAC3yD,EAASowD,GAChB,IAAKpwD,EAAS,OAAO,EACrB,IAAKowD,IAAaA,EAASz9C,SAASnV,OAAQ,OAAO,EAFtB,IAIrBrE,EAAgB6G,EAAhB7G,QAASrQ,EAAOkX,EAAPlX,GAEXqoB,EAAQi/C,EAASz9C,SAASvB,UAAU,SAAApmB,GAAC,OAAIA,EAAEmO,UAAYA,GAAWnO,EAAElC,KAAOA,IACjF,OAAe,IAAXqoB,GAEGA,EAAQ,GAAK,GA9rBL,EAisBnByhD,sBAAwB,WACpB7pE,IAAgByF,aAAa,CACzB,QAAS,kCACTshE,MAAM,KApsBK,EAwsBnB+C,sBAAwB,WACpB9pE,IAAgByF,aAAa,CACzB,QAAS,kCACTshE,MAAM,KA3sBK,EA+sBnBgD,iBAAmB,WAAO,IACd9yD,EAAY,EAAKvX,MAAjBuX,QACHA,GAEL8K,aAAS9K,EAAQ7G,QAAS6G,EAAQlX,KAhtBlC,EAAK4nE,SAAWzmE,IAAMsa,YAHP,IAKPvE,EAAsB1N,IAAtB0N,QAASowD,EAAa99D,IAAb89D,SALF,OAOf,EAAKzlE,UAAYooE,IAEjB,EAAKtqE,MAAQ,CACTqF,YAAa,EACbyhE,kBAAmBj6D,YAAkB,GACrC0K,QAASA,EACTowD,SAAUA,EACVmB,SAAS,EACTx4D,IAAK,EAAKs4D,YAAYrxD,GACtB8kD,SAAU,EAAKwM,iBAAiBtxD,IAhBrB,E,mFAoBGlG,EAAWC,EAAWyqB,GAAc,IAC9CnZ,EAAU3hB,KAAKP,MAAfkiB,MAD6C,EAET3hB,KAAKjB,MAAzCuX,EAF6C,EAE7CA,QAASowD,EAFoC,EAEpCA,SAAUr3D,EAF0B,EAE1BA,IAAKw4D,EAFqB,EAErBA,QAEhC,OAAIz3D,EAAUuR,QAAUA,IAIpBtR,EAAUiG,UAAYA,IAItBjG,EAAUq2D,WAAaA,IAIvBr2D,EAAUhB,MAAQA,GAIlBgB,EAAUw3D,UAAYA,O,0CAQ1B90C,KAASzkB,GAAG,iCAAkCtO,KAAKmoD,kCACnD3/C,IAAU8F,GAAG,4BAA6BtO,KAAK8nE,yBAC/Ct/D,IAAU8F,GAAG,4BAA6BtO,KAAK8nE,yBAC/Ct/D,IAAU8F,GAAG,wBAAyBtO,KAAK8nE,yBAC3C3wD,KAAa7I,GAAG,0BAA2BtO,KAAKywD,2BAChDt5C,KAAa7I,GAAG,yBAA0BtO,KAAK6wD,0BAC/CjoD,IAAY0F,GAAG,0BAA2BtO,KAAKwmE,2BAC/C59D,IAAY0F,GAAG,yBAA0BtO,KAAKioE,0BAC9Cr/D,IAAY0F,GAAG,4BAA6BtO,KAAK2mE,6BACjD/9D,IAAY0F,GAAG,8BAA+BtO,KAAKwnE,+BACnD5+D,IAAY0F,GAAG,+BAAgCtO,KAAKunE,gCACpD3+D,IAAY0F,GAAG,+BAAgCtO,KAAKsnE,gCACpD1+D,IAAY0F,GAAG,0BAA2BtO,KAAKujE,2BAC/C36D,IAAY0F,GAAG,gCAAiCtO,KAAKqlE,iCACrDz8D,IAAY0F,GAAG,wBAAyBtO,KAAKonE,2B,6CAK7Cr0C,KAASxkB,IAAI,iCAAkCvO,KAAKmoD,kCACpD3/C,IAAU+F,IAAI,4BAA6BvO,KAAK8nE,yBAChDt/D,IAAU+F,IAAI,4BAA6BvO,KAAK8nE,yBAChDt/D,IAAU+F,IAAI,wBAAyBvO,KAAK8nE,yBAC5C3wD,KAAa5I,IAAI,0BAA2BvO,KAAKywD,2BACjDt5C,KAAa5I,IAAI,yBAA0BvO,KAAK6wD,0BAChDjoD,IAAY2F,IAAI,0BAA2BvO,KAAKwmE,2BAChD59D,IAAY2F,IAAI,yBAA0BvO,KAAKioE,0BAC/Cr/D,IAAY2F,IAAI,4BAA6BvO,KAAK2mE,6BAClD/9D,IAAY2F,IAAI,8BAA+BvO,KAAKwnE,+BACpD5+D,IAAY2F,IAAI,+BAAgCvO,KAAKunE,gCACrD3+D,IAAY2F,IAAI,+BAAgCvO,KAAKsnE,gCACrD1+D,IAAY2F,IAAI,0BAA2BvO,KAAKujE,2BAChD36D,IAAY2F,IAAI,gCAAiCvO,KAAKqlE,iCACtDz8D,IAAY2F,IAAI,wBAAyBvO,KAAKonE,2B,oCAGpC1mE,GAAW,IAAD,OACd4C,EAAStD,KAAKgnE,SAASpvD,QAC7B,GAAKtU,EAAL,CAEA,IACI8oC,EAAQ,EACNk9B,EAAgBhmE,EAAOe,OAC7BrE,KAAKupE,eAAiB5Y,YAAY,WAC1BvkB,GAJgB,IAKhB9oC,EAAOoB,QACPpB,EAAOe,OAASilE,EAChB9K,cAAc,EAAK+K,kBAEnBjmE,EAAOe,OAASilE,GAAiBl9B,EAAQ,GACzCA,MAEL1rC,EAZqB,O,mCAefA,GAAW,IAAD,OACb4C,EAAStD,KAAKgnE,SAASpvD,QAC7B,GAAKtU,EAAL,CAEA,IACI8oC,EAAQ,EACNk9B,EAAgBhmE,EAAOe,OAC7Bf,EAAOe,OAAS,EAChBf,EAAOmB,OACPzE,KAAKupE,eAAiB5Y,YAAY,WAC1BvkB,GANgB,IAOhB9oC,EAAOe,OAASilE,EAChB9K,cAAc,EAAK+K,kBAEnBjmE,EAAOe,OAASilE,EAVA,IAUmCl9B,EAAQ,GAC3DA,MAEL1rC,EAbqB,O,+BA2mBlB,IACEoP,EAAM9P,KAAKP,MAAXqQ,EADH,EAEiD9P,KAAKjB,MAAnD8oE,EAFH,EAEGA,QAASvxD,EAFZ,EAEYA,QAASowD,EAFrB,EAEqBA,SAAUr3D,EAF/B,EAE+BA,IAAK+rD,EAFpC,EAEoCA,SAErC/I,GAAQ,EACZ,GAAI/7C,EAAS,CAAC,IACF7G,EAAgB6G,EAAhB7G,QAASrQ,EAAOkX,EAAPlX,GACjBizD,EAAQqW,aAASj5D,EAASrQ,GAG9B,IAAMyvB,EAAOvY,EAAUA,EAAQuY,KAAO,KAEhCtS,EAAQitD,aAAclzD,EAASxG,GAC/B25D,EAAcC,aAAY76C,GAC1B86C,EAAUC,aAAQ/6C,GAClB+vB,GAAYyT,EACZwX,GAAoBxX,EACpByX,EAAazX,EACb0X,EAAc1X,EACd2W,EAAUhpE,KAAKgpE,QAAQ1yD,EAASowD,GAChCuC,EAAUjpE,KAAKipE,QAAQ3yD,EAASowD,GAEhCtmE,EAASiP,EAAM,4BAAQA,IAAKA,EAAKoN,KAAM2+C,IAAc,KAE3D,OACI,oCACI,2BACIn7D,UAAU,sBACVub,IAAKxb,KAAKgnE,SACVgD,UAAU,EACVC,UAAU,EACVv9D,MAAO,GACPgC,OAAQ,GACRw7D,iBAAkBlqE,KAAKkE,qBACvBimE,UAAWnqE,KAAKwE,cAChBI,OAAQ5E,KAAK8oE,gBACb9jE,QAAShF,KAAK+oE,iBACd7jE,QAASlF,KAAKuoE,iBACd6B,aAAcpqE,KAAKoF,iBACnBilE,WAAYrqE,KAAKwF,gBAEhBpF,GAEJkW,GACG,yBAAKrW,UAAU,iBACX,kBAAC6W,EAAA,EAAD,CACIvJ,UAAWy7D,EACX/oE,UAAU,uBACVgX,MAAM,UACN5K,QAASrM,KAAKkoE,YACd,kBAAC,KAAD,CAAkBr3D,SAAS,WAE/B,kBAACiG,EAAA,EAAD,CACI7W,UAAU,uBACVgX,MAAM,UACN1J,UAAW8B,EACXhD,QAASrM,KAAK2E,YACbkjE,EAAU,kBAACx6D,EAAA,EAAD,MAAgB,kBAACi9D,EAAA,EAAD,OAE/B,kBAACxzD,EAAA,EAAD,CACIvJ,UAAW07D,EACXhpE,UAAU,uBACVgX,MAAM,UACN5K,QAASrM,KAAKmoE,YACd,kBAAC,KAAD,CAAct3D,SAAS,WAE3B,kBAAC,GAAD,MACA,yBACI5Q,UAAU,wBACVuM,aAAcxM,KAAKkpE,sBACnBz8D,aAAczM,KAAKmpE,sBACnB98D,QAASrM,KAAKopE,kBACd,yBAAKnpE,UAAU,uBACVsc,EACAqiC,GACG,0BAAMriC,MAAOktD,GAAb,OAEKE,IAVjB,OAeI,kBAAC,GAAD,OAEJ,kBAAC,GAAD,MACCE,GAAoB,kBAAC,GAAD,MACpBC,GAAc,kBAAC,GAAD,MACdC,GAAe,kBAAC,GAAD,MAChB,kBAACjzD,EAAA,EAAD,CAAY7W,UAAU,uBAAuBoM,QAASrM,KAAK0H,aACvD,kBAAC4E,EAAA,EAAD,CAAWuE,SAAS,iB,GAhzBrBtQ,IAAMC,YAyzBlBiR,iBAAkBs1D,ICx0B3BwD,I,kNASFC,sBAAwB,SAAA38D,GAAW,IACvBQ,EAAW,EAAK5O,MAAhB4O,OACYR,EAAZ4B,UAEQpB,GAEhB,EAAKU,e,EAGTrH,YAAc,WAAO,IACT2G,EAAW,EAAK5O,MAAhB4O,OAER,IADac,IAAU1G,IAAI4F,GAChB,OAAO,KAElBhP,IAAgBC,KAAK,CACjB,QAAS,sBACTmQ,QAASpB,K,EAIjBo8D,iBAAmB,WAAO,IACdp8D,EAAW,EAAK5O,MAAhB4O,OAER,IADac,IAAU1G,IAAI4F,GAChB,OAAO,KAElBhP,IAAgBC,KAAK,CACjB,QAAS,aACTmQ,QAASpB,EACTq8D,OAAQ,CACJ,QAAS,wBAEb9xD,YAAa,M,EAIrB+xD,8BAAgC,WAAO,IAC3Bt8D,EAAW,EAAK5O,MAAhB4O,OAER,IADac,IAAU1G,IAAI4F,GAChB,OAAO,KAElBhP,IAAgBC,KAAK,CACjB,QAAS,aACTmQ,QAASpB,EACTq8D,OAAQ,CACJ,QAAS,qCAEb9xD,YAAa,M,EAIrBgyD,uBAAyB,WAAO,IACpBv8D,EAAW,EAAK5O,MAAhB4O,OACFP,EAASM,YAAcC,GACxBP,GAELzO,IAAgBC,KAAK,CACjB,QAAS,mBACTyO,QAASD,K,EAIjB+8D,iBAAmB,WAAO,IACdx8D,EAAW,EAAK5O,MAAhB4O,OACFP,EAASM,YAAcC,GAC7B,GAAKP,EAAL,CAEA,IAAME,EAAOC,IAAUxF,IAAIqF,GAC3B,GAAKE,EAAL,CANqB,IAQbD,EAAiDC,EAAjDD,QAAS+8D,EAAwC98D,EAAxC88D,aAAcz6B,EAA0BriC,EAA1BqiC,WAAYE,EAAcviC,EAAduiC,UAE3ClxC,IAAgBC,KAAK,CACjB,QAAS,aACTyrE,QAAS,CACL,QAAS,UACTD,eACAz6B,aACAE,YACAy6B,MAAO,GACPj9D,WAEJk9D,oBAAoB,O,EAI5BC,gBAAkB,WAAO,IACb78D,EAAW,EAAK5O,MAAhB4O,OACFP,EAASM,YAAcC,GACxBP,GAELzO,IAAgBC,KAAK,CACjB,QAAS,YACTyO,QAASD,K,mFAnGbqB,IAAUb,GAAG,sBAAuBtO,KAAKwqE,yB,6CAIzCr7D,IAAUZ,IAAI,sBAAuBvO,KAAKwqE,yB,+BAmGpC,IAAD,EACiBxqE,KAAKP,MAAnB4O,EADH,EACGA,OAAQyB,EADX,EACWA,EAChB,IAAKzB,EAAQ,OAAO,KAEpB,IAAMa,EAAOC,IAAU1G,IAAI4F,GAC3B,IAAKa,EAAM,OAAO,KALb,IAOGi8D,EAAej8D,EAAfi8D,WACR,IAAKA,EAAY,OAAO,KAExB,IAAI9zD,EAAU,KACd,OAAQ8zD,EAAW,UACf,IAAK,gCACD9zD,EACI,kBAAC0E,EAAA,EAAD,CAAQ9E,MAAM,UAAUhX,UAAU,wBAAwBoM,QAASrM,KAAK4qE,wBACnE96D,EAAE,iBAGX,MAEJ,IAAK,0BACDuH,EACI,kBAAC0E,EAAA,EAAD,CAAQ9E,MAAM,UAAUhX,UAAU,wBAAwBoM,QAASrM,KAAK6qE,kBACnE/6D,EAAE,mBAGX,MAEJ,IAAK,8BACDuH,EACI,oCACI,kBAAC0E,EAAA,EAAD,CAAQ9E,MAAM,UAAUhX,UAAU,wBAAwBoM,QAASrM,KAAK6qE,kBACnE/6D,EAAE,mBAEP,kBAACiM,EAAA,EAAD,CAAQ9E,MAAM,YAAYhX,UAAU,wBAAwBoM,QAASrM,KAAKkrE,iBACrEp7D,EAAE,oBAIf,MAEJ,IAAK,iCACDuH,EACI,kBAAC0E,EAAA,EAAD,CACI9E,MAAM,YACNhX,UAAU,wBACVoM,QAASrM,KAAK2qE,+BACb76D,EAAE,uBAGX,MAEJ,IAAK,0BACDuH,EACI,kBAAC0E,EAAA,EAAD,CAAQ9E,MAAM,YAAYhX,UAAU,wBAAwBoM,QAASrM,KAAKyqE,kBACrE36D,EAAE,eAOnB,OACI,yBAAK7P,UAAU,aAAaiM,YAAalM,KAAK0F,aAC1C,yBAAKzF,UAAU,sBAAsBoX,GACrC,yBAAKpX,UAAU,2BACX,kBAAC6W,EAAA,EAAD,CAAYzK,QAASrM,KAAK0H,aACtB,kBAAC4E,EAAA,EAAD,a,GA5KA/L,IAAMC,YAwLfiR,iBAAkB84D,IC9L3Ba,I,kNASFC,uBAAyB,WACrB,EAAKt8D,e,mFARL+0B,KAAkBx1B,GAAG,6BAA8BtO,KAAKqrE,0B,6CAIxDvnC,KAAkBv1B,IAAI,6BAA8BvO,KAAKqrE,0B,+BAOnD,IAAD,EACkBrrE,KAAKP,MAApBovB,EADH,EACGA,KAAMF,EADT,EACSA,KAGRhuB,EADW,IAAIouB,KAAY,IAAPF,IAAe,IAAIE,MAAOu8C,UAAS,IAAIv8C,MAAOw8C,WAAa,GAE/E,CACIr8C,IAAK,UACLC,MAAO,OACPC,KAAM,WAEV,CACIF,IAAK,UACLC,MAAO,QAGjB,OACI,yBAAKlvB,UAAU,YACX,yBAAKA,UAAU,oBACX,6BAAM,IAAI8uB,KAAY,IAAPF,GAAaG,mBAAmB,CAACL,EAAKM,UAAWtuB,U,GA/B9DJ,IAAMC,YA0CbiR,iBAAkB25D,ICoClBI,I,mBA7EX,WAAY/rE,GAAQ,IAAD,uBACf,4CAAMA,KAeVgsE,uBAAyB,SAAA59D,GAAW,IACxB69D,EAAe34C,KAAf24C,WAER,EAAKhsE,SAAS,CAAEgsE,gBAnBD,EAsBnBC,gBAAkB,SAAA3nE,GACdA,EAAM8B,iBACN9B,EAAM2C,mBAxBS,EA2BnBilE,WAAa,SAAA5nE,GACTA,EAAM8B,iBACN9B,EAAM2C,kBACNtH,IAAgByF,aAAa,CACzB,QAAS,uBACT8B,UAAU,IAGd,EAAK6xD,6BAA6Bz0D,EAAM6nE,aAAa1uC,QAnCtC,EAsCnB2uC,gBAAkB,SAAA9nE,GACdA,EAAM8B,iBACN9B,EAAM2C,kBACNtH,IAAgByF,aAAa,CACzB,QAAS,uBACT8B,UAAU,KA3CC,EA+CnB6xD,6BAA+B,SAAAt7B,GACN,IAAjBA,EAAMrpB,QAEVzU,IAAgByF,aAAa,CACzB,QAAS,wBACTq4B,WApDW,IAGPuuC,EAAe34C,KAAf24C,WAHO,OAKf,EAAK3sE,MAAQ,CAAE2sE,cALA,E,iFASf34C,KAASzkB,GAAG,uBAAwBtO,KAAKyrE,0B,6CAIzC14C,KAASxkB,IAAI,uBAAwBvO,KAAKyrE,0B,+BA6C1C,OADuBzrE,KAAKjB,MAApB2sE,WAIJ,yBACIzrE,UAAU,oBACV8rE,YAAa/rE,KAAK2rE,gBAClBK,YAAahsE,KAAK8rE,gBAClBG,OAAQjsE,KAAK4rE,YACb,yBAAK3rE,UAAU,6BACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,2BAAf,mBACA,yBAAKA,UAAU,8BAAf,mBAXQ,S,GA3DFM,IAAMC,Y,+BCG9B0rE,I,kNACFntE,MAAQ,CACJotE,SAAU,M,EAGdC,eAAiB,SAAAjjB,GACb,EAAKzpD,SAAS,CACVysE,SAAUhjB,K,EAIlBkjB,YAAc,SAAAroE,GACVA,EAAM2C,kBADa,IAGX2lE,EAAgB,EAAK7sE,MAArB6sE,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtB1jD,EAAmB0jD,EAAnB1jD,eAERvH,aAASuH,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAAgC,IACzBpZ,EAAwB88D,EAAxB98D,QAASsG,EAAew2D,EAAfx2D,WAEjBqL,aAAS3R,EAASsG,K,wEAMpB,IAAD,EACsB/V,KAAKP,MAAxBqQ,EADH,EACGA,EAAGw8D,EADN,EACMA,YACHH,EAAansE,KAAKjB,MAAlBotE,SAEF5vD,EAAQiwD,aAAgBF,EAAax8D,GACrC28D,EAAUC,aAAsBJ,GAClC,oCACKx8D,EAAE,cACH,0BAAM7P,UAAU,gBAAgBub,IAAKxb,KAAKosE,kBAG9C,GAGJ,OACI,yBAAKnsE,UAAWgM,IAAW,iBAAkB,YACzC,6BAAM6D,EAAE,qBACR,6BACKA,EAAE,QAAU,IACb,kBAAC68D,GAAA,EAAD,CACIpwD,MAAOkwD,EACP3/D,QAAS,CAAE8/D,OAAQ,uBAAwBH,QAAS,mBACpDI,YAAa,CACTC,cAAe,CACXC,UAAW,CACPC,MAAO,CACHC,QAASpmD,QAAQslD,GACjBnhE,QAASmhE,MAKzBe,UAAU,OACV,uBAAG7gE,QAASrM,KAAKqsE,aAAc9vD,U,GAvEjChc,IAAMC,YAmFbiR,iBAAkBy6D,I,qBClF3BiB,I,wLACQ,IAAD,EACkFntE,KAAKP,MAApFQ,EADH,EACGA,UAAWoO,EADd,EACcA,OAAQsW,EADtB,EACsBA,UAAWkK,EADjC,EACiCA,KAAMu+C,EADvC,EACuCA,SAAUC,EADjD,EACiDA,YAAav9D,EAD9D,EAC8DA,EAAGw9D,EADjE,EACiEA,MAAO5pE,EADxE,EACwEA,MAEvE4S,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KAJhB,IAMG8gB,EAAgB9gB,EAAhB8gB,YAEFuyC,EAAUC,aAAQ/6C,GAClB46C,EAAcC,aAAY76C,GAEhC,OACI,yBAAK5uB,UAAWgM,IAAW,OAAQhM,GAAYyD,MAAOA,GAClD,wCACC4pE,EAAQ,GACL,oCACI,kBAAC,KAAD,CAAgBrtE,UAAU,oBAC1B,0BAAMA,UAAU,cAAhB,OAEKqtE,EAFL,cAOPF,EAAW,GAAK,8BAAOt9D,EAAE,iBAAT,QACjB,uBAAGzD,QAASghE,GACR,0BAAM9wD,MAAOktD,GAAcE,IAE9BvyC,GAAe,kBAAC,GAAD,CAAQ/oB,OAAQA,EAAQsW,UAAWA,S,GA7BhDpkB,IAAMC,YA4CViR,iBAAkB07D,ICpDlB5qE,eACX,0BAAMC,EAAE,4jBACR,QCFWD,eACX,0BAAMC,EAAE,wzBACR,cCFWD,eACX,uBAAGuzB,OAAO,eAAe5B,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAUK,cAAc,QAAQsB,UAAU,mBACpG,0BAAMvzB,EAAE,2IACR,8BAAUkyB,eAAe,QAAQ64C,OAAO,yBACxC,8BAAU74C,eAAe,QAAQ64C,OAAO,+BAE5C,eCNWhrE,eACX,0BAAMC,EAAE,gmCACR,S,oBCqCEgrE,I,kNACFzuE,MAAQ,CACJ0uE,iBAAiB,G,EAGrBC,sBAAwB,SAAA1pE,GACD,EAAKjF,MAAhByR,QAGR,EAAK9Q,SAAS,CACV+tE,iBAAiB,EACjB5nD,aAAa,K,EAIrB8nD,mBAAqB,SAAA3pE,GACbA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAE+tE,iBAAiB,K,EAGrCG,eAAiB,SAAA5pE,GACbA,EAAM2C,kBADgB,MAGQ,EAAKlH,MAA3B4O,EAHc,EAGdA,OAAQsW,EAHM,EAGNA,UACY,EAAK5lB,MAAzB0uE,iBAGJ,EAAK/tE,SAAS,CAAE+tE,iBAAiB,IAGrCI,aAASx/D,EAAQsW,I,EAGrBmpD,aAAe,SAAA9pE,GACPA,GACAA,EAAM2C,kBAFU,MAKmB,EAAKlH,MAApC4O,EALY,EAKZA,OAAQsW,EALI,EAKJA,WAEhBtJ,EAPoB,EAKOA,SAEnBrX,GACR+pE,aAAiB1/D,EAAQsW,I,EAG7BxO,eAAiB,SAAAnS,GAAU,IAAD,EACW,EAAKvE,MAA9B4b,EADc,EACdA,QAAS2yD,EADK,EACLA,SAAUl+D,EADL,EACKA,EAE3BuL,EAAQrX,GAEHgqE,IAELl8D,GAAKk8D,GACL,EAAK33D,sBAAsBvG,EAAE,iB,EAGjCm+D,4B,sCAA8B,WAAMjqE,GAAN,2BAAAgO,EAAA,8DACgB,EAAKvS,MAAvC4b,EADkB,EAClBA,QAAShN,EADS,EACTA,OAAQsW,EADC,EACDA,UAAW7U,EADV,EACUA,EAEpCuL,EAAQrX,GAHkB,SAKJ3E,IAAgBC,KAAK,CACvC,QAAS,uBACTmQ,QAASpB,EACT0H,WAAY4O,EACZ3O,WAAW,IATW,UAKpBk4D,EALoB,2DAaZF,EAAaE,EAAnB93D,KAbkB,mDAiB1BtE,GAAKk8D,GACL,EAAK33D,sBAAsBvG,EAAE,eAlBH,0C,wDAqB9BuG,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK7W,MAAxC8W,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNhX,UAAU,4BACVoM,QAAS,WACLmK,EAAcC,KAElB,kBAACnK,EAAA,EAAD,W,EAMhB6hE,YAAc,SAAAnqE,GAAU,IAAD,EACoB,EAAKvE,MAApC4O,EADW,EACXA,OAAQsW,EADG,EACHA,UAAWtJ,EADR,EACQA,QAE3B7D,eACA6D,EAAQrX,GACRqsD,aAAahiD,EAAQsW,I,EAGzByT,UAAY,SAAAp0B,GAAU,IAAD,EACsB,EAAKvE,MAApC4O,EADS,EACTA,OAAQsW,EADC,EACDA,UAAWtJ,EADV,EACUA,QAE3B7D,eACA6D,EAAQrX,GAEJoqE,aAAgB//D,EAAQsW,G3HvI7B,SAAsBtW,GACzBhP,IAAgBC,KAAK,CACjB,QAAS,mBACTmQ,QAASpB,I2HqILkyD,CAAalyD,G3HjJlB,SAAoBA,EAAQsW,GAAyC,IAA9B0pD,EAA6B,wDACvEhvE,IAAgBC,KAAK,CACjB,QAAS,iBACTmQ,QAASpB,EACT0H,WAAY4O,EACZ2pD,qBAAsBD,I2H8IlBE,CAAWlgE,EAAQsW,I,EAI3BC,cAAgB,SAAA5gB,GAAU,IAAD,EACkB,EAAKvE,MAApC4O,EADa,EACbA,OAAQsW,EADK,EACLA,WAEhBtJ,EAHqB,EACMA,SAEnBrX,GACR6gB,aAAgBxW,EAAQ,CAACsW,K,EAG7B6pD,WAAa,SAAAxqE,GAAU,IAAD,EACqB,EAAKvE,MAApC4O,EADU,EACVA,OAAQsW,EADE,EACFA,UAAWtJ,EADT,EACSA,QAE3B7D,eACA6D,EAAQrX,GACRosD,aAAY/hD,EAAQsW,I,EAGxB1U,aAAe,SAAAjM,GAAU,IAAD,EACmB,EAAKvE,MAApC4O,EADY,EACZA,OAAQsW,EADI,EACJA,WAEhBtJ,EAHoB,EACOA,SAEnBrX,GACRyqE,aAAcpgE,EAAQsW,GAAW,I,EAGrCG,aAAe,SAAA9gB,GAAU,IAAD,EACmB,EAAKvE,MAApC4O,EADY,EACZA,OAAQsW,EADI,EACJA,WAEhBtJ,EAHoB,EACOA,SAEnBrX,GACR+gB,aAAe1W,EAAQ,CAACsW,K,EAG5B+pD,e,sCAAiB,WAAM1qE,GAAN,iCAAAgO,EAAA,0DAC0B,EAAKvS,MAApC4O,EADK,EACLA,OAAQsW,EADH,EACGA,WAAWtJ,EADd,EACcA,SAEnBrX,GAEFsS,EAAUa,KAAa1O,IAAI4F,EAAQsW,GAL5B,oDAQLtN,EAAYf,EAAZe,QARK,oDAWLg7C,EAAUh7C,EAAVg7C,MAXK,sDAcE9pD,EAAS8pD,EAAhBA,MAdK,0DAiBDsc,EAAYpmE,EAAhBnJ,GAjBK,UAmBQC,IAAgBC,KAAK,CACtC,QAAS,eACTqvE,UACAprB,SAAU,EACVx6B,OAAQ,MACRhU,MAAO,KACP65D,aAAa,IAzBJ,eAmBPpvE,EAnBO,iBA4BMH,IAAgBC,KAAK,CACpC,QAAS,eACTqvE,UACA5lD,OAAQ,MACRqjB,MAAO,OAhCE,QA4BPnO,EA5BO,OAmCb7rB,QAAQo0B,IAAI,gBAAiBhnC,EAAQy+B,GAnCxB,0C,wDAsCjB4wC,W,qBAAa,kDAAA78D,EAAA,0DACqB,EAAKvS,MAA3B4O,EADC,EACDA,OAAQsW,EADP,EACOA,UACVrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GAFhC,oDAKDtN,EAAYf,EAAZe,QALC,oDAQDlT,EAAUkT,EAAVlT,MARC,sDAWMoE,EAASpE,EAAhBA,MAXC,mDAcDqK,EAASjG,EAATiG,KAGF49B,EAAQ59B,GADRsgE,EAAQ,QAGL16D,EAAI,EAnBJ,aAmBOA,EAAIg4B,GAnBX,wBAoBLh6B,QAAQo0B,IAAI,eAAgBj+B,EAAKnJ,GAAI0vE,EAAQ16D,GApBxC,UAqBC/U,IAAgBC,KAAK,CACvB,QAAS,eACTqvE,QAASpmE,EAAKnJ,GACdmkD,SAAU,EACVx6B,OAAQ+lD,EAAQ16D,EAChBW,MAAO+5D,EACPF,aAAa,IA3BZ,yBA8BkBvvE,IAAgBC,KAAK,CACxC,QAAS,eACTqvE,QAASpmE,EAAKnJ,GACd2pB,OAAQ+lD,EAAQ16D,EAChBg4B,MAAO0iC,IAlCN,eA8BCC,EA9BD,iBAqCgBC,YAAeD,EAASlhD,MArCxC,uBAmBkBzZ,IAnBlB,0D,wEAyCH,IAAD,EACqEpU,KAAKP,MAAvEqQ,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQsW,EADd,EACcA,UAAWK,EADzB,EACyBA,eAAgBgpD,EADzC,EACyCA,SAAU/yD,EADnD,EACmDA,KAAMI,EADzD,EACyDA,QACtDoyD,EAAoBztE,KAAKjB,MAAzB0uE,gBAEFl4C,EAAW64C,aAAgB//D,EAAQsW,GACnCsqD,EAAeC,aAAoB7gE,EAAQsW,GAC3CwqD,EAAcC,aAAmB/gE,EAAQsW,GACzC0qD,EAAet1D,YAAgB1L,GAC/BihE,EAAc3N,YAAetzD,GAC7B6yD,EAAiBqO,aAAsBlhE,EAAQsW,GAC/Cs8C,EAAeuO,aAAoBnhE,EAAQsW,GAC3C8qD,EAAcC,aAAmBrhE,EAAQsW,KAAeoO,KAAS48C,UACjEC,GAAiBz4D,KAAa04D,mBAAmBxhE,EAAQsW,GACzDmrD,EAAcjpD,QAAQmnD,GACtB+B,EAA2BC,aAAmB3hE,GAEpD,OACI,oCACI,kBAAC+W,GAAA,EAAD,CACInK,KAAMA,EACNI,QAASA,EACTgK,gBAAgB,iBAChBL,eAAgBA,EAChBM,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBtZ,YAAa,SAAAE,GAAC,OAAIA,EAAEzF,oBACpB,kBAAC+e,GAAA,EAAD,CAAUrZ,QAAS,SAAAD,GAAC,OAAIA,EAAEzF,oBAOrBopE,GACG,kBAACpqD,GAAA,EAAD,CAAUtZ,QAASrM,KAAKiuE,6BACpB,kBAACzuD,GAAA,EAAD,KACI,kBAACywD,GAAD,OAEJ,kBAACxwD,GAAA,EAAD,CAAcC,QAAS5P,EAAE,sBAGhCggE,GACG,kBAACnqD,GAAA,EAAD,CAAUtZ,QAASrM,KAAKmW,gBACpB,kBAACqJ,GAAA,EAAD,KACI,kBAACywD,GAAD,OAEJ,kBAACxwD,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAGhCu/D,GACG,kBAAC1pD,GAAA,EAAD,CAAUtZ,QAASrM,KAAKmuE,aACpB,kBAAC3uD,GAAA,EAAD,KACI,kBAAC0wD,GAAD,CAAWxsE,MAAO,CAACqyB,UAAW,iBAElC,kBAACtW,GAAA,EAAD,CAAcC,QAAS5P,EAAE,YAGhCw/D,GACG,kBAAC3pD,GAAA,EAAD,CAAUtZ,QAASrM,KAAKo4B,WACnB7C,EACG,oCACI,kBAAC/V,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,mBAG7B,oCACI,kBAAC0P,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,gBAKxC8/D,GACG,kBAACjqD,GAAA,EAAD,CAAUtZ,QAASrM,KAAKiQ,cACpB,kBAACuP,GAAA,EAAD,KACI,kBAAC2wD,GAAD,OAEJ,kBAAC1wD,GAAA,EAAD,CAAcC,QAAS5P,EAAE,aAGhCoxD,GACG,kBAACv7C,GAAA,EAAD,CAAUtZ,QAASrM,KAAK4kB,eACpB,kBAACpF,GAAA,EAAD,KACI,kBAAC0wD,GAAD,OAEJ,kBAACzwD,GAAA,EAAD,CAAcC,QAAS5P,EAAE,cAGhC2/D,GACG,kBAAC9pD,GAAA,EAAD,CAAUtZ,QAASrM,KAAKwuE,YACpB,kBAAChvD,GAAA,EAAD,KACI,kBAACmuB,GAAD,OAEJ,kBAACluB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,WAGhCmxD,GACG,kBAACt7C,GAAA,EAAD,CAAU1O,MAAM,YAAY5K,QAASrM,KAAK8kB,cACtC,kBAACtF,GAAA,EAAD,KACI,kBAAC2nB,GAAD,OAEJ,kBAAC1nB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,aAGhCm/D,GACG,kBAACtpD,GAAA,EAAD,CAAUtZ,QAASrM,KAAK8tE,cACpB,kBAACtuD,GAAA,EAAD,KACI,kBAAC4wD,GAAD,OAEJ,kBAAC3wD,GAAA,EAAD,CAAcC,QAAS5P,EAAE,aAGhCq/D,GACG,kBAACxpD,GAAA,EAAD,CAAUtZ,QAASrM,KAAK0tE,uBACpB,kBAACluD,GAAA,EAAD,KACI,kBAACq/B,GAAD,OAEJ,kBAACp/B,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iBAKzC,kBAAC,IAAD,CACIsL,mBAAoB,EACpBH,KAAMwyD,EACNpyD,QAASrb,KAAK2tE,mBACdryD,kBAAgB,qBAChB,kBAAC,IAAD,CAAalc,GAAG,qBAAqB0Q,EAAE,uBACvC,kBAAC,KAAD,KACI,kBAACq9B,GAAA,EAAD,KAAoBr9B,EAAE,uBAE1B,kBAACgM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAK2tE,mBAAoB12D,MAAM,WAC3CnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAK4tE,eAAgB32D,MAAM,WACvCnH,EAAE,gB,GAvXLvP,IAAM6mC,gBA+YjBnrB,GALCC,YACZzK,cACA0K,eAGWF,CAAQuxD,I,OC9aR/7D,qBANf,SAAyBhS,GAAQ,IACrBqQ,EAAMrQ,EAANqQ,EAER,OAAO,yBAAK7P,UAAU,oBAAoB6P,EAAE,qB,gFCH5CitD,GAAY,KAET,SAAesT,GAAtB,mC,6CAAO,WAA+BrlD,GAA/B,mBAAAhZ,EAAA,qEAEO5Q,EAAO27D,GAAY,IAAIhuC,KAF9B,SAGsB1vB,IAAgBC,KAAK,CACtC,QAAS,wBACT0rB,MACAslD,YAAY,IANjB,UAGO9wE,EAHP,OAQKu9D,KAAc37D,EARnB,iDAUCgR,QAAQo0B,IAAI,YAAahnC,GACzB+wE,YAAuB/wE,GACvBgxE,aAAsB,CAAEC,YAAajxE,EAAQwrB,QAZ9C,mDAcO0lD,EAAY3nE,OAAOkS,QACf01D,OAAS,KACnBD,EAAU5tB,SAAW93B,EAhBtB,yD,iCCoBD4lD,G,2MACF3qD,SAAW,WAAO,IAAD,EACwF,EAAKxmB,MAAlG4O,EADK,EACLA,OAAQsW,EADH,EACGA,UAAWnW,EADd,EACcA,KAAmBqiE,GADjC,EACoB3wE,YADpB,EACiC2wE,kBAAkBC,EADnD,EACmDA,sBAAuB5qD,EAD1E,EAC0EA,UAEjF5P,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KAJR,IAMLe,EAAYf,EAAZe,QACR,IAAKA,EAAS,OAAO,KAPR,IASLoV,EAAapV,EAAboV,SACR,IAAKA,EAAU,OAAO,KAVT,IAaTskD,EAaAtkD,EAbAskD,UACAx0D,EAYAkQ,EAZAlQ,MACAoP,EAWAc,EAXAd,YAEAvc,GASAqd,EAVAzB,IAUAyB,EATArd,OACAmnD,EAQA9pC,EARA8pC,UACApyD,EAOAsoB,EAPAtoB,MACAkuD,EAMA5lC,EANA4lC,MACAnvD,EAKAupB,EALAvpB,SACA4sB,EAIArD,EAJAqD,WACAi4C,EAGAt7C,EAHAs7C,WACA5oE,EAEAstB,EAFAttB,QACAsd,EACAgQ,EADAhQ,KAGJ,GAAItd,EACA,MAAO,CACH,KACA,kBAAC6xE,GAAA,EAAD,CACI3iE,OAAQA,EACRsW,UAAWA,EACXxlB,QAASA,EACT+mB,UAAWA,EACX9lB,OAAQC,KAAkB4wE,WAKtC,GAAInhD,EACA,MAAO,CACH,KACA,kBAACohD,GAAA,EAAD,CAAW7iE,OAAQA,EAAQsW,UAAWA,EAAWiK,UAAWkB,EAAY5J,UAAWA,KAI3F,GAAI6hD,EACA,MAAO,CACH,KACA,kBAACoJ,GAAA,EAAD,CAAW9iE,OAAQA,EAAQsW,UAAWA,EAAWysD,UAAWrJ,EAAY7hD,UAAWA,KAI3F,GAAImsC,EACA,MAAO,CAAC,KAAM,kBAAC,KAAD,CAAOhkD,OAAQA,EAAQsW,UAAWA,EAAW0tC,MAAOA,EAAOnsC,UAAWA,KAGxF,GAAIhjB,EACA,MAAO,CAAC,KAAM,kBAACmuE,GAAA,EAAD,CAAUhjE,OAAQA,EAAQsW,UAAWA,EAAWzhB,SAAUA,EAAUgjB,UAAWA,KAGjG,GAAIqwC,IACqBjnD,YAAOinD,EAAUA,YAClBA,EAAU/9C,WAC1B,MAAO,CACH,KACA,kBAAC84D,GAAA,EAAD,CAAWjjE,OAAQA,EAAQsW,UAAWA,EAAW4xC,UAAWA,EAAWrwC,UAAWA,KAK9F,GAAI/hB,GACIA,EAAMqU,UACN,MAAO,CAAC,KAAM,kBAAC+4D,GAAA,EAAD,CAAOljE,OAAQA,EAAQsW,UAAWA,EAAWxgB,MAAOA,EAAO+hB,UAAWA,KAI5F,GAAI9W,EAAO,CACP,IAAMme,EAAYG,YAAQte,EAAMkI,MAAO9I,GACjCgjE,GACQ,YAAT/0D,GAA+B,UAATA,KACtBs0D,GAAax0D,GAASoP,IACvB4B,GACAA,EAAU7gB,QAAU6gB,EAAU7e,OAC5B+iE,EAAkBD,KAAgB7lD,GAAeA,EAAY7X,OAAS,IAEtEpQ,EACF8tE,GAAcC,EACR,CACIC,MAAO,QACPC,WAAY,GAEhB,GAEV,MAAO,CACHH,EACI,kBAACllD,GAAA,EAAD,CACIpsB,YAAauxE,EAAkBX,EAAwBD,EACvDntE,MAAOA,EACP2K,OAAQA,EACRsW,UAAWA,EACXvV,MAAOA,EACP8W,UAAWA,IAEf,KACHsrD,EAAmG,KAAtF,kBAACllD,GAAA,EAAD,CAAOje,OAAQA,EAAQsW,UAAWA,EAAWvV,MAAOA,EAAO8W,UAAWA,KAI5F,MAAO,CAAC,KAAM,O,EAGlB0rD,uB,sCAAyB,WAAM5tE,GAAN,yBAAAgO,EAAA,wDACrBhO,EAAM8B,iBACN9B,EAAM2C,kBAFe,EAIS,EAAKlH,MAA3B4O,EAJa,EAIbA,OAAQsW,EAJK,EAILA,UAEVrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GANpB,yCAOA,MAPA,UASbtN,EAAYf,EAAZe,QATa,yCAUA,MAVA,UAYboV,EAAapV,EAAboV,SAZa,0CAaC,MAbD,QAiBrB4jD,GAFgB5jD,EAARzB,KAfa,0C,kIAoBX,IAAD,EACwBhrB,KAAKP,MAA9B4O,EADC,EACDA,OAAQsW,EADP,EACOA,UAAW7U,EADlB,EACkBA,EAErBwG,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KAJZ,IAMDe,EAAYf,EAAZe,QACR,IAAKA,EAAS,OAAO,KAPZ,IASDoV,EAAapV,EAAboV,SACR,IAAKA,EAAU,OAAO,KAVb,IAYDolD,EAAoCplD,EAApColD,qBAAsBd,EAActkD,EAAdskD,UACxBplD,EAAuBc,EAAvBd,YAAapP,EAAUkQ,EAAVlQ,MAEnB,GAA6B,kBAAzBoP,EAAY,SACZA,EAAc9H,aAAiB8H,QAC5B,GAA2B,kBAAhBA,GAA4BolD,IAA0C,YAA5BA,EAAUp2D,eAA2D,cAA5Bo2D,EAAUp2D,eAAgC,OAIxGm3D,aAAwD,cAA5Bf,EAAUp2D,cAAgC,EAAI,EAAGgR,EAAa,IAAjGomD,GAJ+G,EAInIhgE,KAJmI,EAIzHiG,UAClB2T,EAAc9H,aAAiB,CAAE,QAAS,gBAAiB9R,KAAM4Z,EAAa3T,SAAU+5D,IAG5F,IAAMC,EACF,oCACKjB,GAAa,yBAAK9wE,UAAU,sBAAsB8wE,GAClDx0D,GAAS,yBAAKtc,UAAU,kBAAkBsc,GAC1CoP,GAAe,yBAAK1rB,UAAU,wBAAwB0rB,IA7BtD,EAgCqC3rB,KAAKimB,WAhC1C,mBAgCFgsD,EAhCE,KAgCeC,EAhCf,KAiCHC,EAAqBN,EAAuB,GAC9C,kBAAC91D,EAAA,EAAD,CACI6D,QAAQ,WACR3I,MAAM,UACNnK,QAAS,CACLslE,gBAAiB,kBACjB7kE,SAAU,4BAEd0f,WAAS,EACT5gB,QAASrM,KAAK4xE,uBACd3xE,UAAU,mBACV,kBAACoyE,GAAA,EAAD,KACI,0BAAM7vE,EAAE,w1BAEXsN,EAAE,gBAIX,OACI,oCACKmiE,EACAD,EACAE,EACAC,K,+BAKH,IACEG,EAAStyE,KAAKP,MAAd6yE,KAER,OACI,oCACI,yBAAKryE,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,oBAAoBD,KAAKuyE,eAE3CD,O,GA7MK/xE,IAAMC,WA6N5BowE,GAAQhiE,aAAe,CACnBJ,KAAM0f,IACNhuB,YAAasyE,IACb3B,iBAAkB4B,IAClB3B,sBAAuB4B,KAGZjhE,qBAAkBm/D,ICxN3B+B,I,mBACF,WAAYlzE,GAAQ,IAAD,uBACf,4CAAMA,KAoGVmzE,6BAA+B,SAAA/kE,GACtB,EAAK9O,MAAM4S,UAEhB,EAAKjS,SAAS,CAAEiS,UAAU,KAxGX,EA2GnBkhE,2BAA6B,SAAAhlE,GAAW,IAAD,EACL,EAAKpO,MAA3B4O,EAD2B,EAC3BA,OAAQsW,EADmB,EACnBA,UACRwyB,EAAU,EAAKp4C,MAAfo4C,MAEJ9oC,IAAWR,EAAOQ,QAAUsW,IAAc9W,EAAO8W,YAC7CwyB,EACA,EAAKz3C,SAAS,CAAEy3C,OAAO,GAAS,WAC5B1vC,WAAW,WACP,EAAK/H,SAAS,CAAEy3C,OAAO,KACxB,KAGP,EAAKz3C,SAAS,CAAEy3C,OAAO,MAvHhB,EA4HnB27B,iCAAmC,SAAAjlE,GAAW,IAAD,EACX,EAAKpO,MAA3B4O,EADiC,EACjCA,OAAQsW,EADyB,EACzBA,UADyB,EAEP,EAAK5lB,MAA/B4S,EAFiC,EAEjCA,SAAUohE,EAFuB,EAEvBA,YAEdphE,IAEAtD,IAAWR,EAAOQ,QAAUsW,IAAc9W,EAAO8W,UAC7CouD,EACA,EAAKrzE,SAAS,CAAEqzE,aAAa,GAAS,WAClCtrE,WAAW,WACP,EAAK/H,SAAS,CAAEqzE,aAAa,KAC9B,KAGP,EAAKrzE,SAAS,CAAEqzE,aAAa,IAE1BA,GACP,EAAKrzE,SAAS,CAAEqzE,aAAa,MA7IlB,EAiJnBtQ,8BAAgC,SAAA50D,GAAW,IAAD,EACR,EAAKpO,MAA3B4O,EAD8B,EAC9BA,OAAQsW,EADsB,EACtBA,UACRhT,EAAa9D,EAAb8D,SAEJtD,IAAWR,EAAOQ,QAAUsW,IAAc9W,EAAO8W,WACjD,EAAKjlB,SAAS,CAAEiS,WAAUohE,aAAa,KAtJ5B,EA0JnBC,sBAAwB,SAAAnlE,GAAW,IACvB4B,EAAwB5B,EAAxB4B,QAASsG,EAAelI,EAAfkI,WADa,EAEA,EAAKtW,MAA3B4O,EAFsB,EAEtBA,OAAQsW,EAFc,EAEdA,UAEZtW,IAAWoB,GAAWkV,IAAc5O,GACpC,EAAKhH,eA/JM,EAmKnBkkE,qBAAuB,SAAAplE,GAAW,IACtB4B,EAAwB5B,EAAxB4B,QAASsG,EAAelI,EAAfkI,WADY,EAEC,EAAKtW,MAA3B4O,EAFqB,EAErBA,OAAQsW,EAFa,EAEbA,UAEZtW,IAAWoB,GAAWkV,IAAc5O,GACpC,EAAKhH,eAxKM,EA4KnBoY,uBAAyB,SAAAtZ,GAAW,IACxB4B,EAAwB5B,EAAxB4B,QAASsG,EAAelI,EAAfkI,WADc,EAED,EAAKtW,MAA3B4O,EAFuB,EAEvBA,OAAQsW,EAFe,EAEfA,UACRuuD,EAAiB,EAAKn0E,MAAtBm0E,aAEJ7kE,IAAWoB,IACXkV,IAAc5O,IAEMo9D,aAAgB9kE,EAAQsW,KACxBuuD,EACpB,EAAKxzE,SAAS,CAAEwzE,aAAcC,aAAgB9kE,EAAQsW,KAEtD,EAAK5V,iBAxLM,EA4LnBqkE,iBAAmB,SAAAtlE,GACfwT,aAASxT,GAAQ,IA7LF,EAgMnBulE,iBAAmB,SAAAhlE,GACf+S,aAAS/S,EAAQ,MAAM,IAjMR,EAoMnBilE,gBAAkB,WACd,GAAK,EAAKC,YAEQxqE,OAAO8yB,eAAequB,WACxC,CAJoB,MAMU,EAAKzqD,MAA3B4O,EANY,EAMZA,OAAQsW,EANI,EAMJA,UAEVhT,GAAYwF,KAAa0sC,cAAcxvC,IAA3B,iBAAyChG,EAAzC,sBAA6DsW,IAC/E8pD,aAAcpgE,EAAQsW,EAAWhT,KA7MlB,EAgNnB6hE,gBAAkB,SAAApnE,GACdA,EAAEtG,iBACFsG,EAAEzF,kBAFiB,MAIW,EAAKlH,MAA3B4O,EAJW,EAIXA,OAAQsW,EAJG,EAIHA,UAEK5K,YAAgB1L,GAEjCgiD,aAAahiD,EAAQsW,GAKF4qD,aAAsBlhE,EAAQsW,IAEjDE,aAAgBxW,EAAQ,CAACsW,KA/Nd,EAmOnBuB,UAAY,SAAAliB,GACJA,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAHO,MAMa,EAAKlH,MAA3B4O,EANS,EAMTA,OAAQsW,EANC,EAMDA,UAEhBuB,aAAU7X,EAAQsW,IA3OH,EA8OnB8uD,mBAAqB,WACjB,EAAK/zE,SAAS,CAAEqzE,aAAa,KA/Od,EAkPnBrsE,gBAAkB,WACd,EAAK6sE,WAAY,GAnPF,EAsPnBjsE,gBAAkB,WACd,EAAKisE,WAAY,GAvPF,EA0PnBG,eAAiB,WACb,EAAKC,UAAW,GA3PD,EA8PnBC,iBAAmB,WAAO,IAAD,EACS,EAAKn0E,MAA3B4O,EADa,EACbA,OAAQsW,EADK,EACLA,UAChBkvD,aAAUxlE,EAAQsW,IAhQH,EAmQnBmB,sBAnQmB,sCAmQK,WAAM9hB,GAAN,mBAAAgO,EAAA,wDAChBhO,IACAA,EAAM8B,iBACN9B,EAAM2C,oBAGc,EAAK5H,MAArB8mB,YANY,gBAShB,EAAKnmB,SAAS,CAAEmmB,aAAa,IATb,4BAWZ1O,KAAa0sC,cAAcr1C,KAAO,GAXtB,iDAeV7K,EAAOK,EAAMwC,QACb3C,EAAMG,EAAMyC,QACZunE,EACFhqE,EAAMC,QAAmC,MAAzBD,EAAMC,OAAO6vE,SAAmB9vE,EAAMC,OAAOuvD,KAAOxvD,EAAMC,OAAOuvD,KAAO,KAE5F,EAAK9zD,SAAS,CACVmmB,aAAa,EACbmoD,WACArqE,OACAE,QAxBY,0CAnQL,wDAgSnBkiB,uBAAyB,SAAA/hB,GACjBA,GACAA,EAAM2C,kBAGV,EAAKjH,SAAS,CAAEmmB,aAAa,KArSd,MAGe,EAAKpmB,MAA3B4O,EAHO,EAGPA,OAAQsW,EAHD,EAGCA,UAHD,OAIf,EAAK5lB,MAAQ,CACTuX,QAASa,KAAa1O,IAAI4F,EAAQsW,GAClCuuD,aAAcC,aAAgB9kE,EAAQsW,GACtChT,UAAU,EACVohE,aAAa,EACb57B,OAAO,EAEPtxB,aAAa,EACbmoD,SAAU,KACVrqE,KAAM,EACNE,IAAK,GAdM,E,mFAkBGuM,EAAWC,GAAY,IAAD,EAC8CrQ,KAAKP,MAAnF4O,EADgC,EAChCA,OAAQsW,EADwB,EACxBA,UAAW6R,EADa,EACbA,aAAcu9C,EADD,EACCA,oBAAqBC,EADtB,EACsBA,SAAU91D,EADhC,EACgCA,UADhC,EAE4Ble,KAAKjB,MAAjE8mB,EAFgC,EAEhCA,YAAalU,EAFmB,EAEnBA,SAAUohE,EAFS,EAETA,YAAa57B,EAFJ,EAEIA,MAAO+7B,EAFX,EAEWA,aAEnD,OAAI9iE,EAAU/B,SAAWA,IAKrB+B,EAAUuU,YAAcA,IAKxBvU,EAAUomB,eAAiBA,IAK3BpmB,EAAU2jE,sBAAwBA,IAKlC3jE,EAAU4jE,WAAaA,IAKvB5jE,EAAU8N,YAAcA,IAKxB7N,EAAUwV,cAAgBA,IAK1BxV,EAAUsB,WAAaA,IAKvBtB,EAAU0iE,cAAgBA,IAK1B1iE,EAAU8mC,QAAUA,GAKpB9mC,EAAU6iE,eAAiBA,a,0CAU/B/7D,KAAa7I,GAAG,iCAAkCtO,KAAK8yE,kCACvD37D,KAAa7I,GAAG,8BAA+BtO,KAAKyiE,+BACpDtrD,KAAa7I,GAAG,2BAA4BtO,KAAK6yE,4BACjD17D,KAAa7I,GAAG,6BAA8BtO,KAAK4yE,8BACnDz7D,KAAa7I,GAAG,uBAAwBtO,KAAKmnB,wBAC7ChQ,KAAa7I,GAAG,sBAAuBtO,KAAKgzE,uBAC5C77D,KAAa7I,GAAG,qBAAsBtO,KAAKizE,wB,6CAI3C97D,KAAa5I,IAAI,iCAAkCvO,KAAK8yE,kCACxD37D,KAAa5I,IAAI,8BAA+BvO,KAAKyiE,+BACrDtrD,KAAa5I,IAAI,2BAA4BvO,KAAK6yE,4BAClD17D,KAAa5I,IAAI,6BAA8BvO,KAAK4yE,8BACpDz7D,KAAa5I,IAAI,uBAAwBvO,KAAKmnB,wBAC9ChQ,KAAa5I,IAAI,sBAAuBvO,KAAKgzE,uBAC7C77D,KAAa5I,IAAI,qBAAsBvO,KAAKizE,wB,+BAsMtC,IAAD,EACgFjzE,KAAKP,MAAlFqQ,EADH,EACGA,EAAGzB,EADN,EACMA,OAAQsW,EADd,EACcA,UAAWovD,EADzB,EACyBA,oBAAqBC,EAD9C,EAC8CA,SAAU91D,EADxD,EACwDA,UAAW0gC,EADnE,EACmEA,SADnE,EAWD5+C,KAAKjB,MARLm0E,EAHC,EAGDA,aACAvhE,EAJC,EAIDA,SACAohE,EALC,EAKDA,YACA57B,EANC,EAMDA,MACA62B,EAPC,EAODA,SACAnoD,EARC,EAQDA,YACAliB,EATC,EASDA,KACAE,EAVC,EAUDA,IAKEyS,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,gDAhBhB,IAkBG8gB,EAA2F9gB,EAA3F8gB,YAAak2C,EAA8Eh3D,EAA9Eg3D,MAAOz+C,EAAuEvY,EAAvEuY,KAAMolD,EAAiE39D,EAAjE29D,UAAWh8D,EAAsD3B,EAAtD2B,oBAAqBi8D,EAAiC59D,EAAjC49D,aAAcrrD,EAAmBvS,EAAnBuS,eAE1EsrD,EAAa/8C,IAAgB7Y,YAAclQ,GAC3C+lE,EACF,kBAAC,GAAD,CACIn0E,UAAU,cACV8W,IAAG,UAAK1I,EAAL,YAAesW,EAAf,SACHtW,OAAQA,EACRsW,UAAWA,EACXkK,KAAMA,EACNu+C,SAAU6G,EACV3G,MAAOA,IAGTv7D,EAAO63C,aAAQtzC,EAAS89D,EAAYtkE,GACpCukE,EAAsB,OAATtiE,GAAiBA,EAAK+B,OAAS,EAC5CwgE,EAAcC,aAAmBlmE,EAAQsW,GACzC6vD,EAAY3tD,QAAQ5O,GACpBw8D,EAAgBljE,aAAclD,GAC9BqmE,GAAaD,GAAiBv2D,GAAco2D,GAAeE,EAC3D9oD,EAAU6mD,aAAWj8D,GACrB87C,EAAQnsC,aAAS3P,EAAStW,KAAKkmB,UAAWwuD,EAAUL,EAAYD,GAElEjsC,EAAO,KACP6rC,IACA7rC,EAAOtf,EACH,kBAACuf,GAAA,EAAD,CAAU74B,OAAK,EAACzB,OAAQ+a,EAAgB3Y,SAAUlQ,KAAKozE,mBAEvD,kBAAC,EAAD,CAAU7jE,OAAK,EAAClB,OAAQA,EAAQ6B,SAAUlQ,KAAKqzE,oBAIvD,IAAM3vE,EAAQixE,aAAgBtmE,EAAQsW,GAChCiwD,EAC2B,mBAA7Bt+D,EAAQe,QAAQ,UAA8D,qBAA7Bf,EAAQe,QAAQ,SAErE,OACI,6BACKunC,GAAY,kBAAC,GAAD,CAAS/vB,KAAMA,IAC5B,yBACI5uB,UAAWgM,IAAW,UAAW,CAC7B,iBAAkBk8B,EAClB,cAAegsC,EACf,mBAAoBxiE,EACpB,sBAAuBohE,IAAgBphE,EACvC,cAAeuM,IAAc81D,EAC7B,kBAAmB91D,GAAa81D,EAChC,kBAAmB91D,IAAc81D,EACjC,yBAA0BY,IAE9BC,YAAa70E,KAAKsH,gBAClBwtE,WAAY90E,KAAK0zE,eACjBxnE,YAAalM,KAAK0G,gBAClB2F,QAASrM,KAAKszE,gBACdyB,eAAgB/0E,KAAKyzE,mBACrBztD,cAAehmB,KAAK8lB,uBACnBiuD,GAAuB,kBAAC,GAAD,MACxB,yBAAK9zE,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWgM,IAAW,kBAAmB,CAAE,MAASkrC,KACpDhP,EACD,yBACIloC,UAAWgM,IAAW,kBAAmB,CACrC,iBAAkB2oE,EAClB,qBAAsBA,GAAcT,IAExCzwE,MAAOA,GACNkxE,IAAgB12D,IAAcu2D,GAAkBH,IAC7C,yBAAKr0E,UAAU,iBACVie,IAAco2D,GACX,kBAAC5kD,GAAA,EAAD,CAAerhB,OAAQA,EAAQ+S,UAAQ,EAACtT,OAAQ+a,EAAgBvH,UAAQ,IAE3EgzD,GAAe,kBAAC,GAAD,CAAShI,YAAa4H,KAG7CM,GACG,kBAAC,GAAD,CACInmE,OAAQA,EACRsW,UAAW1M,EACX5L,QAASrM,KAAK4zE,mBAGrBxhB,EACD,yBACInyD,UAAWgM,IAAW,eAAgB,CAClC,sBAAwC,IAAjBinE,EACvB,sBAAwC,IAAjBA,EACvB,sBAAwC,IAAjBA,KAE1BnhE,GAEJ2Z,GACG,kBAAC,GAAD,CACIrd,OAAQA,EACRsW,UAAWA,EACXuB,UAAWlmB,KAAKkmB,UAChBosD,KAAM8B,IAGbQ,GACG,kBAAC,GAAD,CACI30E,UAAWgM,IAAW,YAAa,CAC/B,cAAe+oE,aAAa3mE,EAAQsW,KAExCtW,OAAQA,EACRsW,UAAWA,EACXkK,KAAMA,EACNu+C,SAAU6G,EACV3G,MAAOA,EACPD,YAAartE,KAAKwzE,mBAI9B,yBAAKvzE,UAAU,0BAEnB,yBAAKA,UAAU,sBAGvB,kBAAC,GAAD,CACIoO,OAAQA,EACRsW,UAAWA,EACXK,eAAgB,CAAEnhB,MAAKF,QACvBsX,KAAM4K,EACNxK,QAASrb,KAAK+lB,uBACdioD,SAAUA,S,GAzbRxtE,cAscPyb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQ02D,ICtejBsC,I,mBACF,WAAYx1E,GAAQ,IAAD,uBACf,4CAAMA,KA0CV4iC,0BAA4B,SAAAx0B,GAAW,IAC3BqnE,EAAgBniD,KAAhBmiD,YAER,EAAKx1E,SAAS,CAAEw1E,iBA9CD,EAiDnB/kD,qBAAuB,SAAAtiB,GAAW,IACVQ,EAAWR,EAAvBuiB,WAER,EAAK1wB,SAAS,CAAE2O,YApDD,EAuDnBgzD,2BAA6B,SAAAxzD,GAAW,IAC5BsnE,EAAiBpiD,KAAjBoiD,aAER,EAAKz1E,SAAS,CAAEy1E,kBA1DD,IAGP9mE,EAAsC0kB,KAAtC1kB,OAAQ8mE,EAA8BpiD,KAA9BoiD,aAAcD,EAAgBniD,KAAhBmiD,YAHf,OAIf,EAAKn2E,MAAQ,CACTsP,SACA8mE,eACAD,eAPW,E,mFAWG9kE,EAAWC,EAAWyqB,GACxC,OAAIzqB,EAAUhC,SAAWrO,KAAKjB,MAAMsP,SAIhCgC,EAAU8kE,eAAiBn1E,KAAKjB,MAAMo2E,eAItC9kE,EAAU6kE,cAAgBl1E,KAAKjB,MAAMm2E,aAIrC9kE,EAAUN,IAAM9P,KAAKP,MAAMqQ,M,0CAQ/BijB,KAASzkB,GAAG,qBAAsBtO,KAAKmwB,sBACvC4C,KAASzkB,GAAG,2BAA4BtO,KAAKqhE,4BAC7CtuC,KAASzkB,GAAG,0BAA2BtO,KAAKqiC,6B,6CAI5CtP,KAASxkB,IAAI,qBAAsBvO,KAAKmwB,sBACxC4C,KAASxkB,IAAI,2BAA4BvO,KAAKqhE,4BAC9CtuC,KAASxkB,IAAI,0BAA2BvO,KAAKqiC,6B,+BAqBvC,IAAD,EACgBriC,KAAKP,MAAlBqQ,EADH,EACGA,EADH,KACMqF,MACmCnV,KAAKjB,OAA3CsP,EAFH,EAEGA,OAFH,EAEW8mE,aAFX,EAEyBD,YAC9B,OAAI7mE,EAAe,KAIf,yBAAKpO,UAAU,eACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,oBAAoB6P,EAAE,qC,GAxE/BvP,IAAMC,YA+EjBiR,iBAAkBwjE,I,qBC7DlBG,I,wLAjBD,IACE/oE,EAAYrM,KAAKP,MAAjB4M,QAER,OACI,yBAAKpM,UAAU,sBACX,kBAAC6W,EAAA,EAAD,CAAY0oC,eAAe,EAAMtzC,YAAaG,GAC1C,kBAAC,KAAD,Y,GAPW9L,IAAMC,Y,SCM/B60E,I,OAAiB,CACnB3oE,MAAO,GACPgC,OAAQ,GACR4mE,aAAc,MACdnmC,OAAQ,eAGNomC,G,YACF,WAAY91E,GAAQ,IAAD,uBACf,4CAAMA,KA4CVqzE,iCAAmC,SAAAjlE,GAAW,IAAD,EACX,EAAKpO,MAA3B4O,EADiC,EACjCA,OAAQsW,EADyB,EACzBA,UADyB,EAEP,EAAK5lB,MAA/B4S,EAFiC,EAEjCA,SAAUohE,EAFuB,EAEvBA,YAEdphE,IAEAtD,IAAWR,EAAOQ,QAAUsW,IAAc9W,EAAO8W,UAC7CouD,EACA,EAAKrzE,SAAS,CAAEqzE,aAAa,GAAS,WAClCtrE,WAAW,WACP,EAAK/H,SAAS,CAAEqzE,aAAa,KAC9B,KAGP,EAAKrzE,SAAS,CAAEqzE,aAAa,IAE1BA,GACP,EAAKrzE,SAAS,CAAEqzE,aAAa,MA9DlB,EAkEnBU,mBAAqB,WACjB,EAAK/zE,SAAS,CAAEqzE,aAAa,KAnEd,EAsEnB7sD,UAAY,SAAAliB,GACJA,IACAA,EAAM8B,iBACN9B,EAAM2C,mBAHO,MAMa,EAAKlH,MAA3B4O,EANS,EAMTA,OAAQsW,EANC,EAMDA,UAEhBuB,aAAU7X,EAAQsW,IA9EH,MAGe,EAAKllB,MAA3B4O,EAHO,EAGPA,OAAQsW,EAHD,EAGCA,UAHD,OAIf,EAAK5lB,MAAQ,CACTuX,QAASa,KAAa1O,IAAI4F,EAAQsW,GAClCouD,aAAa,GANF,E,mFAUG3iE,EAAWC,GAAY,IAAD,EACyBrQ,KAAKP,MAA9D4O,EADgC,EAChCA,OAAQsW,EADwB,EACxBA,UAAW6R,EADa,EACbA,aAAcu9C,EADD,EACCA,oBACjChB,EAAgB/yE,KAAKjB,MAArBg0E,YAER,OAAI3iE,EAAU/B,SAAWA,IAIrB+B,EAAUuU,YAAcA,IAIxBvU,EAAUomB,eAAiBA,IAI3BpmB,EAAU2jE,sBAAwBA,GAIlC1jE,EAAU0iE,cAAgBA,O,0CAQ9B57D,KAAa7I,GAAG,iCAAkCtO,KAAK8yE,oC,6CAIvD37D,KAAa5I,IAAI,iCAAkCvO,KAAK8yE,oC,+BAuClD,IAAD,EACwD9yE,KAAKP,MAA1D4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAAWovD,EADtB,EACsBA,oBAAqBn1B,EAD3C,EAC2CA,SACxCm0B,EAAgB/yE,KAAKjB,MAArBg0E,YAEFz8D,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KALhB,IAOGe,EAAkBf,EAAlBe,QAASwX,EAASvY,EAATuY,KACjB,IAAKxX,EAAS,OAAO,KARhB,IAUGjI,EAAUiI,EAAVjI,MAEF2C,EAAOyjE,aAAyBl/D,GAAS,GAE/C,OACI,6BACKsoC,GAAY,kBAAC,GAAD,CAAS/vB,KAAMA,IAC5B,yBACI5uB,UAAWgM,IAAW,kBAAmB,CAAE,sBAAuB8mE,IAClEgC,eAAgB/0E,KAAKyzE,oBACpBM,GAAuB,kBAAC,GAAD,MACxB,yBAAK9zE,UAAU,2BACX,yBAAKA,UAAU,2BACX,6BAAM8R,KAGb3C,GACG,kBAACkd,GAAA,EAAD,CACIje,OAAQA,EACRsW,UAAWA,EACXvV,MAAOA,EACP1L,MAAO2xE,GACPnvD,UAAWlmB,KAAKkmB,kB,GAlHf3lB,IAAMC,WAiIpByb,GANCC,YACZkI,cACA3S,cACA4S,cAGWpI,CAAQs5D,I,UC4HRE,I,mBArQX,WAAYh2E,GAAQ,IAAD,8BACf,4CAAMA,KAuBVi2E,iCAAmC,SAAA7nE,GAAW,IAClC2zB,EAAS3zB,EAAT2zB,KACMm0C,EAAgB,EAAK52E,MAA3ByiC,KAER,IAAIm0C,GAAen0C,EAAKu7B,YAAc4Y,EAAY5Y,UAAlD,CAEA,EAAKr9D,SAAS,CACV8hC,KAAMg7B,KAAah7B,KACnBle,MAAO,EAAKsyD,SAASpZ,KAAah7B,QAGtC,IAAM9xB,EAAQlH,IAAUmH,WAChBqtD,EAAax7B,EAAbw7B,SACR6Y,YAAoBnmE,EAAOstD,EAASA,YArCrB,EAwCnB8Y,gCAAkC,SAAAjoE,GAAW,IACjC2zB,EAAS3zB,EAAT2zB,KAUR,GARA,EAAK9hC,SAAS,CACV8hC,OACAle,MAAO,EAAKsyD,SAASp0C,GACrBu0C,iBAAkB,EAClBl4B,aAAa,EACbm4B,YAAY,IAGXx0C,EAAL,CAEA,IAAM9xB,EAAQlH,IAAUmH,WAChBqtD,EAAax7B,EAAbw7B,SACR6Y,YAAoBnmE,EAAOstD,EAASA,YAvDrB,EA0DnBzlD,WAAa,SAAApY,GACc,EAAKJ,MAApBi3E,YAEH72E,GAELE,IAAgByF,aAAa,CACzB,QAAS,0BACT3F,aAjEW,EAqEnB82E,mBAAqB,SAAAC,GAAc,IACvB5yD,EAAU,EAAKvkB,MAAfukB,MAEFnkB,EAAUmkB,EAAMtG,KAAK,SAAA1b,GAAC,OAAIA,EAAEnC,QAAQC,KAAO82E,IACjD,GAAK/2E,EAAL,CAEA,IAAMuQ,EAAQlH,IAAUmH,WACxBwmE,YAAmBzmE,EAAOvQ,EAAS,MAEnC,IAAIi3E,EAAiB,EACjB,EAAKC,UAAY,EAAKA,SAASz+D,UAC/Bw+D,EAAiB10E,KAAKmK,MAAM,EAAKwqE,SAASz+D,QAAQxN,YAAcksE,OAG5C,EAAKC,oBAAoBL,EAAW5yD,EAAO8yD,GACnDr0E,QAAQ,SAAAT,GACpB60E,YAAmBzmE,EAAOpO,EAAG,UArFlB,EAyFnBi1E,oBAAsB,SAACL,EAAWlZ,EAAUoZ,GACxC,IAAKpZ,EAAU,MAAO,GAEtB,IAAMwZ,EAAU,GACV/uD,EAAQu1C,EAASt1C,UAAU,SAAApmB,GAAC,OAAIA,EAAEnC,QAAQC,KAAO82E,IACvD,IAAe,IAAXzuD,EAAc,MAAO,GAEzB,IAAMgvD,EAAM/0E,KAAKmK,MAAM4b,EAAQ2uD,GACzBM,EAASjvD,EAAQ2uD,EAEjBO,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQxhE,KAAKohE,EAAiBO,EAAUE,GAE5CL,EAAQxhE,KAAKohE,EAAiBO,EAAUD,GACpCI,EAAaV,GACbI,EAAQxhE,KAAKohE,EAAiBO,EAAUG,IAI5CD,GAAc,GACdL,EAAQxhE,KAAKohE,EAAiBK,EAAMI,GAEpCC,EAAaV,GACbI,EAAQxhE,KAAKohE,EAAiBK,EAAMK,GAGpCF,EAAUl1E,KAAKq1E,KAAK/Z,EAASlpD,OAASsiE,KAClCS,GAAc,GACdL,EAAQxhE,KAAKohE,EAAiBQ,EAAUC,GAE5CL,EAAQxhE,KAAKohE,EAAiBQ,EAAUF,GACpCI,EAAaV,GACbI,EAAQxhE,KAAKohE,EAAiBQ,EAAUE,IAIzCN,EAAQnhE,IAAI,SAAAjB,GAAC,OAAI4oD,EAAS5oD,MAnIlB,EAsInBsvD,iBAAmB,SAAA1/D,GACf,IAAMkyE,EAAYjvE,OAAOjD,EAAMu7B,cAAcuqB,QAAQosB,WAC/C/2E,EAAU,EAAK63E,WAAWd,GAC3B/2E,GAEA,EAAKo0E,YAEN,EAAK0D,qBAAuBf,IAC5B,EAAKe,mBAAqB,MAE9B,EAAKv3E,SAAS,CAAEP,YAChBE,IAAgByF,aAAa,CACzB,QAAS,6BACT3F,YAEJ,EAAK82E,mBAAmBC,KArJT,EAwJnBxvE,gBAAkB,SAAA1C,GACd,IAAMkyE,EAAYjvE,OAAOjD,EAAMu7B,cAAcuqB,QAAQosB,WAC/C/2E,EAAU,EAAK63E,WAAWd,GAChC,GAAK/2E,EAAL,CAEA,EAAK83E,mBAAqBf,EAC1B,IAAM90E,EAAM2tB,KAAK3tB,MAqBjB,OAnBA,EAAK1B,SAAS,CAAEP,UAAS49D,UAAW37D,EAAKy8C,aAAa,EAAOm4B,YAAY,IACzEvuE,WAAW,WACe,EAAK1I,MAAnBg+D,YACU37D,IACd,EAAK1B,SAAS,CAAEm+C,aAAa,EAAMm4B,YAAY,IAC/C32E,IAAgByF,aAAa,CACzB,QAAS,6BACT3F,cAGT,KAEH,EAAK82E,mBAAmBC,GAExB,EAAK3C,WAAY,EACjBrwE,SAAS8F,iBAAiB,UAAW,EAAK1C,eAE1CtC,EAAM8B,iBACN9B,EAAM2C,mBACC,IAnLQ,EAsLnBL,cAAgB,WAEZ,EAAK5G,SAAS,CAAEP,QADA,KACS49D,UAAW,EAAGlf,aAAa,IACpDx+C,IAAgByF,aAAa,CACzB,QAAS,6BACT3F,QAJY,OAMhB,EAAKo0E,WAAY,EACjBrwE,SAASgG,oBAAoB,UAAW,EAAK5C,gBA9L9B,EAiMnBsvE,SAAW,SAAAp0C,GACP,IAAMle,EAAQ,GACd,IAAKke,EAAM,OAAOle,EAElB,IAAM4zD,EAAO,IAAIhjE,IACT8oD,EAA4Bx7B,EAA5Bw7B,SAAUma,EAAkB31C,EAAlB21C,cAgBlB,OAfIna,GACAA,EAASA,SAASj7D,QAAQ,SAAAT,GACtBgiB,EAAMtO,KAAK1T,GACX41E,EAAKl+D,IAAI1X,EAAEnC,QAAQC,GAAIkC,EAAEnC,QAAQC,MAGrC+3E,GACAA,EAAcna,SAASj7D,QAAQ,SAAAT,GACtB41E,EAAK7iE,IAAI/S,EAAEnC,QAAQC,MACpBkkB,EAAMtO,KAAK1T,GACX41E,EAAKl+D,IAAI1X,EAAEnC,QAAQC,GAAIkC,EAAEnC,QAAQC,OAKtCkkB,GAnNP,EAAK+yD,SAAW91E,IAAMsa,YAEtB,EAAK9b,MAAQ,CACTyiC,KAAM,KACNle,MAAO,GACPyyD,iBAAkB,EAClBl4B,aAAa,EACbm4B,YAAY,GAVD,E,iFAefxZ,KAAaluD,GAAG,gCAAiCtO,KAAK81E,iCACtDtZ,KAAaluD,GAAG,iCAAkCtO,KAAK01E,oC,6CAIvDlZ,KAAajuD,IAAI,gCAAiCvO,KAAK81E,iCACvDtZ,KAAajuD,IAAI,iCAAkCvO,KAAK01E,oC,iCAoMjDQ,GAAY,IACX5yD,EAAUtjB,KAAKjB,MAAfukB,MAEF8zD,EAAe9zD,EAAMoE,UAAU,SAAApmB,GAAC,OAAIA,EAAEnC,QAAQC,KAAO82E,IAC3D,OAAyB,IAAlBkB,EAAsB9zD,EAAM8zD,GAAgB,O,+BAG7C,IAAD,SACyCp3E,KAAKjB,MAA3CyiC,EADH,EACGA,KAAMle,EADT,EACSA,MAAOnkB,EADhB,EACgBA,QAAS0+C,EADzB,EACyBA,YAC9B,IAAKrc,EAAM,OAAO,KAClB,IAAKle,EAAO,OAAO,KACnB,IAAKA,EAAMxP,OAAQ,OAAO,KAE1B,IAAMm2D,EAAW3mD,EAAMjO,IAAI,SAAA/T,GAAC,OACxB,yBACIrB,UAAU,0BACV8W,IAAKzV,EAAEnC,QAAQC,GACfi4E,kBAAiB/1E,EAAEnC,QAAQC,GAC3BsE,MAAO,CAAEgJ,MAAO4pE,KAA2B5nE,OAAQ4nE,MACnDjqE,QAAS,kBAAM,EAAKkL,WAAWjW,IAC/BkL,aAAc,EAAKk3D,iBACnBx3D,YAAa,EAAKxF,iBAClB,kBAACsqE,GAAA,EAAD,CACIj6D,IAAKzV,EAAEnC,QAAQC,GACfa,UAAU,kCACVd,QAASmC,EACTi2C,UAAU,EACVxvC,MAAM,EACN7H,YAAao3E,KACbC,SAAO,EACPn3E,OAAQC,KAAkBm3E,WAKtC,OACI,yBAAKh8D,IAAKxb,KAAKq2E,SAAUp2E,UAAU,iBAC9BgqE,EACApjD,QAAQ1nB,IAAY0+C,GAAe,kBAAC/+C,GAAA,EAAD,CAAgBK,QAASA,S,GAhQlDoB,IAAMC,Y,oOCkBjC,IAAMi3E,GAAqB5V,OAAO6V,OAAO,CACrCC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,uBACtBlT,KAAM,SAkwCKmT,G,YA9vCX,WAAYt4E,GAAQ,IAAD,8BACf,4CAAMA,KA6KVkc,UAAY,SAAA3X,KA9KO,EAyLnBg0E,6BAzLmB,sCAyLY,WAAMnqE,GAAN,yBAAAmE,EAAA,yDACvB,EAAKwW,UADkB,iBAEfyvD,EAAY,EAAKl5E,MAAjBk5E,QAEC7jE,EAAI6jE,EAAQnkE,OAAS,EAJP,YAIUM,GAAK,GAJf,oBAKbkC,EAAU2hE,EAAQ7jE,IACpBs7D,aAAmBp5D,EAAQ7G,QAAS6G,EAAQlX,IAN7B,uBAOfgxD,aAAY95C,EAAQ7G,QAAS6G,EAAQlX,IAPtB,0BAIkBgV,IAJlB,wCAcN/U,IAAgBC,KAAK,CACtC,QAAS,qBACTmQ,QAAS,EAAKhQ,MAAM4O,OACpB4L,MAAO,GACP4O,eAAgB5a,IAAUiH,UAC1B4T,gBAAiB,EACjBC,OAAQ,EACRhU,MAAO,IACP+E,OAAQ,CAAE,QAAS,+BAtBI,QAcrBta,EAdqB,OAyBlB4U,EAAI,EAzBc,aAyBXA,EAAI5U,EAAOypB,SAASnV,QAzBT,oBA0BjBwC,EAAU9W,EAAOypB,SAAS7U,IAC5Bs7D,aAAmBp5D,EAAQ7G,QAAS6G,EAAQlX,IA3BzB,wBA4BnBgxD,aAAY95C,EAAQ7G,QAAS6G,EAAQlX,IA5BlB,2BAyBiBgV,IAzBjB,0DAzLZ,wDA4NnBitD,2BA5NmB,sCA4NU,WAAMxzD,GAAN,eAAAmE,EAAA,wDACjBwP,EAAS3T,EAAT2T,KADiB,oDAGH,iBAAlBA,EAAK,SAHgB,qDAKL,EAAKziB,MAAjBk5E,QALiB,kEAQnBzvE,IAAUm8B,OAAV,qBAAiB,oCAAA3yB,EAAA,0DACW,EAAKvS,MAA3B4O,EADW,EACXA,OAAQsW,EADG,EACHA,WACZtW,EAFe,sBAGTa,EAAOC,IAAU1G,IAAI4F,IAHZ,iBAKHoO,EAASvN,EAATuN,KALG,KAMHA,EAAK,SANF,OAOF,oBAPE,OAQF,mBARE,OAgBF,uBAhBE,QAwBF,uBAxBE,yCASGpd,IAAgBC,KAAK,CACvB,QAAS,oBACTyO,QAAS0O,EAAK1O,QACdoH,OAAO,IAZR,6DAiBG9V,IAAgBC,KAAK,CACvB,QAAS,uBACTwd,eAAgBL,EAAKK,eACrB3H,OAAO,IApBR,6DAyBG9V,IAAgBC,KAAK,CACvB,QAAS,uBACTke,cAAef,EAAKe,cACpBrI,OAAO,IA5BR,4CAiCX,EAAKk+D,iBAAiBhlE,EAAQ,EAAGsW,EAAW,GAjCjC,2CARE,0CA5NV,wDA2QnBuxC,0BAA4B,SAAAroD,GACJA,EAAZytC,UAEJ,EAAK48B,gBAAgBn2E,QAAQ,SAAAT,GAAC,OAAIA,MAClC,EAAK42E,gBAAkB,KA/QZ,EAmRnBC,wBAA0B,SAAAtqE,GAAW,IACzBQ,EAAsBR,EAAtBQ,OAAQsW,EAAc9W,EAAd8W,UACRyzD,EAAiB,EAAKr5E,MAAtBq5E,aAER,GAAI,EAAK34E,MAAM4O,SAAWA,EAA1B,CAIA,IAAMukC,EAAWwlC,EAAatkE,OAAS,EAAIskE,EAAaA,EAAatkE,OAAS,GAAK,KAC/E8+B,GAAYA,EAASvkC,SAAWA,GAAUukC,EAASjuB,YAAcA,GAIrEyzD,EAAapjE,KAAK,CAAE3G,SAAQsW,gBAhSb,EAmSnB6hD,0BAA4B,SAAA34D,GACxB,IAAM2T,EAAO,EAAK+H,QAAQ3R,QAEpB67B,EAAmBjyB,EAAKE,aACxBiyB,EAAgBnyB,EAAKR,UAC3B,EAAKthB,SAAS,CAAE24E,cAAc,GAAQ,WAC9B72D,EAAKR,YAAc2yB,IACnBnyB,EAAKR,WAAatf,KAAKyP,IAAIsiC,EAAmBjyB,EAAKE,kBA1S5C,EA+SnB42D,0BAA4B,SAAAC,GACxB,IAAM/2D,EAAO,EAAK+H,QAAQ3R,QAE1B,EAAK67B,iBAAmBjyB,EAAKE,aAC7B,EAAKiyB,cAAgBnyB,EAAKR,WAnTX,EAsTnBw3D,uBAAyB,SAAAD,GACrB,IAAM/2D,EAAO,EAAK+H,QAAQ3R,QAK1B,EAAKlY,SAAS,CAAE24E,cAAc,GAAS,WAC/B72D,EAAKR,YAAc,EAAK2yB,gBACxBnyB,EAAKR,WAAatf,KAAKyP,IAAI,EAAKsiC,iBAAmBjyB,EAAKE,kBA9TjD,EAmUnB+2D,wBAA0B,SAAA5qE,GACtB,EAAKnO,SAAS,CACVg5E,gBAAiBvhE,KAAa0sC,cAAcr1C,KAAO,KArUxC,EAyUnB2kB,2BAA6B,SAAAtlB,GACN,EAAKpO,MAAhB4O,SAEOR,EAAOQ,QAClB,EAAK3O,SAAS,CAAE0zB,aAAcvlB,EAAOwlB,cA7U1B,EAiVnBlM,uBAAyB,SAAAtZ,GAAW,IACxBQ,EAAW,EAAK5O,MAAhB4O,OACA4pE,EAAY,EAAKl5E,MAAjBk5E,QACAxoE,EAAwB5B,EAAxB4B,QAASsG,EAAelI,EAAfkI,WAEjB,GAAI1H,IAAWoB,IAEsC,IAAjDwoE,EAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAO2W,IAAoB,CACpD,IAAMO,EAAUa,KAAa1O,IAAIgH,EAASsG,GAC1C,IAAKO,EAAS,OAEd,IAAM5G,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAO,CAAC4G,MA7VjB,EAiWnBqiE,wBAA0B,SAAA9qE,GACH,EAAKpO,MAAhB4O,OACOR,EAAO4B,SAnWP,EAsWnBmpE,6BAA+B,SAAA/qE,GAC3B,GAAK,EAAK2a,UAAV,CADqC,IAG7BlS,EAA4BzI,EAA5ByI,QAAS+f,EAAmBxoB,EAAnBwoB,eAEjB,GADmB,EAAK52B,MAAhB4O,SACOiI,EAAQ7G,QAAvB,CAaA,IAAMopE,EAAiBviE,EAAQ8gB,YACzBqgD,GAAmBE,iBACnBF,GAAmBK,qBAEzB,EAAKgB,eAAeziD,EAAgB/f,EAAS,WACrCuiE,IAAmBpB,GAAmBK,sBACtC,EAAKiB,qBAAqBF,EAAgB,EAAK94E,UAGnD,EAAKi5E,sBAGT,IAAMtpE,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAO,CAAC4G,IAC5B,EAAK0iB,aAAa,CAAC1iB,OAtYJ,EAyYnByR,mBAAqB,SAAAla,GACjB,GAAK,EAAK2a,UAAV,CAD2B,IAGnBlS,EAAYzI,EAAZyI,QAER,GADmB,EAAK7W,MAAhB4O,SACOiI,EAAQ7G,QAGvB,GAAa,IADI6G,EAATuY,KACR,CAEA,IAAMrN,EAAO,EAAK+H,QAAQ3R,QAEtBihE,EAAiBviE,EAAQ8gB,YAAcqgD,GAAmBE,iBAAmBF,GAAmB7S,KAChGpjD,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,eAC3Co3D,EAAiBpB,GAAmBE,kBAGxC,IAAMsB,EAAW3iE,EAAQ8gB,YAAc,CAAE8hD,mBAAmB,GAAU,GAEhEjB,EAAU,CAAC3hE,GACjB,EAAK6iE,oBAAqB,EAC1B,EAAKC,eAAeC,aAAepB,GAAUgB,EAAU,WACnD,EAAKE,oBAAqB,EAC1B,EAAKJ,qBAAqBF,EAAgB,EAAK94E,YAGnD,IAAM2P,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOuoE,GAC3B,EAAKj/C,aAAai/C,MAraH,EAwanB/vD,uBAAyB,SAAAra,GAAW,IACxBQ,EAAW,EAAK5O,MAAhB4O,OACAoB,EAAuC5B,EAAvC4B,QAASimD,EAA8B7nD,EAA9B6nD,aAAc98C,EAAgB/K,EAAhB+K,YAC3BvK,IAAWoB,GAEVimD,GAEL,EAAK4jB,cAAc1gE,IA/aJ,EAkbnBogE,kBAAoB,WAChB,GAAK,EAAK/vD,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAI/U,IACfoP,EAAQi2D,YAAY,EAAKhwD,QAAS,EAAK2pB,UACpC9+B,EAAI,EAAGA,EAAIkP,EAAMxP,OAAQM,IAAK,CACnC,IAAMolE,EAAiB,EAAKvwD,SAAS3F,EAAMlP,IAC3C,GAAIolE,EAAgB,CAChB,IADgB,EACAA,EACsB/5E,MAA9B4O,EAFQ,EAERA,OAAQsW,EAFA,EAEAA,UACV5N,EAAG,UAAM1I,EAAN,YAAgBsW,GACzBsE,EAASjQ,IAAIjC,EAAKA,IAI1B1X,IAAgByF,aAAa,CACzB,QAAS,6BACTmkB,SAAUA,MAncC,EAkoBnBwwD,sBAloBmB,sCAkoBK,WAAMj6E,GAAN,mBAAAwS,EAAA,qDACd0nE,EAAiB,EACnBC,EAAan6E,GAAUA,EAAOypB,SAASnV,OAAS,GAAKtU,EAAOypB,SAASnV,OAAS8lE,IAEzExlE,EAAI,EAJO,YAIJA,EAAIslE,GAAkBC,GAJlB,iCAKD,EAAKtxD,aALJ,OAKhB7oB,EALgB,OAMhBm6E,EAAan6E,GAAUA,EAAOypB,SAASnV,OAAS,GAAKtU,EAAOypB,SAASnV,OAAS8lE,IAN9D,OAI8BxlE,IAJ9B,yDAloBL,wDA4oBnBiU,WA5oBmB,qBA4oBN,sCAAArW,EAAA,wDACD3D,EAAW,EAAK5O,MAAhB4O,OACA4pE,EAAY,EAAKl5E,MAAjBk5E,QAEH5pE,EAJI,qDAKL,EAAKka,QALA,qDAOL,EAAKsxD,oBAPA,uBAQL,EAAKC,wBARA,iCAYHlxD,EAAgBqvD,GAAWA,EAAQnkE,OAAS,EAAImkE,EAAQ,GAAG74E,GAAK,EAEtE,EAAKmpB,SAAU,EACTwgB,EAAY,EAAKA,UAfd,UAgBU1pC,IAAgBC,KAAK,CACpC,QAAS,iBACTmQ,QAASpB,EACTya,gBAAiBF,EACjBG,OAAQ,EACRhU,MAAO6kE,MACR5wD,QAAQ,WACP,EAAKT,SAAU,IAvBV,WAgBL/oB,EAhBK,OA0BLupC,IAAc,EAAKA,UA1Bd,sDA8BL,EAAKtpC,MAAM4O,SAAWA,EA9BjB,0DAkCT8I,KAAaiS,SAAS5pB,EAAOypB,UAC7BzpB,EAAOypB,SAAS69C,UAChB,EAAKiT,WAAWV,aAAe75E,EAAOypB,UAAW,WACxCzpB,EAAOypB,SAASnV,QACjB,EAAKgmE,0BAIPpqE,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOlQ,EAAOypB,UAClC,EAAK+P,aAAax5B,EAAOypB,UA5ChB,kBA8CFzpB,GA9CE,0CA5oBM,EA6rBnBs6E,sBA7rBmB,qBA6rBK,4CAAA9nE,EAAA,wDACZ3D,EAAW,EAAK5O,MAAhB4O,OACA4pE,EAAY,EAAKl5E,MAAjBk5E,QAEH5pE,EAJe,qDAKhB,EAAKka,QALW,oDAOdyxD,EAAeroD,YAAgBtjB,GAPjB,oDAUdsO,EAAWkB,KAAgBhB,YAAYm9D,GAVzB,sDAYfr9D,EAASiV,6BAZM,0DAcpB,EAAKioD,qBAAsB,EAdP,UAgBSx6E,IAAgBC,KAAK,CAC9C,QAAS,uBACTwd,eAAgBH,EAASiV,+BAlBT,WAgBdqoD,EAhBc,iEAuBdrxD,EAAgBqvD,EAAQnkE,OAAS,GAAKmkE,EAAQ,GAAGxoE,UAAYwqE,EAAe76E,GAAK64E,EAAQ,GAAG74E,GAAK,EAEvG,EAAKmpB,SAAU,EACTwgB,EAAY,EAAKA,UA1BH,UA2BC1pC,IAAgBC,KAAK,CACtC,QAAS,iBACTmQ,QAASwqE,EAAe76E,GACxB0pB,gBAAiBF,EACjBG,OAAQ,EACRhU,MAAO6kE,MACR5wD,QAAQ,WACP,EAAKT,SAAU,IAlCC,WA2Bd/oB,EA3Bc,OAqChBupC,IAAc,EAAKA,UArCH,sDAyChB,EAAKtpC,MAAM4O,SAAWA,EAzCN,mDA6CpB8I,KAAaiS,SAAS5pB,EAAOypB,UAC7BzpB,EAAOypB,SAAS69C,UAChB,EAAKiT,WAAWV,aAAe75E,EAAOypB,WAEhCvZ,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOlQ,EAAOypB,UAClC,EAAK+P,aAAax5B,EAAOypB,UAnDL,0CA7rBL,EAmvBnB8hB,eAnvBmB,qBAmvBF,wCAAA/4B,EAAA,wDACL3D,EAAW,EAAK5O,MAAhB4O,OACA4pE,EAAY,EAAKl5E,MAAjBk5E,QAEF/oE,EAAOC,IAAU1G,IAAI4F,GAJd,qDAOT,EAAKka,QAPI,qDAQT,EAAKC,UARI,wDAUPI,EAAgBqvD,GAAWA,EAAQnkE,OAAS,EAAImkE,EAAQA,EAAQnkE,OAAS,GAAG1U,GAAK,EAEvF,EAAKmpB,SAAU,EACTwgB,EAAY,EAAKA,UAbV,UAcM1pC,IAAgBC,KAAK,CACpC,QAAS,iBACTmQ,QAASpB,EACTya,gBAAiBF,EACjBG,QAAS6wD,IAAsB,EAC/B7kE,MAAO6kE,IAAsB,IAC9B5wD,QAAQ,WACP,EAAKT,SAAU,IArBN,WAcT/oB,EAdS,OAwBTupC,IAAc,EAAKA,UAxBV,sDA4BT,EAAKtpC,MAAM4O,SAAWA,EA5Bb,0DAgCTa,EAAKqkB,aACL,EAAK/K,UAAYhpB,EAAOypB,SAASnV,OAAS,GAAK5E,EAAKqkB,aAAan0B,KAAOI,EAAOypB,SAAS,GAAG7pB,GAE3F,EAAKopB,WAAY,EAGrB0iB,aAAwB1rC,EAAQ,EAAKT,MAAMk5E,SAE3C9gE,KAAaiS,SAAS5pB,EAAOypB,UAC7BzpB,EAAOypB,SAAS69C,UAChB,EAAKqS,oBAAqB,EAC1B,EAAKC,eAAeC,aAAe75E,EAAOypB,UAAW,GAAI,WACrD,EAAKkwD,oBAAqB,IAGxBzpE,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOlQ,EAAOypB,UAClC,EAAK+P,aAAax5B,EAAOypB,UAjDZ,kBAmDNzpB,GAnDM,0CAnvBE,EAw1BnB8pB,aAAe,WAAO,IAAD,EACoC,EAAKvqB,MAAlDm6E,EADS,EACTA,kBAAmBd,EADV,EACUA,aAAcH,EADxB,EACwBA,QACnCz2D,EAAO,EAAK+H,QAAQ3R,QAS1B,EAAKohE,oBAEDx3D,EAAKR,WAAawI,KAClB,EAAKnB,aACE7G,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,MACjE,EAAKuhB,iBAGLvpB,EAAKR,UAAYQ,EAAKE,cAAgBF,EAAKC,aAAe+H,KACtD,EAAKhB,WAAa0wD,IACd,EAAKvlC,gBAAkBnyB,EAAKR,WAAa,EAAK2yB,eAAiB,EAAKumC,cAAgBjC,EACpF,EAAKv4E,SAAS,CACVw5E,mBAAmB,EACnBd,aAAc,KAEVA,EAAatkE,QACrB,EAAKpU,SAAS,CACVw5E,mBAAmB,KAK1BA,GACD,EAAKx5E,SAAS,CAAEw5E,mBAAmB,IAI3C,EAAKvlC,cAAgBnyB,EAAKR,UAC1B,EAAKk5D,YAAcjC,GA/3BJ,EAk4BnBc,qBAAuB,SAACF,EAAgB94E,GAAc,IAAD,EACnB,EAAKN,MADc,KACzC4O,OADyC,EACjCsW,UACkC5kB,GAAY,CAC1DihB,UAAW,EACXS,aAAc,EACdC,aAAc,IAL+B,EAEzCV,UAFyC,EAE9BS,aAF8B,EAEhBC,aAcjC,OAAQm3D,GACJ,KAAKpB,GAAmBE,iBACpB,EAAKwC,iBACL,MAEJ,KAAK1C,GAAmBI,kBACpB,EAAKuC,kBACL,MAEJ,KAAK3C,GAAmBG,iBACpB,EAAKyC,iBACL,MAEJ,KAAK5C,GAAmBK,qBACpB,EAAKwC,mBAAmBv6E,GACxB,MAEJ,KAAK03E,GAAmB7S,QAn6Bb,EAy6BnB0V,mBAAqB,SAAAv6E,GAAa,IACtBihB,EAA0CjhB,EAA1CihB,UAAWS,EAA+B1hB,EAA/B0hB,aACbD,GAD4CzhB,EAAjB2hB,aACpB,EAAK6H,QAAQ3R,SAS1B4J,EAAKR,UAAYA,GAAaQ,EAAKC,aAAeA,IAp7BnC,EA87BnB44D,eAAiB,WAiBb,IAjBoB,IAAD,EACW,EAAK56E,MAA3B4O,EADW,EACXA,OACA4pE,GAFW,EACHtzD,UACI,EAAK5lB,MAAjBk5E,SACFz2D,EAAO,EAAK+H,QAAQ3R,QAatB2iE,GAXSprE,IAAU1G,IAAI4F,IAWZ,GACN+F,EAAI,EAAGA,EAAI6jE,EAAQnkE,OAAQM,IAAK,CACrC,IAAIomE,EAAgB,EAAKC,SAAShyE,IAAI2L,GAClC2mB,EAAOmrC,eAAqBsU,GAChC,GAAIz/C,GACIy/C,EAAc/6E,MAAMs0E,oBAAqB,CACzCvyD,EAAKR,UAAY+Z,EAAK8W,UAhBN,EAiBhB0oC,GAAW,EACX,OAaPA,GACD,EAAKJ,kBAp+BM,EAw+BnBC,gBAAkB,WAed,IAfqB,IAAD,EACU,EAAK36E,MAAnBklB,GADI,EACZtW,OADY,EACJsW,WACRszD,EAAY,EAAKl5E,MAAjBk5E,QACFz2D,EAAO,EAAK+H,QAAQ3R,QAYjBxD,EAAI,EAAGA,EAAI6jE,EAAQnkE,OAAQM,IAAK,CACrC,IAAMomE,EAAgB,EAAKC,SAAShyE,IAAI2L,GAClC+0C,EAAO+c,eAAqBsU,GAClC,GAAIrxB,GACIqxB,EAAc/6E,MAAMklB,YAAcA,EAAW,CAC7CnD,EAAKR,UAAYmoC,EAAKtX,UAAYrwB,EAAKE,aAAe,GAC3C,EACX,SA9/BG,EAghCnBy4D,eAAiB,WAAO,IAAD,EACW,EAAK16E,MAC7B+hB,GAFa,EACXnT,OADW,EACHsW,UACH,EAAK4E,QAAQ3R,SAUJ4J,EAAKC,aAAeD,EAAKE,eACzBF,EAAKR,YACvBQ,EAAKR,UAAYQ,EAAKC,aAAeD,EAAKE,eA9hC/B,EAkjCnBg5D,cAljCmB,qBAkjCH,sCAAA1oE,EAAA,wDACJ3D,EAAW,EAAK5O,MAAhB4O,OACFa,EAAOC,IAAU1G,IAAI4F,GAFf,wDAMZ,EAAK06B,UAAYha,KAAK3tB,MACtB,EAAKmnB,SAAU,EACf,EAAKC,WAAY,EAEK,EACP,EACTzT,EAAQ6kE,IAEd,EAAKrxD,SAAU,EACTwgB,EAAY,EAAKA,UAfX,UAgBS1pC,IAAgBC,KAAK,CACtC,QAAS,iBACTmQ,QAASP,EAAK9P,GACd0pB,gBATkB,EAUlBC,OATW,EAUXhU,MAAOA,IACRiU,QAAQ,WACP,EAAKT,SAAU,IAvBP,WAgBN/oB,EAhBM,OA0BRupC,IAAc,EAAKA,UA1BX,sDA8BR,EAAKtpC,MAAM4O,SAAWA,EA9Bd,mDAkCRa,EAAKqkB,aACL,EAAK/K,UAAYhpB,EAAOypB,SAASnV,OAAS,GAAK5E,EAAKqkB,aAAan0B,KAAOI,EAAOypB,SAAS,GAAG7pB,GAE3F,EAAKopB,WAAY,EAGrB,EAAK9oB,SAAS,CAAEw5E,mBAAmB,EAAOd,aAAc,KAExDjhE,KAAaiS,SAAS5pB,EAAOypB,UAC7BzpB,EAAOypB,SAAS69C,UAEhB,EAAKzgC,QAAQ,EAAKtnC,MAAM47E,mBAAoBn7E,EAAOypB,SAAU,WACzD,EAAK8vD,qBAAqBtB,GAAmBE,iBAAkB,EAAK53E,YAIlE2P,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOlQ,EAAOypB,UAClC,EAAK+P,aAAax5B,EAAOypB,UAEzB,EAAKwwD,sBAAsBj6E,GAtDf,0CAljCG,EA2mCnBo7E,oBAAsB,SAAA52E,GAClBA,EAAM8B,iBACN9B,EAAM2C,kBAFqB,IAInB0H,EAAW,EAAK5O,MAAhB4O,OACH26C,YAAqB36C,IAE1BhP,IAAgByF,aAAa,CACzB,QAAS,uBACT8B,UAAU,EACVu2B,MAAOn5B,EAAM6nE,aAAa1uC,SArnCf,EAynCnB09C,sBAAwB,SAAA72E,GAAU,IACtBo0E,EAAiB,EAAKr5E,MAAtBq5E,aAER,GAAIA,EAAatkE,OAAS,EAAG,CACzB,IAAMgnE,EAAY1C,EAAa2C,MAC/B,GAAID,EAAW,CAAC,IACJzsE,EAAsBysE,EAAtBzsE,OAAQsW,EAAcm2D,EAAdn2D,UACZtW,IAAW,EAAK5O,MAAM4O,QACtB+S,aAAS/S,EAAQsW,SAIzB,EAAK+1D,iBA/nCT,EAAK3xC,UAAYha,KAAK3tB,MACtB,EAAKrC,MAAQ,CACTyS,WAAY,EACZwlB,cAAe,KACfqhD,cAAc,EACdJ,QAAS,GACT7kD,cAAc,EACdslD,iBAAiB,EACjBiC,mBAAoB,EACpBzB,mBAAmB,EACnBd,aAAc,IAGlB,EAAK7uD,QAAUhpB,IAAMsa,YACrB,EAAKq4B,SAAW3yC,IAAMsa,YACtB,EAAKmgE,oBAAsBz6E,IAAMsa,YAEjC,EAAKq9D,gBAAkB,GACvB,EAAKuC,SAAW,IAAIvmE,IAEpB,EAAK8kE,kBAAoBp1C,YAAS,EAAKo1C,kBAAmB,KA1B3C,E,qFA8CKn5E,EAAWC,GAC/B,IAAM0hB,EAAOxhB,KAAKupB,QAAQ3R,QAGpB7X,EAAW,CACbihB,UAH8CQ,EAA1CR,UAIJS,aAJ8CD,EAA/BC,aAKfC,aAL8CF,EAAjBE,cAUjC,OADA1hB,KAAKD,SAAWA,EACTA,I,yCAGQF,EAAWC,EAAWC,GAAW,IAAD,EACjBC,KAAKP,MAA3B4O,EADuC,EACvCA,OAAQsW,EAD+B,EAC/BA,UACc3kB,KAAKjB,MAA3Bm6E,kBAEKl5E,KAAKupB,QAAQ3R,QAWtB/X,EAAUwO,SAAWA,GAAUxO,EAAU8kB,YAAcA,EACvD3kB,KAAKqzE,iBAAiBhlE,EAAQxO,EAAUwO,OAAQsW,EAAW9kB,EAAU8kB,WAEhE3kB,KAAKm5E,oBACNn5E,KAAK+4E,qBAAqBtB,GAAmBK,qBAAsB/3E,K,4CAKzDqQ,EAAWC,GAAY,IAAD,EACHrQ,KAAKP,MAAlC4O,EADgC,EAChCA,OAAQsW,EADwB,EACxBA,UAAWhD,EADa,EACbA,MADa,EAEsD3hB,KAAKjB,MAA3Fs5E,EAFgC,EAEhCA,aAAcJ,EAFkB,EAElBA,QAASrxE,EAFS,EAETA,SAAUwsB,EAFD,EAECA,aAAcslD,EAFf,EAEeA,gBAAiBQ,EAFhC,EAEgCA,kBAExE,OAAI9oE,EAAUuR,QAAUA,IAKpBvR,EAAU/B,SAAWA,IAKrB+B,EAAUuU,YAAcA,IAKxBtU,EAAU6oE,oBAAsBA,IAKhC7oE,EAAUgoE,eAAiBA,KAK1B4C,YAAc5qE,EAAU4nE,QAASA,KAKlC5nE,EAAUzJ,WAAaA,IAKvByJ,EAAU+iB,eAAiBA,GAK3B/iB,EAAUqoE,kBAAoBA,W,0CAUlC3lD,KAASzkB,GAAG,0BAA2BtO,KAAKk2D,2BAC5CnjC,KAASzkB,GAAG,2BAA4BtO,KAAKqhE,4BAC7ClyD,IAAUb,GAAG,2BAA4BtO,KAAKmzB,4BAC9ChkB,IAAUb,GAAG,wBAAyBtO,KAAK24E,yBAC3CxhE,KAAa7I,GAAG,6BAA8BtO,KAAKy4E,yBACnDthE,KAAa7I,GAAG,8BAA+BtO,KAAKy4E,yBACpDthE,KAAa7I,GAAG,wBAAyBtO,KAAKm4E,yBAC9ChhE,KAAa7I,GAAG,6BAA8BtO,KAAKg4E,8BACnD7gE,KAAa7I,GAAG,mBAAoBtO,KAAK+nB,oBACzC5Q,KAAa7I,GAAG,uBAAwBtO,KAAKkoB,wBAC7C/Q,KAAa7I,GAAG,uBAAwBtO,KAAKmnB,wBAC7ChQ,KAAa7I,GAAG,6BAA8BtO,KAAK44E,8BACnDhwE,IAAY0F,GAAG,0BAA2BtO,KAAKwmE,2BAC/C59D,IAAY0F,GAAG,0BAA2BtO,KAAKs4E,2BAC/C1vE,IAAY0F,GAAG,uBAAwBtO,KAAKw4E,0B,6CAI5CzlD,KAASxkB,IAAI,0BAA2BvO,KAAKk2D,2BAC7CnjC,KAASxkB,IAAI,2BAA4BvO,KAAKqhE,4BAC9ClyD,IAAUZ,IAAI,2BAA4BvO,KAAKmzB,4BAC/ChkB,IAAUZ,IAAI,wBAAyBvO,KAAK24E,yBAC5CxhE,KAAa5I,IAAI,6BAA8BvO,KAAKy4E,yBACpDthE,KAAa5I,IAAI,8BAA+BvO,KAAKy4E,yBACrDthE,KAAa5I,IAAI,wBAAyBvO,KAAKm4E,yBAC/ChhE,KAAa5I,IAAI,6BAA8BvO,KAAKg4E,8BACpD7gE,KAAa5I,IAAI,mBAAoBvO,KAAK+nB,oBAC1C5Q,KAAa5I,IAAI,uBAAwBvO,KAAKkoB,wBAC9C/Q,KAAa5I,IAAI,uBAAwBvO,KAAKmnB,wBAC9ChQ,KAAa5I,IAAI,6BAA8BvO,KAAK44E,8BACpDhwE,IAAY2F,IAAI,0BAA2BvO,KAAKwmE,2BAChD59D,IAAY2F,IAAI,0BAA2BvO,KAAKs4E,2BAChD1vE,IAAY2F,IAAI,uBAAwBvO,KAAKw4E,0B,+EAoT1BnqE,EAAQipB,EAAgB3S,EAAWgjB,G,wGAChDz4B,EAAOC,IAAU1G,IAAI4F,GACrB6sE,EAAe/rE,IAAU1G,IAAI6uB,GAGnCt3B,KAAK+oC,UAAYha,KAAK3tB,MACtBpB,KAAKuoB,SAAU,EACfvoB,KAAKwoB,WAAY,EACjBxoB,KAAK65E,qBAAsB,EAC3B75E,KAAKk4E,gBAAkB,IAEnBhpE,E,wBACA7P,IAAgBC,KAAK,CACjB,QAAS,WACTmQ,QAASP,EAAK9P,KAGZu3B,GAAUhS,GAAazV,EAAKomB,aAAe,EAC3C1M,EACF+N,GAAUznB,EAAKomB,aAAe,EAAIpmB,EAAKisE,2BAA6Bx2D,GAAwB,EAC1FoE,EAAU4N,GAAUznB,EAAKomB,aAAe,GAAM3Q,GAAa,EAAIi1D,IAAsB,EACrF7kE,EACD4hB,GAAUznB,EAAKomB,aAAe,GAAM3Q,EAAY,EAAIi1D,IAAsBA,IAE/E55E,KAAKuoB,SAAU,EACTwgB,EAAY/oC,KAAK+oC,U,UACF1pC,IAAgBC,KAAK,CACtC,QAAS,iBACTmQ,QAASP,EAAK9P,GACd0pB,gBAAiBF,EACjBG,OAAQA,EACRhU,MAAOA,IACRiU,QAAQ,WACP,EAAKT,SAAU,I,WAPb/oB,E,OAUFupC,IAAc/oC,KAAK+oC,U,sDAInB75B,EAAKqkB,aACLvzB,KAAKwoB,UAAYhpB,EAAOypB,SAASnV,OAAS,GAAK5E,EAAKqkB,aAAan0B,KAAOI,EAAOypB,SAAS,GAAG7pB,GAE3FY,KAAKwoB,WAAY,EAGrBrR,KAAaiS,SAAS5pB,EAAOypB,UAC7BzpB,EAAOypB,SAAS69C,UAEZ6T,EAAqB36E,KAAKjB,MAAM47E,mBAChCtsE,IAAWipB,E,oBACXqjD,EAAqB1zE,OAAOm0E,YACxBlsE,GAAQA,EAAKomB,aAAe,G,iBACnBlhB,EAAI5U,EAAOypB,SAASnV,OAAS,E,aAAGM,GAAK,G,oBAClChV,EAAOI,EAAOypB,SAAS7U,GAAvBhV,MAEHI,EAAOypB,SAAS7U,GAAGgjB,aACpBh4B,EAAK8P,EAAKisE,4BACV/7E,EAAKu7E,G,iBAELA,EAAqBv7E,E,4DAPoBgV,I,wBAarDumE,EAAqBA,IAAuB1zE,OAAOm0E,UAAY,EAAIT,E,QAGnE9B,EAAiBpB,GAAmBE,iBACpChzD,EACAk0D,EAAiBpB,GAAmBI,kBAC7BlhD,GAAUgkD,IACjB9B,EAAiBpB,GAAmBG,kBAGxC53E,KAAKqmC,QAAQs0C,EAAoBn7E,EAAOypB,SAAU,WAC9C,EAAK8vD,qBAAqBF,EAAgB,EAAK94E,UAC3C4kB,GACA02D,aAAiBhtE,EAAQsW,KAK3BjV,EAAQlH,IAAUmH,WACxBsY,YAAoBvY,EAAOlQ,EAAOypB,UAClCjpB,KAAKg5B,aAAax5B,EAAOypB,UAEzBtT,YAAiBjG,EAAO,CAACrB,IACzBitE,YAAiB5rE,EAAOrB,GAExBrO,KAAKy5E,sBAAsBj6E,GAG3B8gB,YAAgBpR,EAAK9P,I,wBAErBY,KAAKuoB,SAAU,EACfvoB,KAAKqmC,QAAQ,EAAG,GAAI,WAChB,EAAK9d,SAAU,I,QAInB2yD,GAAgB5jD,IAAmBjpB,GACnChP,IAAgBC,KAAK,CACjB,QAAS,YACTmQ,QAAS6nB,I,+IAKRrO,GACT,GAAKA,GACmB,IAApBA,EAASnV,QACRmV,EAAS,GAAGxZ,QAAjB,CAEA,IAAM8rE,EAAa,WACfl8E,IAAgBC,KAAK,CACjB,QAAS,eACTmQ,QAASwZ,EAAS,GAAGxZ,QACrBmJ,YAAaqQ,EAAS5T,IAAI,SAAA/T,GAAC,OAAIA,EAAElC,QAIrC2J,OAAOyyE,SACPD,IAEAv7E,KAAKk4E,gBAAgBljE,KAAKumE,M,gDAIRtyD,GAEtB,IAAK,IAAI7U,EAAI6U,EAASnV,OAAS,EAAGM,GAAK,EAAGA,IAAK,CAC3C,IAAIkC,EAAU2S,EAAS7U,GACvB,GAAIkC,GAAWA,EAAQe,QACnB,OAAQf,EAAQe,QAAQ,UACpB,IAAK,eAAiB,IAAD,EACDrX,KAAKy7E,gBAAgBnlE,GADpB,mBACZlX,EADY,KAEjB,GAFiB,KAGHs8E,YAAaplE,EAAQe,QAAQjI,MAAMkI,OACpC2mB,MACLz1B,IAAUmzE,oBAAoBv8E,EAAIkX,GAG1C,MAEJ,IAAK,iBAAmB,IAAD,EACHtW,KAAK47E,kBAAkBtlE,GADpB,mBACdlX,EADc,KAEnB,GAFmB,KAGLkX,EAAQe,QAAQlY,QAAQA,QACzB8+B,MACLz1B,IAAUmzE,oBAAoBv8E,EAAIkX,O,8BAmLtDqkE,EAAoB1C,EAAS9vD,GACjCnoB,KAAKN,SAAS,CAAEi7E,qBAAoB1C,WAAW9vD,K,qCAGpC0zD,EAAcvlE,EAAS6R,GAC7B7R,EAKLtW,KAAKN,SACD,CACIu4E,QAASj4E,KAAKjB,MAAMk5E,QAAQn+D,OAAO,SAAAxY,GAAC,OAAIA,EAAElC,KAAOy8E,IAAchiE,OAAO,CAACvD,KAE3E6R,GARIA,GAAUA,M,iCAYX8vD,EAAS9vD,GACO,IAAnB8vD,EAAQnkE,OAKZ9T,KAAKN,SAAS,CAAEu4E,QAASA,EAAQp+D,OAAO7Z,KAAKjB,MAAMk5E,UAAY9vD,GAJvDA,GAAUA,M,qCAOP8vD,EAASgB,EAAU9wD,GACP,IAAnB8vD,EAAQnkE,OAKZ9T,KAAKN,S,uVAAL,EAAgBu4E,QAASj4E,KAAKjB,MAAMk5E,QAAQp+D,OAAOo+D,IAAagB,GAAY9wD,GAJpEA,GAAUA,M,oCAORvP,EAAauP,GAAW,IAC1B8vD,EAAYj4E,KAAKjB,MAAjBk5E,QACR,GAAuB,IAAnBA,EAAQnkE,OAAZ,CAKA,IAAMuB,EAAM,IAAInB,IAAI0E,EAAYvD,IAAI,SAAA/T,GAAC,MAAI,CAACA,EAAGA,MAC7CtB,KAAKN,SAAS,CAAEu4E,QAASA,EAAQn+D,OAAO,SAAAxY,GAAC,OAAK+T,EAAIhB,IAAI/S,EAAElC,OAAQ+oB,QALxDA,GAAUA,M,uCAyTL7R,EAASwlE,EAAaC,GACnC,IAAKzlE,EAAS,OAAO,EADuB,IAGpC7G,EAA2C6G,EAA3C7G,QAASof,EAAkCvY,EAAlCuY,KAAMhG,EAA4BvS,EAA5BuS,eAA4BvS,EAAZe,QAEvC,QAAI0kE,MAIAx9D,YAAc9O,IAKdqsE,IACCE,aAAiBF,IACdjzD,IAAmBizD,EAAYjzD,gBAC/BgG,EAAOitD,EAAYjtD,KAAOotD,Q,sCAItB3lE,EAASwlE,EAAaC,GAClC,GAAIA,EACA,OAAO,EAGX,IAAMltD,EAAO,IAAIE,KAAoB,IAAfzY,EAAQuY,MACxBqtD,EAAWJ,EAAc,IAAI/sD,KAAwB,IAAnB+sD,EAAYjtD,MAAeA,EAEnE,OACIA,EAAKstD,gBAAkBD,EAASC,eAChCttD,EAAK08C,aAAe2Q,EAAS3Q,YAC7B18C,EAAK+6C,YAAcsS,EAAStS,Y,+BAQ1B,IAAD,OACGv7D,EAAWrO,KAAKP,MAAhB4O,OADH,EAEqFrO,KAAKjB,MAAvFk5E,EAFH,EAEGA,QAAS0C,EAFZ,EAEYA,mBAAoBvnD,EAFhC,EAEgCA,aAAcslD,EAF9C,EAE8CA,gBAAiBQ,EAF/D,EAE+DA,kBAmDpE,OA7CAl5E,KAAKy6E,SAASh+C,QACdz8B,KAAKipB,SAAWmK,EACV,KACA6kD,EAAQ5iE,IAAI,SAAC/T,EAAG8S,GACZ,IAAM0nE,EAAc1nE,EAAI,EAAI6jE,EAAQ7jE,EAAI,GAAK,KACvCgoE,EAAchoE,EAAI6jE,EAAQnkE,OAAS,EAAImkE,EAAQ7jE,EAAI,GAAK,KAExDwqC,EAAW,EAAKy9B,gBAAgB/6E,EAAGw6E,EAAmB,IAAN1nE,GAElDkoE,EAAI,KACR,GAAIN,aAAiB16E,GACjBg7E,EACI,kBAAC,GAAD,CACIvlE,IAAG,kBAAazV,EAAEmO,QAAf,uBAAqCnO,EAAElC,IAC1Coc,IAAK,SAAA8G,GAAE,OAAI,EAAKm4D,SAASzhE,IAAI5E,EAAGkO,IAChCjU,OAAQ/M,EAAEmO,QACVkV,UAAWrjB,EAAElC,GACb20E,oBAAqB4G,IAAuBr5E,EAAElC,SAGnD,CACH,IAAM8e,EAAY,EAAKq+D,iBAAiBj7E,EAAGw6E,EAAmB,IAAN1nE,GAClDooE,EAAgB,EAAKD,iBAAiBH,EAAa96E,GAAG,GAEtD0yE,GAAYoI,GAAeJ,aAAiBI,IAAgBI,EAElEF,EACI,kBAAC,GAAD,CACIvlE,IAAG,kBAAazV,EAAEmO,QAAf,uBAAqCnO,EAAElC,IAC1Coc,IAAK,SAAA8G,GAAE,OAAI,EAAKm4D,SAASzhE,IAAI5E,EAAGkO,IAChCjU,OAAQ/M,EAAEmO,QACVkV,UAAWrjB,EAAElC,GACbo3B,aAAcl1B,EAAEg1B,cAChBpY,UAAWA,EACX81D,SAAUA,EACVD,oBAAqB4G,IAAuBr5E,EAAElC,GAC9Cw/C,SAAUA,IAKtB,OAAO09B,IAKb,yBACIr8E,UAAWgM,IAAW,gBAAiB,CACnC,iCAAkCysE,IAEtC3M,YAAa/rE,KAAK46E,qBAClB,yBAAKp/D,IAAKxb,KAAKupB,QAAStpB,UAAU,wBAAwBqqB,SAAUtqB,KAAKspB,cACrE,yBAAKrpB,UAAU,sBACf,yBAAKub,IAAKxb,KAAKkzC,SAAUjzC,UAAU,uBAC9BD,KAAKipB,WAGd,kBAAC,GAAD,CAAW5a,OAAQA,IACnB,kBAAC,GAAD,MACC6qE,GACG,kBAAC,GAAD,CAAkB19D,IAAKxb,KAAKg7E,oBAAqB3uE,QAASrM,KAAK66E,wBAEnE,kBAAC,GAAD,MACA,kBAAC,GAAD,U,gDA3tCoBp7E,EAAOV,GACnC,OAAIU,EAAM4O,SAAWtP,EAAMyS,YAAc/R,EAAMklB,YAAc5lB,EAAMi4B,cACxD,CACHxlB,WAAY/R,EAAM4O,OAClB2oB,cAAev3B,EAAMklB,UACrByO,cAAc,EACdslD,iBAAiB,EACjBiC,mBAAoBl7E,EAAM4O,SAAWtP,EAAMyS,WAAa,EAAIzS,EAAM47E,mBAClEzB,kBACIz5E,EAAM4O,SAAWtP,EAAMyS,aAAezS,EAAMm6E,mBAAqBn6E,EAAMq5E,aAAatkE,OAAS,GACjGskE,aAAc34E,EAAM4O,SAAWtP,EAAMyS,WAAa,GAAKzS,EAAMq5E,cAI9D,S,GA5CY73E,IAAMC,W,0CChB3Bi8E,G,2MACF19E,MAAQ,CACJugC,SAAU,M,EAGdipB,gBAAkB,SAAAvkD,GACd,EAAK8rD,WAAW9rD,EAAMu7B,gB,EAG1BuwB,WAAa,SAAAxwB,GACT,EAAK5/B,SAAS,CAAE4/B,c,EAGpB53B,YAAc,WACV,EAAKhI,SAAS,CAAE4/B,SAAU,Q,EAG9BnpB,eAAiB,WACb,EAAKzO,cADc,IAGXoI,EAAM,EAAKrQ,MAAXqQ,EAEFsG,EAAO,EAAKsmE,gBAAgBlgB,KAAamgB,YAC1CvmE,IAELtE,GAAKsE,GAEL,EAAKC,sBAAsBvG,EAAE,iB,EAGjC4sE,gBAAkB,SAAAC,GACd,IAAKA,EAAY,MAAO,GADI,IAGpB5sC,EAAS4sC,EAAT5sC,KACR,IAAKA,EAAM,MAAO,GAElB,IAAMtvB,EAAoBzM,KAAYvL,IAAI,YAE1C,OAAQgY,EAAoBA,EAAkB1Z,MAAQ,yBAA2B,eAAiBgpC,G,EAGtG15B,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK7W,MAAxC8W,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIC,IAAI,QACJC,aAAW,QACXC,MAAM,UACNhX,UAAU,4BACVoM,QAAS,kBAAMmK,EAAcC,KAC7B,kBAACnK,EAAA,EAAD,W,EAMhBswE,YAAc,WACV,EAAKl1E,cAEL,IAAM0O,EAAO,EAAKsmE,gBAAgBlgB,KAAamgB,YAC/C,GAAKvmE,EAAL,CAEA/W,IAAgByF,aAAa,CACzB,QAAS,yBACT63E,WAAY,OAGhB,IAAMllE,EAAsB,CACxB,QAAS,mBACT1F,KAAM,CACF,QAAS,gBACTA,KAAMqE,EACN4B,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,GAGjBrC,aAAQuB,K,wEAGF,IAAD,EACoBzX,KAAKP,MAAtBqQ,EADH,EACGA,EAAG7P,EADN,EACMA,UACHq/B,EAAat/B,KAAKjB,MAAlBugC,SAER,OACI,oCACI,kBAACxoB,EAAA,EAAD,CACI7W,UAAWA,EACX+W,aAAW,QACXiE,KAAM4L,QAAQyY,GACdjzB,QAASrM,KAAKuoD,iBACd,kBAACtb,GAAD,OAEJ,kBAACzM,GAAA,EAAD,CACIphC,GAAG,cACHkgC,SAAUA,EACVrkB,KAAM4L,QAAQyY,GACdmB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBrb,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBnK,QAASrb,KAAK0H,aACd,kBAACie,GAAA,EAAD,CAAUtZ,QAASrM,KAAKmW,gBACpB,kBAACqJ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE7B,kBAAC6V,GAAA,EAAD,CAAUtZ,QAASrM,KAAK48E,aACpB,kBAACp9D,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,0B,GA5HbvP,IAAMC,WA2I3Byb,GALCC,YACZzK,cACA0K,eAGWF,CAAQwgE,ICxIjBI,I,mBACF,WAAYp9E,GAAQ,IAAD,8BACf,4CAAMA,KAiDVq9E,iCAAmC,SAAAjvE,GAAW,IAClC8uE,EAAengB,KAAfmgB,WAER,EAAKj9E,SAAS,CAAEi9E,gBArDD,EAwDnBI,6BAA+B,SAAAlvE,GAAW,IAC9B8uE,EAAe9uE,EAAf8uE,WAQR,GANA,EAAKj9E,SAAS,CAAEi9E,cAAc,WAC1Bl1E,WAAW,WACP,EAAK6hB,gBACN,KAGHqzD,EAAY,CACZ,IAAMjtE,EAAQlH,IAAUmH,WACxBqtE,YAAsBttE,EAAOitE,KAnElB,EAuEnBj1E,YAAc,WACVrI,IAAgByF,aAAa,CACzB,QAAS,yBACT63E,WAAY,QA1ED,EA8EnB5vC,WAAa,WAAO,IACR4vC,EAAe,EAAK59E,MAApB49E,WACR,GAAKA,EAAL,CAFe,IAIPM,EAAiBN,EAAjBM,aAER59E,IAAgBC,KAAK,CACjB,QAAS,mBACT49E,OAAQP,EAAWv9E,GACnB69E,cAAeA,IAGnB,EAAKv1E,gBA1FU,EA6FnBuuE,mBAAqB,SAAAC,GAAc,IAGzB/2E,EAFiB,EAAKJ,MAApB49E,WACA3f,SACiBhgD,KAAK,SAAA1b,GAAC,OAAIA,EAAEnC,QAAQC,KAAO82E,IACpD,GAAK/2E,EAAL,CAEA,IAAMuQ,EAAQlH,IAAUmH,WACxBwmE,YAAmBzmE,EAAOvQ,EAAS,MAEX,EAAKo3E,oBAAoBL,GACjCn0E,QAAQ,SAAAT,GACpB60E,YAAmBzmE,EAAOpO,EAAG,UAxGlB,EA4GnBi1E,oBAAsB,SAAAL,GAAc,IACxByG,EAAe,EAAK59E,MAApB49E,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvB3f,EAAa2f,EAAb3f,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAMwZ,EAAU,GACV/uD,EAAQu1C,EAASt1C,UAAU,SAAApmB,GAAC,OAAIA,EAAEnC,QAAQC,KAAO82E,IACvD,IAAe,IAAXzuD,EAAc,MAAO,GAEzB,IACMgvD,EAAM/0E,KAAKmK,MAAM4b,EADE,GAEnBivD,EAASjvD,EAFU,EAInBkvD,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQxhE,KAXS,EAWe2hE,EAAUE,GAE9CL,EAAQxhE,KAba,EAaW2hE,EAAUD,GACtCI,EAdiB,GAejBN,EAAQxhE,KAfS,EAee2hE,EAAUG,IAI9CD,GAAc,GACdL,EAAQxhE,KApBa,EAoBWyhE,EAAMI,GAEtCC,EAtBqB,GAuBrBN,EAAQxhE,KAvBa,EAuBWyhE,EAAMK,GAGtCF,EAAUl1E,KAAKq1E,KAAK/Z,EAASlpD,OA1BR,KA2BjB+iE,GAAc,GACdL,EAAQxhE,KA5BS,EA4Be4hE,EAAUC,GAE9CL,EAAQxhE,KA9Ba,EA8BW4hE,EAAUF,GACtCI,EA/BiB,GAgCjBN,EAAQxhE,KAhCS,EAgCe4hE,EAAUE,IAI3CN,EAAQnhE,IAAI,SAAAjB,GAAC,OAAI4oD,EAAS5oD,MA3JlB,EAiMnB9N,cAAgB,WAEZ,EAAK5G,SAAS,CAAEP,QADA,OAEhBE,IAAgByF,aAAa,CACzB,QAAS,6BACT3F,QAJY,OAMhB,EAAKo0E,WAAY,EACjBrwE,SAASgG,oBAAoB,UAAW,EAAK5C,gBAzM9B,EA4MnBo9D,iBAAmB,SAAA1/D,GACf,IAAMkyE,EAAYjvE,OAAOjD,EAAMu7B,cAAcuqB,QAAQosB,WAC/C/2E,EAAU,EAAK63E,WAAWd,GAC3B/2E,GAEA,EAAKo0E,YAEV,EAAK7zE,SAAS,CAAEP,YAChBE,IAAgByF,aAAa,CACzB,QAAS,6BACT3F,YAEJ,EAAK82E,mBAAmBC,KAxNT,EA2NnBxvE,gBAAkB,SAAA1C,GACd,IAAMkyE,EAAYjvE,OAAOjD,EAAMu7B,cAAcuqB,QAAQosB,WAC/C/2E,EAAU,EAAK63E,WAAWd,GAChC,GAAK/2E,EAcL,OAZA,EAAKO,SAAS,CAAEP,YAChBE,IAAgByF,aAAa,CACzB,QAAS,6BACT3F,YAEJ,EAAK82E,mBAAmBC,GAExB,EAAK3C,WAAY,EACjBrwE,SAAS8F,iBAAiB,UAAW,EAAK1C,eAE1CtC,EAAM8B,iBACN9B,EAAM2C,mBACC,GA5OQ,EA+OnB2iB,aAAe,WACX,IAAMjS,EAAU,EAAK8lE,WAAWvlE,QAChC,GAAKP,EAAL,CAIA,IAAM+lE,EAAY/lE,EAAQoK,aAAepK,EAAQqK,aAC3CV,EAAYo8D,GAAmC,IAAtB/lE,EAAQ2J,UACjCq8D,EAAeD,GAAc/lE,EAAQ2J,UAAY3J,EAAQqK,eAAkBrK,EAAQoK,aACnF+gB,EAAS46C,GAAa/lE,EAAQ2J,UAAY,GAAM3J,EAAQ2J,UAAY3J,EAAQqK,aAAgBrK,EAAQoK,aAE1G,EAAK/hB,SAAS,CACVshB,YACAq8D,eACA76C,aA1PJ,EAAK26C,WAAa58E,IAAMsa,YAExB,EAAK9b,MAAQ,CACT49E,WAAYngB,KAAamgB,WACzBzG,UAAW,EACX1zC,QAAQ,EACRxhB,WAAW,EACXq8D,cAAc,GAVH,E,mFAcGjtE,EAAWC,EAAWyqB,GAAc,IAAD,EACY96B,KAAKjB,MAA9D49E,EAD6C,EAC7CA,WAAYx9E,EADiC,EACjCA,QAASqjC,EADwB,EACxBA,OAAQxhB,EADgB,EAChBA,UAAWq8D,EADK,EACLA,aAEhD,OAAIV,IAAetsE,EAAUssE,aAIzBx9E,IAAYkR,EAAUlR,UAItBqjC,IAAWnyB,EAAUmyB,SAIrBxhB,IAAc3Q,EAAU2Q,WAIxBq8D,IAAiBhtE,EAAUgtE,kB,0CAQ/B7gB,KAAaluD,GAAG,yBAA0BtO,KAAK+8E,8BAC/CvgB,KAAaluD,GAAG,6BAA8BtO,KAAK88E,oC,6CAInDtgB,KAAajuD,IAAI,yBAA0BvO,KAAK+8E,8BAChDvgB,KAAajuD,IAAI,6BAA8BvO,KAAK88E,oC,iCAwI7C5G,GAAY,IACXyG,EAAe38E,KAAKjB,MAApB49E,WACR,IAAKA,EAAY,OAAO,KAFN,IAIV3f,EAAa2f,EAAb3f,SAEFoa,EAAepa,EAASt1C,UAAU,SAAApmB,GAAC,OAAIA,EAAEnC,QAAQC,KAAO82E,IAC9D,OAAyB,IAAlBkB,EAAsBpa,EAASoa,GAAgB,O,+BAmEhD,IAAD,OACGtnE,EAAM9P,KAAKP,MAAXqQ,EADH,EAE4D9P,KAAKjB,MAA9D49E,EAFH,EAEGA,WAAYx9E,EAFf,EAEeA,QAASqjC,EAFxB,EAEwBA,OAAQxhB,EAFhC,EAEgCA,UAAWq8D,EAF3C,EAE2CA,aAChD,IAAKV,EAAY,OAAO,KAHnB,IAKGpgE,EAAkCogE,EAAlCpgE,MAAOygD,EAA2B2f,EAA3B3f,SAAUigB,EAAiBN,EAAjBM,aAEnB35D,EAAQ05C,EAAS3nD,IAAI,SAAA/T,GAAC,OACxB,yBACIrB,UAAU,0BACV8W,IAAKzV,EAAEnC,QAAQC,GACfi4E,kBAAiB/1E,EAAEnC,QAAQC,GAC3BoN,aAAc,EAAKk3D,iBACnBx3D,YAAa,EAAKxF,iBAClB,kBAACsqE,GAAA,EAAD,CACIj6D,IAAKzV,EAAEnC,QAAQC,GACfa,UAAU,kCACVd,QAASmC,EACTi2C,UAAU,EACVxvC,MAAM,EACN7H,YAAao3E,KACbC,SAAO,EACPn3E,OAAQC,KAAkBi9E,cAE9B,yBAAKr9E,UAAU,iCAAiCqB,EAAEtC,UAI1D,OACI,kBAAC,IAAD,CACIiB,UAAWgM,IACP,qBACA,CAAE,4BAA6Bu2B,GAC/B,CAAE,gCAAiCxhB,GACnC,CAAE,mCAAoCq8D,IAE1CpiE,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAASrb,KAAK0H,YACd4T,kBAAgB,gCAChBxO,QAAS,CAAEk5C,MAAO,6BAClB,kBAAC,IAAD,CACI/lD,UAAWgM,IAAW,2BAA4B,CAAE,8BAA+B4a,QAAQ1nB,KAC3F8uD,mBAAiB,GACjB,kBAACn3C,EAAA,EAAD,CACIE,aAAW,QACX3K,QAASrM,KAAK0H,aACd,kBAAC4E,EAAA,EAAD,OAEJ,kBAACqT,GAAA,EAAD,CAAYC,QAAQ,KAAKxgB,GAAG,gCAAgCa,UAAU,sCAAsC4f,QAAM,GAC7GtD,GAEL,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CACIf,IAAKxb,KAAKm9E,WACVrwE,QAAS,CAAE3E,KAAM,mCACjB0sE,YAAa70E,KAAKsH,gBAClBwtE,WAAY90E,KAAK0zE,eACjBppD,SAAUtqB,KAAKspB,cACdhG,GAEL,kBAACxH,EAAA,EAAD,CAAe7b,UAAWgM,IAAW,6BAA8B,CAAE,8BAA+B4a,QAAQ1nB,MACxG,kBAAC4c,EAAA,EAAD,CAAQ9b,UAAU,mCAAmC44C,kBAAgB,EAACj5B,QAAQ,YAAY3I,MAAOgmE,EAAe,YAAc,UAAW5wE,QAASrM,KAAK+sC,YACnIj9B,EAAfmtE,EAAiB,iBAAsB,iBAG/C,kBAACn+E,GAAA,EAAD,CAAgBK,QAASA,S,GAtUXoB,IAAMC,YA8UtBiR,iBAAkBorE,ICrIlBU,I,mBAjNX,WAAY99E,GAAQ,IAAD,8BACf,4CAAMA,KA6CV+9E,2BAA6B,SAAA3vE,GAAW,IAC5BisC,EAAc,EAAK/6C,MAAnB+6C,UACR,GAAKA,EAAL,CAFmC,IAI3B52C,EAAa42C,EAAb52C,SACR,GAAKA,EAAL,CALmC,IAOjBqF,EAASrF,EAAnBA,SACR,GAAKqF,EAAL,CARmC,IAU3BlD,EAAWwI,EAAXxI,OAER,GAAIkD,EAAKnJ,KAAOiG,EAAhB,CAIA,GAAI,EAAKo4E,cACL,GAAI,EAAKA,cAAc3jC,YAAcA,EAEjC,GADa,IAAI/qB,KAAS,EAAK0uD,cAAch8E,KAClC,IAIP,YAHAgG,WAAW,WACP,EAAKsH,eACN,KAMf,EAAKA,mBA1EU,EA6EnB8qC,oCAAsC,SAAAhsC,GAAW,IACrCisC,EAAc,EAAK/6C,MAAnB+6C,UACR,GAAKA,EAAL,CAF4C,IAIpC52C,EAAa42C,EAAb52C,SACR,GAAKA,EAAL,CAL4C,IAOpCsV,EAActV,EAAdsV,UACR,GAAKA,EAAL,CAR4C,IAUpCjQ,EAASiQ,EAATjQ,KACR,GAAKA,EAAL,CAX4C,IAapClD,EAAWwI,EAAXxI,OAEJkD,EAAKnJ,KAAOiG,IAIhB,EAAKo4E,cAAgB,CACjB3jC,YACAr4C,KAAM,IAAIstB,MAEd,EAAKhgB,oBApGU,EAuGnB2uE,6BAA+B,SAAA7vE,GAAW,IAC9BisC,EAAcjsC,EAAdisC,UAER,EAAK2jC,cAAgB,CACjB3jC,YACAr4C,KAAM,IAAIstB,MAEd,EAAKrvB,SAAS,CACVo6C,eA/GW,EAmHnB6jC,oCAAsC,SAAA9vE,GAClC,EAAKkB,eApHU,EAuHnBohB,qBAAuB,SAAAtiB,GACnB,EAAKnO,SAAS,CACV2O,OAAQR,EAAOuiB,WACfzL,UAAW9W,EAAO45B,iBA1HP,EA8HnB0yC,eAAiB,WACb,EAAKyD,aAAazD,kBA/HH,EAkInBO,cAAgB,WACZ,EAAKkD,aAAalD,iBAnIH,EAsInBN,gBAAkB,WACd,EAAKwD,aAAaxD,mBApIlB,EAAKr7E,MAAQ,CACTsP,OAAQ0kB,KAASsG,YACjB1U,UAAWoO,KAAS2U,eACpBm2C,cAAe,EACf/jC,UAAW,KACXgkC,aAAc,MARH,E,mFAYG1tE,EAAWC,GAAY,IAAD,EACgBrQ,KAAKjB,MAArDsP,EADgC,EAChCA,OAAQsW,EADwB,EACxBA,UAAWk5D,EADa,EACbA,cAAe/jC,EADF,EACEA,UAC1C,OAAIzpC,EAAUhC,SAAWA,IAGrBgC,EAAUsU,YAAcA,IAGxBtU,EAAUwtE,gBAAkBA,GAG5BxtE,EAAUypC,YAAcA,M,0CAQ5B/mB,KAASzkB,GAAG,oCAAqCtO,KAAK29E,qCACtD5qD,KAASzkB,GAAG,qBAAsBtO,KAAKmwB,sBACvChhB,IAAUb,GAAG,6BAA8BtO,KAAK09E,8BAChDl1E,IAAU8F,GAAG,2BAA4BtO,KAAKw9E,4BAC9Ch1E,IAAU8F,GAAG,oCAAqCtO,KAAK65C,uC,6CAIvD9mB,KAASxkB,IAAI,oCAAqCvO,KAAK29E,qCACvD5qD,KAASxkB,IAAI,qBAAsBvO,KAAKmwB,sBACxChhB,IAAUZ,IAAI,6BAA8BvO,KAAK09E,8BACjDl1E,IAAU+F,IAAI,2BAA4BvO,KAAKw9E,4BAC/Ch1E,IAAU+F,IAAI,oCAAqCvO,KAAK65C,uC,+BA+FlD,IAAD,SAiCoC75C,KAAKjB,MAAtCsP,EAjCH,EAiCGA,OAAQsW,EAjCX,EAiCWA,UAAWm1B,EAjCtB,EAiCsBA,UAEvBp2C,EAAQ,KACR2L,EAAM,KACV,GAAIyqC,EAAW,CAAC,IACJ52C,EAAa42C,EAAb52C,SACR,GAAIA,EAAU,CAAC,IACHsV,EAA8BtV,EAA9BsV,UAAqBjQ,EAASrF,EAAnBA,SACfqF,IACA8G,EAAMC,YAAO/G,KAGZ8G,GAAOmJ,IACRnJ,EAAMC,YAAOkJ,EAAUjQ,OAI/B7E,EAAQ,CACJsqB,gBAAiB3e,EAAG,cAAUA,EAAV,KAAmB,MAM/C,OACI,yBAAKpP,UAAU,iBAAiByD,MAAOA,GACnC,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQ2K,OAAQA,IAChB,kBAAC,GAAD,CAAcmN,IAAK,SAAAA,GAAG,OAAK,EAAKoiE,aAAepiE,GAAMnN,OAAQA,EAAQsW,UAAWA,IAChF,kBAAC,GAAD,CAAQtW,OAAQA,IAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GA3MY7N,cCXtBu9E,GAAYx9E,IAAMy9E,cAAc,MAEvBD,MAER,SAASE,GAAOz9E,GAAY,IACzB09E,EADwB,iLAEhB,IAAD,OACL,OAAO,kBAACH,GAAUI,SAAX,KAAqB,SAAAp3E,GAAK,OAAI,kBAACvG,EAAD,eAAW49E,GAAIr3E,GAAW,EAAKtH,cAH9C,GACJc,IAAMC,WAOhC,OAFA09E,EAAYp7E,YAAZ,iBAAoCC,YAAevC,GAAnD,KAEO09E,ECXX,SAASG,GAAS5+E,GACd,OCqWG,SAAqB6+E,GACxB,IAAKA,EACD,OAAO,KAGX,GAAIA,aAAoBC,OACpB,OAAOD,EAGX,OAAQA,EAAS,UACb,IAAK,iBAAmB,IACZvuC,EAAeuuC,EAAfvuC,KAAMh+B,EAASusE,EAATvsE,KAEd,OAAO,kBAAC,GAAD,CAAYA,KAAMA,EAAMg+B,KAAMA,IAEzC,IAAK,eAAiB,IACVh+B,EAASusE,EAATvsE,KAER,OAAO,kBAAC,GAAD,CAAMA,KAAMA,IAEvB,IAAK,uBAAyB,IAClBysE,EAAwBF,EAAxBE,cAAezsE,EAASusE,EAATvsE,KAEvB,OAAO,kBAAC,GAAD,CAAc0sE,aAAcD,EAAezsE,KAAMA,IAE5D,IAAK,gBAAkB,IACXA,EAASusE,EAATvsE,KAER,OAAO,kBAAC,GAAD,CAAOA,KAAMA,IAExB,IAAK,eAAiB,IACV7O,EAA4Bo7E,EAA5Bp7E,SAAUwL,EAAkB4vE,EAAlB5vE,OAAQhC,EAAU4xE,EAAV5xE,MAE1B,OAAO,kBAAC,GAAD,CAAMxJ,SAAUA,EAAUwL,OAAQA,EAAQhC,MAAOA,IAE5D,IAAK,iBAAmB,IACZqF,EAASusE,EAATvsE,KAER,OAAO,kBAAC,GAAD,CAAQA,KAAMA,IAEzB,IAAK,iBAAmB,IACZA,EAASusE,EAATvsE,KAER,OAAO,kBAAC,GAAD,CAAQA,KAAMA,IAEzB,IAAK,sBAAwB,IACjB+4D,EAAuBwT,EAAvBxT,aAAc/4D,EAASusE,EAATvsE,KAEtB,OAAO,kBAAC,GAAD,CAAa4O,YAAamqD,EAAc/4D,KAAMA,IAEzD,IAAK,gBAAkB,IACXA,EAASusE,EAATvsE,KAER,OAAO,kBAAC,GAAD,CAAOA,KAAMA,IAExB,IAAK,wBAA0B,IACnBA,EAASusE,EAATvsE,KAER,OAAO,kBAAC,GAAD,CAAeA,KAAMA,IAEhC,IAAK,oBAAsB,IACfA,EAASusE,EAATvsE,KAER,OAAO,kBAAC,GAAD,CAAWA,KAAMA,IAE5B,IAAK,sBAAwB,IACjBA,EAASusE,EAATvsE,KAER,OAAO,kBAAC,GAAD,CAAaA,KAAMA,IAE9B,IAAK,YAAc,IACP2sE,EAAUJ,EAAVI,MAER,OAAO,kBAAC,GAAD,CAAOA,MAAOA,IAEzB,IAAK,oBAAsB,IACf3sE,EAASusE,EAATvsE,KAER,OAAO,kBAAC,GAAD,CAAWA,KAAMA,IAE5B,IAAK,cAAgB,IACTA,EAAcusE,EAAdvsE,KAAMiZ,EAAQszD,EAARtzD,IAEd,OAAO,kBAAC,GAAD,CAAKjZ,KAAMA,EAAMiZ,IAAKA,IAIrC,MAAM,IAAN,OAAWszD,EAAS,SAApB,KD5bOK,CAAYl/E,EAAMsS,MAG7BssE,GAAS5zD,UAAY,CACjB1Y,KAAM2Y,KAAUk0D,OAAOh0D,YAGZyzD,UEAAQ,OARf,SAAgBp/E,GACZ,OAAO,uBAAGL,GAAIK,EAAMswC,QCwBT+uC,OAxBf,SAAiBr/E,GAAQ,IACbsS,EAAiBtS,EAAjBsS,KAAMgtE,EAAWt/E,EAAXs/E,OAERC,GAAWC,GAAYltE,GACvBmtE,GAAcD,GAAYF,GAChC,OAAKC,GAAYE,EAGb,oCACKF,GAAW,kBAAC,GAAD,CAAUjtE,KAAMA,IAC3BmtE,GACG,8BACI,kBAAC,GAAD,CAAUntE,KAAMgtE,MAPI,MCqBzBzN,OAzBf,SAAmB7xE,GAAQ,IACf82D,EAAwD92D,EAAxD82D,UAAW4oB,EAA6C1/E,EAA7C0/E,MAAOpnE,EAAsCtY,EAAtCsY,QAAwBmO,GAAczmB,EAA7B2/E,cAA6B3/E,EAAdymB,WAElD,OACI,gCACI,kBAAC,KAAD,CACIk4D,IAAI,EACJiB,UAAWF,EACX5oB,UAAWA,EACXr2D,YAAao/E,IACbp5D,UAAWA,IAEf,kBAAC,GAAD,CAASnU,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,W,SCe1CQ,OA3Bf,SAAoB9/E,GAAQ,IAChB+/E,EAAwB//E,EAAxB+/E,OAAQC,EAAgBhgF,EAAhBggF,YAEVC,GAAaT,GAAYO,GACzBG,EAAUF,EAAc,EAC9B,IAAKC,IAAcC,EAAS,OAAO,KAEnC,IAAMn9E,EAAIi9E,EAAc,EAAI,IAAI1wD,KAAmB,IAAd0wD,GAAsB,KAE3D,OACI,iCACKC,GACG,uBAAGE,IAAI,UACH,kBAAC,GAAD,CAAU7tE,KAAMytE,KAGvBE,GAAaC,GAAW,WACxBA,GAAW,0BAAME,SAAUr9E,EAAEs9E,eAAgBC,aAAWv9E,EAAG,mBCAzDw9E,OAnBf,SAAoBvgF,GAAQ,IAChBsS,EAAiBtS,EAAjBsS,KAAMgtE,EAAWt/E,EAAXs/E,OACd,OACI,oCACI,kBAAC,GAAD,CAAUhtE,KAAMA,IACfgtE,GACG,8BACI,kBAAC,GAAD,CAAUhtE,KAAMgtE,OCWrBd,UAhBf,SAAiBx+E,GAAQ,IACbwgF,EAA4BxgF,EAA5BwgF,WAAYloE,EAAgBtY,EAAhBsY,QAASqmE,EAAO3+E,EAAP2+E,GAE7B,OACI,yBAAKn+E,UAAU,WACVggF,EAAW5qE,IAAI,SAAC/T,EAAGmmB,GAAJ,OAAcy4D,GAAa5+E,EAAG88E,EAAI32D,KAClD,kBAAC,GAAD,CAAS1V,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,YCPzD,SAASoB,GAAM1gF,GACX,OAAOygF,GAAazgF,EAAM2gF,MAAO3gF,EAAM2+E,IAG3C+B,GAAM11D,UAAY,CACd21D,MAAO11D,KAAUk0D,OAAOh0D,YAGbqzD,UAAOkC,ICYPlC,UAnBf,SAAiBx+E,GAAQ,IACb0lD,EAAmC1lD,EAAnC0lD,OAAQ86B,EAA2BxgF,EAA3BwgF,WAAYI,EAAe5gF,EAAf4gF,OAAQjC,EAAO3+E,EAAP2+E,GAEpC,OACI,6BAASnjE,KAAMolE,GACX,iCACI,kBAAC,GAAD,CAAUtuE,KAAMozC,KAEnB86B,EAAW5qE,IAAI,SAAC/T,EAAGmmB,GAAJ,OAAcy4D,GAAa5+E,EAAG88E,EAAI32D,QCN/CxD,OAJf,WACI,OAAO,8B,UCDLq8D,G,YACF,WAAY7gF,GAAQ,IAAD,8BACf,4CAAMA,KA6BV8gF,aAAe,SAAA9gF,GAEX,IAAIA,EAAM4P,IAAV,CAEA,IAAMgI,EAAU5X,EAAM4X,SAAW5X,EAAM+oC,SACvC,GAAKnxB,EAAL,CAEA,IAAMmpE,EAAQ,EAAKC,SAAS7oE,QAC5B,GAAK4oE,EAAL,CAOA,IAAME,EAAMF,EAAMG,gBACbD,IAEkB,kBAAZrpE,GAIPqpE,EAAIzlE,OACJylE,EAAIE,MAAMvpE,GACVqpE,EAAIh0D,UAGJg0D,EAAIzlE,OACJylE,EAAIE,MAAM,gCACVF,EAAIh0D,QACJw5C,KAAS2a,OAAOxpE,EAASqpE,EAAIn9E,eAAe,sBA5DjC,EAiEnBu9E,uBAAyB,WACrB,GAAK,EAAKrhF,MAAMshF,iBAAhB,CACA,IAAMP,EAAQ,EAAKC,SAAS7oE,QAC5B,GAAK4oE,EAAL,CAOA,IAAME,EAAMF,EAAMG,gBAClB,GAAKD,EAAL,CAEA,IAAIM,EAAe,KAOnB,GANA,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAOj/E,QAAQ,SAAA+xE,GACnD,IAAIkN,EAAJ,CACA,IAAMC,EAAQP,EAAIQ,qBAAqBpN,GACjCmN,GAASA,EAAMntE,SACrBktE,EAAeC,EAAM,OAEpBD,EAAL,CAIA,IAAMG,EAAuBj+E,SAASsP,cAAc,UACpD2uE,EAAqB1kE,KAAO,kBAC5B0kE,EAAqB9xE,IAAM,EAAK5P,MAAMshF,iBACtCC,EAAa/2E,YAAYk3E,QANrB/uE,QAAQC,MAAM,8CAtFH,EA+FnBjB,OAAS,WACL,EAAK0vE,0BAhGU,EAqGnBM,aAAe,SAAA3hF,GACX,IAAM+gF,EAAQ,EAAKC,SAAS7oE,QACvB4oE,GACD/gF,EAAM4hF,qBACNC,yBAAiB7hF,EAAM8hF,qBAAsBf,IAtGjD,EAAKC,SAAWlgF,IAAMsa,YAHP,E,iFAQf7a,KAAKugF,aAAavgF,KAAKP,OACvBO,KAAKohF,aAAaphF,KAAKP,S,6CAMvB,IAAM+gF,EAAQxgF,KAAKygF,SAAS7oE,QAC5B,GAAK4oE,EAAL,CAJmB,IAMXgB,EAAkBhB,EAAlBgB,cACHA,GAELA,EAAcC,qB,gDAGQrxE,GAEtBpQ,KAAKugF,aAAanwE,GAClBpQ,KAAKohF,aAAahxE,K,+BAkFZ,IAAD,EAC8CpQ,KAAKP,MAAhD4P,EADH,EACGA,IAAKjQ,EADR,EACQA,GAAIsiF,EADZ,EACYA,YAAazhF,EADzB,EACyBA,UAAWyD,EADpC,EACoCA,MACzC,OACI,4BACI8X,IAAKxb,KAAKygF,SACVpxE,IAAKA,EACLjQ,GAAIA,EACJsiF,YAAaA,EACbzhF,UAAWA,EACXyD,MAAOA,EACP0N,OAAQpR,KAAKoR,a,GAxHD7Q,IAAMC,WAkJlC8/E,GAAc1xE,aAAe,CAEzByyE,qBAAqB,EACrBE,qBAAsB,GAStBR,iBAAkB,iGAElBW,YAAa,EACbh+E,MAAO,CACHgJ,MAAO,OACP8X,UAAW,KAIJ87D,UC7EAqB,G,2MAxFX5iF,MAAQ,G,mFAgBJiB,KAAK4hF,oB,yCAGU/hF,EAAWC,EAAWC,GAAW,IAAD,EACzBC,KAAKP,MAAnBurB,EADuC,EACvCA,IAAK62D,EADkC,EAClCA,KAET72D,IAAQnrB,EAAUmrB,KAAO62D,IAAShiF,EAAUgiF,MAC5C7hF,KAAK4hF,oB,wCAIM,IAAD,EACQ5hF,KAAKP,MAAnBurB,EADM,EACNA,IAAK62D,EADC,EACDA,KAEb7hF,KAAKN,SAAS,CACVsrB,MACA62D,W,+BAIE,IAAD,EACiB7hF,KAAKjB,MAAnBisB,EADH,EACGA,IAAK62D,EADR,EACQA,KADR,EAE2D7hF,KAAKP,MAA7DiN,EAFH,EAEGA,MAAOgC,EAFV,EAEUA,OAAQqJ,EAFlB,EAEkBA,QAAS+pE,EAF3B,EAE2BA,YAAaC,EAFxC,EAEwCA,eAEvCphF,EAAU,CACZqhF,UAAWD,GAGTE,EAAiBv1E,EAAQ,GAAKgC,EAAS,EACvCwzE,EAAYr7D,QAAQmE,IAAQnE,QAAQg7D,GAE1C,OACI,gCACKK,GACG,oCACKD,EACG,4BACI5yE,IAAK2b,GAAY,KACjBm3D,OAAQn3D,EAAM,KAAO62D,EACrBn1E,MAAOA,EAAQ,EAAIA,EAAQ,KAC3BgC,OAAQA,EAAS,EAAIA,EAAS,KAC9B0zE,gBAAiBN,EACjBE,UAAWD,EAAiB,OAAS,KACrCL,YAAa,IAGjB,kBAAC,GAAD,CACIrqE,QAASwqE,EACTxyE,IAAK2b,EACLu2D,qBAAsB5gF,EACtB+C,MAAO,CAAEgJ,MAAO,WAKhC,kBAAC,GAAD,CAASqF,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,a,gDArEzBt/E,EAAOV,GACnC,OAAIU,EAAMurB,MAAQjsB,EAAMsjF,SAAW5iF,EAAMoiF,OAAS9iF,EAAMujF,SAC7C,CACHt3D,IAAK,KACL62D,KAAM,KACNQ,QAAS5iF,EAAMurB,IACfs3D,SAAU7iF,EAAMoiF,MAIjB,S,GAbQthF,IAAMC,WC2Bdy9E,UAxBf,SAAsBx+E,GACkDA,EAA5DurB,IADkB,IACbw0D,EAAuD//E,EAAvD+/E,OAAqB3wD,GAAkCpvB,EAA/C8iF,YAA+C9iF,EAAlCovB,MAAMoxD,EAA4BxgF,EAA5BwgF,WAAYloE,EAAgBtY,EAAhBsY,QAASqmE,EAAO3+E,EAAP2+E,GAE7D,OACI,oCACI,gCACKv3D,QAAQ24D,IAAW,4BAAKA,GACzB,kBAAC,GAAD,CAAYA,OAAQ,KAAMC,YAAa5wD,IACtCoxD,EAAW5qE,IAAI,SAAC/T,EAAGmmB,GAAJ,OAAcy4D,GAAa5+E,EAAG88E,EAAI32D,KAClD,kBAAC,GAAD,CAAS1V,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,aCgB9CyD,I,kNA7BXzjF,MAAQ,CACJsT,MAAO,KACPowE,UAAW,M,iFAGGpwE,EAAOowE,GACrBziF,KAAKN,SAAS,CAAE2S,QAAOowE,gB,+BAGjB,IACEj6C,EAAaxoC,KAAKP,MAAlB+oC,SADH,EAEwBxoC,KAAKjB,MAA1BsT,EAFH,EAEGA,MAAOowE,EAFV,EAEUA,UACf,OAAIpwE,GAASowE,EAEL,yBAAKxiF,UAAU,iBACX,8BACI,uCACQoS,EAAM09B,KADd,aACuB19B,EAAMiE,SACxBmsE,EAAUC,kBAOxBl6C,M,GA1BYjoC,IAAMC,YCalBi9D,OAZf,SAAgBh+D,GACZ,OACI,gCACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMkjF,WCSnB1gB,OAZf,SAAgBxiE,GACZ,OACI,4BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAM0lD,WCUnBy9B,OAbf,SAAgBnjF,GAAQ,IACZojF,EAAWpjF,EAAXojF,OACR,OACI,wBAAI5iF,UAAU,UACV,kBAAC,GAAD,CAAU8R,KAAM8wE,MCMb5E,UATf,SAAkBx+E,GACd,OAAO,wBAAIqjF,cAAarjF,EAAM0tB,OAAQ1tB,EAAMwgF,WAAW5qE,IAAI,SAAC/T,EAAGmmB,GAAJ,OAAcy4D,GAAa5+E,EAAG7B,EAAM2+E,GAAI32D,QCYxF3D,OAdf,SAAcrkB,GACV,OACI,4BACKA,EAAM6jB,MAAMjO,IAAI,SAAC/T,EAAGmmB,GAAJ,OACb,kBAAC,GAAD,CAAU1Q,IAAK0Q,EAAO0F,MAAO7rB,EAAE6rB,MAAO8yD,WAAY3+E,EAAEyhF,kBCQrDC,OAZf,SAAmBvjF,GACf,OACI,2BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SCiBnBua,OAlBf,SAAe7sB,GAAQ,IACX2P,EAAmC3P,EAAnC2P,MAAO2I,EAA4BtY,EAA5BsY,QAAcmO,GAAczmB,EAAnBurB,IAAmBvrB,EAAdymB,WAE7B,OACI,gCACI,kBAAC,KAAD,CAAY9W,MAAOA,EAAOZ,KAAMy0E,IAAe/iF,YAAao/E,IAAuBp5D,UAAWA,IAC9F,kBAAC,GAAD,CAASnU,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,WCK1CmE,OAbf,SAAsBzjF,GAClB,OACI,6BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SCkBnBoxE,OArBf,SAAmB1jF,GAAQ,IACfsS,EAAiBtS,EAAjBsS,KAAMgtE,EAAWt/E,EAAXs/E,OACd,OACI,+BACI,kBAAC,GAAD,CAAUhtE,KAAMA,IACfgtE,GACG,8BACI,kBAAC,GAAD,CAAUhtE,KAAMgtE,OC4CrBqE,G,2MAhDX19E,YAAc,SAAA1B,GACVA,EAAM8B,iBACN9B,EAAM2C,kBAFa,IAIXqkB,EAAQ,EAAKvrB,MAAburB,IAER3rB,IAAgByF,aAAa,CACzB,QAAS,6BACTkmB,S,wEAIE,IAAD,EACoDhrB,KAAKP,MAAtD+/E,EADH,EACGA,OAAqBC,GADxB,EACW9zD,YADX,EACwB8zD,aAAaljE,EADrC,EACqCA,MAAOyO,EAD5C,EAC4CA,IAE3CxoB,EAAIi9E,EAAc,EAAI,IAAI1wD,KAAmB,IAAd0wD,GAAsB,KACrD4D,EAAyB7D,GAAUh9E,EACnC8gF,EAAgB9gF,GAAKg9E,EAE3B,OACI,4BACI,kBAAC1zD,GAAA,EAAD,CAAUd,IAAKA,EAAK3e,QAASrM,KAAK0F,aAC7B6W,GAEJ+mE,GACG,iCACK9D,EACA6D,GAA0B,WAC1B7gF,GAAK,0BAAMq9E,SAAUr9E,EAAEs9E,eAAgBC,aAAWv9E,EAAG,uB,GA7BjDjC,IAAMC,WC2BpB+iF,OA5Bf,SAAyB9jF,GACrB,OACI,oCACI,4BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAM0lD,UAE1B,wBAAIllD,UAAU,oBACTR,EAAM+jF,SAASnuE,IAAI,SAAA/T,GAAC,OACjB,kBAAC,GAAD,CACIyV,IAAKzV,EAAE0pB,IACPA,IAAK1pB,EAAE0pB,IACPzO,MAAOjb,EAAEib,MACToP,YAAarqB,EAAEqqB,YACfvc,MAAO9N,EAAE8N,MACTowE,OAAQl+E,EAAEk+E,OACVC,YAAan+E,EAAEmiF,oBCExBxF,UAhBf,SAAmBx+E,GAAQ,IACfwgF,EAA4BxgF,EAA5BwgF,WAAYloE,EAAgBtY,EAAhBsY,QAASqmE,EAAO3+E,EAAP2+E,GAE7B,OACI,yBAAKn+E,UAAU,aACVggF,EAAW5qE,IAAI,SAAC/T,EAAGmmB,GAAJ,OAAcy4D,GAAa5+E,EAAG88E,EAAI32D,KAClD,kBAAC,GAAD,CAAS1V,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,YCI1C2E,OAZf,SAAmBjkF,GACf,OACI,4BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMkkF,cCSnBC,OAZf,SAAkBnkF,GACd,OACI,4BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMwd,aCSnB4mE,OAZf,SAAepkF,GACX,OACI,4BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAM8c,UCSnBunE,OAZf,SAAcrkF,GACV,OACI,2BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SCUnBgyE,OAbf,SAAsBtkF,GAClB,OACI,uBAAG+zD,KAAI,iBAAY/zD,EAAMg/E,eACrB,kBAAC,GAAD,CAAU1sE,KAAMtS,EAAMsS,SCSnBiyE,OAZf,SAAevkF,GACX,OACI,8BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SC0EnBkyE,G,2MAjEXpqC,oCAAsC,SAAAhsC,GAAW,IACrC3K,EAAa,EAAKzD,MAAlByD,SACR,GAAKA,EAAL,CAF4C,IAIpCsV,EAActV,EAAdsV,UACR,GAAKA,EAAL,CAL4C,IAOpCjQ,EAASiQ,EAATjQ,KACR,GAAKA,EAAL,CAR4C,IAUpClD,EAAWwI,EAAXxI,OAEJkD,EAAKnJ,KAAOiG,GAIhB,EAAK0J,kB,EAGTyuE,2BAA6B,SAAA3vE,GAAW,IAC5B3K,EAAa,EAAKzD,MAAlByD,SACR,GAAKA,EAAL,CAEA,IAAMqF,EAAOrF,EAASA,SACtB,GAAKqF,EAAL,CALmC,IAO3BlD,EAAWwI,EAAXxI,OAEJkD,EAAKnJ,KAAOiG,GAIhB,EAAK0J,iB,mFAzCLvG,IAAU8F,GAAG,oCAAqCtO,KAAK65C,qCACvDrxC,IAAU8F,GAAG,2BAA4BtO,KAAKw9E,8B,6CAI9Ch1E,IAAU+F,IAAI,oCAAqCvO,KAAK65C,qCACxDrxC,IAAU+F,IAAI,2BAA4BvO,KAAKw9E,8B,0CAsC/B9wE,EAAOgC,GACvB,MAAM,6EAAN,OAAoFhC,EAApF,YAA6FgC,EAA7F,oB,+BAGM,IAAD,EAC+B1O,KAAKP,MAAjCyD,EADH,EACGA,SAAUwL,EADb,EACaA,OAAQhC,EADrB,EACqBA,MAC1B,IAAKxJ,EAAU,OAAO,KAFjB,IAIGsV,EAA8BtV,EAA9BsV,UAAqBjQ,EAASrF,EAAnBA,SACbghF,EAAe50E,YAAOkJ,EAAYA,EAAUjQ,KAAO,MACnD8G,EAAMC,YAAO/G,GAEnB,OACI,yBACI8G,IAAKA,GAAO60E,GAAgBlkF,KAAKmkF,oBAAoB,EAAG,GACxDz3E,MAAOA,EAAQ,EAAIA,EAAQ,KAC3BgC,OAAQA,EAAS,EAAIA,EAAS,KAC9B2C,WAAW,EACXC,IAAI,S,GAhED/Q,IAAMC,WCWV4jF,OAZf,SAAgB3kF,GACZ,OACI,2BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SCSnBsyE,OAZf,SAAgB5kF,GACZ,OACI,8BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SCUnBuyE,OAbf,SAAqB7kF,GACjB,OACI,uBAAG+zD,KAAI,cAAS/zD,EAAMkhB,cAClB,kBAAC,GAAD,CAAU5O,KAAMtS,EAAMsS,SCJlC,SAASwyE,GAAM9kF,GACX,OAAOA,EAAMsS,KAGjBwyE,GAAM95D,UAAY,CACd1Y,KAAM2Y,KAAU85D,OAAO55D,YAGZ25D,UCKAE,OAZf,SAAuBhlF,GACnB,OACI,6BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SCSnB2yE,OAZf,SAAmBjlF,GACf,OACI,6BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SCSnB4yE,OAZf,SAAqBllF,GACjB,OACI,6BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SCYnB8sE,OAff,SAAgBp/E,GAAQ,IACZswC,EAAetwC,EAAfswC,KAAMh+B,EAAStS,EAATsS,KAEd,OACI,uBAAG3S,GAAI2wC,GACFh+B,GAAQ,kBAAC,GAAD,CAAUA,KAAMA,MCStB6yE,OAdf,SAAenlF,GACX,OACI,oCACKA,EAAMi/E,MAAMrpE,IAAI,SAAC/T,EAAGmmB,GAAJ,OACb,kBAAC,GAAD,CAAU1Q,IAAK0Q,EAAO1V,KAAMzQ,QCQ7BujF,OAZf,SAAmBplF,GACf,OACI,6BACI,kBAAC,GAAD,CAAUsS,KAAMtS,EAAMsS,SC4BnB+yE,G,2MA5BXp/E,YAAc,SAAA1B,GACVA,EAAM8B,iBACN9B,EAAM2C,kBAFa,IAIXqkB,EAAQ,EAAKvrB,MAAburB,IAER3rB,IAAgByF,aAAa,CACzB,QAAS,6BACTkmB,S,wEAIE,IAAD,EACiBhrB,KAAKP,MAAnBsS,EADH,EACGA,KAAMiZ,EADT,EACSA,IAEd,OACI,kBAACc,GAAA,EAAD,CAAUd,IAAKA,EAAK3e,QAASrM,KAAK0F,aAC9B,kBAAC,GAAD,CAAUqM,KAAMA,S,GAlBdxR,IAAMC,WC0BTy9E,UA1Bf,SAAex+E,GAAQ,IACXsY,EAA8CtY,EAA9CsY,QAASgtE,EAAqCtlF,EAArCslF,MAAOC,EAA8BvlF,EAA9BulF,WAAYC,EAAkBxlF,EAAlBwlF,UAAW7G,EAAO3+E,EAAP2+E,GAE/C,OACI,2BAAO8G,QAASD,EAAY,GAAK,KAAME,OAAQH,EAAa,EAAI,IAC1D/F,GAAYlnE,IACV,iCACI,kBAAC,GAAD,CAAUhG,KAAMgG,KAGxB,+BACKgtE,EAAM1vE,IAAI,SAACohE,EAAK2O,GACb,OAAO,wBAAIruE,IAAKquE,GAAW3O,EAAIphE,IAAI,SAAC/T,EAAGmmB,GAAJ,OAAcy4D,GAAa5+E,EAAG88E,EAAI32D,YCY1E49D,OAzBf,SAAmB5lF,GAAQ,IACfsS,EAAoDtS,EAApDsS,KAAMuzE,EAA8C7lF,EAA9C6lF,SAAUC,EAAoC9lF,EAApC8lF,QAASC,EAA2B/lF,EAA3B+lF,QAASt6B,EAAkBzrD,EAAlByrD,MAAOu6B,EAAWhmF,EAAXgmF,OACjD,GAAIxG,GAAYltE,GAAO,OAAO,KAE9B,IAAM2zE,EAAa,CACfC,QAASJ,EACTK,QAASJ,EACTt6B,MAAO26B,GAAuB36B,GAC9Bu6B,OAAQK,GAAqBL,IAG3BpuE,EAAU,kBAAC,GAAD,CAAUtF,KAAMA,IAEhC,OAAOuzE,EAAW,uBAAQI,EAAaruE,GAAgB,uBAAQquE,EAAaruE,I,UCOjEnD,OAnBf,SAAazU,GAAQ,IACTqjD,EAAsBrjD,EAAtBqjD,SAAU/qC,EAAYtY,EAAZsY,QAElB,OACI,gCACI,kBAACguE,GAAA,EAAD,CAAUr5E,MAAOs5E,IAAmBt3E,OAAQu3E,IAAoBnjC,SAAUA,IAC1E,kBAAC,GAAD,CAAS/wC,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,WCW1C7iB,OAjBf,SAAez8D,GAAQ,IACX4yD,EAA8B5yD,EAA9B4yD,MAAOt6C,EAAuBtY,EAAvBsY,QAASmO,EAAczmB,EAAdymB,UAExB,OACI,gCACI,kBAAC,KAAD,CAAYmsC,MAAOA,EAAOnyD,YAAasyE,IAAoBtsD,UAAWA,IACtE,kBAAC,GAAD,CAASnU,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,WCC1CmH,OAVf,SAAkBzmF,GACd,OAAO,+BCqBI8xE,OAnBf,SAAe9xE,GAAQ,IACX0E,EAAsD1E,EAAtD0E,MAAO4T,EAA+CtY,EAA/CsY,QAAiCmO,GAAczmB,EAAtC0mF,aAAsC1mF,EAAxB2mF,SAAwB3mF,EAAdymB,WAEhD,OACI,gCACI,kBAAC,KAAD,CAAY/hB,MAAOA,EAAOjE,YAAao/E,IAAuBp5D,UAAWA,IACzE,kBAAC,GAAD,CAASnU,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,WjDyClD,SAASsH,GAAqBj0B,EAAOr6C,EAASonE,EAAO1O,EAAa6V,GAGrE,GAAKl0B,EAAL,CAKA,OAAQA,EAAM,UACV,IAAK,YAAc,IACE7pD,EAAS6pD,EAApBmE,UACN,IAAKhuD,EAAM,OAGX,GADAA,EAAOC,IAAUC,IAAIF,EAAKnJ,KAAOmJ,EAC7B+9E,GAAc/9E,EAAK4gC,MAAMo9C,sBAEzB,YADA/9E,IAAUmzE,oBAAoBpzE,EAAKnJ,GAAIgzD,GAEpC,GAAIk0B,GAAc/9E,EAAKG,OAAO89E,oBAEjC,YADAh+E,IAAUi+E,iBAAiBl+E,EAAKnJ,GAAIgzD,GAGpCs0B,YAASn+E,EAAM6pD,EAAO5pD,IAAUm+E,oBAhB7B,EACG,EAeiEp+E,EAAKnJ,KAGhFwnF,aAA4B,CACxBx0B,QACAr6C,UACAonE,QACA1O,gBAEJ,MAEJ,IAAK,QAAU,IACEloE,EAAS6pD,EAAhBC,MACN,IAAK9pD,EAAM,OAGX,GADAA,EAAOC,IAAUC,IAAIF,EAAKnJ,KAAOmJ,EAC7B+9E,GAAc/9E,EAAK4gC,MAAMo9C,sBAEzB,YADA/9E,IAAUmzE,oBAAoBpzE,EAAKnJ,GAAIgzD,GAEpC,GAAIk0B,GAAc/9E,EAAKG,OAAO89E,oBAEjC,YADAh+E,IAAUi+E,iBAAiBl+E,EAAKnJ,GAAIgzD,GAGpCs0B,YAASn+E,EAAM6pD,EAAO5pD,IAAUq+E,gBAvC7B,EACG,EAsC6Dt+E,EAAKnJ,KAG5EC,IAAgByF,aAAa,CACzB,QAAS,0BACT2rE,cACA0O,UAEJ,MAEJ,IAAK,QACDyH,aAA4B,CACxBx0B,QACAr6C,UACAonE,QACA1O,gBAEJ,MAEJ,IAAK,QAAU,IACEloE,EAAS6pD,EAAhBjuD,MACN,IAAKoE,EAAM,OAGX,GADAA,EAAOC,IAAUC,IAAIF,EAAKnJ,KAAOmJ,EAC7B+9E,GAAc/9E,EAAK4gC,MAAMo9C,sBAEzB,YADA/9E,IAAUmzE,oBAAoBpzE,EAAKnJ,GAAIgzD,GAEpC,GAAIk0B,GAAc/9E,EAAKG,OAAO89E,oBAEjC,YADAh+E,IAAUi+E,iBAAiBl+E,EAAKnJ,GAAIgzD,GAGpCs0B,YAASn+E,EAAM6pD,EAAO5pD,IAAUs+E,gBAtE7B,EACG,EAqE6Dv+E,EAAKnJ,KAG5EwnF,aAA4B,CACxBx0B,QACAr6C,UACAonE,QACA1O,kBAOT,SAASyP,GAAaf,EAAOf,GAAsB,IAAlBrnE,EAAiB,4DAAXu6B,EAC1C,IAAK6tC,EAAO,OAAO,KAEnB,IAAIn0E,EAAU,KACd,OAAQm0E,EAAM,UACV,IAAK,kBACDn0E,EAAU,kBAAC,GAAD,CAAQ+kC,KAAMovC,EAAMpvC,OAC9B,MAEJ,IAAK,qBACD/kC,EACI,kBAAC,GAAD,CACIm0E,MAAOA,EACPpnE,QAASonE,EAAMpnE,QACfw+C,UAAW4oB,EAAM5oB,UACjB4vB,aAAchH,EAAMC,cACpBl5D,UAAW,kBAAMmgE,GAAqBlH,EAAM5oB,UAAW4oB,EAAMpnE,QAASonE,EAAOf,GAAI,MAGzF,MAEJ,IAAK,iBACDpzE,EACI,kBAAC,GAAD,CACI+M,QAASonE,EAAMpnE,QACfs6C,MAAO8sB,EAAM9sB,MACbnsC,UAAW,kBAAMmgE,GAAqBlH,EAAM9sB,MAAO8sB,EAAMpnE,QAASonE,EAAOf,GAAI,MAGrF,MAEJ,IAAK,sBACDpzE,EAAU,kBAAC,GAAD,CAAYw0E,OAAQL,EAAMK,OAAQC,YAAaN,EAAMsE,eAC/D,MAEJ,IAAK,sBACDz4E,EAAU,kBAAC,GAAD,CAAY+zE,OAAQI,EAAMJ,OAAQhtE,KAAMotE,EAAMptE,OACxD,MAEJ,IAAK,mBACD/G,EAAU,kBAAC,GAAD,CAASi1E,WAAYd,EAAM4D,YAAahrE,QAASonE,EAAMpnE,UACjE,MAEJ,IAAK,oBACD/M,EAAU,kBAAC,GAAD,CAAUuR,MAAO4iE,EAAM5iE,MAAOnN,MAAO+vE,EAAM/vE,MAAOoR,SAAU2+D,EAAM3+D,WAC5E,MAEJ,IAAK,iBACDxV,EAAU,kBAAC,GAAD,CAAOo1E,MAAOjB,EAAMiB,QAC9B,MAEJ,IAAK,mBACDp1E,EAAU,kBAAC,GAAD,CAASm6C,OAAQg6B,EAAMh6B,OAAQ86B,WAAYd,EAAM4D,YAAa1C,OAAQlB,EAAM4H,UACtF,MAEJ,IAAK,mBACD/7E,EAAU,kBAAC,GAAD,MACV,MAEJ,IAAK,oBACDA,EACI,kBAAC,GAAD,CACIggB,IAAKm0D,EAAMn0D,IACX62D,KAAM1C,EAAM0C,KACZmF,YAAa7H,EAAM8H,aACnBv6E,MAAOyyE,EAAMzyE,MACbgC,OAAQywE,EAAMzwE,OACdqJ,QAASonE,EAAMpnE,QACf+pE,YAAa3C,EAAM+H,cACnBnF,eAAgB5C,EAAMgI,kBAG9B,MAEJ,IAAK,wBACDn8E,EACI,kBAAC,GAAD,CACIggB,IAAKm0D,EAAMn0D,IACXw0D,OAAQL,EAAMK,OACd+C,YAAapD,EAAMiI,aACnBv4D,KAAMswD,EAAMtwD,KACZoxD,WAAYd,EAAM4D,YAClBhrE,QAASonE,EAAMpnE,UAGvB,MAEJ,IAAK,kBACD/M,EAAU,kBAAC,GAAD,CAAQ23E,OAAQxD,EAAMwD,SAChC,MAEJ,IAAK,kBACD33E,EAAU,kBAAC,GAAD,CAAQm6C,OAAQg6B,EAAMh6B,SAChC,MAEJ,IAAK,kBACDn6C,EAAU,kBAAC,GAAD,CAAQ63E,OAAQ1D,EAAM0D,SAChC,MAEJ,IAAK,gBACD73E,EAAU,kBAAC,GAAD,CAAMsY,MAAO67D,EAAM77D,QAC7B,MAEJ,IAAK,oBACDtY,EAAU,kBAAC,GAAD,CAAUmiB,MAAOgyD,EAAMhyD,MAAO8yD,WAAYd,EAAM4D,cAC1D,MAEJ,IAAK,eACD/3E,EACI,kBAAC,GAAD,CACI83C,SAAUq8B,EAAMr8B,SAChBukC,KAAMlI,EAAMkI,KACZ36E,MAAOyyE,EAAMzyE,MACbgC,OAAQywE,EAAMzwE,OACdqJ,QAASonE,EAAMpnE,UAGvB,MAEJ,IAAK,qBACD/M,EAAU,kBAAC,GAAD,CAAW+G,KAAMotE,EAAMptE,OACjC,MAEJ,IAAK,iBACD/G,EACI,kBAAC,GAAD,CACI+M,QAASonE,EAAMpnE,QACf3I,MAAO+vE,EAAM/vE,MACb4b,IAAKm0D,EAAMn0D,IACX9E,UAAW,kBAAMmgE,GAAqBlH,EAAM/vE,MAAO+vE,EAAMpnE,QAASonE,EAAOf,GAAI,MAGrF,MAEJ,IAAK,wBACDpzE,EAAU,kBAAC,GAAD,CAAc+G,KAAMotE,EAAMptE,KAAMkd,SAAUkwD,EAAMlwD,WAC1D,MAEJ,IAAK,qBACDjkB,EAAU,kBAAC,GAAD,CAAW+zE,OAAQI,EAAMJ,OAAQhtE,KAAMotE,EAAMptE,OACvD,MAEJ,IAAK,0BACD/G,EACI,kBAAC,GAAD,CACIggB,IAAKm0D,EAAMn0D,IACXzO,MAAO4iE,EAAM5iE,MACboP,YAAawzD,EAAMxzD,YACnBvc,MAAO+vE,EAAM/vE,MACbowE,OAAQL,EAAMK,OACdC,YAAaN,EAAMsE,eAG3B,MAEJ,IAAK,2BACDz4E,EAAU,kBAAC,GAAD,CAAiBm6C,OAAQg6B,EAAMh6B,OAAQq+B,SAAUrE,EAAMqE,WACjE,MAEJ,IAAK,qBACDx4E,EAAU,kBAAC,GAAD,CAAWi1E,WAAYd,EAAM4D,YAAahrE,QAASonE,EAAMpnE,UACnE,MAEJ,IAAK,qBACD/M,EAAU,kBAAC,GAAD,CAAW24E,UAAWxE,EAAMwE,YACtC,MAEJ,IAAK,oBACD34E,EAAU,kBAAC,GAAD,CAAUiS,SAAUkiE,EAAMliE,WACpC,MAEJ,IAAK,iBACDjS,EACI,kBAAC,GAAD,CACI+M,QAASonE,EAAMpnE,QACfgtE,MAAO5F,EAAM4F,MACbC,WAAY7F,EAAMmI,YAClBrC,UAAW9F,EAAMoI,aAGzB,MAEJ,IAAK,qBACDv8E,EACI,kBAAC,GAAD,CACI+G,KAAMotE,EAAMptE,KACZuzE,SAAUnG,EAAMqI,UAChBjC,QAASpG,EAAMoG,QACfC,QAASrG,EAAMqG,QACft6B,MAAOi0B,EAAMj0B,MACbu6B,OAAQtG,EAAMsG,SAGtB,MAEJ,IAAK,iBACDz6E,EAAU,kBAAC,GAAD,CAAOuR,MAAO4iE,EAAM5iE,QAC9B,MAEJ,IAAK,iBACDvR,EACI,kBAAC,GAAD,CACI+M,QAASonE,EAAMpnE,QACf5T,MAAOg7E,EAAMh7E,MACbgiF,aAAchH,EAAMC,cACpBgH,SAAUjH,EAAMsI,UAChBvhE,UAAW,kBAAMmgE,GAAqBlH,EAAMh7E,MAAOg7E,EAAMpnE,QAASonE,EAAOf,GAAI,MAO7F,OAAIpzE,EACO,kBAAC,GAAD,CAAc+L,IAAKA,GAAM/L,GAG7B,wCAAUm0E,EAAM,SAAhB,MA6FJ,SAASF,GAAYX,GACxB,IAAKA,EAAU,OAAO,EAEtB,OAAQA,EAAS,UACb,IAAK,iBAGD,OAAOW,GAFUX,EAATvsE,MAIZ,IAAK,eAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,uBAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,gBAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,eACD,OAAO,EAEX,IAAK,iBAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,iBAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,sBAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,gBAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,wBAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,oBAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,sBAGD,OAAOktE,GAFUX,EAATvsE,MAIZ,IAAK,YAGD,OAFkBusE,EAAVI,MAEKr9E,MAAM49E,IAEvB,IAAK,oBAGD,OAAOA,GAFUX,EAATvsE,MAIZ,IAAK,cAGD,OAAOktE,GAFUX,EAATvsE,MAMhB,OAAO,EAGJ,SAAS8zE,GAAuB36B,GACnC,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,qCACD,MAAO,SAEX,IAAK,mCACD,MAAO,OAEX,IAAK,oCACD,MAAO,QAIf,OAAO,KAGJ,SAAS46B,GAAqBL,GACjC,IAAKA,EAAQ,OAAO,KAEpB,OAAQA,EAAO,UACX,IAAK,mCACD,MAAO,SAEX,IAAK,mCACD,MAAO,SAEX,IAAK,gCACD,MAAO,MAIf,OAAO,KAGJ,SAASiC,GAAevI,GAC3B,IAAKA,EAAO,MAAO,GAEnB,OAAQA,EAAM,UACV,IAAK,kBACD,MAAO,GAEX,IAAK,qBAGL,IAAK,iBACD,MAAO,CAACA,EAAMpnE,SAElB,IAAK,sBAGL,IAAK,sBAGL,IAAK,oBACD,MAAO,GAEX,IAAK,mBACD,IAAM4vE,EAAcxI,EAAM4D,YAAY1tE,IAAI,SAAA/T,GAAC,OAAKA,GAAL,oBAAWomF,GAAepmF,OAErE,MAAO,GAAGuY,OAAO+tE,MAAM,GAAID,GAE/B,IAAK,iBACD,MAAO,CAACxI,EAAMiB,OAElB,IAAK,mBACD,IAAMuH,EAAcxI,EAAM4D,YAAY1tE,IAAI,SAAA/T,GAAC,OAAKA,GAAL,oBAAWomF,GAAepmF,OAErE,MAAO,GAAGuY,OAAO+tE,MAAM,GAAID,GAE/B,IAAK,mBACD,MAAO,GAEX,IAAK,oBACD,MAAO,CAACxI,EAAMpnE,SAElB,IAAK,wBACD,IAAM4vE,EAAcxI,EAAM4D,YAAY1tE,IAAI,SAAA/T,GAAC,OAAKA,GAAL,oBAAWomF,GAAepmF,OAErE,MAAO,GAAGuY,OAAO+tE,MAAM,CAACzI,EAAMpnE,SAAU4vE,GAE5C,IAAK,kBAGL,IAAK,kBAGL,IAAK,kBACD,MAAO,GAEX,IAAK,gBACD,IAAMA,EAAcxI,EAAM77D,MAAMjO,IAAI,SAAA/T,GAAC,OAAKA,GAAL,oBAAWomF,GAAepmF,OAE/D,MAAO,GAAGuY,OAAO+tE,MAAM,GAAID,GAE/B,IAAK,oBACD,IAAMA,EAAcxI,EAAM4D,YAAY1tE,IAAI,SAAA/T,GAAC,OAAKA,GAAL,oBAAWomF,GAAepmF,OAErE,MAAO,GAAGuY,OAAO+tE,MAAM,GAAID,GAE/B,IAAK,eACD,MAAO,CAACxI,EAAMpnE,SAElB,IAAK,qBACD,MAAO,GAEX,IAAK,iBACD,MAAO,CAAConE,EAAMpnE,SAElB,IAAK,wBAGL,IAAK,qBAGL,IAAK,0BACD,MAAO,GAEX,IAAK,2BACD,OAAO,aAAIonE,EAAMqE,UAErB,IAAK,qBACD,IAAMmE,EAAcxI,EAAM4D,YAAY1tE,IAAI,SAAA/T,GAAC,OAAKA,GAAL,oBAAWomF,GAAepmF,OAErE,MAAO,GAAGuY,OAAO+tE,MAAM,CAACzI,EAAMpnE,SAAU4vE,GAE5C,IAAK,qBAGL,IAAK,oBACD,MAAO,GAEX,IAAK,iBACD,OAAO,aAAIxI,EAAM4F,OAErB,IAAK,qBAGL,IAAK,iBACD,MAAO,GAEX,IAAK,iBACD,MAAO,CAAC5F,EAAMpnE,SAItB,MAAO,GAGJ,SAAS8vE,GAAc1I,GAC1B,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,qBACD,OAAOA,EAAM5oB,UAEjB,IAAK,iBACD,OAAO4oB,EAAM/vE,MAEjB,IAAK,iBACD,OAAO+vE,EAAMh7E,MAIrB,OAAO,KAiCJ,SAAS2jF,GAAkB3I,GAC9B,IAAKA,EAAO,OAAO,EAEnB,OAAQA,EAAM,UACV,IAAK,qBAGL,IAAK,iBAGL,IAAK,iBACD,OAAO,EAIf,OAAO,E,WkDnuBL4I,G,iLACQ,IAAD,EACwB/nF,KAAKP,MAA1BuoF,EADH,EACGA,aAAc5J,EADjB,EACiBA,GACtB,IAAKA,EAAI,OAAO,KAFX,IAIG2E,EAAwB3E,EAAxB2E,YAAakF,EAAW7J,EAAX6J,OACrB,GAAKlF,EAAL,CAEA,IAAMmF,EAASnF,EAAY1tE,IAAI,SAAC/T,EAAGmmB,GAAJ,OAAcy4D,GAAa5+E,EAAG88E,EAAI32D,KAEjE,OACI,6BAASjM,IAAKwsE,EAAcG,IAAKF,EAAS,MAAQ,OAC7CC,Q,GAZK3nF,IAAM6mC,eA4BbnrB,GALCC,YACZkI,cACA65D,GAGWhiE,CAAQ8rE,IClCRxlF,eACX,0BAAMC,EAAE,4bACR,QCAE4lF,I,kNACF1iF,YAAc,SAAA1B,GACVA,EAAM2C,mB,wEAGA,IACEoL,EAAS/R,KAAKP,MAAdsS,KAER,OACI,yBAAK9R,UAAU,gBAAgBoM,QAASrM,KAAK0F,aACzC,yBAAKzF,UAAU,sBAAsB8R,Q,GAV1BxR,IAAMC,YAoBjC4nF,GAAax5E,aAAe,GAEbw5E,UC0OAC,G,YArPX,WAAY5oF,GAAQ,IAAD,8BACf,4CAAMA,KAgFVqoE,wBAA0B,SAAAj6D,GAAW,IACzBxI,EAAWwI,EAAXxI,OADwB,EAER,EAAK5F,MAArB2yD,EAFwB,EAExBA,MAAO5jD,EAFiB,EAEjBA,KACPjG,EAAS,EAAKxJ,MAAdwJ,KAER,GAAIA,GAAQA,EAAKnJ,KAAOiG,EAAQ,CAAC,IAAD,EAC+BijF,YAAcl2B,EAAO5jD,GADpD,mBACrB9B,EADqB,KACdgC,EADc,KACNnG,EADM,KACA6yD,EADA,KACU4M,EADV,KAG5B,EAAKtoE,SAAS,CACVgN,QACAgC,SACAnG,OACA8G,IAAKC,YAAO/G,GACZy/D,oBACA5M,eA/FO,EAoGnBmtB,iCAAmC,SAAA16E,GAAW,IAClCxI,EAAWwI,EAAXxI,OACWkD,EAAS,EAAKxJ,MAAzByZ,UAEJjQ,GAAQA,EAAKnJ,KAAOiG,GACpB,EAAK0J,eAtGT,EAAKi4D,SAAWzmE,IAAMsa,YAEtB,EAAK9b,MAAQ,GALE,E,iFAuDfyJ,IAAU8F,GAAG,wBAAyBtO,KAAK8nE,yBAC3Ct/D,IAAU8F,GAAG,wBAAyBtO,KAAK8nE,yBAC3Ct/D,IAAU8F,GAAG,4BAA6BtO,KAAK8nE,yBAC/Ct/D,IAAU8F,GAAG,iCAAkCtO,KAAKuoF,kCACpD//E,IAAU8F,GAAG,qCAAsCtO,KAAKuoF,oC,6CAIxD//E,IAAU+F,IAAI,wBAAyBvO,KAAK8nE,yBAC5Ct/D,IAAU+F,IAAI,wBAAyBvO,KAAK8nE,yBAC5Ct/D,IAAU+F,IAAI,4BAA6BvO,KAAK8nE,yBAChDt/D,IAAU+F,IAAI,iCAAkCvO,KAAKuoF,kCACrD//E,IAAU+F,IAAI,qCAAsCvO,KAAKuoF,oC,yCAG1C1oF,EAAWC,EAAWC,GAAW,IACxCsP,EAAQrP,KAAKjB,MAAbsQ,IAER,GAAIvP,EAAUuP,MAAQA,EAAK,CACvB,IAAM/L,EAAStD,KAAKgnE,SAASpvD,QAC7B,IAAKtU,EAAQ,OAEbA,EAAO45B,U,+BAgCL,IAAD,SAC2Bl9B,KAAKP,MAA7B2yD,EADH,EACGA,MAAOr6C,EADV,EACUA,QAASiT,EADnB,EACmBA,IACxB,IAAKonC,EAAO,OAAO,KAFd,MAImIpyD,KAAKjB,MAArI2N,EAJH,EAIGA,MAAOgC,EAJV,EAIUA,OAAQnG,EAJlB,EAIkBA,KAAM8G,EAJxB,EAIwBA,IAAK+rD,EAJ7B,EAI6BA,SAAU5E,EAJvC,EAIuCA,eAAgBC,EAJvD,EAIuDA,gBAAiBj+C,EAJxE,EAIwEA,UAAWmV,EAJnF,EAImFA,cAAe66D,EAJlG,EAIkGA,UAAWxgB,EAJ7G,EAI6GA,kBAClH,IAAKz/D,EAAM,OAAO,KAElB,IAAMqlB,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5Eq2D,EAAe50E,YAAOkJ,GACtB+V,EAAY21D,EAAen2D,aAAmB,CAAErhB,MAAO8pD,EAAgB9nD,OAAQ+nD,IAAqB5vC,QAAQ+G,GAE9G46C,EAAa97D,EACb+7D,EAAc/5D,EAClB,GAAIhN,KAAKkL,IAAI47D,EAAYC,GAAe,IAAK,CACzC,IAAMggB,EAAQ,IAAM/mF,KAAKkL,IAAI47D,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAM/mE,KAAKmK,MAAM28D,EAAaigB,IAC7B,IAAM/mF,KAAKmK,MAAM48D,EAAcggB,GAG5E,IAAIpxE,EAAU,KACRjX,EAASiP,EAAM,4BAAQA,IAAKA,EAAKoN,KAAM2+C,IAAc,KAC3D,OAAQhJ,EAAM,UACV,IAAK,QACD/6C,EACI,yBAAKpX,UAAU,gCACX,kBAACuL,EAAA,EAAD,CACIgQ,IAAKxb,KAAKgnE,SACV/mE,UAAU,oCACVoF,OAAQkD,EAAKnJ,GACbsN,MAAO87D,EACP95D,OAAQ+5D,EACRigB,OAAQ1gB,EAAqBkc,GAAgBt2D,EAAW,KACxDhpB,OAAQ,WACJ,EAAKlF,SAAS,CAAE8oF,WAAW,MAG9BpoF,IAEHooF,IAAcxgB,IACVkc,GAAgBt2D,EACd,yBACI3tB,UAAWgM,IAAW,uCAAwC,CAC1D,gBAAiBsiB,IAErBlf,IAAK60E,GAAgBt2D,EACrBtc,IAAI,GACJ5E,MAAO87D,EACP95D,OAAQ+5D,IAGZ,yBACIxoE,UAAU,uCACVyD,MAAO,CACHgJ,MAAO87D,EACP95D,OAAQ+5D,OAMhC,MAEJ,IAAK,YACDpxD,EACI,yBAAKpX,UAAU,gCACX,2BACIub,IAAKxb,KAAKgnE,SACV/mE,UAAU,oCACVoM,QAASrM,KAAK2oF,mBACdnxC,MAAI,EACJwyB,UAAQ,EACRt9D,MAAO87D,EACP95D,OAAQ+5D,EACR7jE,OAAQ,WACJ,EAAKlF,SAAS,CAAE8oF,WAAW,MAG9BpoF,IAEHooF,IACItE,GAAgBt2D,EACd,yBACI3tB,UAAWgM,IAAW,uCAAwC,CAC1D,gBAAiBsiB,IAErBlf,IAAK60E,GAAgBt2D,EACrBtc,IAAI,GACJ5E,MAAO87D,EACP95D,OAAQ+5D,IAGZ,yBACIxoE,UAAU,uCACVyD,MAAO,CACHgJ,MAAO87D,EACP95D,OAAQ+5D,OAMhC,MAEJ,QACIpxD,EACI,yBAAKpX,UAAU,6BAA6BoP,IAAKA,EAAKiC,IAAI,GAAGjF,QAASrM,KAAK2oF,qBAKvF,OACI,yBAAK1oF,UAAU,wBACVoX,GACC2wD,GAAqB,kBAAChuB,GAAA,EAAD,CAAczxC,KAAMA,EAAMmsC,OAAQ,IACxD38B,KAAaknE,GAAYlnE,EAAQhG,QAAUktE,GAAYlnE,EAAQgnE,SAAW/zD,IACvE,kBAAC,GAAD,CACIjZ,KACI,oCACI,kBAAC,GAAD,CAASA,KAAMgG,EAAQhG,KAAMgtE,OAAQhnE,EAAQgnE,SAC7C,kBAACjzD,GAAA,EAAD,CAAUd,IAAKA,W,gDA5NXvrB,EAAOV,GAAQ,IACnCqzD,EAA8B3yD,EAA9B2yD,MAAO5jD,EAAuB/O,EAAvB+O,KAAuB/O,EAAjBsY,QAAiBtY,EAARurB,IAE9B,GAAIonC,IAAUrzD,EAAM6pF,UAAW,CAAC,IAAD,EAEwBC,YAAmBz2B,GAF3C,mBAEtBoE,EAFsB,KAENC,EAFM,KAEWj+C,EAFX,KAG3BA,EAAYhQ,IAAUC,IAAI+P,EAAUpZ,KAAOoZ,EAHhB,MAKsCswE,YAAuB12B,GAL7D,mBAKpB22B,EALoB,KAKAC,EALA,KAKqBr7D,EALrB,OAO8B26D,YAAcl2B,EAAO5jD,GAPnD,mBAOtB9B,EAPsB,KAOfgC,EAPe,KAOPnG,EAPO,KAOD6yD,EAPC,KAOS4M,EAPT,KAQ3Bz/D,EAAOC,IAAUC,IAAIF,EAAKnJ,KAAOmJ,EACjC,IAAI8G,EAAMC,YAAO/G,GAEjB,IAAK8G,GAAO24D,EAAmB,CAAC,IACpB7jE,EAAUiuD,EAAVjuD,MACJA,IACAkL,EAAG,6BAAyB9G,EAAKnJ,IACjCipE,aAAeh5D,EAAK,CAAEhK,OAAQkD,EAAKnJ,GAAIoP,KAAMjG,EAAKiG,KAAM4sD,SAAUj3D,EAAMikE,aAIhF,MAAO,CACHwgB,UAAWx2B,EAEX62B,MAAO,EACPT,WAAW,EACX97E,QACAgC,SACAnG,OACA8G,MACAjP,OAlBS,KAmBT4nE,oBACA5M,WACA5E,iBACAC,kBACAj+C,YACAuwE,qBACAC,sBACAr7D,iBAIR,OAAO,S,GApD6BptB,IAAMC,WCwBnC0oF,I,kNAhCXxjF,YAAc,SAAA1B,GACVA,EAAM2C,kBADa,MAGW,EAAKlH,MAA3B8N,EAHW,EAGXA,SAAUlB,EAHC,EAGDA,QAEdkB,GAEJlB,EAAQrI,I,wEAGF,IAAD,EACkDhE,KAAKP,MAApD8N,EADH,EACGA,SAAU47E,EADb,EACaA,KAAM3gD,EADnB,EACmBA,SAAUvoC,EAD7B,EAC6BA,UAAWyD,EADxC,EACwCA,MAEvCsyB,EAAK/pB,IACPsB,EAAW,+BAAiC,sBAC5C,CAAE47E,KAAMA,GACRlpF,GAGJ,OACI,yBAAKA,UAAW+1B,EAAItyB,MAAOA,EAAO2I,QAASrM,KAAK0F,aAC3C8iC,O,GAtBejoC,IAAMC,YCwBvB4oF,I,wLAxBD,IAAD,EAC8BppF,KAAKP,MAAhC8c,EADH,EACGA,MAAOU,EADV,EACUA,SAAUvZ,EADpB,EACoBA,MAEzB,OACI,yBAAKzD,UAAU,2BAA2ByD,MAAOA,GAC7C,yBAAKzD,UAAU,oCACX,8BAAOsc,GACNsK,QAAQ5J,IACL,qCAEKA,S,GAXO1c,IAAMC,YC6B3B6oF,I,kNAlCX3jF,YAAc,SAAA1B,GACVA,EAAM2C,kBADa,MAGW,EAAKlH,MAA3B4M,EAHW,EAGXA,QAHW,EAGFkB,UAIjBlB,EAAQrI,I,wEAGF,IAAD,EAC0ChE,KAAKP,MAA5CugB,EADH,EACGA,QAASwoB,EADZ,EACYA,SAAUj7B,EADtB,EACsBA,SAAUgP,EADhC,EACgCA,MAErC,OACI,yBACItc,UAAWgM,IAAW,6BAA8B,CAChD,qCAAsC+T,EACtC,sCAAuCzS,IAE3CgP,MAAOA,EACPlQ,QAASrM,KAAK0F,aACb8iC,O,GAtBqBjoC,IAAMC,YCEtC8oF,G,YACF,WAAY7pF,GAAQ,IAAD,uBACf,4CAAMA,KA4CVqoE,wBAA0B,SAAAj6D,GAAW,IACzBxI,EAAW,EAAKtG,MAAhBsG,OAEJA,IAAWwI,EAAOxI,QAClB,EAAK3F,SAAS,CACV6N,SAAU+7E,EAA0BC,aAAalkF,MAlD1C,EA2DnBK,YAAc,SAAA1B,GACVA,EAAM2C,kBADa,IAGX0F,EAAY,EAAK5M,MAAjB4M,QACa,EAAKtN,MAAlBwO,UAGRlB,EAAQrI,IAlEO,IAGPqB,EAAW5F,EAAX4F,OAHO,OAKf,EAAKtG,MAAQ,CACTyqF,gBAAiBnkF,EACjBA,OAAQA,EACRkI,SAAU+7E,EAA0BC,aAAalkF,IARtC,E,iFA4BfmD,IAAU8F,GAAG,4BAA6BtO,KAAK8nE,yBAC/Ct/D,IAAU8F,GAAG,uBAAwBtO,KAAK8nE,yBAC1Ct/D,IAAU8F,GAAG,2BAA4BtO,KAAK8nE,yBAC9Ct/D,IAAU8F,GAAG,wBAAyBtO,KAAK8nE,yBAC3Ct/D,IAAU8F,GAAG,uBAAwBtO,KAAK8nE,yBAC1Ct/D,IAAU8F,GAAG,wBAAyBtO,KAAK8nE,2B,6CAI3Ct/D,IAAU+F,IAAI,4BAA6BvO,KAAK8nE,yBAChDt/D,IAAU+F,IAAI,uBAAwBvO,KAAK8nE,yBAC3Ct/D,IAAU+F,IAAI,2BAA4BvO,KAAK8nE,yBAC/Ct/D,IAAU+F,IAAI,wBAAyBvO,KAAK8nE,yBAC5Ct/D,IAAU+F,IAAI,uBAAwBvO,KAAK8nE,yBAC3Ct/D,IAAU+F,IAAI,wBAAyBvO,KAAK8nE,2B,+BA2BtC,IAAD,EACuB9nE,KAAKP,MAAzB8c,EADH,EACGA,MAAOisB,EADV,EACUA,SACPj7B,EAAavN,KAAKjB,MAAlBwO,SAER,OACI,kBAAC,GAAD,CAAyBA,SAAUA,EAAUgP,MAAOA,EAAOlQ,QAASrM,KAAK0F,aACpE8iC,GAAY,kBAAC,KAAD,U,gDA/DO/oC,EAAOV,GAAQ,IACnCsG,EAAW5F,EAAX4F,OAGR,OAAIA,IAFwBtG,EAApByqF,gBAGG,CACHA,gBAAiBnkF,EACjBA,OAAQA,EACRkI,SAAU+7E,EAA0BC,aAAalkF,IAIlD,S,GAzByB9E,IAAMC,WAAxC8oF,GAwDKC,aAAe,SAAAlkF,GAClB,OAAQwhB,QAAQre,IAAU01B,QAAQ74B,KA+B3BikF,UCjETG,I,mBACF,WAAYhqF,GAAQ,IAAD,8BACf,4CAAMA,KAuBVkc,UAAY,SAAA3X,GACR,KAAImX,KAAautB,OAAO50B,OAAS,KAI7B9P,EAAM2kC,YAAV,CALiB,MASS,EAAK5pC,MAAvB0oB,EATS,EASTA,MAAOygE,EATE,EASFA,OACf,IAAKA,EAAQ,OAAO,KACpB,IAAe,IAAXzgE,EAAc,OAAO,KAEzB,IACM2qC,EAAQy1B,GADAK,EAAOzgE,IAErB,GAAK2qC,EAAL,CAGA,OADgBpuD,EAAR+S,KAEJ,IAAK,SAID,OAHA,EAAKrP,cACL1D,EAAM2C,uBACN3C,EAAM8B,iBAGV,IAAK,YAID,OAHA,EAAK4jF,iBACL1lF,EAAM2C,uBACN3C,EAAM8B,iBAGV,IAAK,aAID,OAHA,EAAKqiE,aACLnkE,EAAM2C,uBACN3C,EAAM8B,iBAKqB,UAAnBssD,EAAM,UAElB/yD,IAAgByF,aAAa,CAAE,QAAS,4BAA6Bd,aAjE1D,EA4FnB0lF,eAAiB,SAAA1lF,GACTA,GACAA,EAAM2C,kBAFY,MAKI,EAAK5H,MAAvB0oB,EALc,EAKdA,MAAOygE,EALO,EAKPA,OACTx7B,EAAYjlC,EAAQ,EAE1B,GAAK,EAAKkiE,iBAAiBliE,EAAOygE,GAElC,OAAO,EAAK0B,UAAUl9B,IAtGP,EAgHnByb,WAAa,SAAAnkE,GACLA,GACAA,EAAM2C,kBAFQ,MAKQ,EAAK5H,MAAvB0oB,EALU,EAKVA,MAAOygE,EALG,EAKHA,OACTx7B,EAAYjlC,EAAQ,EAE1B,GAAK,EAAKoiE,aAAapiE,EAAOygE,GAE9B,OAAO,EAAK0B,UAAUl9B,IA1HP,EA6HnBk9B,UAAY,SAAAniE,GAAU,IACVygE,EAAW,EAAKnpF,MAAhBmpF,OAER,QAAIzgE,EAAQ,OACRA,GAASygE,EAAOp0E,UAEpB,EAAKpU,SACD,CACI+nB,QACAkiE,iBAAkB,EAAKA,iBAAiBliE,EAAOygE,GAC/C2B,aAAc,EAAKA,aAAapiE,EAAOygE,KAI/C4B,YAA4BriE,EAAOygE,IAC5B,KA5IQ,EA+InBxgF,YAAc,WACVk/E,aAA4B,MADZ,MAGU,EAAK7nF,MAAvB0oB,EAHQ,EAGRA,MAAOygE,EAHC,EAGDA,QACA,IAAXzgE,GACAsiE,YAAkCtiE,EAAOygE,IApJ9B,EAwJnBtjE,cAAgB,WAAO,IACXwtC,EAAU,EAAK3yD,MAAf2yD,MAEF36C,EAAsBuyE,aAAqB53B,EAAO,MACnD36C,GAELvB,aAAQuB,IA9JO,EAiKnBwyE,WAAa,WAAO,IACR73B,EAAU,EAAK3yD,MAAf2yD,MAER83B,YAAU93B,EAAO,OAjKjB,EAAKrzD,MAAQ,CACT0oB,OAAQ,EACRkiE,kBAAkB,EAClBE,cAAc,EACd3B,OAAQ,IAGZ,EAAK58C,gBAAkB,IAAIC,KAAgB,EAAK5vB,WAVjC,E,iFAcf3b,KAAKyU,cAGLg3B,KAAgBC,IAAI1rC,KAAKsrC,mB,6CAIzBG,KAAgBzO,OAAOh9B,KAAKsrC,mB,oCAgDjB,IAAD,EACYtrC,KAAKP,MAAnB2+E,EADE,EACFA,GAAIhsB,EADF,EACEA,MAEN81B,E1D8oBP,SAA6B9J,GAChC,IAAKA,EAAI,MAAO,GADoB,IAG5B2E,EAAgB3E,EAAhB2E,YAEFmF,EAAS,GASf,OARAnF,EAAYhhF,QAAQ,SAAAT,GAChB4mF,EAAOlzE,KAAK1T,GACQomF,GAAepmF,GACvBS,QAAQ,SAAAqS,GAChB8zE,EAAOlzE,KAAKZ,OAIb8zE,EAAOpuE,OAAOguE,I0D5pBFqC,CAAoB/L,GAC7B32D,EAAQygE,EAAOxgE,UAAU,SAAApmB,GAAC,OAAIumF,GAAcvmF,KAAO8wD,IAEzDpyD,KAAKN,SAAS,CACVwoF,SACAzgE,QACAkiE,iBAAkB3pF,KAAK2pF,iBAAiBliE,EAAOygE,GAC/C2B,aAAc7pF,KAAK6pF,aAAapiE,EAAOygE,KAG3C4B,YAA4BriE,EAAOygE,K,uCAGtBzgE,EAAOygE,GACpB,OAAe,IAAXzgE,GAEcA,EAAQ,EACPygE,EAAOp0E,S,mCAgBjB2T,EAAOygE,GAChB,OAAe,IAAXzgE,GAEcA,EAAQ,GACN,I,+BA0Dd,IAAD,EACeznB,KAAKP,MAAjB+O,EADH,EACGA,KAAMsB,EADT,EACSA,EADT,EAEqD9P,KAAKjB,MAAvD0oB,EAFH,EAEGA,MAAOygE,EAFV,EAEUA,OAAQ2B,EAFlB,EAEkBA,aAAcF,EAFhC,EAEgCA,iBACrC,IAAKzB,EAAQ,OAAO,KACpB,IAAe,IAAXzgE,EAAc,OAAO,KAEzB,IAAM03D,EAAQ+I,EAAOzgE,GACf2qC,EAAQy1B,GAAc1I,GACtBpnE,E1DufP,SAAyBonE,GAC5B,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,qBAGL,IAAK,iBAGL,IAAK,iBACD,OAAOA,EAAMpnE,QAIrB,OAAO,K0DtgBaqyE,CAAgBjL,GAC1Bn0D,E1DwgBP,SAAqBm0D,GACxB,IAAKA,EAAO,OAAO,KAEnB,OAAQA,EAAM,UACV,IAAK,iBACD,OAAOA,EAAMn0D,IAIrB,OAAO,K0DjhBSq/D,CAAYlL,GATnB,EAWyBmJ,YAAcl2B,EAAO5jD,GAX9C,mBAWiBjG,GAXjB,gBAaDgU,EAAQ,GACW,UAAnB61C,EAAM,WACN71C,EAAQzM,EAAE,gBAES,UAAnBsiD,EAAM,SACN71C,EAAQzM,EAAE,eACgB,cAAnBsiD,EAAM,WACb71C,EAAQzM,EAAE,cAEd,IAAMw6E,EAAWpC,EAAOp0E,OAExB,OACI,yBAAK7T,UAAWgM,IAAW,4BAA6B,yBACpD,yBAAKhM,UAAU,uBACX,kBAAC,GAAD,CACIsc,MAAOA,EACPU,SAAUqtE,GAAY7iE,GAAS,EAArB,UAA4BA,EAAQ,EAApC,eAA4C6iE,GAAa,KACnE5mF,MAAO,CAAEiuE,WAAY,OAEzB,kBAAC,GAAD,CAA2Bp1D,MAAOzM,EAAE,QAASzK,OAAQkD,EAAKnJ,GAAIiN,QAASrM,KAAKiqF,aAC5E,kBAAC,GAAD,CAAyB1tE,MAAOzM,EAAE,WAAYzD,QAASrM,KAAK4kB,eACxD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBrI,MAAOzM,EAAE,SAAUzD,QAASrM,KAAK0H,aACtD,kBAAC4E,EAAA,EAAD,QAGR,yBAAKrM,UAAU,wBACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,CAAmBsN,UAAWs8E,EAAcV,MAAI,EAAC98E,QAASrM,KAAKmoE,YAC3D,kBAAC,GAAD,QAGR,yBAAKloE,UAAU,+BACX,kBAAC,GAAD,CAA+BmyD,MAAOA,EAAO5jD,KAAMA,EAAMuJ,QAASA,EAASiT,IAAKA,KAEpF,yBAAK/qB,UAAU,6BACX,kBAAC,GAAD,CAAmBsN,UAAWo8E,EAAkBR,MAAI,EAAC98E,QAASrM,KAAK0pF,gBAC/D,kBAAC,GAAD,CAAoBhmF,MAAO,CAAEqyB,UAAW,4B,GA3N/Bx1B,IAAMC,YA+O5Byb,GALCC,YACZzK,cACAwsE,GAGWhiE,CAAQwtE,I,SCjPjBc,I,mBACF,WAAY9qF,GAAQ,IAAD,8BACf,4CAAMA,KAyEV+qF,uCAAyC,SAAA38E,GAAW,IACxCwJ,EAAYxJ,EAAZwJ,QACR,GAAKA,EAAL,CAF+C,IAOvC+6C,EAAqC/6C,EAArC+6C,MAAOr6C,EAA8BV,EAA9BU,QAASiT,EAAqB3T,EAArB2T,IAAKylD,EAAgBp5D,EAAhBo5D,YAEzB,EAAKhxE,MAAMgxE,cAAgBA,GAE/B,EAAK/wE,SAAS,CAAE0yD,QAAOr6C,UAASiT,aAR5B,EAAKtrB,SAAS,CAAE0yD,MAAO,KAAMr6C,QAAS,KAAMiT,IAAK,QA7EtC,EAwFnBy/D,6BAxFmB,sCAwFY,WAAM58E,GAAN,yBAAAmE,EAAA,wDAC3BI,QAAQo0B,IAAI,kCAAmC34B,GACvCmd,EAAQnd,EAARmd,IACF9d,EAASw9E,KAAiBC,aAHL,EAIU,EAAKlrF,MAAlCgxE,EAJmB,EAInBA,YAAkBma,EAJC,EAIN5/D,IAEjB9d,IAAWujE,EANY,qDAQvBA,IAAezlD,EAAIC,WAAW2/D,GARP,oBASjBC,EAAO,IAAIx/D,IAAIL,GAAK6/D,KACtB7/D,EAAItQ,QAAQ,OAASsQ,EAAIlX,OAAS,EAVf,wBAWnB,EAAKkN,UAAU,UAXI,+BAcZ6pE,IAAQ,EAAKC,aAAaD,EAAM,UAdpB,mDAmB3Bxa,GAAgBrlD,GAnBW,0CAxFZ,wDAgMnBrP,UAAY,SAAA3X,GACR,KAAImX,KAAautB,OAAO50B,OAAS,KAI7B9P,EAAM2kC,YAIV,OAAQ3kC,EAAM+S,KACV,IAAK,SAMD,GALA/S,EAAM2C,kBACN3C,EAAM8B,iBAEY,EAAK/G,MAAfqzD,MAIJ,YADAw0B,aAA4B,MAIhC,EAAKl/E,gBArNE,EA+NnBqjF,WAAa,WAAO,IAAD,EACgB,EAAKhsF,MAA5BiqE,EADO,EACPA,QADO,EACEoU,UAEb,EAAKp8D,UAAU,UAIfgoD,EACA3pE,IAAgByF,aAAa,CACzB,QAAS,gCAKjB,EAAK4C,eA7OU,EAgPnB4hB,aAAe,WACX,IAAMte,EAAU,EAAKggF,iBAAiBpzE,QACtC,EAAKlY,SAAS,CACV09E,UAAWpyE,EAAQgW,UAAY,KAGnC,EAAKg4D,qBAnPL,EAAK1tC,gBAAkB,IAAIC,KAAgB,EAAK5vB,WAChD,EAAKsvE,WAAa1qF,IAAMsa,YACxB,EAAKmwE,iBAAmBzqF,IAAMsa,YAE9B,EAAK9b,MAAQ,GAEb,EAAKi6E,kBAAoBp1C,YAAS,EAAKo1C,kBAAmB,KAT3C,E,mFA2BG5oE,EAAWC,EAAWyqB,GAAc,IAC9C21C,EAAgBzwE,KAAKP,MAArBgxE,YAD6C,EAEDzwE,KAAKjB,MAAjDq+E,EAF6C,EAE7CA,UAAWpU,EAFkC,EAElCA,QAAS5W,EAFyB,EAEzBA,MAAOr6C,EAFkB,EAElBA,QAASiT,EAFS,EAETA,IAE5C,OAAIylD,IAAgBrgE,EAAUqgE,cAI1B2M,IAAc/sE,EAAU+sE,YAIxBpU,IAAY34D,EAAU24D,UAItB5W,IAAU/hD,EAAU+hD,QAIpBr6C,IAAY1H,EAAU0H,SAItBiT,IAAQ3a,EAAU2a,U,0CAQtBhrB,KAAKkrF,SAAU,EACflrF,KAAKspB,eAELmiB,KAAgBC,IAAI1rC,KAAKsrC,iBACzBo/C,KAAiBp8E,GAAG,6BAA8BtO,KAAKyqF,8BACvDC,KAAiBp8E,GAAG,uCAAwCtO,KAAKwqF,0C,6CAIjExqF,KAAKkrF,SAAU,EACfz/C,KAAgBzO,OAAOh9B,KAAKsrC,iBAC5Bo/C,KAAiBn8E,IAAI,6BAA8BvO,KAAKyqF,8BACxDC,KAAiBn8E,IAAI,uCAAwCvO,KAAKwqF,0C,mCAuCzDK,EAAM7uD,GACf,IAAK6uD,EAAM,OAAO,EAElB,IAAMM,EAAgBjoF,SAASK,eAAesnF,EAAKnhD,OAAO,IAC1D,GAAIyhD,EAAe,CACf,IAAMC,EAAU,GACZC,GAAW,EACXC,EAAiBH,EACrB,IACIG,EAAiBA,EAAev3B,YAEI,YAA5Bu3B,EAAe/3B,SACf63B,EAAQp2E,KAAKs2E,GACsB,YAA5BA,EAAe/3B,WACtB83B,GAAW,GAGfA,GAAW,SAETA,GASV,OAPAD,EAAQrpF,QAAQ,SAAAT,GAAC,OAAKA,EAAE2Z,MAAO,IAE/BkwE,EAAcl3C,eAAe,CACzBkrC,MAAO,SACPnjD,cAGG,EAGX,OAAO,I,gCAGDA,GACN,IAAMhxB,EAAUhL,KAAKgrF,iBAAiBpzE,QAEtC,OAAQokB,GACJ,IAAK,SACDhb,GAAUhW,GACV,MAEJ,QACIA,EAAQixB,SAAS,CACbp4B,IAAK,EACLm4B,gB,yCAMGn8B,EAAWC,EAAWC,GAAW,IAAD,EAClBC,KAAKP,MAA1BgxE,EADuC,EACvCA,YAAazlD,EAD0B,EAC1BA,IACrB5Y,QAAQo0B,IAAI,0BAA2Bxb,EAAKA,IAAQnrB,EAAUmrB,KAE9D,IAAM6/D,EAAO,IAAIx/D,IAAIL,GAAK6/D,KACtBhrF,EAAU4wE,cAAgBA,IACtB5wE,EAAUmrB,MAAQA,EACdA,EAAItQ,QAAQ,OAASsQ,EAAIlX,OAAS,GAClC1B,QAAQo0B,IAAI,0CACZxmC,KAAKghB,UAAU,SACR6pE,GACPz4E,QAAQo0B,IAAI,uCAAwCqkD,GACpD7qF,KAAK8qF,aAAaD,EAAM,UAExBz4E,QAAQo0B,IAAI,0CACZxmC,KAAKghB,UAAU,SAGf6pE,GACAz4E,QAAQo0B,IAAI,uCAAwCqkD,GACpD7qF,KAAK8qF,aAAaD,EAAM,UAExBz4E,QAAQo0B,IAAI,4CACZxmC,KAAKghB,UAAU,WAIvBhhB,KAAKspB,kB,oCAgCTknD,aAAsB,Q,0CA8BtB,GAAKxwE,KAAKkrF,QAAV,CADgB,IAGRza,EAAgBzwE,KAAKP,MAArBgxE,YACR,GAAKA,EAAL,CAOA,IAXgB,IAMRsS,EAAgBtS,EAAhBsS,YAEFmF,EAAS,IAAIh0E,IACboP,EAAQi2D,YAAYv5E,KAAKgrF,iBAAkBhrF,KAAKirF,YAE7C72E,EAAI,EAAGA,EAAIkP,EAAMxP,OAAQM,IAAK,CACnC,IAAM+qE,EAAQ4D,EAAYz/D,EAAMlP,IAChC8zE,EAAOlvE,IAAImmE,EAAOA,GAEEuI,GAAevI,GACvBp9E,QAAQ,SAAAT,GAAC,OAAI4mF,EAAOlvE,IAAI1X,EAAGA,KAG3CjC,IAAgByF,aAAa,CACzB,QAAS,2BACTojF,e,+BAIE,IACEzX,EAAgBzwE,KAAKP,MAArBgxE,YADH,EAE+CzwE,KAAKjB,MAAxCq+E,GAFZ,EAEGpU,QAFH,EAEYoU,WAAWhrB,EAFvB,EAEuBA,MAAOr6C,EAF9B,EAE8BA,QAASiT,EAFvC,EAEuCA,IAC5C,OAAKylD,EAGD,kBAAC,GAAU8a,SAAX,CAAoBxkF,MAAO0pE,GACvB,yBAAKj1D,IAAKxb,KAAKgrF,iBAAkB/qF,UAAU,iBAAiBqqB,SAAUtqB,KAAKspB,cACvE,yBAAKrpB,UAAU,6BAA6BoM,QAASrM,KAAK+qF,YACtD,kBAAC,GAAD,CACI9qF,UAAU,6BACVyD,MAAO,CAAEqgB,WAAY,cACrB1X,QAASrM,KAAK+qF,YACd,kBAAC,GAAD,CACIrnF,MAAO,CACH6+B,WAAY,2BACZxM,UAAWqnD,EAAY,gBAAkB,oBAKzD,yBAAKn9E,UAAU,iCACX,6BACI,kBAAC,GAAD,CAASub,IAAKxb,KAAKirF,eAG3B,yBAAKhrF,UAAU,+BACX,kBAAC,GAAD,CAAmBA,UAAU,8BAA8BoM,QAASrM,KAAK0H,aACrE,kBAAC4E,EAAA,EAAD,SAIX8lD,GAAS,kBAAC,GAAD,CAAwBA,MAAOA,EAAO5jD,KAAMy0E,IAAelrE,QAASA,EAASiT,IAAKA,KA7B3E,Q,gDAzQGvrB,EAAOV,GACnC,OAAIU,EAAMgxE,cAAgB1xE,EAAMysF,gBACrB,CACHA,gBAAiB/rF,EAAMgxE,YACvBzH,QAAS0hB,KAAiB1hB,UAC1BoU,WAAW,EACXhrB,MAAO,KACPr6C,QAAS,KACTiT,IAAK,MAIN,S,GAzBazqB,IAAMC,YA6TnBiR,iBAAkB84E,IChSlBkB,I,mBAxCX,WAAYhsF,GAAQ,qEACVA,I,sEAGA,IAAD,EACyBO,KAAKP,MAA3B4O,EADH,EACGA,OAAQsW,EADX,EACWA,UAEVrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KAJhB,IAMGuY,EAASvY,EAATuY,KAEF/gB,EAAS49E,aAAgBp1E,GACzBq1E,EAAWjiB,aAAY76C,GAEvB+8D,EAAc99E,EAAS,kBAACs6B,GAAA,EAAD,CAAUt6B,OAAQA,IAAa,kBAAC,EAAD,CAAUO,OAAQA,IAE9E,OACI,yBAAKpO,UAAU,cACX,yBAAKA,UAAU,sBACV2rF,EACD,yBAAK3rF,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAACyvB,GAAA,EAAD,CAAerhB,OAAQA,EAAQP,OAAQA,KAE3C,yBAAK7N,UAAU,uBACX,8BAAO0rF,W,GA3BXprF,IAAMC,YCMxBqrF,I,mBACF,WAAYpsF,GAAQ,IAAD,8BACf,4CAAMA,KAuFVqoE,wBAA0B,SAAAj6D,GAAW,IAAD,EACI,EAAKpO,MAAjC4O,EADwB,EACxBA,OAAQsW,EADgB,EAChBA,UAAWnW,EADK,EACLA,KAE3B,GAAIH,IAAWR,EAAOQ,QAAUsW,IAAc9W,EAAO8W,UAAW,CAAC,IAAD,EACDmnE,YAAaz9E,EAAQsW,EAAWnW,GAD/B,mBACrD9B,EADqD,KAC9CgC,EAD8C,KACtCnG,EADsC,KAChC6yD,EADgC,KACtB4M,EADsB,KAG5D,EAAKtoE,SAAS,CACVgN,QACAgC,SACAnG,OACA8G,IAAKC,YAAO/G,GACZy/D,oBACA5M,eApGO,EAyGnBmtB,iCAAmC,SAAA16E,GAAW,IAAD,EACX,EAAKpO,MAA3B4O,EADiC,EACjCA,OAAQsW,EADyB,EACzBA,UAEhB,GAAItW,IAAWR,EAAOQ,QAAUsW,IAAc9W,EAAO8W,UAAW,CAAC,IAAD,EAC9BonE,YAAoB19E,EAAQsW,GADE,mBACrDjY,EADqD,KAC9CgC,EAD8C,KACtCnG,EADsC,KAE5D,EAAK7I,SAAS,CACV82D,eAAgB9pD,EAChB+pD,gBAAiB/nD,EACjB8J,UAAWjQ,MAjHJ,EAsHnB4e,uBAAyB,SAAAtZ,GAAW,IAAD,EACQ,EAAKpO,MAApC4O,EADuB,EACvBA,OAAQsW,EADe,EACfA,UAAWnW,EADI,EACJA,KAAMsB,EADF,EACEA,EACzBL,EAAwB5B,EAAxB4B,QAASsG,EAAelI,EAAfkI,WAEjB,GAAI1H,IAAWoB,GAAWkV,IAAc5O,EAAY,CAChD,IAAMO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACnC5S,EAAO63C,aAAQtzC,EAAS,KAAMxG,GAFY,EAIWg8E,YAAaz9E,EAAQsW,EAAWnW,GAJ3C,mBAIzC9B,EAJyC,KAIlCgC,EAJkC,KAI1BnG,EAJ0B,KAIpB6yD,EAJoB,KAIV4M,EAJU,KAK5C34D,EAAMC,YAAO/G,GAEjB,IAAK8G,GAAO24D,EAAmB,CAAC,IACpB7jE,EAAUmS,EAAQe,QAAlBlT,MACJA,IACAkL,EAAG,6BAAyB9G,EAAKnJ,IACjCipE,aAAeh5D,EAAK,CAAEhK,OAAQkD,EAAKnJ,GAAIoP,KAAMjG,EAAKiG,KAAM4sD,SAAUj3D,EAAMikE,aAIhF,EAAK1oE,SAAS,CACVgN,QACAgC,SACAnG,OACA8G,MACAjP,OAdS,KAeT4nE,oBACA5M,WACArpD,WAjJO,EAsJnB42E,mBAAqB,SAAA3kF,GACbA,GAAOA,EAAM2C,mBAvJF,EA0JnBjB,YAAc,SAAA1B,GACVA,EAAM8B,iBACN9B,EAAM2C,kBAFa,IAKXvG,EAAW,EAAKrB,MAAhBqB,OACHA,GAELA,EAAO4rF,kBA/JP,EAAKjtF,MAAQ,GAEb,EAAKioE,SAAWzmE,IAAMsa,YALP,E,iFA4DfrS,IAAU8F,GAAG,wBAAyBtO,KAAK8nE,yBAC3Ct/D,IAAU8F,GAAG,wBAAyBtO,KAAK8nE,yBAC3Ct/D,IAAU8F,GAAG,4BAA6BtO,KAAK8nE,yBAC/Ct/D,IAAU8F,GAAG,iCAAkCtO,KAAKuoF,kCACpD//E,IAAU8F,GAAG,qCAAsCtO,KAAKuoF,kCACxDpxE,KAAa7I,GAAG,uBAAwBtO,KAAKmnB,0B,6CAI7C3e,IAAU+F,IAAI,wBAAyBvO,KAAK8nE,yBAC5Ct/D,IAAU+F,IAAI,wBAAyBvO,KAAK8nE,yBAC5Ct/D,IAAU+F,IAAI,4BAA6BvO,KAAK8nE,yBAChDt/D,IAAU+F,IAAI,iCAAkCvO,KAAKuoF,kCACrD//E,IAAU+F,IAAI,qCAAsCvO,KAAKuoF,kCACzDpxE,KAAa5I,IAAI,uBAAwBvO,KAAKmnB,0B,yCAG/BtnB,EAAWC,EAAWC,GAAW,IACxCsP,EAAQrP,KAAKjB,MAAbsQ,IAER,GAAIvP,EAAUuP,MAAQA,EAAK,CACvB,IAAM/L,EAAStD,KAAKgnE,SAASpvD,QAC7B,IAAKtU,EAAQ,OAEbA,EAAO45B,U,+BAiFL,IAAD,SACyBl9B,KAAKP,MAA3B4O,EADH,EACGA,OAAQsW,EADX,EACWA,UADX,EAeD3kB,KAAKjB,MAZL2N,EAHC,EAGDA,MACAgC,EAJC,EAIDA,OACAnG,EALC,EAKDA,KACA8G,EANC,EAMDA,IACA24D,EAPC,EAODA,kBACA5M,EARC,EAQDA,SACArpD,EATC,EASDA,KACAykD,EAVC,EAUDA,eACAC,EAXC,EAWDA,gBACA9oC,EAZC,EAYDA,cACAnV,EAbC,EAaDA,UACAgwE,EAdC,EAcDA,UAGJ,IAAKjgF,EAAM,OAAO,KAElB,IAAMqlB,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5Eq2D,EAAe50E,YAAOkJ,GACtB+V,EAAY21D,EAAen2D,aAAmB,CAAErhB,MAAO8pD,EAAgB9nD,OAAQ+nD,IAAqB5vC,QAAQ+G,GAE5Gq+D,EAAUC,aAAe79E,EAAQsW,GACjCwnE,EAAcC,aAAmB/9E,EAAQsW,GAE3C6jD,EAAa97D,EACb+7D,EAAc/5D,EAClB,GAAIhN,KAAKkL,IAAI47D,EAAYC,GAAe,IAAK,CACzC,IAAMggB,EAAQ,IAAM/mF,KAAKkL,IAAI47D,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAM/mE,KAAKmK,MAAM28D,EAAaigB,IAC7B,IAAM/mF,KAAKmK,MAAM48D,EAAcggB,GAG5E,IAAIpxE,EAAU,KACRjX,EAASiP,EAAM,4BAAQA,IAAKA,EAAKoN,KAAM2+C,IAAc,KAoF3D,OAlFI/jD,EADA40E,EAEI,yBAAKhsF,UAAU,gCACX,kBAACuL,EAAA,EAAD,CACIgQ,IAAKxb,KAAKgnE,SACV/mE,UAAU,oCACVoF,OAAQkD,EAAKnJ,GACbsN,MAAO87D,EACP95D,OAAQ+5D,EACRigB,OAAQ1gB,EAAqBkc,GAAgBt2D,EAAW,KACxDhpB,OAAQ,WACJ,EAAKlF,SAAS,CAAE8oF,WAAW,MAG9BpoF,IAEHooF,IAAcxgB,IACVkc,GAAgBt2D,EACd,yBACI3tB,UAAWgM,IAAW,uCAAwC,CAC1D,gBAAiBsiB,IAErBlf,IAAK60E,GAAgBt2D,EACrBtc,IAAI,GACJ5E,MAAO87D,EACP95D,OAAQ+5D,IAGZ,yBACIxoE,UAAU,uCACVyD,MAAO,CACHgJ,MAAO87D,EACP95D,OAAQ+5D,OAMzB0jB,EAEH,yBAAKlsF,UAAU,gCACX,2BACIub,IAAKxb,KAAKgnE,SACV/mE,UAAU,oCACVoM,QAASrM,KAAK2oF,mBACdnxC,MAAI,EACJwyB,UAAQ,EACRt9D,MAAO87D,EACP95D,OAAQ+5D,EACR7jE,OAAQ,WACJ,EAAKlF,SAAS,CAAE8oF,WAAW,MAG9BpoF,IAEHooF,IACItE,GAAgBt2D,EACd,yBACI3tB,UAAWgM,IAAW,uCAAwC,CAC1D,gBAAiBsiB,IAErBlf,IAAK60E,GAAgBt2D,EACrBtc,IAAI,GACJ5E,MAAO87D,EACP95D,OAAQ+5D,IAGZ,yBACIxoE,UAAU,uCACVyD,MAAO,CACHgJ,MAAO87D,EACP95D,OAAQ+5D,OAQ5B,yBAAKxoE,UAAU,6BAA6BoP,IAAKA,EAAKiC,IAAI,GAAGjF,QAASrM,KAAK2oF,qBAK/E,yBAAK1oF,UAAU,wBACVoX,GACC2wD,GAAqB,kBAAChuB,GAAA,EAAD,CAAczxC,KAAMA,EAAMmsC,OAAQ,IACxD3iC,GAAQA,EAAK+B,OAAS,GAAK,kBAAC,GAAD,CAAc/B,KAAMA,Q,gDAxR5BtS,EAAOV,GAAQ,IACnCsP,EAA+B5O,EAA/B4O,OAAQsW,EAAuBllB,EAAvBklB,UAAWnW,EAAY/O,EAAZ+O,KAAMsB,EAAMrQ,EAANqQ,EAEjC,GAAIzB,IAAWtP,EAAMyS,YAAcmT,IAAc5lB,EAAMi4B,cAAe,CAAC,IAAD,EACf+0D,YAAoB19E,EAAQsW,GADb,mBAC7D6xC,EAD6D,KAC7CC,EAD6C,KAC5Bj+C,EAD4B,KAE9DA,IACAA,EAAYhQ,IAAUC,IAAI+P,EAAUpZ,KAAOoZ,GAHmB,MAKD6zE,YAAoBh+E,EAAQsW,GAL3B,mBAK3DokE,EAL2D,KAKvCC,EALuC,KAKlBr7D,EALkB,KAO5DrX,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACnC5S,EAAO63C,aAAQtzC,EAAS,KAAMxG,GAR8B,EAUTg8E,YAAaz9E,EAAQsW,EAAWnW,GAVvB,mBAU7D9B,EAV6D,KAUtDgC,EAVsD,KAU9CnG,EAV8C,KAUxC6yD,EAVwC,KAU9B4M,EAV8B,KAWlEz/D,EAAOC,IAAUC,IAAIF,EAAKnJ,KAAOmJ,EACjC,IAAI8G,EAAMC,YAAO/G,GAEjB,IAAK8G,GAAO24D,EAAmB,CAAC,IACpB7jE,EAAUmS,EAAQe,QAAlBlT,MACJA,IACAkL,EAAG,6BAAyB9G,EAAKnJ,IACjCipE,aAAeh5D,EAAK,CAAEhK,OAAQkD,EAAKnJ,GAAIoP,KAAMjG,EAAKiG,KAAM4sD,SAAUj3D,EAAMikE,aAIhF,MAAO,CACH52D,WAAYnD,EACZ2oB,cAAerS,EAEfskE,MAAO,EACPT,WAAW,EACX97E,QACAgC,SACAnG,OACA8G,MACAjP,OAnBS,KAoBT4nE,oBACA5M,WACArpD,OACAykD,iBACAC,kBACAj+C,YACAuwE,qBACAC,sBACAr7D,iBAIR,OAAO,S,GAzDkBptB,IAAMC,YA6SxBiR,iBAAkBo6E,IC/Q3BS,I,mBACF,WAAY7sF,GAAQ,IAAD,uBACf,4CAAMA,KAsFVkc,UAAY,SAAA3X,GAAU,IACVqK,EAAW,EAAK5O,MAAhB4O,OACAk+E,EAAqB,EAAKxtF,MAA1BwtF,iBAER,KAAIpxE,KAAautB,OAAO50B,OAAS,KAI7B9P,EAAM2kC,YAAV,CAIA,IAAMxlC,EAAoBD,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,wBAGlG,OADgBW,EAAR+S,KAEJ,IAAK,SAKD,OAHA,EAAKrP,cACL1D,EAAM2C,uBACN3C,EAAM8B,iBAGV,IAAK,YACD,IAAK3C,EAID,OAHA,EAAKumF,iBACL1lF,EAAM2C,uBACN3C,EAAM8B,iBAGV,MAEJ,IAAK,aACD,IAAK3C,EAID,OAHA,EAAKglE,aACLnkE,EAAM2C,uBACN3C,EAAM8B,iBAOFomF,aAAe79E,EAAQk+E,IAEnCltF,IAAgByF,aAAa,CAAE,QAAS,4BAA6Bd,YApI1D,EAwInBmjB,uBAAyB,SAAAtZ,GAAW,IACxB4B,EAAkD5B,EAAlD4B,QAASsG,EAAyClI,EAAzCkI,WAAYuR,EAA6BzZ,EAA7ByZ,YAAaC,EAAgB1Z,EAAhB0Z,YAClClZ,EAAW,EAAK5O,MAAhB4O,OAFuB,EAGU,EAAKtP,MAAtCwtF,EAHuB,EAGvBA,iBAAkBC,EAHK,EAGLA,WAE1B,GAAIn+E,IAAWoB,EAAf,CAEA,IAAM6G,EAAUa,KAAa1O,IAAIgH,EAASsG,GAC1C,GAAKO,EAAL,CAKA,GAHAm2E,YAAuB,CAACn2E,IAELo2E,aAAeplE,KAAiBolE,aAAenlE,GAClD,CACZ,GACI,EAAK0wD,QAAQnkE,QAAU,IACtB,EAAK64E,kBACFnlE,YAAQzR,EAAY,EAAKkiE,QAAQ,GAAG74E,GAAI,EAAK64E,QAAQ,EAAKA,QAAQnkE,OAAS,GAAG1U,KACpF,CAGE,IAFA,IAAIwtF,GAAW,EACX3U,EAAU,GACL7jE,EAAI,EAAGA,EAAI,EAAK6jE,QAAQnkE,OAAQM,IACjC,EAAK6jE,QAAQ7jE,GAAGhV,GAAK2W,EACrBkiE,EAAQjjE,KAAK,EAAKijE,QAAQ7jE,KAErBw4E,IACDA,GAAW,EACX3U,EAAQjjE,KAAKsB,IAEjB2hE,EAAQjjE,KAAK,EAAKijE,QAAQ7jE,KAGlC,EAAK6jE,QAAUA,EAGnB,IAAMxwD,EAAQ,EAAKwwD,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IACnD,EAAK7sF,SAAS,CACVmqF,aAAc,EAAKA,aAAapiE,GAChCkiE,iBAAkB,EAAKA,iBAAiBliE,GACxC+kE,WAAYA,EAAa,IAKjC,IADuBE,aAAeplE,IAAgBolE,aAAenlE,GAClD,CACf,IAAIslE,EAAa,EAAK5U,QAGtB,GAFA,EAAKA,QAAU,EAAKA,QAAQn+D,OAAO,SAAAxY,GAAC,OAAIA,EAAElC,KAAO2W,IAE7Cw2E,IAAqBx2E,EAAY,CACjC,IAAM+2E,EAAY,IAAI54E,IACtB44E,EAAU9zE,IAAIjD,EAAYA,GAE1B,EAAKg3E,gBAAgBF,EAAYC,GACjC,EAAKptF,SAAS,CACV8sF,WAAY9qF,KAAKkL,IAAI4/E,EAAa,EAAG,SAEtC,CACH,IAAM/kE,EAAQ,EAAKwwD,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IACnD,EAAK7sF,SAAS,CACVmqF,aAAc,EAAKA,aAAapiE,GAChCkiE,iBAAkB,EAAKA,iBAAiBliE,GACxC+kE,WAAY9qF,KAAKkL,IAAI4/E,EAAa,EAAG,UArMlC,EA2MnBtkE,uBAAyB,SAAAra,GAAW,IACxB4B,EAAuC5B,EAAvC4B,QAASmJ,EAA8B/K,EAA9B+K,YAAa88C,EAAiB7nD,EAAjB6nD,aACtBrnD,EAAW,EAAK5O,MAAhB4O,OAFuB,EAGU,EAAKtP,MAAtCwtF,EAHuB,EAGvBA,iBAAkBC,EAHK,EAGLA,WAE1B,GAAK92B,GACDrnD,IAAWoB,EAAf,CAEA,IAAMq9E,EAAYl0E,EAAYuf,OAAO,SAAC60D,EAAaC,GAE/C,OADAD,EAAYh0E,IAAIi0E,EAAWA,GACpBD,GACR,IAAI94E,KAED24E,EAAa,EAAK5U,QACpBiV,EAAeL,EAAW/4E,OAE9B,EAAKmkE,QAAU,EAAKA,QAAQn+D,OAAO,SAAAxY,GAAC,OAAKwrF,EAAUz4E,IAAI/S,EAAElC,MACzD8tF,GAAgB,EAAKjV,QAAQnkE,OAE7B,EAAKpU,SAAS,CAAE8sF,WAAY9qF,KAAKkL,IAAI4/E,EAAaU,EAAc,KAE3D,EAAKjV,QAAQnkE,OAKdg5E,EAAUz4E,IAAIk4E,IACd,EAAKQ,gBAAgBF,EAAYC,GALjCK,aAAsB,QAjOX,EA0OnBplE,mBAAqB,SAAAla,GAAW,IACpBQ,EAAW,EAAK5O,MAAhB4O,OADmB,EAEc,EAAKtP,MAAtCwtF,EAFmB,EAEnBA,iBAAkBC,EAFC,EAEDA,WAElBl2E,EAAYzI,EAAZyI,QACR,GAAKA,GACAo2E,aAAep2E,EAAQe,UAExBf,EAAQ7G,UAAYpB,GACnB,EAAKs+E,iBAAV,CAEA,EAAK1U,QAAU,CAAC3hE,GAASuD,OAAO,EAAKo+D,SACrC,IAAMxwD,EAAQ,EAAKwwD,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IAEnD,EAAK7sF,SAAS,CACVmqF,aAAc,EAAKA,aAAapiE,GAChCkiE,iBAAkB,EAAKA,iBAAiBliE,GACxC+kE,WAAYA,EAAa,MA3Pd,EA+PnBY,UAAY,SAAC/+E,EAAQsW,GACjB,IAAMrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,KAFU,IAIvBe,EAAYf,EAAZe,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACH,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACH,QAAS,qCAGjB,QACI,OAAO,OAvRA,EA4RnBg2E,YA5RmB,qBA4RL,gDAAAr7E,EAAA,0DACoB,EAAKvS,MAA3B4O,EADE,EACFA,OAAQsW,EADN,EACMA,UAEV7K,EAAS,EAAKszE,UAAU/+E,EAAQsW,GAElCnlB,EAAS,CACT,QAAS,WACTypB,SAAU,GACVC,YAAa,IAEbpP,EAVM,gCAWSza,IAAgBC,KAAK,CAChC,QAAS,qBACTmQ,QAASpB,EACT4L,MAAO,GACP4O,eAAgB,EAChBC,gBAAiBnE,EACjBoE,QAASukE,IACTv4E,MAAO,EAAIu4E,IACXxzE,OAAQA,IAnBN,OAWNta,EAXM,iBAuBV0rC,aAAwB1rC,EAAQ,EAAKy4E,SACrC9gE,KAAaiS,SAAS5pB,EAAOypB,UAE7B,EAAKgvD,QAAUz4E,EAAOypB,SACtB,EAAK0jE,iBAA8C,IAA3BntF,EAAOypB,SAASnV,OAEhCy4E,EAAqB,EAAKxtF,MAA1BwtF,iBACF9kE,EAAQ,EAAKwwD,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IAEnD,EAAK7sF,SAAS,CACVmqF,aAAc,EAAKA,aAAapiE,GAChCkiE,iBAAkB,EAAKA,iBAAiBliE,MAG7B,IAAXA,EArCM,iBAsCN,EAAKwwD,QAAU,CAAC9gE,KAAa1O,IAAI4F,EAAQk+E,IACzCgB,YAA0B,EAAG,EAAKtV,SAvC5B,2BAyCNsV,YAA0B9lE,EAAO,EAAKwwD,SAEhCn+D,EAAS,EAAKszE,UAAU/+E,EAAQsW,GA3ChC,mDA8CA2lE,EAAW,KACbl+C,EAAQ,EA/CN,IAAAp6B,EAAA,qCAAAA,EAAA,qEAiDmB3S,IAAgBC,KAAK,CACtC,QAAS,qBACTmQ,QAASpB,EACT4L,MAAO,GACP4O,eAAgB,EAChBC,gBAAiB,EAAKmvD,QAAQnkE,OAAS,EAAI,EAAKmkE,QAAQ,GAAG74E,GAAK,EAChE2pB,QAAS,GACThU,MAAO,IACP+E,OAAQA,IAzDV,OAiDIta,EAjDJ,OA2DF4sC,GAAS5sC,EAAOypB,SAASnV,OAEzBo3B,aAAwB1rC,EAAQ,EAAKy4E,SACrC9gE,KAAaiS,SAAS5pB,EAAOypB,UAE7B,EAAKgvD,QAAUz4E,EAAOypB,SAASpP,OAAO,EAAKo+D,SAC3C,EAAK0U,iBAA8C,IAA3BntF,EAAOypB,SAASnV,OAEhCy4E,EAAqB,EAAKxtF,MAA1BwtF,iBACF9kE,EAAQ,EAAKwwD,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IAEnD,EAAK7sF,SAAS,CACVmqF,aAAc,EAAKA,aAAapiE,GAChCkiE,iBAAkB,EAAKA,iBAAiBliE,GACxCklE,iBAAkB,EAAKA,iBACvBH,WAAYhtF,EAAO0pB,cA1ErB,oDAgDE,EAAKyjE,oBAAoBvgD,EAAQk+C,GAhDnC,uHA5RK,EA4WnB5iF,YAAc,WACVylF,aAAsB,MADN,IAGRZ,EAAqB,EAAKxtF,MAA1BwtF,iBACF9kE,EAAQ,EAAKwwD,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,KACpC,IAAX9kE,GACA+lE,YAAgC/lE,EAAO,EAAKwwD,UAlXjC,EAsXnBgS,WAAa,WAAO,IACR57E,EAAW,EAAK5O,MAAhB4O,OACAk+E,EAAqB,EAAKxtF,MAA1BwtF,iBAEFj2E,EAAUa,KAAa1O,IAAI4F,EAAQk+E,GACzC,GAAKj2E,EAAL,CALe,IAOPe,EAAYf,EAAZe,QACR,GAAKA,EAAL,CAEA,IAAI+6C,EAAQ,KACZ,OAAQ/6C,EAAQ,UACZ,IAAK,mBAGD+6C,EAFsB/6C,EAAdk/C,UAGR,MAEJ,IAAK,yBAGDnE,EAFkB/6C,EAAVjI,MAGR,MAEJ,IAAK,kBAGDgjD,EAFqB/6C,EAAbnU,SAGR,MAEJ,IAAK,eAGDkvD,EAFkB/6C,EAAVjI,MAGR,MAEJ,IAAK,cAAgB,IACTqd,EAAapV,EAAboV,SACR,IAAKA,EAAU,OAFC,IAIR8pC,EAAsC9pC,EAAtC8pC,UAAWrzD,EAA2BupB,EAA3BvpB,SAAUkM,EAAiBqd,EAAjBrd,MAAOjL,EAAUsoB,EAAVtoB,MAEpC,GAAIoyD,EAAW,CACXnE,EAAQmE,EACR,MAGJ,GAAIrzD,EAAU,CACVkvD,EAAQlvD,EACR,MAGJ,GAAIkM,EAAO,CACPgjD,EAAQhjD,EACR,MAGJ,GAAIjL,EAAO,CACPiuD,EAAQjuD,EACR,MAEJ,MAEJ,IAAK,eAGDiuD,EAFkB/6C,EAAVlT,MAOhB+lF,YAAU93B,EAAO97C,MA7bF,EAgcnBsO,cAAgB,WAAO,IACXvW,EAAW,EAAK5O,MAAhB4O,OACAk+E,EAAqB,EAAKxtF,MAA1BwtF,iBAER1nE,aAAgBxW,EAAQ,CAACk+E,KApcV,EAucnBznE,aAAe,WACX,EAAK2oE,oBAxcU,EA2cnB9D,iBAAmB,SAAAliE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAKwwD,QAAQnkE,QA/cjB,EAkdnB41E,eAAiB,SAAA1lF,GACTA,GACAA,EAAM2C,kBAFY,IAKd4lF,EAAqB,EAAKxtF,MAA1BwtF,iBAEF7/B,EADQ,EAAKurB,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IACzB,EAE1B,OAAO,EAAK3C,UAAUl9B,EAAW,WACzBA,IAAc,EAAKurB,QAAQnkE,OAAS,GACpC,EAAK45E,kBA7dE,EAkenBA,aAlemB,qBAkeJ,wCAAA17E,EAAA,0DACmB,EAAKvS,MAA3B4O,EADG,EACHA,OAAQsW,EADL,EACKA,UACR4nE,EAAqB,EAAKxtF,MAA1BwtF,iBAEFzyE,EAAS,EAAKszE,UAAU/+E,EAAQsW,GAElCnlB,EAAS,CACT,QAAS,WACTypB,SAAU,GACVC,YAAa,IAEbpP,EAXO,gCAYQza,IAAgBC,KAAK,CAChC,QAAS,qBACTmQ,QAASpB,EACT4L,MAAO,GACP4O,eAAgB,EAChBC,gBAAiByjE,EACjBxjE,OAAQ,EACRhU,MAAOu4E,IACPxzE,OAAQA,IApBL,OAYPta,EAZO,cAwBX0rC,aAAwB1rC,EAAQ,EAAKy4E,SACrC9gE,KAAaiS,SAAS5pB,EAAOypB,UAE7B,EAAKgvD,QAAU,EAAKA,QAAQp+D,OAAOra,EAAOypB,UAEpCxB,EAAQ,EAAKwwD,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IAEnD,EAAK7sF,SAAS,CACVmqF,aAAc,EAAKA,aAAapiE,GAChCkiE,iBAAkB,EAAKA,iBAAiBliE,GACxC+kE,WAAYhtF,EAAO0pB,cAlCZ,0CAleI,EAwgBnB2gE,aAAe,SAAApiE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GA5gBL,EA+gBnB0gD,WAAa,SAAAnkE,GACLA,GACAA,EAAM2C,kBAFQ,IAKV4lF,EAAqB,EAAKxtF,MAA1BwtF,iBAEF7/B,EADQ,EAAKurB,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IACzB,EAE1B,OAAO,EAAK3C,UAAUl9B,EAAW,WACX,IAAdA,GACA,EAAKihC,cA1hBE,EA+hBnBA,SA/hBmB,qBA+hBR,wCAAA37E,EAAA,0DACuB,EAAKvS,MAA3B4O,EADD,EACCA,OAAQsW,EADT,EACSA,UACR4nE,EAAqB,EAAKxtF,MAA1BwtF,iBAEFzyE,EAAS,EAAKszE,UAAU/+E,EAAQsW,GAElCnlB,EAAS,CACT,QAAS,WACTypB,SAAU,GACVC,YAAa,IAEbpP,EAXG,gCAYYza,IAAgBC,KAAK,CAChC,QAAS,qBACTmQ,QAASpB,EACT4L,MAAO,GACP4O,eAAgB,EAChBC,gBAAiByjE,EACjBxjE,QAASukE,IACTv4E,MAAOu4E,IAAoB,EAC3BxzE,OAAQA,IApBT,OAYHta,EAZG,cAwBP0rC,aAAwB1rC,EAAQ,EAAKy4E,SACrC9gE,KAAaiS,SAAS5pB,EAAOypB,UAE7B,EAAK0jE,iBAA8C,IAA3BntF,EAAOypB,SAASnV,OACxC,EAAKmkE,QAAUz4E,EAAOypB,SAASpP,OAAO,EAAKo+D,SAErCxwD,EAAQ,EAAKwwD,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IAEnD,EAAK7sF,SAAS,CACVmqF,aAAc,EAAKA,aAAapiE,GAChCkiE,iBAAkB,EAAKA,iBAAiBliE,GACxCklE,iBAAkB,EAAKA,iBACvBH,WAAYhtF,EAAO0pB,cApChB,0CA/hBQ,EAukBnB0gE,UAAY,SAACniE,EAAOU,GAChB,QAAIV,EAAQ,OACRA,GAAS,EAAKwwD,QAAQnkE,UAE1B,EAAKpU,SACD,CACI6sF,iBAAkB,EAAKtU,QAAQxwD,GAAOroB,GACtCyqF,aAAc,EAAKA,aAAapiE,GAChCkiE,iBAAkB,EAAKA,iBAAiBliE,IAE5CU,GAGJolE,YAA0B9lE,EAAO,EAAKwwD,UAC/B,KArlBQ,EAwlBnB8U,gBAAkB,SAACF,EAAYC,GAK3B,IAL0C,IAClCP,EAAqB,EAAKxtF,MAA1BwtF,iBAEF9kE,EAAQolE,EAAWnlE,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,IAC7CqB,EAAS,EACJx5E,EAAIqT,EAAQ,EAAGrT,GAAK,EAAGA,IAC5B,GAAI04E,IAAcA,EAAUz4E,IAAIw4E,EAAWz4E,GAAGhV,IAAK,CAC/CwuF,EAASf,EAAWz4E,GAAGhV,GACvB,MAGR,IAAKwuF,EACD,IAAK,IAAIx5E,EAAIqT,EAAQ,EAAGrT,EAAIy4E,EAAW/4E,OAAQM,IAC3C,GAAI04E,IAAcA,EAAUz4E,IAAIw4E,EAAWz4E,GAAGhV,IAAK,CAC/CwuF,EAASf,EAAWz4E,GAAGhV,GACvB,MAKZ,GAAKwuF,EAAL,CAEA,IAAMlhC,EAAY,EAAKurB,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOwuF,IAEvD,OAAO,EAAKhE,UAAUl9B,EAAW,WACX,IAAdA,EACA,EAAKihC,WACEjhC,IAAc,EAAKurB,QAAQnkE,OAAS,GAC3C,EAAK45E,mBApnBE,EAynBnBD,iBAAmB,WACf,EAAK/tF,SAAS,CAAEmuF,0BAA0B,KA1nB3B,EA6nBnBC,kBAAoB,WAChB,EAAKpuF,SAAS,CAAEmuF,0BAA0B,KA9nB3B,EAioBnB9gD,WAAa,WACT,EAAKrtC,SAAS,CAAEmuF,0BAA0B,IAD3B,IAGPx/E,EAAW,EAAK5O,MAAhB4O,OAHO,EAI4B,EAAKtP,MAAxCwtF,EAJO,EAIPA,iBAAkBwB,EAJX,EAIWA,aAEpBz3E,EAAUa,KAAa1O,IAAI4F,EAAQk+E,GACzC,GAAKj2E,EAAL,CAPe,IASP4O,EAA+D5O,EAA/D4O,6BAA8BC,EAAiC7O,EAAjC6O,8BACjBD,GAAgCC,IAGrD9lB,IAAgBC,KAAK,CACjB,QAAS,iBACTmQ,QAASpB,EACTuK,YAAa,CAAC2zE,GACdlqB,OAAQl9C,GAAgC4oE,MAlpB7B,EAspBnBC,yBAA2B,SAAAhqF,GACvB,EAAKtE,SAAS,CAAEquF,aAAc/pF,EAAMC,OAAO+b,WAvpB5B,EA0pBnBiuE,mBAAqB,WAAO,IAGpBC,EAAiB,uBACrB,OAHuB,EAAKnvF,MAApBovD,YAIJ,IAAK,uBACD+/B,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzB,EAAKxuF,SAAS,CACVyuD,WAAY+/B,KA9qBD,EAkrBnBhtB,eAAiB,SAAC7yD,EAAQsW,GACtB,IAAMrO,EAAUa,KAAa1O,IAAI4F,EAAQsW,GACzC,IAAKrO,EAAS,OAAO,EAFe,IAI5Bc,EAA8Bd,EAA9Bc,iBAAkBC,EAAYf,EAAZe,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOD,IA9rBA,EAmsBnB+2E,mBAAqB,SAAAnqF,GAAU,IACnBoqF,EADkB,gBAClBA,gBACR,EAAKA,gBAAkB,KAEnBpqF,EAAMu7B,gBAAkB6uD,GAE5B,EAAK1mF,eAzsBU,EA4sBnB2mF,uBAAyB,SAAArqF,GACrB,EAAKoqF,gBAAkBpqF,EAAMu7B,eA1sB7B,EAAK+L,gBAAkB,IAAIC,KAAgB,EAAK5vB,WAChD,EAAKs8D,QAAU,GAJA,MAMe,EAAKx4E,MAA3B4O,EANO,EAMPA,OAAQsW,EAND,EAMCA,UAND,OAQf,EAAK5lB,MAAQ,CACTovD,WAAY,uBACZ38C,WAAYnD,EACZ2oB,cAAerS,EACf4nE,iBAAkB5nE,EAClBklE,cAAc,EACdF,kBAAkB,EAClBkE,0BAA0B,EAC1BE,cAAc,GAhBH,E,mFAoBG39E,EAAWC,GAAY,IAAD,EACVrQ,KAAKP,MAA3B4O,EADgC,EAChCA,OAAQsW,EADwB,EACxBA,UADwB,EAUpC3kB,KAAKjB,MAPLovD,EAHoC,EAGpCA,WACAo+B,EAJoC,EAIpCA,iBACAsB,EALoC,EAKpCA,yBACAlB,EANoC,EAMpCA,iBACA9C,EAPoC,EAOpCA,aACAF,EARoC,EAQpCA,iBACA6C,EAToC,EASpCA,WAGJ,OAAIn8E,EAAU89C,aAAeA,IAIzB/9C,EAAU/B,SAAWA,IAIrB+B,EAAUuU,YAAcA,IAIxBtU,EAAUk8E,mBAAqBA,IAI/Bl8E,EAAUi+E,kBAAoB3E,IAI9Bt5E,EAAUw5E,eAAiBA,IAI3Bx5E,EAAUs8E,mBAAqBA,IAI/Bt8E,EAAUm8E,aAAeA,GAIzBn8E,EAAUw9E,2BAA6BA,W,0CAQ3C7tF,KAAKqtF,cAEL5hD,KAAgBC,IAAI1rC,KAAKsrC,iBACzBn0B,KAAa7I,GAAG,uBAAwBtO,KAAKkoB,wBAC7C/Q,KAAa7I,GAAG,mBAAoBtO,KAAK+nB,oBACzC5Q,KAAa7I,GAAG,uBAAwBtO,KAAKmnB,0B,6CAI7CskB,KAAgBzO,OAAOh9B,KAAKsrC,iBAC5Bn0B,KAAa5I,IAAI,uBAAwBvO,KAAKkoB,wBAC9C/Q,KAAa5I,IAAI,mBAAoBvO,KAAK+nB,oBAC1C5Q,KAAa5I,IAAI,uBAAwBvO,KAAKmnB,0B,+BA4nBxC,IAAD,EACiBnnB,KAAKP,MAAnB4O,EADH,EACGA,OAAQyB,EADX,EACWA,EADX,EAWD9P,KAAKjB,MARLovD,EAHC,EAGDA,WACAo+B,EAJC,EAIDA,iBACAsB,EALC,EAKDA,yBACAE,EANC,EAMDA,aACApB,EAPC,EAODA,iBACA9C,EARC,EAQDA,aACAF,EATC,EASDA,iBACA6C,EAVC,EAUDA,WAGA/kE,GAAS,EACT+kE,GAAcG,IACdllE,EAAQznB,KAAKi4E,QAAQvwD,UAAU,SAAApmB,GAAC,OAAIA,EAAElC,KAAOmtF,KAEjD,IAAMjC,EAAW5oF,KAAKkL,IAAI5M,KAAKi4E,QAAQnkE,OAAQ04E,GAGvCrnE,EADQhO,KAAa1O,IAAI4F,EAAQk+E,GACjCpnE,6BAEF87C,EAAeuO,aAAoBnhE,EAAQk+E,GAC3CrrB,EAAiBlhE,KAAKkhE,eAAe7yD,EAAQk+E,GAE/CgC,EAA4B,GAE5BA,EADArC,aAAe79E,EAAQk+E,GACKz8E,EAAE,yBACvBs8E,aAAmB/9E,EAAQk+E,GACNz8E,EAAE,uBAEFA,EAAE,yBAElC,IAAM0+E,EAAqBX,EACvB,kBAAC,IAAD,CACI3yE,QAASC,KACTC,mBAAoB,EACpBH,KAAM4yE,EACNxyE,QAASrb,KAAK8tF,kBACdxyE,kBAAgB,qBAChB,kBAAC,IAAD,CAAalc,GAAG,qBAAqB0Q,EAAE,YACvC,kBAAC,KAAD,KACI,kBAACq9B,GAAA,EAAD,KAAoBohD,GACnBppE,GACG,kBAACq2B,GAAA,EAAD,CACIruB,MAAOrd,EAAE,gBACT2rC,QACI,kBAACkC,GAAA,EAAD,CAAU1mC,MAAM,UAAUlQ,MAAM,YAAYoG,SAAUnN,KAAKguF,2BAE/DhuE,QAAS+tE,KAIrB,kBAACjyE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ1P,QAASrM,KAAK8tF,kBAAmB72E,MAAM,WAC1CnH,EAAE,WAEP,kBAACiM,EAAA,EAAD,CAAQ1P,QAASrM,KAAK+sC,WAAY91B,MAAM,WACnCnH,EAAE,SAIf,KA9DC,EAgEmCg8E,YAAaz9E,EAAQk+E,EAAkBkC,KAhE1E,mBAgEiBlmF,GAhEjB,gBAkEClD,GAlED,KAkEUkD,EAAOA,EAAKnJ,GAAK,GAC5Bmd,EAAQzM,EAAE,eAOd,OANIo8E,aAAe79E,EAAQk+E,GACvBhwE,EAAQzM,EAAE,eACHs8E,aAAmB/9E,EAAQk+E,KAClChwE,EAAQzM,EAAE,cAIV,yBAAK7P,UAAWgM,IAAW,eAAgBkiD,IACvC,yBAAKluD,UAAU,uBACX,kBAAC,GAAD,CAAWoO,OAAQA,EAAQsW,UAAW4nE,IACtC,kBAAC,GAAD,CACIhwE,MAAOA,EACPU,SAAUqtE,GAAY7iE,GAAS,EAArB,UAA4B6iE,EAAW7iE,EAAvC,eAAmD6iE,GAAa,OAE9E,kBAAC,GAAD,CAA2B/tE,MAAOzM,EAAE,QAASzK,OAAQA,EAAQgH,QAASrM,KAAKiqF,aAC3E,kBAAC,GAAD,CACI1tE,MAAOzM,EAAE,WACTvC,UAAW2zD,EACX70D,QAASrM,KAAK4kB,eACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBrI,MAAOzM,EAAE,UAAWvC,UAAW0zD,EAAc50D,QAASrM,KAAK8kB,cAChF,kBAACqiB,GAAD,OAEJ,kBAAC,GAAD,CAAyB5qB,MAAOzM,EAAE,SAAUzD,QAASrM,KAAK0H,aACtD,kBAAC4E,EAAA,EAAD,QAGR,yBAAKrM,UAAU,uBAAuBiM,YAAalM,KAAKquF,uBAAwBhiF,QAASrM,KAAKmuF,oBAC1F,yBAAKluF,UAAU,4BACX,kBAAC,GAAD,CAAmBsN,UAAWo8E,EAAkBR,MAAI,EAAC98E,QAASrM,KAAK0pF,gBAC/D,kBAAC,GAAD,QAIR,yBAAKzpF,UAAU,+BACX,kBAAC,GAAD,CACIoO,OAAQA,EACRsW,UAAW4nE,EACX/9E,KAAMigF,IACNpiF,QAASrM,KAAK0pF,kBAItB,yBAAKzpF,UAAU,6BACX,kBAAC,GAAD,CAAmBsN,UAAWs8E,EAAcV,MAAI,EAAC98E,QAASrM,KAAKmoE,YAC3D,kBAAC,GAAD,CAAoBzkE,MAAO,CAAEqyB,UAAW,uBAInDy4D,O,GAv0BSjuF,IAAMC,YAk1BjBiR,iBAAkB66E,IChyBlBoC,I,mBA7FX,WAAYjvF,GAAQ,IAAD,uBACf,4CAAMA,KA0CVuP,uBAAyB,SAAAnB,GAAW,IAAD,EACL,EAAKpO,MAAvB4O,EADuB,EACvBA,OAAQe,EADe,EACfA,MAEhB,GAAIf,IAAWR,EAAOQ,QAAUe,EAAMqB,IAAIrR,KAAOyO,EAAOxI,OAAQ,CAC5D,IAAMkD,EAAOC,IAAUC,IAAIoF,EAAOxI,SAAW,EAAKtG,MAAMwJ,KACxD,EAAK7I,SAAS,CACV6I,KAAMA,MAjDC,EAsDnBomF,uBAAyB,SAAA9gF,GAAW,IAAD,EACL,EAAKpO,MAAvB4O,EADuB,EACvBA,OAAQe,EADe,EACfA,MAGhB,GAFehB,YAAcC,KAEdR,EAAOC,QAAUsB,EAAMqB,IAAIrR,KAAOyO,EAAOxI,OAAQ,CAC5D,IAAMkD,EAAOC,IAAUC,IAAIoF,EAAOxI,SAAW,EAAKtG,MAAMwJ,KACxD,EAAK7I,SAAS,CACV6I,KAAMA,MA7DC,EAkEnBogF,mBAAqB,SAAA3kF,GACbA,GAAOA,EAAM2C,kBAEjB,EAAKlH,MAAM4M,QAAQrI,IArEJ,MAGW,EAAKvE,MAAvB4O,EAHO,EAGPA,OAAQe,EAHD,EAGCA,MAEL7G,EAAS6G,EAAdqB,IALS,OAMflI,EAAOC,IAAUC,IAAIF,EAAKnJ,KAAOmJ,EAEjC,EAAKxJ,MAAQ,CACTyS,WAAYnD,EACZugF,UAAWx/E,EACX1C,MAAOmiF,KACPngF,OAAQmgF,KACRtmF,KAAMA,GAbK,E,iFAkCfC,IAAU8F,GAAG,uBAAwBtO,KAAKgP,wBAC1CxG,IAAU8F,GAAG,uBAAwBtO,KAAK2uF,0B,6CAI1CnmF,IAAU+F,IAAI,uBAAwBvO,KAAKgP,wBAC3CxG,IAAU+F,IAAI,uBAAwBvO,KAAK2uF,0B,+BAgCrC,IAAD,EAC2B3uF,KAAKjB,MAAdwJ,GADlB,EACGmE,MADH,EACUgC,OADV,EACkBnG,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAM01B,EAAOz1B,IAAU01B,QAAQ31B,EAAKnJ,KAAOmJ,EAAK01B,KAC1C5uB,EAAM7G,IAAUsmF,WAAW7wD,GAEjC,OACI,yBAAKh+B,UAAU,wBACX,yBAAKA,UAAU,6BAA6BoP,IAAKA,EAAKiC,IAAI,GAAGjF,QAASrM,KAAK2oF,qBAC3E,kBAAC3uC,GAAA,EAAD,CAAczxC,KAAMA,Q,gDAjEA9I,EAAOV,GAAQ,IACnCsP,EAAkB5O,EAAlB4O,OAAQe,EAAU3P,EAAV2P,MAEhB,OAAIf,IAAWtP,EAAMyS,YAAcpC,IAAUrQ,EAAM6vF,UACxC,CACHp9E,WAAYnD,EACZugF,UAAWx/E,EACX1C,MAAOmiF,KACPngF,OAAQmgF,KACRtmF,KAAM6G,EAAMqB,KAIb,S,GA/ByBlQ,IAAMC,YCsC/BuuF,G,YAhCX,WAAYtvF,GAAQ,qEACVA,I,sEAGA,IAAD,EACoBO,KAAKP,MAAtB4O,EADH,EACGA,OAAQwgB,EADX,EACWA,KAEhB,OACI,yBAAK5uB,UAAU,cACX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CAAUoO,OAAQA,EAAQkC,mBAAmB,IAC7C,yBAAKtQ,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAACyvB,GAAA,EAAD,CAAerhB,OAAQA,KAE1BwgB,GACG,yBAAK5uB,UAAU,uBACX,8BAAO4uB,W,GAlBRtuB,IAAMC,WCqB/BwuF,G,YACF,WAAYvvF,GAAQ,IAAD,uBACf,4CAAMA,KA6EVgnB,cAAgB,SAAAziB,GACZ,KAAImX,KAAautB,OAAO50B,OAAS,KAI7B9P,EAAM2kC,YAIV,OAAQ3kC,EAAM+S,KACV,IAAK,SAID,OAHA,EAAKrP,cACL1D,EAAM8B,sBACN9B,EAAM2C,kBAGV,IAAK,YAID,OAHA,EAAK+iF,iBACL1lF,EAAM2C,uBACN3C,EAAM8B,iBAGV,IAAK,aAID,OAHA,EAAKqiE,aACLnkE,EAAM2C,uBACN3C,EAAM8B,mBAvGC,EA6GnBunF,YA7GmB,sCA6GL,WAAMj+E,GAAN,iBAAA4C,EAAA,wDACF3D,EAAW,EAAK5O,MAAhB4O,OAEHkD,aAAclD,GAHT,iEAKWhP,IAAgBC,KAAK,CACtC,QAAS,uBACTyO,QAASK,YAAcC,GACvB0a,OAAQ,EACRhU,MAAO,MATD,OAKJvV,EALI,OAYV,EAAKy4E,QAAUz4E,EAAOyvF,OACtB,EAAKtC,iBAA4C,IAAzBntF,EAAOyvF,OAAOn7E,OAExB,EAEd,EAAKpU,SAAS,CACV0lC,aAHU,EAIVykD,aAAc,EAAKA,aAJT,GAKVF,iBAAkB,EAAKA,iBALb,GAMV6C,WAAYhtF,EAAO0pB,cAGvBgmE,YAAiC7gF,EATnB,EASkC,EAAK4pE,SAxB3C,0CA7GK,wDAwInBvwE,YAAc,WACVwZ,aAA6B,OAzId,EA4InB+oE,WAAa,WAAO,IACR57E,EAAW,EAAK5O,MAAhB4O,OADO,EAEsB,EAAKtP,MAAlCqmC,EAFO,EAEPA,aAAconD,EAFP,EAEOA,WAEhBt9E,EAAOC,IAAU1G,IAAI4F,GAC3B,GAAKa,EAAL,CAEA,IAAIuY,GAAS,EACT+kE,IACA/kE,EAAQ2d,GAGZ,IAAMh2B,EACFqY,EAAQ,GAAKA,EAAQ,EAAKwwD,QAAQnkE,OAASq7E,YAAgB,EAAKlX,QAAQxwD,IAAU8J,YAAiBljB,GACvG,GAAKe,GACAA,EAAMqB,IAAX,CAEA,IAAMlI,EAAOC,IAAUC,IAAI2G,EAAMqB,IAAIrR,KAAOgQ,EAAMqB,IAC7ClI,GAEL6mF,YAAe7mF,EAAMA,EAAKnJ,GAAK,OAAQ8P,EAAM,kBAAM1G,IAAU6mF,oBAAoBhhF,EAAQ9F,EAAKnJ,SAhK/E,EAmKnBwlB,cAAgB,WAAO,IACXvW,EAAW,EAAK5O,MAAhB4O,OADU,EAEmB,EAAKtP,MAAlCqmC,EAFU,EAEVA,aAEJ3d,GAAS,EAJK,EAEI+kE,aAIlB/kE,EAAQ2d,GAGZ,IAAIkqD,EAAY,KAGhB,GADkB,EAAKrX,SAAWxwD,GAAS,GAAKA,EAAQ,EAAKwwD,QAAQnkE,OACtD,CACX,IAAM1E,EAAQ+/E,YAAgB,EAAKlX,QAAQxwD,IAC3C,IAAKrY,EAAO,OAFD,IAIA7G,EAAS6G,EAAdqB,IACN,IAAKlI,EAAM,OAEX+mF,EAAY,CACR,QAAS,cACTlwF,GAAImJ,EAAKnJ,QAEV,CACH,IAAMmwF,EAAYh+D,YAAiBljB,GACnC,IAAKkhF,EAAW,OAFb,IAIUhnF,EAASgnF,EAAd9+E,IACR,IAAKlI,EAAM,OAEX,IAAM01B,EAAOz1B,IAAU01B,QAAQ31B,EAAKnJ,IACpC,IAAK6+B,EAAM,OAEXqxD,EAAY,CACR,QAAS,gBACTzhE,KAAMoQ,EACN8R,KAAM,IAId,GAAKu/C,EAAL,CAEA,IAAM73E,EAAsB,CACxB,QAAS,oBACTrI,MAAOkgF,EACP92E,UAAW,KACXC,uBAAwB,GACxB/L,MAAOmiF,KACPngF,OAAQmgF,KACR92E,QAAS,CACL,QAAS,gBACThG,KAAM,GACNiG,SAAU,MAEdU,IAAK,GAGTxC,aAAQuB,KA5NO,EA+NnBqN,aAAe,WAAO,IAAD,EACa,EAAKrlB,MAA3B4O,EADS,EACTA,OADS,KACDsW,UACqB,EAAK5lB,OAAlCqmC,EAFS,EAETA,aAEJ3d,GAAS,EAJI,EAEK+kE,aAIlB/kE,EAAQ2d,GAGZ,IAAMh2B,EACFqY,EAAQ,GAAKA,EAAQ,EAAKwwD,QAAQnkE,OAASq7E,YAAgB,EAAKlX,QAAQxwD,IAAU8J,YAAiBljB,GAEvG,GAAIe,EAAO,CACP,IAAI7G,EAAO6G,EAAMqB,IAEjB,GADAlI,EAAOC,IAAUC,IAAIF,EAAKnJ,KAAOmJ,EACvB,CACN,IAAMmH,EAAQlH,IAAUgnF,oBAExBhnF,IAAUinF,gBAAgB//E,EAAOnH,MAjP1B,EAsPnBohF,iBAAmB,SAAAliE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAKwwD,QAAQnkE,QA1PjB,EA6PnB41E,eAAiB,SAAA1lF,GACTA,GACAA,EAAM2C,kBAFY,IAMhB+lD,EADmB,EAAK3tD,MAAtBqmC,aACyB,EAEjC,OAAO,EAAKwkD,UAAUl9B,EAAW,WACzBA,IAAc,EAAKurB,QAAQnkE,OAAS,GACpC,EAAK45E,kBAvQE,EA4QnBA,aA5QmB,qBA4QJ,sBAAA17E,EAAA,wHA5QI,EAgRnB63E,aAAe,SAAApiE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GApRL,EAuRnB0gD,WAAa,SAAAnkE,GACLA,GACAA,EAAM2C,kBAFQ,IAMZ+lD,EADmB,EAAK3tD,MAAtBqmC,aACyB,EAEjC,OAAO,EAAKwkD,UAAUl9B,EAAW,WACX,IAAdA,GACA,EAAKihC,cAjSE,EAsSnBA,SAtSmB,qBAsSR,sBAAA37E,EAAA,wHAtSQ,EA0SnB43E,UAAY,SAACniE,EAAOU,GAChB,GAAIV,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS,EAAKwwD,QAAQnkE,OAAQ,OAAO,EAEzC,EAAKpU,SACD,CACI0lC,aAAc3d,EACdoiE,aAAc,EAAKA,aAAapiE,GAChCkiE,iBAAkB,EAAKA,iBAAiBliE,IAE5CU,GAVyB,IAarB9Z,EAAW,EAAK5O,MAAhB4O,OAGR,OADA6gF,YAAiC7gF,EAAQoZ,EAAO,EAAKwwD,UAC9C,GAvTP,EAAKA,QAAU,GACf,EAAK3sC,gBAAkB,IAAIC,KAAgB,EAAK9kB,eAJjC,MAMY,EAAKhnB,MAAxB4O,EANO,EAMPA,OAAQhJ,EAND,EAMCA,OAND,OAQf,EAAKtG,MAAQ,CACTyS,WAAYnD,EACZqhF,WAAYrqF,EACZ+/B,aAAc,EACdykD,cAAc,EACdF,kBAAkB,EAClBkE,0BAA0B,GAdf,E,mFAkBGz9E,EAAWC,GAAY,IAAD,EACVrQ,KAAKP,MAA3B4O,EADgC,EAChCA,OAAQsW,EADwB,EACxBA,UADwB,EASpC3kB,KAAKjB,MANL4wF,EAHoC,EAGpCA,cACAhG,EAJoC,EAIpCA,iBACAE,EALoC,EAKpCA,aACA8C,EANoC,EAMpCA,iBACAH,EAPoC,EAOpCA,WACAqB,EARoC,EAQpCA,yBAGJ,OAAIz9E,EAAU/B,SAAWA,IAIrB+B,EAAUuU,YAAcA,IAIxBtU,EAAUs/E,gBAAkBA,IAI5Bt/E,EAAUi+E,kBAAoB3E,IAI9Bt5E,EAAUw5E,eAAiBA,IAI3Bx5E,EAAUs8E,mBAAqBA,IAI/Bt8E,EAAUm8E,aAAeA,GAIzBn8E,EAAUw9E,2BAA6BA,U,0CAO1B,IACTx/E,EAAWrO,KAAKP,MAAhB4O,OACFe,EAAQmiB,YAAiBljB,GAC/BmjB,YAA8BnjB,EAAQ,CAACe,IAEvCpP,KAAKqtF,YAAYj+E,GAEjBq8B,KAAgBC,IAAI1rC,KAAKsrC,mB,6CAIzBG,KAAgBzO,OAAOh9B,KAAKsrC,mB,+BAkPtB,IAAD,EACiBtrC,KAAKP,MAAnB4O,EADH,EACGA,OAAQyB,EADX,EACWA,EADX,EAUD9P,KAAKjB,MAPLqmC,EAHC,EAGDA,aACAykD,EAJC,EAIDA,aACAF,EALC,EAKDA,iBAEA6C,GAPC,EAMDG,iBANC,EAODH,YAKA/kE,GAZC,EAQDomE,yBARC,EASDE,cAGS,GACTvB,IACA/kE,EAAQ2d,GAGZ,IACMwqD,EAAYnoE,GAAS,GAAKA,EAAQznB,KAAKi4E,QAAQnkE,OAC/C1E,EAAQwgF,GAAuB,IAAVnoE,EAAc0nE,YAAgBnvF,KAAKi4E,QAAQxwD,IAAU8J,YAAiBljB,GAC3FwhF,EAAmBD,EAAY5vF,KAAKi4E,QAAQxwD,GAAS,KAC9Clf,EAAS6G,EAAdqB,IAER,OACI,yBAAKxQ,UAAWgM,IAAW,eAAgB,yBACvC,yBAAKhM,UAAU,uBACX,kBAAC,GAAD,CAAkBoO,OAAQA,EAAQwgB,KAAMihE,YAAwBD,KAChE,kBAAC,GAAD,CACItzE,MAAOzM,EAAE,eACTmN,SAAUuvE,GAAc/kE,GAAS,EAAvB,UAA8BA,EAAQ,EAAtC,eAA8C+kE,GAAe,OAE3E,kBAAC,GAAD,CAA2BjwE,MAAOzM,EAAE,QAASzK,OAAQkD,EAAKnJ,GAAIiN,QAASrM,KAAKiqF,aAC5E,kBAAC,GAAD,CAA2B1tE,MAAOzM,EAAE,WAAYzK,OAAQkD,EAAKnJ,GAAIiN,QAASrM,KAAK4kB,eAC3E,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBrI,MAAOzM,EAAE,UAAWvC,UAAQ,EAAClB,QAASrM,KAAK8kB,cAChE,kBAACqiB,GAAD,OAEJ,kBAAC,GAAD,CAAyB5qB,MAAOzM,EAAE,SAAUzD,QAASrM,KAAK0H,aACtD,kBAAC4E,EAAA,EAAD,QAGR,yBAAKrM,UAAU,uBAAuBoM,QAASrM,KAAK0pF,gBAChD,yBAAKzpF,UAAU,4BACX,kBAAC,GAAD,CAAmBsN,UAAWs8E,EAAcV,MAAI,EAAC98E,QAASrM,KAAKmoE,YAC3D,kBAAC,GAAD,QAIR,yBAAKloE,UAAU,+BACX,kBAAC,GAAD,CAA2BoO,OAAQA,EAAQe,MAAOA,EAAO/C,QAASrM,KAAK0pF,kBAG3E,yBAAKzpF,UAAU,6BACX,kBAAC,GAAD,CAAmBsN,UAAWo8E,EAAkBR,MAAI,EAAC98E,QAASrM,KAAK0pF,gBAC/D,kBAAC,GAAD,CAAoBhmF,MAAO,CAAEqyB,UAAW,uBAtCjC,U,GA/UFx1B,IAAMC,WAmYxBiR,iBAAkBu9E,ICxY3Be,I,mBACF,WAAYtwF,GAAQ,IAAD,uBACf,4CAAMA,KAiDVuwF,+BAAiC,SAAAniF,GAAW,IAChClG,EAAckG,EAAdlG,UAER,EAAKjI,SAAS,CACViI,eAtDW,EA0DnBqoB,wBAA0B,SAAAniB,GAAW,IACzBoiB,EAAiBpiB,EAAjBoiB,aAER,EAAKvwB,SAAS,CAAEuwB,kBA7DD,EAgEnBggE,iCAAmC,SAAApiF,GAAW,IAClCwJ,EAAYxJ,EAAZwJ,QAER,EAAK3X,SAAS,CACVwwF,mBAAoB74E,KApET,EAwEnB84E,uBAAyB,SAAAtiF,GAAW,IACxBQ,EAA6BR,EAA7BQ,OAAQsW,EAAqB9W,EAArB8W,UAAWxE,EAAUtS,EAAVsS,MAE3B,EAAKkzD,iBAAiBhlE,EAAQsW,EAAWxE,IA3E1B,EA8EnBiwE,uBAAyB,SAAAviF,GAAW,IACxBC,EAAkBD,EAAlBC,OAAQqS,EAAUtS,EAAVsS,MAEhB,EAAKizD,iBAAiBtlE,EAAQqS,IAjFf,EAoFnBw9D,oCAAsC,SAAA9vE,GAAW,IACrCwiF,EAAyBt9D,KAAzBs9D,qBAER,EAAK3wF,SAAS,CAAE2wF,0BAvFD,EA0FnBloC,iCAAmC,SAAAt6C,GAAW,IAClCu6C,EAAuBr1B,KAAvBq1B,mBAER,EAAK1oD,SAAS,CAAE0oD,wBA7FD,EAgGnBkoC,wCAA0C,SAAAziF,GAAW,IACzC0iF,EAA8Bx9D,KAA9Bw9D,0BAER,EAAK7wF,SAAS,CAAE6wF,+BAnGD,EAsGnBC,sBAAwB,SAAA3iF,GAAW,IACvByQ,EAASzQ,EAATyQ,KAER,EAAK5e,SAAS,CAAE4sE,YAAahuD,KAzGd,EA4GnB+0D,iBAAmB,SAAChlE,GAA6C,IAArCsW,EAAoC,uDAAxB,KAAMxE,EAAkB,wDACtD8S,EAAgBF,KAASsG,YACzBo3D,EAAsB19D,KAASC,aAC/Bu5D,EAAmBx5D,KAAS2U,eAE9BvnB,EACIswE,IAAwBpiF,GACxBhP,IAAgByF,aAAa,CACzB,QAAS,2BACTuJ,WAOR4kB,IAAkB5kB,GAAUsW,GAAa4nE,IAAqB5nE,GAC9D,EAAK+rE,iBAAiB94E,QAAQwiE,kBAC1Bz1D,GACA02D,aAAiBhtE,EAAQsW,IAEtBsO,IAAkB5kB,GAAWsW,EAGpCtlB,IAAgBkmC,UAAUl3B,EAAQsW,GAFlC,EAAK+rE,iBAAiB94E,QAAQ8iE,iBAlInB,EAwInBtH,iBAxImB,sCAwIA,WAAOtlE,EAAQqS,GAAf,eAAAnO,EAAA,wDACVlE,EADU,iEAGIzO,IAAgBC,KAAK,CACpC,QAAS,oBACTyO,QAASD,EACTqH,OAAO,IANI,OAGTjG,EAHS,OASf,EAAKmkE,iBAAiBnkE,EAAK9P,GAAI,KAAM+gB,GATtB,yCAxIA,wDAGf,EAAKuwE,iBAAmBnwF,IAAMsa,YAHf,IAKPw1E,EAAsFt9D,KAAtFs9D,qBAAsBjoC,EAAgEr1B,KAAhEq1B,mBAAoBmoC,EAA4Cx9D,KAA5Cw9D,0BAA2BtgE,EAAiB8C,KAAjB9C,aAL9D,OAOf,EAAKlxB,MAAQ,CACTsxF,uBACAjoC,qBACAmoC,4BACAtgE,eACAq8C,YAAa,KACb4jB,mBAAoB,KACpBvoF,UAAW,MAdA,E,iFAyBfsG,IAAUK,GAAG,uBAAwBtO,KAAKowF,wBAC1CjhF,IAAUb,GAAG,uBAAwBtO,KAAKmwF,wBAE1Cp9D,KAASzkB,GAAG,oCAAqCtO,KAAK29E,qCACtD5qD,KAASzkB,GAAG,iCAAkCtO,KAAKmoD,kCACnDp1B,KAASzkB,GAAG,wBAAyBtO,KAAKgwB,yBAC1C+C,KAASzkB,GAAG,wCAAyCtO,KAAKswF,yCAC1Dv9D,KAASzkB,GAAG,sBAAuBtO,KAAKwwF,uBACxC9F,KAAiBp8E,GAAG,iCAAkCtO,KAAKiwF,kCAC3DrnF,IAAY0F,GAAG,+BAAgCtO,KAAKgwF,kC,6CAIpD/hF,IAAUM,IAAI,uBAAwBvO,KAAKowF,wBAC3CjhF,IAAUZ,IAAI,uBAAwBvO,KAAKmwF,wBAE3Cp9D,KAASxkB,IAAI,oCAAqCvO,KAAK29E,qCACvD5qD,KAASxkB,IAAI,iCAAkCvO,KAAKmoD,kCACpDp1B,KAASxkB,IAAI,wBAAyBvO,KAAKgwB,yBAC3C+C,KAASxkB,IAAI,wCAAyCvO,KAAKswF,yCAC3Dv9D,KAASxkB,IAAI,sBAAuBvO,KAAKwwF,uBACzC9F,KAAiBn8E,IAAI,iCAAkCvO,KAAKiwF,kCAC5DrnF,IAAY2F,IAAI,+BAAgCvO,KAAKgwF,kC,+BAqG/C,IAAD,EASDhwF,KAAKjB,MAPLmxF,EAFC,EAEDA,mBACAG,EAHC,EAGDA,qBACAjoC,EAJC,EAIDA,mBACAmoC,EALC,EAKDA,0BACAjkB,EANC,EAMDA,YACA3kE,EAPC,EAODA,UACAsoB,EARC,EAQDA,aAGJ,OACI,oCACI,yBACIhwB,UAAWgM,IAAW,OAAQ,CAC1B,aAAcgkB,EACd,oBAAqBogE,KAEzB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAe70E,IAAKxb,KAAK0wF,mBACxBL,GAAwB,kBAAC,GAAD,OAE5BH,GAAsB,kBAAC,GAAkBA,GACzC9nC,GAAsB,kBAAC,GAAgBA,GACvCmoC,GAA6B,kBAAC,GAAuBA,GACrDjkB,GAAe,kBAAC,GAAkBA,GAClC3kE,GAAa,kBAAC,EAAcA,Q,GA/KtBpH,IAAMC,YAuLvByb,GAAUC,YACZy0E,IACAluF,GAGWwZ,aAAQ8zE","file":"static/js/4.29b16417.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport './PipPlayer.css';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport Slider from '@material-ui/core/Slider';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\nimport Player from './Player';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport Progress from './Progress';\nimport TdLibController from '../../Controllers/TdLibController';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport FileStore from '../../Stores/FileStore';\n\nclass PipPlayer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}>\n                <div className='pip-player-wrapper'>\n                    <div id='pip-player-container'/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={e => e.stopPropagation()}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[p] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_2.json')\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: true,\n                                    loop: false,\n                                    animationData: data,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                    }\n                                }}\n                                onClick={this.handleAnimationClick}\n                            />\n                        </React.Suspense>\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.on('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.off('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        // console.log('[f] filters', filters);\n\n        const filtersMap = new Map();\n        for (let i = 0; i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        // console.log('[f] recommended', recommendedFilters);\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        // console.log('[f] filters.render');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            <React.Suspense fallback={null}>\n                                <Lottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        autoplay: true,\n                                        loop: false,\n                                        animationData: data,\n                                        renderer: 'svg',\n                                        rendererSettings: {\n                                            preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                            clearCanvas: false,\n                                            progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                            hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        }\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n\n        setTimeout(() => {\n            const { innerText } = this.newMessageRef.current;\n            console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc, supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    if (supportsStreaming()) return;\n\n                    const { audio: file } = audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const { audio: file } = audio;\n                    if (file) {\n                        let src = getSrc(file);\n                        if (!src && supportsStreaming()) {\n                            src = `/streaming/file_id=${file.id}`;\n                            setFileOptions(src, { fileId: file.id, size: file.size, mimeType: audio.mime_type });\n                        }\n\n                        return src;\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            chatId: message.chat_id,\n            messageId: message.id,\n            buffered: player.buffered,\n            duration: player.duration,\n            videoWidth: player.videoWidth,\n            videoHeight: player.videoHeight\n        });\n    };\n\n    handleProgress = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            chatId: message.chat_id,\n            messageId: message.id,\n            buffered: player.buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            buffered: player.buffered,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\nimport { getArrayBuffer } from '../../Utils/File';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    handleTest = async () => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { video } = content;\n        if (!video) return;\n\n        const { video: file } = video;\n        if (!file) return;\n\n        const { size } = file;\n\n        const chunk = 512 * 1024;\n        const count = size / chunk;\n\n        for (let i = 0; i < count; i++) {\n            console.log('[d] filePart', file.id, chunk * i);\n            await TdLibController.send({\n                '@type': 'downloadFile',\n                file_id: file.id,\n                priority: 1,\n                offset: chunk * i,\n                limit: chunk,\n                synchronous: true\n            });\n\n            const filePart = await TdLibController.send({\n                '@type': 'readFilePart',\n                file_id: file.id,\n                offset: chunk * i,\n                count: chunk\n            });\n\n            const buffer = await getArrayBuffer(filePart.data);\n        }\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleTest}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary='Test' />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\nimport { getEntities, getFormattedText, getText, getTwitterInstagramEntities } from '../../../Utils/Message';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    const { name, text } = props;\n\n    return (\n        <a id={name}>\n            {text && <RichText text={text} />}\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying, supportsStreaming } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        // setTimeout(() => KeyboardManager.add(this.keyboardHandler), 0);\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', url, url === prevProps.url);\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            if (thumbnail){\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            }\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}