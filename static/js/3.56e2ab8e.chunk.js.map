{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Actions/Message.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Stores/FilterStore.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","chatId","selected","onSelect","t","shortTitle","getChatShortTitle","ChatTile","withTranslation","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","sprintf","args","postProcess","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","store","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","size","height","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","forceUpdate","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","ChatStore","showSavedMessages","isVerified","isChatVerified","title","defaultProps","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","url","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","nextContext","openMedia","minithumbnail","miniSrc","data","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Boolean","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","sender","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","params","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","sender_user_id","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","User","userId","voice_note","ChatDetails","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","unpinMessage","unpinAllMessages","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","dialog","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","showOnline","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","reset","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","load","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","log","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","is_blocked","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","canClearHistory","hasOnePinnedMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","unpinned","prevMessage","prevContent","PlaylistEdit","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleSearchChat","localize","str","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","prevMessageIds","albumHistoryEquals","AlbumItem","getAlbumItem","Photo","Video","inlineMeta","getWebPage","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","getEmojiMatches","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","scrollBehavior","isServiceMessage","newState","scrollDownVisible","history","scrollBehaviorNone","insert","filterMessages","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","hasLastMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","trace","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","LStore","formatString","formatPluralString","LeaveChatDialog","getDeleteDialogText","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","handleDeleteMessagesContinue","clientUpdateType","persist","disableNotification","onlyForSelf","disable_notification","only_for_self","pinMessageAction","unpinMessageAction","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.56e2ab8e.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false, onlyForSelf = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification,\n        only_for_self: onlyForSelf\n    });\n}\n\nexport function unpinMessage(chatId, messageId) {\n    return TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n    });\n}\n\nexport function unpinAllMessages(chatId) {\n    return TdLibController.send({\n        '@type': 'unpinAllChatMessages',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender.user_id) {\n                users.set(sender.user_id, sender.user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        await TdLibController.send({\n           '@type': 'toggleMessageSenderIsBlocked',\n            sender: { '@type': 'messageSenderUser', user_id: userId },\n            is_blocked: false\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    { pinned.length > 1 && (\n                        <IconButton\n                            className='pinned-message-edit-button'\n                            aria-label='Edit'\n                            onClick={this.handleEditClick}\n                            onMouseDown={this.handleMouseDown}>\n                            <PlaylistEditIcon />\n                        </IconButton>\n                    )}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <>\n                                <IconButton\n                                    className='header-right-second-button'\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle, isBadSelection, isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(filterMessages(history), newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            console.trace('[h] send onLoadMigratedHistory 1');\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                console.trace('[h] send onLoadMigratedHistory 2');\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n            if (filterMessages(result.messages).length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = {\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                    <Footer chatId={chatId} />\n                </div>\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { canPinMessages, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n    }\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    render() {\n        const { leaveChat, clearHistory, deleteMessages, pinMessage, unpinMessage } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}