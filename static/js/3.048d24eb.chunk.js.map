{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Stores/PlayerStore.js","Utils/User.js","Actions/Client.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Stores/StickerStore.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ChatInfoDialog.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transactionCount","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","__webpack_require__","d","__webpack_exports__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorDark","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","emoji","isMediaContent","isVideoMessage","isLottieMessage","file_name","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","openChat","highlightMessage","selectMessage","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","_Constants__WEBPACK_IMPORTED_MODULE_0__","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","circleStyle","circle","FileProgress","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","isBlurred","fitSize","stickerStyle","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","tileColor","abs","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","StickerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","palette","primary","main","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","Reply","onGetMessageResult","handleOpen","onMouseDown","Components_Tile_ReplyTile","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","expire","timeout","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuAnchorOrigin","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","deleteChat","leaveChatTitle","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogTitleControl","DialogStatusControl","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","getContentHeight","clientHeight","offsetHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","handleSelectUser","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","listItemSelected","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","accentBackground","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","icons_Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","DialogBadgeControl","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","muteClassName","dialogBadge","is_pinned","DialogMetaControl","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","container","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props10","showUnreadSeparator","_this$props11","webPage","media","senderUserId","messageClassName","message-selected","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","previewStickerEmojis","emojis","join","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","stickerIndex","STICKER_PREVIEW_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","Components_Message_ServiceMessage","Components_Message_Message","showTitle","messages-list-selection-active","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ChatInfoDialog","handleClientUpdateDialogChatId","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.048d24eb.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n                console.log(`readFile file_id=${file.id} result`, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorDark)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport { isBlurredThumbnail, getAudioTitle };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.action.active\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton className={classes.iconButton} aria-label='Send' onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorDark)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus classes={{ root: classes.statusRoot, icon: classes.statusIcon }} chatId={chatId} />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n        if (!onSelect) return;\n\n        onSelect(user);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getChatTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return <div className='dialog-title'>{title}</div>;\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {!isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: '0px'\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    listItemSelected: {\n        backgroundColor: theme.palette.primary.main + '!important'\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.listItemSelected]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    accentBackground: {\n        background: theme.palette.primary.main + '!important'\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.accentBackground]: chatId === selectedChatId && messageId === selectedMessageId },\n                        { 'accent-background': chatId === selectedChatId && messageId === selectedMessageId }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} />\n                            )}\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local,\n                global: null,\n                messages: null\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatMuteFor,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { draft_message } = chat;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n        const muteClassName = isChatMuted(chat) ? 'dialog-badge-muted' : '';\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div className={classNames(muteClassName, 'dialog-badge', classes.dialogBadge)}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMetaControl.css';\n\nclass DialogMetaControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className='dialog-meta-date'>{date}</div>}</>;\n    }\n}\nexport default DialogMetaControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogControl.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{ statusRoot: classes.statusRoot, statusIcon: classes.statusIcon }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DialogControl from '../Tile/DialogControl';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && (\n                        <>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                        </>\n                    )}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id, true);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getText,\n    getMedia,\n    getUnread,\n    getSenderUserId,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { contextMenu, selected, highlighted } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messagePoll': {\n                this.forceUpdate();\n                break;\n            }\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { contextMenu, left, top, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n        const senderUserId = getSenderUserId(message);\n\n        const tile = senderUserId ? (\n            <UserTileControl userId={senderUserId} onSelect={this.handleSelectUser} />\n        ) : (\n            <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n        );\n\n        const messageClassName = classNames(\n            'message',\n            classes.message,\n            { 'message-selected': selected },\n            { [classes.messageSelected]: selected },\n            // { 'message-highlighted': highlighted && !selected },\n            { [classes.messageHighlighted]: highlighted && !selected }\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {!forward_info && <MessageAuthor chatId={chatId} openChat userId={senderUserId} openUser />}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            <div className='message-meta'>\n                                <span>&nbsp;</span>\n                                {views > 0 && (\n                                    <>\n                                        <i className='message-views-icon' />\n                                        <span className='message-views'>\n                                            &nbsp;\n                                            {views}\n                                            &nbsp; &nbsp;\n                                        </span>\n                                    </>\n                                )}\n                                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                                <a className='message-date' onClick={this.handleDateClick}>\n                                    <span title={dateHint}>{date}</span>\n                                </a>\n                            </div>\n                        </div>\n                        {Boolean(reply_to_message_id) && <Reply chatId={chatId} messageId={reply_to_message_id} />}\n                        {media}\n                        <div className='message-text'>{text}</div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_PREVIEW_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: {\n                '@type': 'inputFileId',\n                id: stickerId\n            }\n        }).then(result => {\n            const { previewStickerId } = this.state;\n            if (previewStickerId === stickerId) {\n                this.setState({\n                    previewStickerEmojis: result.emojis.join(' ')\n                });\n            }\n        });\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, previewStickerEmojis, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && (\n                    <div className='sticker-set-dialog-preview'>\n                        <div className='sticker-set-dialog-preview-emoji'>{previewStickerEmojis}</div>\n                        <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { debounce, throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive } = this.state;\n\n        console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) =>\n                  isServiceMessage(x) ? (\n                      <ServiceMessage\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  ) : (\n                      <Message\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showTitle\n                          sendingState={x.sending_state}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  )\n              );\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: 1\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_PREVIEW_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport StickerStore from '../../Stores/StickerStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, emojis, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n        const emoji = stickerIndex !== -1 ? emojis[stickerIndex].emojis.join(' ') : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('Remove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && (\n                    <div className='sticker-set-dialog-preview'>\n                        <div className='sticker-set-dialog-preview-emoji'>{emoji}</div>\n                        <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n                    </div>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            ApplicationStore.setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        ApplicationStore.setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        ApplicationStore.setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Dialog/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.unread_count > 0) {\n                this.dialogDetailsRef.current.scrollToStart();\n            } else {\n                this.dialogDetailsRef.current.scrollToBottom();\n            }\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}