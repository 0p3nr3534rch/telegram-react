{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/CallEnd.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/Button.js","Components/ColumnMiddle/AnimatedItem.js","Components/Calls/GroupCallMicButtonHint.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Assets/Icons/More.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","y","angle","originX","originY","X","cos","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","Array","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","nextIndex","progressNext","r1","r2","angle1","angle2","l","max","mapPoints","moveTo","bezierCurveTo","fill","closePath","points","result1","result2","LineBlobDrawable","left","top","right","bottom","pinnedTop","progressToPinned","lineTo","x1","x2","cx","y1","y2","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","height","width","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","document","getElementById","offsetWidth","forceUpdate","handleResize","resizeHandler","clearTimeout","resizing","resizeCanvas","setTimeout","invokeDraw","handleFocus","focused","handleBlur","raf","force","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","addEventListener","media","matchMedia","setAmplitude","removeEventListener","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","console","log","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","trunc","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","cy","circleRect","save","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","stroke","restore","isCircle","abs","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","strokeWidth","updateMuteButton","muteButtonState","updateMuteButtonState","handleMouseDown","stopPropagation","radialPaint","generateInitBlob","colorsToSet","s","toString","color1","color2","ratio","c1","substr","c2","inverseRatio","r","g","b","strToHex","children","borderRadius","transform","background","alignItems","justifyContent","marginTop","cursor","onMouseDown","AnimatedItem","animate","scrollDown","container","containerRef","current","item1","item1Ref","item2","item2Ref","timingFunction","cssText","createRef","nextProps","nextState","nextContext","item","animateOnMount","getItemTemplate","ref","prevItem","defaultProps","GroupCallMicButtonHint","subtitle","classNames","GroupCallMicButton","onClientUpdateGroupCallAmplitudeChange","amplitudes","buttonRef","onUpdateGroupCallParticipant","group_call_id","participant","call","groupCallId","is_muted","getCallStatus","connected","switchButtonState","onUpdateGroupCall","group_call","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","CallStore","currentGroupCall","handleClick","groupCall","stream","can_unmute_self","changeUserMuted","isMuted","shook","Mic","fontSize","MicOff","GroupCallPanelButtons","GroupCallParticipant","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","handleOpenProfile","openUser","closeGroupCallPanel","handleSendMessage","handleMute","handleUnmute","is_speaking","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","onContextMenu","UserTile","Popover","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","root","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","prevUserId","prevGroupCallId","participants","GroupCallParticipants","order","participantsMap","set","loadContent","updateParticipants","PROFILE_PHOTO_PRELOAD_TIME_MS","preloadContent","store","FileStore","getStore","loadUsersContent","keys","albumHistoryEquals","filter","sort","orderCompare","map","manageGroupCalls","canManageVoiceChats","AddMember","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","copy","navigator","clipboard","writeText","copyOld","element","successful","createElement","contentEditable","readOnly","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","handleCancel","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","outputDeviceId","getOutputDeviceId","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","video","currentCall","inputVideoStream","handleEnd","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","KeyboardManager","add","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","canManage","Switch","disableRipple","switchBase","colorSecondary","track","prevCallId","muteSettings","GroupCallSettingsButton","Tune","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","CallPanel","openSettings","handleAccept","p2pAcceptCall","handleDiscard","p2pDiscardCall","handleOpenSettings","handleCloseSettings","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","currentTarget","anchorEl","p2pGet","screenSharing","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","autoPlay","muted","CallEnd","Call","onClientUpdateGroupCallFullScreen","fullscreen","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","fullScreen","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","showSavedMessages","isChatVerified","getChatTitle","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","scrollWidth","animator","scrollLeft","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","offset_order","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","cacheItems","orderedChatIds","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","shift","replaceChats","appendChats","newChats","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","SectionHeader","command","multiline","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","GroupCallTopPanel","topBarRef","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","isPrivate","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","lhs","rhs","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleFullScreen","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","exitFullscreen","requestFullscreen","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onDoubleClick","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.583495bc.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-14px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getCallStatus } from '../../Calls/Utils';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId, callId } = props;\n        const { prevGroupCallId, prevCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        } else if (prevCallId !== callId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            return {\n                prevCallId: callId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n\n        this.closeStreams();\n    }\n\n    closeStreams() {\n        const { inputAudioStream, inputAudioDeviceId } = this.state;\n        if (inputAudioStream && (!CallStore.currentGroupCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId())) {\n            inputAudioStream.getAudioTracks().forEach(x => {\n                x.stop();\n            });\n        }\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall } = CallStore;\n                if (!currentGroupCall) return;\n\n                const { streamManager } = currentGroupCall;\n                if (!streamManager) return;\n\n                const { inputAudioStream, inputAudioDeviceId } = this.state;\n                if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                if (inputAudioStream) {\n                    inputAudioStream.getAudioTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: { deviceId: { exact: deviceId } },\n                    video: false\n                });\n\n                this.setState({\n                    inputAudioDeviceId: deviceId,\n                    inputAudioStream: stream\n                });\n                break;\n            }\n            case 'inputVideo': {\n                const { currentCall } = CallStore;\n                if (!currentCall) return;\n\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\n\n                if (inputVideoStream) {\n                    inputVideoStream.getAudioTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: false,\n                    video: { deviceId: { exact: deviceId } }\n                });\n\n                this.setState({\n                    inputVideoDeviceId: deviceId,\n                    inputVideoStream: stream\n                });\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\n\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n        }\n\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n\n                        { callId && (\n                            <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\n                                <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\n                                <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\n                            </div>\n                        )}\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    callId: PropTypes.number,\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport MenuIcon from '../../Assets/Icons/More';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\nimport { getUserFullName } from '../../Utils/User';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Popover from '@material-ui/core/Popover';\nimport UserStore from '../../Stores/UserStore';\nimport Menu from '@material-ui/core/Menu';\n\nclass CallPanel extends React.Component {\n    state = {\n        openSettings: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleAccept = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pAcceptCall(callId);\n    };\n\n    handleDiscard = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pDiscardCall(callId, false, 0, false, 0);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleShareScreen = () => {\n        this.handleCloseContextMenu()\n\n        const { currentCall } = CallStore;\n        if (!currentCall) return;\n\n        const { screenStream } = currentCall;\n        if (screenStream) {\n            CallStore.p2pStopScreenSharing();\n        } else {\n            CallStore.p2pStartScreenSharing();\n        }\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { currentTarget } = event;\n\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { anchorEl } = this.state;\n\n        if (anchorEl) {\n            this.setState({ anchorEl: null });\n        } else {\n            this.setState({\n                anchorEl: currentTarget\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ anchorEl: null });\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const { openSettings, anchorEl } = this.state;\n        const { currentCall } = CallStore;\n        // if (!currentGroupCall) return null;\n\n        const call = CallStore.p2pGet(callId);\n        if (!call) return null;\n\n        const { user_id: userId } = call;\n\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\n                        {/*<GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>*/}\n                    </div>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\n                        <MenuIcon />\n                    </div>\n                    <Popover\n                        classes={{\n                            paper: 'group-call-participant-menu-root'\n                        }}\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleCloseContextMenu}\n                        getContentAnchorEl={null}\n                        disableAutoFocusItem\n                        disableRestoreFocus={true}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleShareScreen}>\n                                <ListItemText primary={screenSharing ? 'Stop screen sharing' : 'Start screen sharing'} />\n                            </MenuItem>\n                        </MenuList>\n                    </Popover>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    {/*<GroupCallParticipants groupCallId={groupCallId}/>*/}\n                    <video id='call-output-video' autoPlay={true} muted={true}/>\n                </div>\n                <GroupCallPanelButtons>\n                    {/*<GroupCallMicButton/>*/}\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('VoipAnswerCall')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('VoipDeclineCall')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nCallPanel.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default withTranslation()(CallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallPanel from './CallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass Call extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { callId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <CallPanel callId={callId}/>\n            </div>\n        )\n    }\n}\n\nCall.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default Call;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported, getChatUserId\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleStartP2PCall = () => {\n        this.handleMenuClose();\n\n        const userId = getChatUserId(AppStore.getChatId());\n        CallStore.p2pStartCall(userId, false);\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props;\n\n        openReportChat(chatId, []);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { CallStore.p2pCallsEnabled && isPrivate && (\n                        <MenuItem onClick={this.handleStartP2PCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Call')} />\n                        </MenuItem>\n                    )}\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, via_bot_user_id } = message;\n                let userId = sender.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {withBubble && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport Call from './Calls/Call';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0,\n            callId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateCallPanel = update => {\n        const { opened, callId } = update;\n\n        this.setState({\n            callId: opened ? callId : 0\n        });\n    };\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            callId,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        console.log('[p2p] mainPage.render', callId);\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n                {groupCallId && <GroupCall groupCallId={groupCallId}/>}\n                {callId && <Call callId={callId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}